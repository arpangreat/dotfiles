/*! For license information please see options.js.LICENSE */
!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/",n(n.s=68)}([function(e,t,n){"use strict";e.exports=n(50)},function(e,t,n){"use strict";n.d(t,"k",(function(){return r})),n.d(t,"a",(function(){return a})),n.d(t,"n",(function(){return o})),n.d(t,"l",(function(){return i})),n.d(t,"e",(function(){return l})),n.d(t,"g",(function(){return u})),n.d(t,"R",(function(){return c})),n.d(t,"S",(function(){return s})),n.d(t,"x",(function(){return d})),n.d(t,"y",(function(){return f})),n.d(t,"w",(function(){return p})),n.d(t,"z",(function(){return m})),n.d(t,"v",(function(){return g})),n.d(t,"c",(function(){return h})),n.d(t,"d",(function(){return v})),n.d(t,"b",(function(){return _})),n.d(t,"p",(function(){return b})),n.d(t,"q",(function(){return y})),n.d(t,"o",(function(){return k})),n.d(t,"D",(function(){return w})),n.d(t,"E",(function(){return x})),n.d(t,"C",(function(){return E})),n.d(t,"K",(function(){return S})),n.d(t,"M",(function(){return T})),n.d(t,"H",(function(){return C})),n.d(t,"L",(function(){return P})),n.d(t,"N",(function(){return O})),n.d(t,"I",(function(){return A})),n.d(t,"F",(function(){return z})),n.d(t,"G",(function(){return R})),n.d(t,"J",(function(){return j})),n.d(t,"P",(function(){return N})),n.d(t,"Q",(function(){return M})),n.d(t,"O",(function(){return I})),n.d(t,"W",(function(){return L})),n.d(t,"X",(function(){return D})),n.d(t,"Z",(function(){return F})),n.d(t,"Y",(function(){return U})),n.d(t,"ab",(function(){return V})),n.d(t,"cb",(function(){return $})),n.d(t,"bb",(function(){return q})),n.d(t,"i",(function(){return W})),n.d(t,"j",(function(){return H})),n.d(t,"h",(function(){return G})),n.d(t,"r",(function(){return B})),n.d(t,"t",(function(){return Q})),n.d(t,"u",(function(){return K})),n.d(t,"s",(function(){return Z})),n.d(t,"m",(function(){return Y})),n.d(t,"f",(function(){return X})),n.d(t,"A",(function(){return J})),n.d(t,"B",(function(){return ee})),n.d(t,"U",(function(){return te})),n.d(t,"V",(function(){return ne})),n.d(t,"T",(function(){return re}));var r="LOGGED_OUT_OF_POCKET",a="ARCHIVE_ITEM",o="REMOVE_ITEM",i="OPEN_POCKET",l="AUTH_CODE_RECEIVED",u="COLOR_MODE_CHANGE",c="TOGGLE_ON_SAVE_RECS",s="TOGGLE_TWITTER",d="SAVE_TO_POCKET_REQUEST",f="SAVE_TO_POCKET_SUCCESS",p="SAVE_TO_POCKET_FAILURE",m="SAVE_TO_POCKET_UPDATE",g="SAVE_TO_POCKET_COMPLETE",h="ARCHIVE_ITEM_REQUEST",v="ARCHIVE_ITEM_SUCCESS",_="ARCHIVE_ITEM_FAILURE",b="REMOVE_ITEM_REQUEST",y="REMOVE_ITEM_SUCCESS",k="REMOVE_ITEM_FAILURE",w="SUGGESTED_TAGS_REQUEST",x="SUGGESTED_TAGS_SUCCESS",E="SUGGESTED_TAGS_FAILURE",S="TAG_ACTIVATE",T="TAG_DEACTIVATE",C="TAGS_DEACTIVATE",P="TAG_ADD",O="TAG_REMOVE",A="TAGS_REMOVE",z="TAGS_ADDED_FAILURE",R="TAGS_ADDED_SUCCESS",j="TAGS_SYNC",N="TAG_SYNC_REQUEST",M="TAG_SYNC_SUCCESS",I="TAG_SYNC_FAILURE",L="UPDATE_STORED_TAGS",D="USER_LOG_IN",F="USER_LOG_IN_SUCCESS",U="USER_LOG_IN_FAILURE",V="USER_LOG_OUT",$="USER_LOG_OUT_SUCCESS",q="USER_LOG_IN_FAILURE",W="GET_RECS_REQUEST",H="GET_RECS_SUCCESS",G="GET_RECS_FAILURE",B="SAVE_REC",Q="SAVE_REC_REQUEST",K="SAVE_REC_SUCCESS",Z="SAVE_REC_FAILURE",Y="OPEN_REC",X="CHECK_TWITTER_INTEGRATION",J="START_TWITTER_INTEGRATION",ee="STOP_TWITTER_INTEGRATION",te="TWITTER_SAVE_REQUEST",ne="TWITTER_SAVE_SUCCESS",re="TWITTER_SAVE_FAILURE"},function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a}));var r={$hotCoral:"#ef4056",$amber:"#fcb643",$mintGreen:"#83edb8",$teal:"#50bcb6",$tealHover:"#42aea8",$emerald:"#00a69d",$black:"#000",$night:"#1f1f1f",$pitch:"#222",$tar:"#333",$coal:"#444",$darksmoke:"#666",$overcast:"#999",$silver:"#bbb",$gray:"#ccc",$smoke:"#ddd",$alabaster:"#e6e6e6",$snow:"#eee",$powder:"#f9f9f9",$white:"#fff"},a={$rainbow:"linear-gradient(90deg, #afecc3  0%, #84c3c0  34%, #d45a68  67%, #ecbf63  100%)",$shadowButton:"2px 2px 8px rgba(0, 0, 0, 0.4)",$shadowButtonDown:"1px 1px 4px rgba(0, 0, 0, 0.5)",$panelShadow:"0 2px 5px rgba(0, 0, 0, 0.5)",$shadow:"0 0 25px rgba(0,0,0,0.2)",$shadowEdge:"0 0 2px rgba(0,0,0,0.15)",$shadowDown:"0 0 5px 1px rgba(0,0,0,0.25)",$shadowLow:"0 0 5px rgba(0,0,0,0.15)",$shadowHigh:"0 0 30px 2px rgba(0,0,0,0.25)",$shadowLight:"0 0 25px rgba(0,0,0,0.1)",$shadowUpper:"0 0 40px rgba(200,200,200,0.2)"}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(22);function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){Object(r.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}},function(e,t,n){"use strict";function r(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}n.d(t,"a",(function(){return r}))},function(e,t,n){"use strict";var r=n(32),a=n.n(r),o=n(0),i=n(24),l=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,u=Object(i.a)((function(e){return l.test(e)||111===e.charCodeAt(0)&&110===e.charCodeAt(1)&&e.charCodeAt(2)<91})),c=n(27),s=n(18),d=n(17),f=u,p=function(e){return"theme"!==e&&"innerRef"!==e},m=function(e){return"string"===typeof e&&e.charCodeAt(0)>96?f:p};function g(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function h(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?g(n,!0).forEach((function(t){a()(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):g(n).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var v=function e(t,n){var r,a,i;void 0!==n&&(r=n.label,i=n.target,a=t.__emotion_forwardProp&&n.shouldForwardProp?function(e){return t.__emotion_forwardProp(e)&&n.shouldForwardProp(e)}:n.shouldForwardProp);var l=t.__emotion_real===t,u=l&&t.__emotion_base||t;"function"!==typeof a&&l&&(a=t.__emotion_forwardProp);var f=a||m(u),p=!f("as");return function(){var g=arguments,v=l&&void 0!==t.__emotion_styles?t.__emotion_styles.slice(0):[];if(void 0!==r&&v.push("label:"+r+";"),null==g[0]||void 0===g[0].raw)v.push.apply(v,g);else{0,v.push(g[0][0]);for(var _=g.length,b=1;b<_;b++)v.push(g[b],g[0][b])}var y=Object(c.c)((function(e,t,n){return Object(o.createElement)(c.b.Consumer,null,(function(r){var l=p&&e.as||u,c="",g=[],h=e;if(null==e.theme){for(var _ in h={},e)h[_]=e[_];h.theme=r}"string"===typeof e.className?c=Object(s.a)(t.registered,g,e.className):null!=e.className&&(c=e.className+" ");var b=Object(d.a)(v.concat(g),t.registered,h);Object(s.b)(t,b,"string"===typeof l);c+=t.key+"-"+b.name,void 0!==i&&(c+=" "+i);var y=p&&void 0===a?m(l):f,k={};for(var w in e)p&&"as"===w||y(w)&&(k[w]=e[w]);return k.className=c,k.ref=n||e.innerRef,Object(o.createElement)(l,k)}))}));return y.displayName=void 0!==r?r:"Styled("+("string"===typeof u?u:u.displayName||u.name||"Component")+")",y.defaultProps=t.defaultProps,y.__emotion_real=y,y.__emotion_base=u,y.__emotion_styles=v,y.__emotion_forwardProp=a,Object.defineProperty(y,"toString",{value:function(){return"."+i}}),y.withComponent=function(t,r){return e(t,void 0!==r?h({},n||{},{},r):n).apply(void 0,v)},y}}.bind();["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"].forEach((function(e){v[e]=v(e)}));t.a=v},function(e,t,n){"use strict";n.d(t,"l",(function(){return a})),n.d(t,"k",(function(){return o})),n.d(t,"j",(function(){return i})),n.d(t,"e",(function(){return l})),n.d(t,"c",(function(){return u})),n.d(t,"d",(function(){return c})),n.d(t,"g",(function(){return s})),n.d(t,"f",(function(){return d})),n.d(t,"h",(function(){return f})),n.d(t,"a",(function(){return p})),n.d(t,"i",(function(){return m})),n.d(t,"n",(function(){return g})),n.d(t,"m",(function(){return h})),n.d(t,"b",(function(){return v}));var r=n(9);function a(){Object(r.d)(l())}function o(e){return e.active&&i(e.url)}function i(e){return e.startsWith("chrome://")||e.startsWith("chrome-extension://")||e.startsWith("chrome-search://")}function l(){var e=m("base_URL");return e||g({base_URL:"https://getpocket.com/"}),e||"https://getpocket.com/"}function u(){return l()+function(){var e=m("base_api_version");return e||g({base_api_version:"v3/"}),e||"v3/"}()}function c(){return m("access_token")}function s(){var e=navigator.languages?navigator.languages[0]:navigator.language||navigator.userLanguage;return 0===(e="undefined"!==typeof e?e.toLowerCase():"en").indexOf("en")?"en":0===e.indexOf("de")?"de":0===e.indexOf("fr")?"fr":0===e.indexOf("it")?"it":0===e.indexOf("es_419")?"es_419":0===e.indexOf("es")?"es":0===e.indexOf("ja")?"ja":0===e.indexOf("ru")?"ru":0===e.indexOf("ko")?"ko":0===e.indexOf("nl")?"nl":0===e.indexOf("pl")?"pl":0===e.indexOf("pt_BR")?"pt_BR":0===e.indexOf("pt_PT")?"pt_PT":0===e.indexOf("zh_CN")?"zh_CN":0===e.indexOf("zh_TW")?"zh_TW":"en"}function d(e){return e.top_image_url?e.top_image_url:e.images[Object.keys(e.images)[0]].src}function f(e,t){if(e){var n=t?"".concat(t.width,"x").concat(t.height):"",r=encodeURIComponent(e.replace(/'/g,"%27")),a="".concat(r);return"".concat("https://pocket-image-cache.com","/").concat(n,"/filters:no_upscale()/").concat(a)}}function p(e,t){return e.filter((function(e){return e.name===t})).length}function m(e){return localStorage.getItem(e)}function g(e){Object.keys(e).forEach((function(t){localStorage.setItem(t,e[t])}))}function h(e){e.forEach((function(e){localStorage.removeItem(e)}))}function v(){chrome.tabs.query({url:"*://getpocket.com/extension_login_success"},(function(e){chrome.tabs.remove(e.map((function(e){return e.id})))}))}},,function(e,t,n){"use strict";n.d(t,"a",(function(){return y}));var r=n(6),a=n(33),o=n(34),i=n(35),l=n(36),u=n(37),c=n(38),s=n(39),d=n(40),f=n(41),p=n(42),m=n(43),g=n(44),h=n(45),v=n(46),_=n(47);var b=function(){var e={de:a,en:o,es:i,es_419:l,fr:u,it:c,ja:s,ko:d,nl:f,pl:p,pt_BR:m,pt_PT:g,ru:h,zh_CN:v,zh_TW:_};return e[Object(r.g)()]||e.en}();function y(e,t){return b[e][t]}},function(e,t,n){"use strict";n.d(t,"e",(function(){return r})),n.d(t,"a",(function(){return a})),n.d(t,"d",(function(){return o})),n.d(t,"c",(function(){return i})),n.d(t,"f",(function(){return u})),n.d(t,"b",(function(){return c}));n(16);function r(e){if("undefined"!==typeof safari)return safari.extension.dispatchMessage(e.type,e.payload);chrome.runtime.sendMessage(e)}function a(){return chrome.cookies}function o(e){chrome.tabs.query({active:!0,currentWindow:!0},(function(t){chrome.tabs.update(t[0].id,{url:e})}))}function i(e,t){var n=!0!==t;return chrome.tabs.create({url:e,active:n})}function l(e,t){var n=window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?"-dark":"",r="images/".concat(t).concat(n,"-19.png"),a="images/".concat(t).concat(n,"-38.png");chrome.browserAction.setIcon({tabId:e,path:{19:r,38:a}})}function u(e,t){l(e,t?"browser-action-icon-added":"browser-action-icon")}function c(e){return localStorage.getItem(e)}},function(e,t,n){"use strict";var r=n(11);var a=n(21);function o(e){return function(e){if(Array.isArray(e))return Object(r.a)(e)}(e)||function(e){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||Object(a.a)(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}n.d(t,"a",(function(){return o}))},function(e,t,n){"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}n.d(t,"a",(function(){return r}))},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}n.d(t,"a",(function(){return r}))},function(e,t,n){"use strict";function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}n.d(t,"a",(function(){return a}))},function(e,t,n){"use strict";function r(e){return(r=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function a(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function o(e){return(o="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e,t){return!t||"object"!==o(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function l(e){return function(){var t,n=r(e);if(a()){var o=r(this).constructor;t=Reflect.construct(n,arguments,o)}else t=n.apply(this,arguments);return i(this,t)}}n.d(t,"a",(function(){return l}))},function(e,t,n){"use strict";function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)}n.d(t,"a",(function(){return a}))},function(e,t,n){"use strict";n.d(t,"b",(function(){return r})),n.d(t,"d",(function(){return a})),n.d(t,"a",(function(){return o})),n.d(t,"c",(function(){return i}));n(10);function r(e){return e.match(/^(?:https?:\/\/)?(?:[^@\n]+@)?(?:www\.)?([^:/\n?=]+)/im)[1]}function a(e){return"[object Function]"===Object.prototype.toString.call(e)}function o(e){return e.filter((function(e){return e&&"undefined"!==typeof e}))}function i(e){return!0===e||"true"===e||1===e||1===parseInt(e,10)}},function(e,t,n){"use strict";var r=function(e){for(var t,n=0,r=0,a=e.length;a>=4;++r,a-=4)t=1540483477*(65535&(t=255&e.charCodeAt(r)|(255&e.charCodeAt(++r))<<8|(255&e.charCodeAt(++r))<<16|(255&e.charCodeAt(++r))<<24))+(59797*(t>>>16)<<16),n=1540483477*(65535&(t^=t>>>24))+(59797*(t>>>16)<<16)^1540483477*(65535&n)+(59797*(n>>>16)<<16);switch(a){case 3:n^=(255&e.charCodeAt(r+2))<<16;case 2:n^=(255&e.charCodeAt(r+1))<<8;case 1:n=1540483477*(65535&(n^=255&e.charCodeAt(r)))+(59797*(n>>>16)<<16)}return(((n=1540483477*(65535&(n^=n>>>13))+(59797*(n>>>16)<<16))^n>>>15)>>>0).toString(36)},a={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1},o=n(24);n.d(t,"a",(function(){return g}));var i=/[A-Z]|^ms/g,l=/_EMO_([^_]+?)_([^]*?)_EMO_/g,u=function(e){return 45===e.charCodeAt(1)},c=function(e){return null!=e&&"boolean"!==typeof e},s=Object(o.a)((function(e){return u(e)?e:e.replace(i,"-$&").toLowerCase()})),d=function(e,t){switch(e){case"animation":case"animationName":if("string"===typeof t)return t.replace(l,(function(e,t,n){return p={name:t,styles:n,next:p},t}))}return 1===a[e]||u(e)||"number"!==typeof t||0===t?t:t+"px"};function f(e,t,n,r){if(null==n)return"";if(void 0!==n.__emotion_styles)return n;switch(typeof n){case"boolean":return"";case"object":if(1===n.anim)return p={name:n.name,styles:n.styles,next:p},n.name;if(void 0!==n.styles){var a=n.next;if(void 0!==a)for(;void 0!==a;)p={name:a.name,styles:a.styles,next:p},a=a.next;return n.styles+";"}return function(e,t,n){var r="";if(Array.isArray(n))for(var a=0;a<n.length;a++)r+=f(e,t,n[a],!1);else for(var o in n){var i=n[o];if("object"!==typeof i)null!=t&&void 0!==t[i]?r+=o+"{"+t[i]+"}":c(i)&&(r+=s(o)+":"+d(o,i)+";");else if(!Array.isArray(i)||"string"!==typeof i[0]||null!=t&&void 0!==t[i[0]]){var l=f(e,t,i,!1);switch(o){case"animation":case"animationName":r+=s(o)+":"+l+";";break;default:r+=o+"{"+l+"}"}}else for(var u=0;u<i.length;u++)c(i[u])&&(r+=s(o)+":"+d(o,i[u])+";")}return r}(e,t,n);case"function":if(void 0!==e){var o=p,i=n(e);return p=o,f(e,t,i,r)}break;case"string":}if(null==t)return n;var l=t[n];return void 0===l||r?n:l}var p,m=/label:\s*([^\s;\n{]+)\s*;/g;var g=function(e,t,n){if(1===e.length&&"object"===typeof e[0]&&null!==e[0]&&void 0!==e[0].styles)return e[0];var a=!0,o="";p=void 0;var i=e[0];null==i||void 0===i.raw?(a=!1,o+=f(n,t,i,!1)):o+=i[0];for(var l=1;l<e.length;l++)o+=f(n,t,e[l],46===o.charCodeAt(o.length-1)),a&&(o+=i[l]);m.lastIndex=0;for(var u,c="";null!==(u=m.exec(o));)c+="-"+u[1];return{name:r(o)+c,styles:o,next:p}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a}));function r(e,t,n){var r="";return n.split(" ").forEach((function(n){void 0!==e[n]?t.push(e[n]):r+=n+" "})),r}var a=function(e,t,n){var r=e.key+"-"+t.name;if(!1===n&&void 0===e.registered[r]&&(e.registered[r]=t.styles),void 0===e.inserted[t.name]){var a=t;do{e.insert("."+r,a,e.sheet,!0);a=a.next}while(void 0!==a)}}},function(e,t,n){"use strict";var r=n(0),a=n.n(r),o=n(3),i=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return Object(o.a)({display:"inline-block",verticalAlign:"middle",width:"16px",height:"16px",marginRight:"5px",fill:"currentColor",lineHeight:"1em"},e)},l=function(e){return a.a.createElement("svg",{style:i(e),xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 25 25"},a.a.createElement("path",{d:"M21.656,20.083c-0.016-0.011-1.206-0.842-1.96-2.403c1.205-1.435,1.93-3.229,1.93-5.183 c0-4.694-4.141-8.5-9.25-8.5s-9.25,3.806-9.25,8.5s4.141,8.5,9.25,8.5c1.46,0,2.835-0.319,4.063-0.873 c1.054,0.47,2.545,0.878,4.551,0.878c0.131,0,0.264-0.002,0.399-0.005c0.217-0.006,0.405-0.151,0.466-0.359 C21.916,20.43,21.835,20.205,21.656,20.083z M10.261,10.554L9.013,9.153c0.816-0.955,2.047-1.493,3.372-1.493 c1.986,0,3.203,1.001,3.203,2.433c0,2.248-2.571,2.417-2.571,3.71c0,0.119,0.03,0.241,0.077,0.351H11.19 c-0.049-0.178-0.083-0.365-0.083-0.567c0-1.832,2.248-2.048,2.248-3.11c0-0.477-0.354-0.877-1.201-0.877 C11.385,9.599,10.738,9.984,10.261,10.554z M12.354,18.252c-0.677,0-1.247-0.57-1.247-1.247c0-0.677,0.57-1.247,1.247-1.247 c0.677,0,1.247,0.57,1.247,1.247C13.601,17.682,13.032,18.252,12.354,18.252z"}))},u=function(e){return a.a.createElement("svg",{style:i(e),viewBox:"0 0 81.3 96"},a.a.createElement("path",{d:"M5.9 31.1A5.9 5.9 0 0 0 0 37v24.8a5.9 5.9 0 1 0 11.8 0V37a5.9 5.9 0 0 0-5.9-5.9M53.7 8.8l4.1-7.6a.80622577.80622577 0 1 0-1.4-.8L52.2 8A28.9 28.9 0 0 0 29 8L24.8.4a.80622577.80622577 0 1 0-1.4.8l4.1 7.5C19.4 12.9 13.9 20.9 13.9 30h53.4c0-9.2-5.5-17.1-13.6-21.3M28.5 20.5a2.2 2.2 0 1 1 2.2-2.2 2.2 2.2 0 0 1-2.2 2.2m24.3 0a2.2 2.2 0 1 1 2.2-2.2 2.2 2.2 0 0 1-2.2 2.2M14.2 32.2v38.5a6.3 6.3 0 0 0 6.3 6.3h4.3v13.1a5.9 5.9 0 1 0 11.8 0V77h8v13.1a5.95 5.95 0 1 0 11.9 0V77h4.3a6.3 6.3 0 0 0 6.3-6.3V32.2h-53zM81.3 37a5.9 5.9 0 1 0-11.8 0v24.8a5.9 5.9 0 1 0 11.8 0V37z"}))},c=function(){return a.a.createElement("svg",{style:i(),viewBox:"0 0 16 16"},a.a.createElement("path",{d:"M1,14.6666667 L1,4 L15,4 L15,14.6666667 C15,15.4030463 14.4030463,16 13.6666667,16 L2.33333333,16 C1.59695367,16 1,15.4030463 1,14.6666667 Z M1,2.26929586e-13 L15,2.26929586e-13 C15.5522847,2.26828133e-13 16,0.44771525 16,1 C16,1.55228475 15.5522847,2 15,2 L1,2 C0.44771525,2 5.70220765e-14,1.55228475 5.69544412e-14,1 C5.69978281e-14,0.44771525 0.44771525,2.27031039e-13 1,2.26929586e-13 Z M10.3414954,7.24742331 L7.04557085,10.1313573 L6.20710678,9.29289322 C5.81658249,8.90236893 5.18341751,8.90236893 4.79289322,9.29289322 C4.40236893,9.68341751 4.40236893,10.3165825 4.79289322,10.7071068 L6.29289322,12.2071068 C6.66515939,12.579373 7.26230017,12.5992556 7.65850461,12.2525767 L11.6585046,8.75257669 C12.0741412,8.38889464 12.1162587,7.75713202 11.7525767,7.34149539 C11.3888946,6.92585876 10.757132,6.88374125 10.3414954,7.24742331 Z",id:"Combined-Shape"}))},s=function(e){return a.a.createElement("svg",{style:i(e),xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 14 16"},a.a.createElement("path",{d:"M13.64,4.33a1.32,1.32,0,0,0-1.75,0L7,9.26,2.11,4.33a1.32,1.32,0,0,0-1.75,0,1.07,1.07,0,0,0,0,1.6L6,11.67A1.29,1.29,0,0,0,7,12a1.29,1.29,0,0,0,1-.33l5.69-5.74A1.07,1.07,0,0,0,13.64,4.33Z"}))},d=function(e){return a.a.createElement("svg",{style:i(e),xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 25 25"},a.a.createElement("path",{d:"M14.854,12.536l3.814-3.825c0.644-0.645,0.643-1.689-0.003-2.333s-1.689-0.643-2.333,0.003 l-3.81,3.818L8.668,6.335C8.024,5.689,6.98,5.688,6.335,6.332S5.688,8.019,6.332,8.665l3.86,3.871l-3.743,3.753 c-0.644,0.645-0.643,1.689,0.003,2.333s1.689,0.643,2.333-0.003l3.737-3.747l3.783,3.793c0.322,0.323,0.745,0.485,1.168,0.485 c0.422,0,0.843-0.161,1.165-0.482c0.646-0.644,0.646-1.688,0.003-2.333L14.854,12.536z"}))},f=function(e){return a.a.createElement("svg",{style:i(e),xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 25 25"},a.a.createElement("path",{d:"M20.978,6.137C20.609,4.66,16.958,3.5,12.506,3.5c-4.452,0-8.102,1.16-8.472,2.637C4.019,6.198,4.01,6.259,4.006,6.321 l0,0.063L4,16.478c0,0.423,0.252,0.813,0.677,1.043l2.253,1.214l3.675,1.98l1.103,0.594c0.235,0.125,0.506,0.192,0.784,0.192 c0.275,0,0.544-0.065,0.781-0.19l1.02-0.543l3.698-1.97l2.309-1.23c0.358-0.19,0.593-0.495,0.662-0.839 C20.986,16.639,21,16.549,21,16.455V6.383V6.234C20.995,6.202,20.986,6.169,20.978,6.137z M16.337,11.467l-5.352,5.944 c-0.054,0.06-0.133,0.092-0.214,0.092c-0.037,0-0.074-0.007-0.109-0.021l-0.007-0.003l-0.132-0.052 c-0.132-0.052-0.199-0.188-0.152-0.313l1.407-3.77H8.942c-0.107,0-0.204-0.056-0.25-0.145c-0.046-0.088-0.032-0.193,0.036-0.268 l5.377-5.962c0.087-0.097,0.239-0.12,0.357-0.056l0.125,0.069c0.111,0.061,0.161,0.185,0.119,0.298l-1.418,3.774h2.834 c0.107,0,0.204,0.056,0.25,0.144C16.419,11.287,16.404,11.392,16.337,11.467z"}))},p=function(e){return a.a.createElement("svg",{style:i(e),viewBox:"0 0 96 96"},a.a.createElement("path",{d:"M82 2H36a6 6 0 0 0-6 6v22H16a6 6 0 0 0-6 6v52a6 6 0 0 0 6 6h24a6 6 0 0 0 6-6v-8h36a6 6 0 0 0 6-6V8a6 6 0 0 0-6-6zM22.1 32.3h12a1 1 0 0 1 0 2h-12a1 1 0 0 1 0-2zM28 92a2 2 0 1 1 2-2 2 2 0 0 1-2 2zm14-8a2 2 0 0 1-2 2H16a2 2 0 0 1-2-2V38a2 2 0 0 1 2-2h24a2 2 0 0 1 2 2v46zm18-6a2 2 0 1 1 2-2 2 2 0 0 1-2 2zm24-8a2 2 0 0 1-2 2H46V36a6 6 0 0 0-6-6h-6V8a2 2 0 0 1 2-2h46a2 2 0 0 1 2 2v62z"}))},m=function(e){return a.a.createElement("svg",{style:i(e),viewBox:"0 0 48 48"},a.a.createElement("path",{d:"M30 47H18.1a2 2 0 0 1-2-2l1.9-8.9a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2l2 8.9a2 2 0 0 1-2 2zM46 0H2a2 2 0 0 0-2 2v28a2 2 0 0 0 2 2h44a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zM24 1a1 1 0 1 1-1 1 1 1 0 0 1 1-1zm22 27H2V4h44v24z"}))},g=function(){return a.a.createElement("svg",{style:i({marginRight:0,width:"20px",height:"20px"}),viewBox:"0 0 100 100"},a.a.createElement("path",{d:"M15 40c5.46 0 10 4.54 10 10s-4.54 10-10 10S5 55.46 5 50s4.54-10 10-10zm60 10c0 5.46 4.54 10 10 10s10-4.54 10-10-4.54-10-10-10-10 4.54-10 10zm-35 0c0 5.46 4.54 10 10 10s10-4.54 10-10-4.54-10-10-10-10 4.54-10 10z"}))},h=function(e){return a.a.createElement("svg",{style:i(e),xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 26 26"},a.a.createElement("path",{fill:"#EE4056",title:"Pocket",alt:"Pocket",d:"M26,4a2,2,0,0,0-2-2H2A2,2,0,0,0,0,4v9c0,0.1,0,.2,0,0.4s0,0.4,0,.6c0,4,5.8,11,13,11s13-7,13-11c0-.2,0-0.4,0-0.6s0-.2,0-0.4V4Zm-5.5,7-6,6a1.9,1.9,0,0,1-2.9,0l-6-6A1.7,1.7,0,0,1,8,8.5l5,5,5-5a1.7,1.7,0,0,1,2.5,0h0A1.7,1.7,0,0,1,20.5,11Z"}))},v=function(e){return a.a.createElement("svg",{style:i(e),viewBox:"0 0 96 96"},a.a.createElement("path",{d:"M77.9 72v12H12V24h6V12H6a6 6 0 0 0-6 6v72a6 6 0 0 0 6 6h77.9a6 6 0 0 0 6-6V72h-12z"}),a.a.createElement("path",{d:"M36 0a6 6 0 0 0-6 6v19.9l.2 4a32.2 32.2 0 0 0 12.9 22.3l.4.3h.1a32.5 32.5 0 0 0 12.9 5.7 33.2 33.2 0 0 0 6.6.7 32.8 32.8 0 0 0 6.1-.6h.8a32.6 32.6 0 0 0 12.4-5.6h.1l.4-.3A32.2 32.2 0 0 0 95.8 30l.2-4V6a5.9 5.9 0 0 0-.3-2A6 6 0 0 0 90.1.1m-8.5 24.6L66.1 39.6a4.5 4.5 0 0 1-6.3 0L44.4 24.7a4.526 4.526 0 0 1 6.3-6.5l12.2 11.9 12.4-11.9a4.526 4.526 0 0 1 6.3 6.5z"}))},_=function(){return a.a.createElement("svg",{style:i(),viewBox:"0 0 16 16"},a.a.createElement("path",{d:"M4,2 L4,1.33333333 C4,0.596953667 4.59695367,-7.58039841e-14 5.33333333,-7.59392549e-14 L10.6666667,-7.59392549e-14 C11.4030463,-7.60745256e-14 12,0.596953667 12,1.33333333 L12,2 L15.0202637,2 C15.5725484,2 16.0202637,2.44771525 16.0202637,3 C16.0202637,3.55228475 15.5725484,4 15.0202637,4 L1.00317383,4 C0.450889078,4 0.00317382813,3.55228475 0.00317382813,3 C0.00317382813,2.44771525 0.450889078,2 1.00317383,2 L4,2 Z M2,14.6666667 L2,6 L14,6 L14,14.6666667 C14,15.4030463 13.4030463,16 12.6666667,16 L3.33333333,16 C2.59695367,16 2,15.4030463 2,14.6666667 Z",id:"Combined-Shape"}))},b=function(e){return a.a.createElement("svg",{style:i(e),className:"icon icon-save",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 26 26"},a.a.createElement("path",{alt:"Save to Pocket",d:"M26,4a2,2,0,0,0-2-2H2A2,2,0,0,0,0,4v9c0,0.1,0,.2,0,0.4s0,0.4,0,.6c0,4,5.8,11,13,11s13-7,13-11c0-.2,0-0.4,0-0.6s0-.2,0-0.4V4Zm-5.5,7-6,6a1.9,1.9,0,0,1-2.9,0l-6-6A1.7,1.7,0,0,1,8,8.5l5,5,5-5a1.7,1.7,0,0,1,2.5,0h0A1.7,1.7,0,0,1,20.5,11Z"}))};n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return u})),n.d(t,"c",(function(){return c})),n.d(t,"d",(function(){return s})),n.d(t,"e",(function(){return d})),n.d(t,"f",(function(){return f})),n.d(t,"g",(function(){return p})),n.d(t,"h",(function(){return m})),n.d(t,"i",(function(){return g})),n.d(t,"j",(function(){return h})),n.d(t,"k",(function(){return v})),n.d(t,"l",(function(){return _})),n.d(t,"m",(function(){return b}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(2).a.$black,a={$fontstackDefault:'"proxima-nova",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",Helvetica,sans-serif'};"0 20px 40px rgba(".concat(r,", 0.1)"),"0 15px 30px rgba(".concat(r,", 0.2)"),"0 10px 20px rgba(".concat(r,", 0.25)"),"0 10px 40px rgba(".concat(r,", 0.1)"),"0 5px 8px rgba(".concat(r,", 0.3)"),"0 3px 4px rgba(".concat(r,", 0.5)"),"0 5px 7px rgba(".concat(r,", 0.05)"),"0 4px 6px rgba(".concat(r,", 0.1)"),"0 3px 5px rgba(".concat(r,", 0.15)"),"0 2px 3px rgba(".concat(r,", 0.05)"),"0 1px 2px rgba(".concat(r,", 0.15)"),"0 1px 1px rgba(".concat(r,", 0.2)"),"0 6px 9px rgba(".concat(r,", 0.1)"),"inset 0 1px 3px rgba(".concat(r,", 0.1)"),"inset 0 0 0 rgba(".concat(r,", 0)")},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(11);function a(e,t){if(e){if("string"===typeof e)return Object(r.a)(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(n):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Object(r.a)(e,t):void 0}}},function(e,t,n){"use strict";function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n.d(t,"a",(function(){return r}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var r=function(){function e(e){this.isSpeedy=void 0===e.speedy||e.speedy,this.tags=[],this.ctr=0,this.nonce=e.nonce,this.key=e.key,this.container=e.container,this.before=null}var t=e.prototype;return t.insert=function(e){if(this.ctr%(this.isSpeedy?65e3:1)===0){var t,n=function(e){var t=document.createElement("style");return t.setAttribute("data-emotion",e.key),void 0!==e.nonce&&t.setAttribute("nonce",e.nonce),t.appendChild(document.createTextNode("")),t}(this);t=0===this.tags.length?this.before:this.tags[this.tags.length-1].nextSibling,this.container.insertBefore(n,t),this.tags.push(n)}var r=this.tags[this.tags.length-1];if(this.isSpeedy){var a=function(e){if(e.sheet)return e.sheet;for(var t=0;t<document.styleSheets.length;t++)if(document.styleSheets[t].ownerNode===e)return document.styleSheets[t]}(r);try{var o=105===e.charCodeAt(1)&&64===e.charCodeAt(0);a.insertRule(e,o?0:a.cssRules.length)}catch(i){0}}else r.appendChild(document.createTextNode(e));this.ctr++},t.flush=function(){this.tags.forEach((function(e){return e.parentNode.removeChild(e)})),this.tags=[],this.ctr=0},e}()},function(e,t,n){"use strict";t.a=function(e){var t={};return function(n){return void 0===t[n]&&(t[n]=e(n)),t[n]}}},function(e,t,n){"use strict";var r=n(23);var a=function(e){function t(e,t,r){var a=t.trim().split(m);t=a;var o=a.length,i=e.length;switch(i){case 0:case 1:var l=0;for(e=0===i?"":e[0]+" ";l<o;++l)t[l]=n(e,t[l],r).trim();break;default:var u=l=0;for(t=[];l<o;++l)for(var c=0;c<i;++c)t[u++]=n(e[c]+" ",a[l],r).trim()}return t}function n(e,t,n){var r=t.charCodeAt(0);switch(33>r&&(r=(t=t.trim()).charCodeAt(0)),r){case 38:return t.replace(g,"$1"+e.trim());case 58:return e.trim()+t.replace(g,"$1"+e.trim());default:if(0<1*n&&0<t.indexOf("\f"))return t.replace(g,(58===e.charCodeAt(0)?"":"$1")+e.trim())}return e+t}function r(e,t,n,o){var i=e+";",l=2*t+3*n+4*o;if(944===l){e=i.indexOf(":",9)+1;var u=i.substring(e,i.length-1).trim();return u=i.substring(0,e).trim()+u+";",1===O||2===O&&a(u,1)?"-webkit-"+u+u:u}if(0===O||2===O&&!a(i,1))return i;switch(l){case 1015:return 97===i.charCodeAt(10)?"-webkit-"+i+i:i;case 951:return 116===i.charCodeAt(3)?"-webkit-"+i+i:i;case 963:return 110===i.charCodeAt(5)?"-webkit-"+i+i:i;case 1009:if(100!==i.charCodeAt(4))break;case 969:case 942:return"-webkit-"+i+i;case 978:return"-webkit-"+i+"-moz-"+i+i;case 1019:case 983:return"-webkit-"+i+"-moz-"+i+"-ms-"+i+i;case 883:if(45===i.charCodeAt(8))return"-webkit-"+i+i;if(0<i.indexOf("image-set(",11))return i.replace(S,"$1-webkit-$2")+i;break;case 932:if(45===i.charCodeAt(4))switch(i.charCodeAt(5)){case 103:return"-webkit-box-"+i.replace("-grow","")+"-webkit-"+i+"-ms-"+i.replace("grow","positive")+i;case 115:return"-webkit-"+i+"-ms-"+i.replace("shrink","negative")+i;case 98:return"-webkit-"+i+"-ms-"+i.replace("basis","preferred-size")+i}return"-webkit-"+i+"-ms-"+i+i;case 964:return"-webkit-"+i+"-ms-flex-"+i+i;case 1023:if(99!==i.charCodeAt(8))break;return"-webkit-box-pack"+(u=i.substring(i.indexOf(":",15)).replace("flex-","").replace("space-between","justify"))+"-webkit-"+i+"-ms-flex-pack"+u+i;case 1005:return f.test(i)?i.replace(d,":-webkit-")+i.replace(d,":-moz-")+i:i;case 1e3:switch(t=(u=i.substring(13).trim()).indexOf("-")+1,u.charCodeAt(0)+u.charCodeAt(t)){case 226:u=i.replace(b,"tb");break;case 232:u=i.replace(b,"tb-rl");break;case 220:u=i.replace(b,"lr");break;default:return i}return"-webkit-"+i+"-ms-"+u+i;case 1017:if(-1===i.indexOf("sticky",9))break;case 975:switch(t=(i=e).length-10,l=(u=(33===i.charCodeAt(t)?i.substring(0,t):i).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|u.charCodeAt(7))){case 203:if(111>u.charCodeAt(8))break;case 115:i=i.replace(u,"-webkit-"+u)+";"+i;break;case 207:case 102:i=i.replace(u,"-webkit-"+(102<l?"inline-":"")+"box")+";"+i.replace(u,"-webkit-"+u)+";"+i.replace(u,"-ms-"+u+"box")+";"+i}return i+";";case 938:if(45===i.charCodeAt(5))switch(i.charCodeAt(6)){case 105:return u=i.replace("-items",""),"-webkit-"+i+"-webkit-box-"+u+"-ms-flex-"+u+i;case 115:return"-webkit-"+i+"-ms-flex-item-"+i.replace(w,"")+i;default:return"-webkit-"+i+"-ms-flex-line-pack"+i.replace("align-content","").replace(w,"")+i}break;case 973:case 989:if(45!==i.charCodeAt(3)||122===i.charCodeAt(4))break;case 931:case 953:if(!0===E.test(e))return 115===(u=e.substring(e.indexOf(":")+1)).charCodeAt(0)?r(e.replace("stretch","fill-available"),t,n,o).replace(":fill-available",":stretch"):i.replace(u,"-webkit-"+u)+i.replace(u,"-moz-"+u.replace("fill-",""))+i;break;case 962:if(i="-webkit-"+i+(102===i.charCodeAt(5)?"-ms-"+i:"")+i,211===n+o&&105===i.charCodeAt(13)&&0<i.indexOf("transform",10))return i.substring(0,i.indexOf(";",27)+1).replace(p,"$1-webkit-$2")+i}return i}function a(e,t){var n=e.indexOf(1===t?":":"{"),r=e.substring(0,3!==t?n:10);return n=e.substring(n+1,e.length-1),j(2!==t?r:r.replace(x,"$1"),n,t)}function o(e,t){var n=r(t,t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2));return n!==t+";"?n.replace(k," or ($1)").substring(4):"("+t+")"}function i(e,t,n,r,a,o,i,l,c,s){for(var d,f=0,p=t;f<R;++f)switch(d=z[f].call(u,e,p,n,r,a,o,i,l,c,s)){case void 0:case!1:case!0:case null:break;default:p=d}if(p!==t)return p}function l(e){return void 0!==(e=e.prefix)&&(j=null,e?"function"!==typeof e?O=1:(O=2,j=e):O=0),l}function u(e,n){var l=e;if(33>l.charCodeAt(0)&&(l=l.trim()),l=[l],0<R){var u=i(-1,n,l,l,C,T,0,0,0,0);void 0!==u&&"string"===typeof u&&(n=u)}var d=function e(n,l,u,d,f){for(var p,m,g,b,k,w=0,x=0,E=0,S=0,z=0,j=0,M=g=p=0,I=0,L=0,D=0,F=0,U=u.length,V=U-1,$="",q="",W="",H="";I<U;){if(m=u.charCodeAt(I),I===V&&0!==x+S+E+w&&(0!==x&&(m=47===x?10:47),S=E=w=0,U++,V++),0===x+S+E+w){if(I===V&&(0<L&&($=$.replace(s,"")),0<$.trim().length)){switch(m){case 32:case 9:case 59:case 13:case 10:break;default:$+=u.charAt(I)}m=59}switch(m){case 123:for(p=($=$.trim()).charCodeAt(0),g=1,F=++I;I<U;){switch(m=u.charCodeAt(I)){case 123:g++;break;case 125:g--;break;case 47:switch(m=u.charCodeAt(I+1)){case 42:case 47:e:{for(M=I+1;M<V;++M)switch(u.charCodeAt(M)){case 47:if(42===m&&42===u.charCodeAt(M-1)&&I+2!==M){I=M+1;break e}break;case 10:if(47===m){I=M+1;break e}}I=M}}break;case 91:m++;case 40:m++;case 34:case 39:for(;I++<V&&u.charCodeAt(I)!==m;);}if(0===g)break;I++}switch(g=u.substring(F,I),0===p&&(p=($=$.replace(c,"").trim()).charCodeAt(0)),p){case 64:switch(0<L&&($=$.replace(s,"")),m=$.charCodeAt(1)){case 100:case 109:case 115:case 45:L=l;break;default:L=A}if(F=(g=e(l,L,g,m,f+1)).length,0<R&&(k=i(3,g,L=t(A,$,D),l,C,T,F,m,f,d),$=L.join(""),void 0!==k&&0===(F=(g=k.trim()).length)&&(m=0,g="")),0<F)switch(m){case 115:$=$.replace(y,o);case 100:case 109:case 45:g=$+"{"+g+"}";break;case 107:g=($=$.replace(h,"$1 $2"))+"{"+g+"}",g=1===O||2===O&&a("@"+g,3)?"@-webkit-"+g+"@"+g:"@"+g;break;default:g=$+g,112===d&&(q+=g,g="")}else g="";break;default:g=e(l,t(l,$,D),g,d,f+1)}W+=g,g=D=L=M=p=0,$="",m=u.charCodeAt(++I);break;case 125:case 59:if(1<(F=($=(0<L?$.replace(s,""):$).trim()).length))switch(0===M&&(p=$.charCodeAt(0),45===p||96<p&&123>p)&&(F=($=$.replace(" ",":")).length),0<R&&void 0!==(k=i(1,$,l,n,C,T,q.length,d,f,d))&&0===(F=($=k.trim()).length)&&($="\0\0"),p=$.charCodeAt(0),m=$.charCodeAt(1),p){case 0:break;case 64:if(105===m||99===m){H+=$+u.charAt(I);break}default:58!==$.charCodeAt(F-1)&&(q+=r($,p,m,$.charCodeAt(2)))}D=L=M=p=0,$="",m=u.charCodeAt(++I)}}switch(m){case 13:case 10:47===x?x=0:0===1+p&&107!==d&&0<$.length&&(L=1,$+="\0"),0<R*N&&i(0,$,l,n,C,T,q.length,d,f,d),T=1,C++;break;case 59:case 125:if(0===x+S+E+w){T++;break}default:switch(T++,b=u.charAt(I),m){case 9:case 32:if(0===S+w+x)switch(z){case 44:case 58:case 9:case 32:b="";break;default:32!==m&&(b=" ")}break;case 0:b="\\0";break;case 12:b="\\f";break;case 11:b="\\v";break;case 38:0===S+x+w&&(L=D=1,b="\f"+b);break;case 108:if(0===S+x+w+P&&0<M)switch(I-M){case 2:112===z&&58===u.charCodeAt(I-3)&&(P=z);case 8:111===j&&(P=j)}break;case 58:0===S+x+w&&(M=I);break;case 44:0===x+E+S+w&&(L=1,b+="\r");break;case 34:case 39:0===x&&(S=S===m?0:0===S?m:S);break;case 91:0===S+x+E&&w++;break;case 93:0===S+x+E&&w--;break;case 41:0===S+x+w&&E--;break;case 40:if(0===S+x+w){if(0===p)switch(2*z+3*j){case 533:break;default:p=1}E++}break;case 64:0===x+E+S+w+M+g&&(g=1);break;case 42:case 47:if(!(0<S+w+E))switch(x){case 0:switch(2*m+3*u.charCodeAt(I+1)){case 235:x=47;break;case 220:F=I,x=42}break;case 42:47===m&&42===z&&F+2!==I&&(33===u.charCodeAt(F+2)&&(q+=u.substring(F,I+1)),b="",x=0)}}0===x&&($+=b)}j=z,z=m,I++}if(0<(F=q.length)){if(L=l,0<R&&(void 0!==(k=i(2,q,L,n,C,T,F,d,f,d))&&0===(q=k).length))return H+q+W;if(q=L.join(",")+"{"+q+"}",0!==O*P){switch(2!==O||a(q,2)||(P=0),P){case 111:q=q.replace(_,":-moz-$1")+q;break;case 112:q=q.replace(v,"::-webkit-input-$1")+q.replace(v,"::-moz-$1")+q.replace(v,":-ms-input-$1")+q}P=0}}return H+q+W}(A,l,n,0,0);return 0<R&&(void 0!==(u=i(-2,d,l,l,C,T,d.length,0,0,0))&&(d=u)),"",P=0,T=C=1,d}var c=/^\0+/g,s=/[\0\r\f]/g,d=/: */g,f=/zoo|gra/,p=/([,: ])(transform)/g,m=/,\r+?/g,g=/([\t\r\n ])*\f?&/g,h=/@(k\w+)\s*(\S*)\s*/,v=/::(place)/g,_=/:(read-only)/g,b=/[svh]\w+-[tblr]{2}/,y=/\(\s*(.*)\s*\)/g,k=/([\s\S]*?);/g,w=/-self|flex-/g,x=/[^]*?(:[rp][el]a[\w-]+)[^]*/,E=/stretch|:\s*\w+\-(?:conte|avail)/,S=/([^-])(image-set\()/,T=1,C=1,P=0,O=1,A=[],z=[],R=0,j=null,N=0;return u.use=function e(t){switch(t){case void 0:case null:R=z.length=0;break;default:if("function"===typeof t)z[R++]=t;else if("object"===typeof t)for(var n=0,r=t.length;n<r;++n)e(t[n]);else N=0|!!t}return e},u.set=l,void 0!==e&&l(e),u};function o(e){e&&i.current.insert(e+"}")}var i={current:null},l=function(e,t,n,r,a,l,u,c,s,d){switch(e){case 1:switch(t.charCodeAt(0)){case 64:return i.current.insert(t+";"),"";case 108:if(98===t.charCodeAt(2))return""}break;case 2:if(0===c)return t+"/*|*/";break;case 3:switch(c){case 102:case 112:return i.current.insert(n[0]+t),"";default:return t+(0===d?"/*|*/":"")}case-2:t.split("/*|*/}").forEach(o)}};t.a=function(e){void 0===e&&(e={});var t,n=e.key||"css";void 0!==e.prefix&&(t={prefix:e.prefix});var o=new a(t);var u,c={};u=e.container||document.head;var s,d=document.querySelectorAll("style[data-emotion-"+n+"]");Array.prototype.forEach.call(d,(function(e){e.getAttribute("data-emotion-"+n).split(" ").forEach((function(e){c[e]=!0})),e.parentNode!==u&&u.appendChild(e)})),o.use(e.stylisPlugins)(l),s=function(e,t,n,r){var a=t.name;i.current=n,o(e,t.styles),r&&(f.inserted[a]=!0)};var f={key:n,sheet:new r.a({key:n,container:u,nonce:e.nonce,speedy:e.speedy}),nonce:e.nonce,inserted:c,registered:{},insert:s};return f}},function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return f}));var r=n(2),a=n(20),o=r.a.$white,i=r.a.$emerald,l=r.a.$darksmoke,u=r.b.$shadowButton,c=r.b.$shadowButtonDown,s=a.a.$fontstackDefault,d="\n  font-family: 'proxima-nova', -apple-system, BlinkMacSystemFont, 'Segoe UI',\n    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', Helvetica,\n    sans-serif !important;\n",f="\n  all: unset;\n  background-color: none;\n  border: 0;\n  cursor: pointer;\n  display: inline-block;\n  font-family: ".concat(s,";\n  padding: 0;\n  -webkit-user-select: none; /* for button */\n  -moz-user-select: none;\n  -ms-user-select: none;\n"),p="\n  ".concat(f,"\n\n  border-radius: 3px;\n  box-shadow: ").concat(u,";\n  padding: 0.5em 1em;\n\n  &:hover {\n    box-shadow: ").concat(c,";\n    transform: translateY(1px);\n  }\n");"\n".concat(p,"\n\n  background-color: ").concat(i,";\n  color: ").concat(o,";\n\n  &:hover {\n    background-color: darken(").concat(i," 5%);\n  }\n"),"\n".concat(p,"\n\n  background-color: ").concat(l,";\n  color: ").concat(o,";\n\n  &:hover {\n    background-color: darken(").concat(l," 10%);\n  }\n")},function(e,t,n){"use strict";var r=n(31),a=n.n(r),o=n(0),i=n(25),l=n(18),u=n(17),c=n(23);n.d(t,"a",(function(){return f})),n.d(t,"b",(function(){return d})),n.d(t,"c",(function(){return p}));var s=Object(o.createContext)("undefined"!==typeof HTMLElement?Object(i.a)():null),d=Object(o.createContext)({}),f=s.Provider,p=function(e){return Object(o.forwardRef)((function(t,n){return Object(o.createElement)(s.Consumer,null,(function(r){return e(t,r,n)}))}))};Object.prototype.hasOwnProperty;o.Component;var m=function e(t){for(var n=t.length,r=0,a="";r<n;r++){var o=t[r];if(null!=o){var i=void 0;switch(typeof o){case"boolean":break;case"object":if(Array.isArray(o))i=e(o);else for(var l in i="",o)o[l]&&l&&(i&&(i+=" "),i+=l);break;default:i=o}i&&(a&&(a+=" "),a+=i)}}return a};function g(e,t,n){var r=[],a=Object(l.a)(e,r,n);return r.length<2?n:a+t(r)}p((function(e,t){return Object(o.createElement)(d.Consumer,null,(function(n){var r=function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];var a=Object(u.a)(n,t.registered);return Object(l.b)(t,a,!1),t.key+"-"+a.name},a={css:r,cx:function(){for(var e=arguments.length,n=new Array(e),a=0;a<e;a++)n[a]=arguments[a];return g(t.registered,r,m(n))},theme:n},o=e.children(a);return!0,o}))}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a})),n.d(t,"c",(function(){return o}));var r="https://getpocket.com/signup?src=extension&route=/extension_login_success",a="https://getpocket.com/lo",o="chrome://extensions/configureCommands"},function(e,t,n){"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}}(),e.exports=n(52)},function(e,t,n){"use strict";var r=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;function i(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(a){return!1}}()?Object.assign:function(e,t){for(var n,l,u=i(e),c=1;c<arguments.length;c++){for(var s in n=Object(arguments[c]))a.call(n,s)&&(u[s]=n[s]);if(r){l=r(n);for(var d=0;d<l.length;d++)o.call(n,l[d])&&(u[l[d]]=n[l[d]])}}return u}},function(e,t){e.exports=function(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}},function(e,t){e.exports=function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}},function(e){e.exports=JSON.parse('{"status":{"archived":"Archiviert.","archiving":"Wird archiviert\xa0...","error":"Fehler!","link_saved":"Link gespeichert!","page_saved":"Seite gespeichert!","removed":"Entfernt.","removing":"Wird entfernt\xa0...","saving":"Speichern..."},"actions":{"archive_page":"Seite archivieren","close":"Schlie\xdfen","open_pocket":"Pocket \xf6ffnen","remove_page":"Seite entfernen","save":"Speichern","settings":"Einstellungen"},"tagging":{"add_tags":"Tags hinzuf\xfcgen","invalid_tags":"Tags sind auf 25 Zeichen begrenzt.","getting_tags":"Tags werden geladen","saving_tags":"Tags werden gespeichert"},"recommendations":{"explore":"Entdecke Empfehlungen von Pocket","loading":"Empfehlungen werden geladen","more_on":"Mehr auf","more_stories_detail":"M\xf6chtest du noch mehr spannende Geschichten finden?","people_also_saved":"Andere Nutzer haben auch Folgendes gespeichert: ","rec_saved":"Empfehlung gespeichert","save_to_pocket":"In Pocket speichern","saved":"Gespeichert","saving":"Wird gespeichert \u2026"},"options_page":{"get_in_touch_on_twitter_link":"kontaktiere uns \xfcber Twitter","header":"OPTIONEN","keyboard_shortcut_enabled":"Aktiviert","keyboard_shortcut_title":"Tastenkombination:","learn_more_link":"(mehr Infos)","login_link":"Zum Einloggen hier klicken","login_title":"Eingeloggt als: ","logout_link":"ausloggen","more_ways_to_save_title":"Mehr M\xf6glichkeiten zum Speichern von Inhalten bei Pocket:","questions_pocket_title":"Fragen zu Pocket?","quick_save_services_title":"Dienste schneller speichern:","recommendations_detail":"Wenn du eine Seite speicherst, werden dir Empfehlungen von Pocket zu Geschichten zu \xe4hnlichen Themen angezeigt.","recommendations_title":"Empfehlungen zu gespeicherten Geschichten anzeigen","record_shortcut":"Neue Tastenkombination festlegen","reset_to_default":"Auf Standard zur\xfccksetzen","save_to_pocket":"In Pocket speichern","search_support_link":"Support bei der Suche","send_us_an_email_link":"schicke uns eine E-Mail","services_info":"Falls aktiviert, kannst du alle Elemente von diesen Diensten direkt zu Pocket hinzuf\xfcgen"},"error":{"page_not_saved":"Seite nicht gespeichert","page_not_saved_detail":"Pocket konnte diese Seite nicht speichern. Bitte versuche es erneut."}}')},function(e){e.exports=JSON.parse('{"status":{"archived":"Archived.","archiving":"Archiving...","error":"Error!","link_saved":"Link Saved!","page_saved":"Page Saved!","removed":"Removed.","removing":"Removing...","saving":"Saving..."},"actions":{"archive_page":"Archive Page","close":"Close","open_pocket":"Open My List","remove_page":"Remove Page","save":"Save","settings":"Settings","logout":"Log Out"},"tagging":{"add_tags":"Add Tags","invalid_tags":"Tags are limited to 25 characters","getting_tags":"Getting Tags","saving_tags":"Saving Tags"},"recommendations":{"explore":"Explore Pocket\'s recommendations","loading":"Loading recommendations","more_on":"More on","more_stories_detail":"Want to find more great stories?","people_also_saved":"People also saved: ","rec_saved":"Recommendation Saved","save_to_pocket":"Save To Pocket","saved":"Saved","saving":"Saving"},"options_page":{"get_in_touch_on_twitter_link":"get in touch on Twitter","header":"OPTIONS","keyboard_shortcut_enabled":"Enabled","keyboard_shortcut_title":"Keyboard Shortcut:","learn_more_link":"(learn more)","login_link":"Click here to log in","login_title":"Logged in as: ","logout_link":"logout","more_ways_to_save_title":"More ways to use Pocket:","questions_pocket_title":"Questions about Pocket?","quick_save_services_title":"Quick save services:","recommendations_detail":"When you save a page, see recommended stories from Pocket based on similar topics.","recommendations_title":"Recommendations on Save","record_shortcut":"Record a new shortcut","reset_to_default":"Reset to default","save_to_pocket":"Save To Pocket","search_support_link":"Search support","send_us_an_email_link":"send us an email","services_info":"When enabled, you can add directly to Pocket any items from these services"},"error":{"page_not_saved":"Page Not Saved","page_not_saved_detail":"Pocket encountered an error when trying to save this page. Please try again."}}')},function(e){e.exports=JSON.parse('{"status":{"archived":"Archivado.","archiving":"Archivando...","error":"\xa1Error!","link_saved":"\xa1Enlace guardado!","page_saved":"P\xe1gina guardada","removed":"Eliminado.","removing":"Eliminando...","saving":"Guardando\u2026"},"actions":{"archive_page":"Archivar p\xe1gina","close":"Cerrar","open_pocket":"Abre Pocket","remove_page":"Eliminar p\xe1gina","save":"Guardar","settings":"Opciones"},"tagging":{"add_tags":"A\xf1adir etiquetas","invalid_tags":"La longitud m\xe1xima de una etiqueta es 25 caracteres.","getting_tags":"Cargando etiquetas\u2026","saving_tags":"Guardando etiquetas"},"recommendations":{"explore":"Explora las recomendaciones de Pocket","loading":"Cargando recomendaciones","more_on":"M\xe1s sobre","more_stories_detail":"\xbfQuieres encontrar m\xe1s historias geniales?","people_also_saved":"Otras personas tambi\xe9n han guardado ","rec_saved":"Recomendaci\xf3n guardada","save_to_pocket":"Guardar en Pocket","saved":"Guardado","saving":"Guardando"},"options_page":{"get_in_touch_on_twitter_link":"contacta con nosotros en Twitter","header":"OPCIONES","keyboard_shortcut_enabled":"Activado","keyboard_shortcut_title":"Atajo de teclado:","learn_more_link":"(m\xe1s informaci\xf3n)","login_link":"Pulsa aqu\xed para iniciar sesi\xf3n.","login_title":"Conectado como: ","logout_link":"cerrar sesi\xf3n","more_ways_to_save_title":"Otras formas de usar Pocket:","questions_pocket_title":"\xbfTienes preguntas sobre Pocket?","quick_save_services_title":"Servicios de guardado r\xe1pido:","recommendations_detail":"Cuando guardas una p\xe1gina, Pocket te recomienda historias sobre temas similares.","recommendations_title":"Recomendaciones al guardar","record_shortcut":"Grabar un nuevo atajo","reset_to_default":"Restablecer predeterminados","save_to_pocket":"Guardar en Pocket","search_support_link":"Buscar en la ayuda","send_us_an_email_link":"env\xedanos un correo","services_info":"Si est\xe1 activado, puedes a\xf1adir directamente a Pocket cualquier art\xedculo desde estos servicios"},"error":{"page_not_saved":"La p\xe1gina no se ha guardado","page_not_saved_detail":"Pocket ha tenido un problema al guardar esta p\xe1gina. Vuelve a intentarlo. "}}')},function(e){e.exports=JSON.parse('{"status":{"archived":"Archivado.","archiving":"Archivando...","error":"\xa1Error!","link_saved":"\xa1Enlace guardado!","page_saved":"\xa1P\xe1gina Guardada!","removed":"Eliminado.","removing":"Eliminando...","saving":"Guardando..."},"actions":{"archive_page":"Archivar p\xe1gina","close":"Cerrar","open_pocket":"Abrir Pocket","remove_page":"Eliminar P\xe1gina","save":"Guardar","settings":"Configuraci\xf3n"},"tagging":{"add_tags":"Agregar Etiquetas","invalid_tags":"Las etiquetas se limitan a 25 caracteres","getting_tags":"Cargando etiquetas","saving_tags":"Guardando etiquetas"},"recommendations":{"explore":"Explora las recomendaciones de Pocket","loading":"Cargando recomendaciones","more_on":"M\xe1s sobre","more_stories_detail":"\xbfQuieres descubrir m\xe1s historias incre\xedbles?","people_also_saved":"Otras personas tambi\xe9n han guardado: ","rec_saved":"Recomendaci\xf3n guardada","save_to_pocket":"Guardar en Pocket","saved":"Guardado","saving":"Guardando"},"options_page":{"get_in_touch_on_twitter_link":"ponte en contacto con Twitter","header":"OPCIONES","keyboard_shortcut_enabled":"Habilitado","keyboard_shortcut_title":"Atajo del Teclado:","learn_more_link":"(m\xe1s informaci\xf3n)","login_link":"Pulsa aqu\xed para iniciar sesi\xf3n","login_title":"Conectado como: ","logout_link":"cerrar sesi\xf3n","more_ways_to_save_title":"M\xe1s maneras de utilizar Pocket","questions_pocket_title":"\xbfTienes preguntas sobre Pocket?","quick_save_services_title":"Servicios r\xe1pidos para guardar:","recommendations_detail":"Cuando guardas una p\xe1gina, Pocket te recomienda historias sobre temas similares.","recommendations_title":"Recomendaciones al guardar","record_shortcut":"Registra un nuevo atajo","reset_to_default":"Restablecer a predeterminado","save_to_pocket":"Guardar en Pocket","search_support_link":"Buscar ayuda","send_us_an_email_link":"env\xedanos un email","services_info":"Cuando est\xe9 habilitado, puede agregar enlaces a Pocket directamente desde estos servicios"},"error":{"page_not_saved":"La p\xe1gina no se ha guardado","page_not_saved_detail":"Pocket encontr\xf3 un error al intentar guardar esta p\xe1gina. Int\xe9ntalo de nuevo."}}')},function(e){e.exports=JSON.parse('{"status":{"archived":"Archivage effectu\xe9.","archiving":"Archivage en cours...","error":"Erreur\xa0!","link_saved":"Lien sauvegard\xe9\xa0!","page_saved":"Page sauvegard\xe9e\xa0!","removed":"Suppression effectu\xe9e.","removing":"Suppression en cours...","saving":"Sauvegarde..."},"actions":{"archive_page":"Archiver la page","close":"Fermer","open_pocket":"Ouvrir Pocket","remove_page":"Supprimer la page","save":"Sauvegarder","settings":"Param\xe8tres"},"tagging":{"add_tags":"Ajouter des labels","invalid_tags":"Les labels sont limit\xe9s \xe0 25\xa0caract\xe8res","getting_tags":"R\xe9cup\xe9ration des labels","saving_tags":"Sauvegarde des labels"},"recommendations":{"explore":"Parcourir les recommandations de Pocket","loading":"Chargement des recommandations","more_on":"Plus sur","more_stories_detail":"Vous voulez d\xe9couvrir d\'autres histoires int\xe9ressantes\xa0?","people_also_saved":"Des personnes ont aussi sauvegard\xe9\xa0: ","rec_saved":"Recommandation sauvegard\xe9e","save_to_pocket":"Sauvegarder dans Pocket","saved":"Sauvegarde effectu\xe9e","saving":"Sauvegarde en cours"},"options_page":{"get_in_touch_on_twitter_link":"restez en contact via Twitter","header":"OPTIONS","keyboard_shortcut_enabled":"Activ\xe9","keyboard_shortcut_title":"Raccourci clavier\xa0:","learn_more_link":"(en savoir plus)","login_link":"Cliquez ici pour vous connecter","login_title":"Connect\xe9(e) en tant que\xa0: ","logout_link":"d\xe9connexion","more_ways_to_save_title":"Autres fa\xe7ons d\'utiliser Pocket\xa0:","questions_pocket_title":"Des questions sur Pocket\xa0?","quick_save_services_title":"Services de sauvegarde rapide\xa0:","recommendations_detail":"Lorsque vous sauvegardez une page, d\xe9couvrez des histoires recommand\xe9es par Pocket en fonction de th\xe8mes similaires.","recommendations_title":"Recommandations lors de la sauvegarde","record_shortcut":"Enregistrer un nouveau raccourci","reset_to_default":"R\xe9tablir les valeurs par d\xe9faut","save_to_pocket":"Sauvegarder dans Pocket","search_support_link":"Rechercher dans l\'assistance","send_us_an_email_link":"envoyez-nous un e-mail","services_info":"Lorsque cette fonction est activ\xe9e, vous pouvez ajouter directement \xe0 Pocket tous les \xe9l\xe9ments de ces services"},"error":{"page_not_saved":"Page non sauvegard\xe9e","page_not_saved_detail":"Pocket a rencontr\xe9 une erreur lors de la sauvegarde de cette page. Veuillez r\xe9essayer."}}')},function(e){e.exports=JSON.parse('{"status":{"archived":"Archiviato","archiving":"Archiviazione in corso...","error":"Errore!","link_saved":"Link salvato!","page_saved":"Pagina salvata!","removed":"Rimosso.","removing":"Rimozione in corso\u2026","saving":"Salvataggio..."},"actions":{"archive_page":"Archivia pagina","close":"Chiudi","open_pocket":"Apri Pocket","remove_page":"Elimina pagina","save":"Salva","settings":"Impostazioni"},"tagging":{"add_tags":"Aggiungi tag","invalid_tags":"I tag hanno un limite di 25 caratteri","getting_tags":"Ottenimento tag","saving_tags":"Salvataggio tag"},"recommendations":{"explore":"Esplora le Raccomandazioni di Pocket","loading":"Caricamento Raccomandazioni in corso","more_on":"Altro","more_stories_detail":"Vuoi trovare altre grandi storie?","people_also_saved":"Ti potrebbero interessare: ","rec_saved":"Raccomandazioni salvate","save_to_pocket":"Salva in Pocket","saved":"Salvato","saving":"Salvataggio in corso"},"options_page":{"get_in_touch_on_twitter_link":"contattaci su Twitter","header":"OPZIONI","keyboard_shortcut_enabled":"Attivato","keyboard_shortcut_title":"Tasti di scelta rapida:","learn_more_link":"(maggiori informazioni)","login_link":"Fai clic qui per accedere","login_title":"Accesso eseguito come: ","logout_link":"esci","more_ways_to_save_title":"Altri modi di usare Pocket","questions_pocket_title":"Domande su Pocket?","quick_save_services_title":"Servizi con aggiunta rapida:","recommendations_detail":"Quando si salva una pagina, \xe8 possibile visualizzare i contenuti consigliati da Pocket in base ad argomenti simili.","recommendations_title":"Raccomandazioni al momento del salvataggio","record_shortcut":"Memorizza un nuovo tasto di scelta rapida","reset_to_default":"Reimposta predefinito","save_to_pocket":"Salva in Pocket","search_support_link":"Cerca assistenza","send_us_an_email_link":"inviaci un\'email","services_info":"Quando sono attivati, puoi salvare direttamente in Pocket tutti i contenuti di questi servizi"},"error":{"page_not_saved":"Pagina non salvata","page_not_saved_detail":"Pocket ha riscontrato problemi durante il tentativo di salvataggio di questa pagina. Riprova. "}}')},function(e){e.exports=JSON.parse('{"status":{"archived":"\u30a2\u30fc\u30ab\u30a4\u30d6\u3057\u307e\u3057\u305f\u3002","archiving":"\u30a2\u30fc\u30ab\u30a4\u30d6\u3057\u3066\u3044\u307e\u3059...","error":"\u30a8\u30e9\u30fc\uff01","link_saved":"\u30ea\u30f3\u30af\u3092\u4fdd\u5b58\u3057\u307e\u3057\u305f\uff01","page_saved":"\u30da\u30fc\u30b8\u304c\u4fdd\u5b58\u3055\u308c\u307e\u3057\u305f\uff01","removed":"\u524a\u9664\u3055\u308c\u307e\u3057\u305f\u3002","removing":"\u524a\u9664\u3057\u3066\u3044\u307e\u3059...","saving":"\u4fdd\u5b58\u4e2d..."},"actions":{"archive_page":"\u30da\u30fc\u30b8\u3092\u30a2\u30fc\u30ab\u30a4\u30d6","close":"\u9589\u3058\u308b","open_pocket":"Pocket \u3092\u958b\u304f","remove_page":"\u30da\u30fc\u30b8\u3092\u524a\u9664","save":"\u4fdd\u5b58","settings":"\u8a2d\u5b9a"},"tagging":{"add_tags":"\u30bf\u30b0\u3092\u8ffd\u52a0","invalid_tags":"\u30bf\u30b0\u306f\u6700\u592725\u6587\u5b57\u3068\u306a\u3063\u3066\u3044\u307e\u3059","getting_tags":"\u30bf\u30b0\u306e\u53d6\u5f97","saving_tags":"\u30bf\u30b0\u306e\u4fdd\u5b58"},"recommendations":{"explore":"Pocket \u306e\u304a\u3059\u3059\u3081\u3092\u63a2\u7d22","loading":"\u304a\u3059\u3059\u3081\u3092\u8aad\u307f\u8fbc\u307f\u4e2d","more_on":"\u3082\u3063\u3068\u898b\u308b: ","more_stories_detail":"\u4ed6\u306e\u304a\u3082\u3057\u308d\u3044\u30b9\u30c8\u30fc\u30ea\u30fc\u3092\u63a2\u3057\u307e\u3059\u304b\uff1f","people_also_saved":"\u304a\u3059\u3059\u3081\u306e\u8a18\u4e8b\uff1a ","rec_saved":"\u304a\u3059\u3059\u3081\u3092\u4fdd\u5b58\u3057\u307e\u3057\u305f\uff01","save_to_pocket":"Pocket \u306b\u4fdd\u5b58","saved":"\u4fdd\u5b58\u3057\u307e\u3057\u305f","saving":"\u4fdd\u5b58\u4e2d"},"options_page":{"get_in_touch_on_twitter_link":"Twitter \u3067\u6700\u65b0\u60c5\u5831\u3092\u30c1\u30a7\u30c3\u30af","header":"\u30aa\u30d7\u30b7\u30e7\u30f3","keyboard_shortcut_enabled":"\u6709\u52b9","keyboard_shortcut_title":"\u30ad\u30fc\u30dc\u30fc\u30c9\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\uff1a","learn_more_link":"\uff08\u8a73\u3057\u304f\u898b\u308b\uff09","login_link":"\u3053\u3053\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u30ed\u30b0\u30a4\u30f3","login_title":"\u6b21\u306e\u30e6\u30fc\u30b6\u30fc\u540d\u3067\u30ed\u30b0\u30a4\u30f3\u4e2d\uff1a ","logout_link":"\u30ed\u30b0\u30a2\u30a6\u30c8","more_ways_to_save_title":"\u305d\u306e\u4ed6\u306e Pocket \u4f7f\u7528\u65b9\u6cd5\uff1a","questions_pocket_title":"Pocket \u306b\u95a2\u3059\u308b\u8cea\u554f\u304c\u3042\u308a\u307e\u3059\u304b\uff1f","quick_save_services_title":"\u30af\u30a4\u30c3\u30af\u4fdd\u5b58\u30b5\u30fc\u30d3\u30b9\uff1a","recommendations_detail":"\u30da\u30fc\u30b8\u3092\u4fdd\u5b58\u3059\u308b\u969b\u3001Pocket \u304b\u3089\u4f3c\u305f\u3088\u3046\u306a\u30c8\u30d4\u30c3\u30af\u306e\u304a\u3059\u3059\u3081\u8a18\u4e8b\u3092\u3054\u89a7\u3044\u305f\u3060\u3051\u307e\u3059\u3002","recommendations_title":"\u4fdd\u5b58\u6642\u306e\u304a\u3059\u3059\u3081","record_shortcut":"\u65b0\u3057\u3044\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u3092\u8a18\u9332","reset_to_default":"\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u30ea\u30bb\u30c3\u30c8","save_to_pocket":"Pocket \u306b\u4fdd\u5b58","search_support_link":"\u30b5\u30dd\u30fc\u30c8\u3092\u691c\u7d22","send_us_an_email_link":"\u30e1\u30fc\u30eb\u3067\u304a\u554f\u3044\u5408\u308f\u305b","services_info":"\u6709\u52b9\u306b\u3059\u308b\u3068\u3001\u3053\u308c\u3089\u30b5\u30fc\u30d3\u30b9\u304b\u3089\u3069\u3093\u306a\u30a2\u30a4\u30c6\u30e0\u3067\u3082 Pocket \u306b\u76f4\u63a5\u8ffd\u52a0\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059"},"error":{"page_not_saved":"\u30da\u30fc\u30b8\u3092\u4fdd\u5b58\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f","page_not_saved_detail":"Pocket \u3067\u3053\u306e\u30da\u30fc\u30b8\u306e\u4fdd\u5b58\u4e2d\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\u3082\u3046\u4e00\u5ea6\u304a\u8a66\u3057\u304f\u3060\u3055\u3044\u3002"}}')},function(e){e.exports=JSON.parse('{"status":{"archived":"\ubcf4\uad00\ub418\uc5c8\uc2b5\ub2c8\ub2e4.","archiving":"\ubcf4\uad00 \uc911...","error":"\uc624\ub958!","link_saved":"\ub9c1\ud06c\uac00 \uc800\uc7a5\ub418\uc5c8\uc2b5\ub2c8\ub2e4!","page_saved":"\ud398\uc774\uc9c0\uac00 \uc800\uc7a5\ub418\uc5c8\uc2b5\ub2c8\ub2e4!","removed":"\uc81c\uac70\ub418\uc5c8\uc2b5\ub2c8\ub2e4.","removing":"\uc81c\uac70 \uc911...","saving":"\uc800\uc7a5 \uc911..."},"actions":{"archive_page":"\ud398\uc774\uc9c0 \ubcf4\uad00","close":"\ub2eb\uae30","open_pocket":"Pocket \uc5f4\uae30","remove_page":"\ud398\uc774\uc9c0 \uc81c\uac70","save":"\uc800\uc7a5","settings":"\uc124\uc815"},"tagging":{"add_tags":"\ud0dc\uadf8 \ucd94\uac00","invalid_tags":"\ud0dc\uadf8\ub294 25\uc790\ub85c \uc81c\ud55c\ub429\ub2c8\ub2e4.","getting_tags":"\ud0dc\uadf8 \uac00\uc838\uc624\ub294 \uc911","saving_tags":"\ud0dc\uadf8 \uc800\uc7a5 \uc911"},"recommendations":{"explore":"Pocket \uad8c\uc7a5 \uc0ac\ud56d \uc0b4\ud3b4\ubcf4\uae30","loading":"\uad8c\uc7a5 \uc0ac\ud56d \ub85c\ub4dc \uc911","more_on":"\ub2e4\uc74c\uc758 \uc138\ubd80 \ub0b4\uc6a9","more_stories_detail":"\ub354\uc6b1 \uba4b\uc9c4 \uc774\uc57c\uae30\ub97c \ucc3e\uace0 \uc2f6\uc73c\uc138\uc694?","people_also_saved":"\ub610\ud55c \uc800\uc7a5\ud55c \uc0ac\ub78c: ","rec_saved":"\ucd94\ucc9c\uc774 \uc800\uc7a5\ub418\uc5c8\uc2b5\ub2c8\ub2e4","save_to_pocket":"Pocket\uc5d0 \uc800\uc7a5","saved":"\uc800\uc7a5\ub428","saving":"\uc800\uc7a5 \uc911"},"options_page":{"get_in_touch_on_twitter_link":"Twitter\uc758 \uc5f0\ub77d\ucc98","header":"\uc124\uc815","keyboard_shortcut_enabled":"\ud65c\uc131\ud654\ub428","keyboard_shortcut_title":"\ud0a4\ubcf4\ub4dc \ubc14\ub85c \uac00\uae30:","learn_more_link":"(\ub354 \ubcf4\uae30)","login_link":"\ub85c\uadf8\uc778\ud558\ub824\uba74 \uc5ec\uae30\ub97c \ud074\ub9ad\ud558\uc2ed\uc2dc\uc624","login_title":"\ub2e4\uc74c\uc73c\ub85c \ub85c\uadf8\uc778: ","logout_link":"\ub85c\uadf8\uc544\uc6c3","more_ways_to_save_title":"\ub2e4\ub978 Pocket \uc0ac\uc6a9 \ubc29\ubc95:","questions_pocket_title":"Pocket\uc5d0 \ub300\ud55c \uc9c8\ubb38\uc774 \uc788\uc73c\uc2ed\ub2c8\uae4c?","quick_save_services_title":"\ube60\ub978 \uc800\uc7a5 \uc11c\ube44\uc2a4:","recommendations_detail":"\ud398\uc774\uc9c0\ub97c \uc800\uc7a5\ud558\uba74 \ube44\uc2b7\ud55c \uc8fc\uc81c\uc5d0 \ub530\ub77c Pocket\uc758 \ucd94\ucc9c \uc774\uc57c\uae30\ub97c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","recommendations_title":"\ucd94\ucc9c \uc800\uc7a5\ud558\uae30","record_shortcut":"\uc0c8 \ubc14\ub85c \uac00\uae30 \uae30\ub85d","reset_to_default":"\uae30\ubcf8\uac12\uc73c\ub85c \uc7ac\uc124\uc815","save_to_pocket":"Pocket\uc5d0 \uc800\uc7a5","search_support_link":"\uc9c0\uc6d0 \uac80\uc0c9","send_us_an_email_link":"\uc774\uba54\uc77c \ubcf4\ub0b4\uae30","services_info":"\ud65c\uc131\ud654\ub418\uba74 \uc774 \uc11c\ube44\uc2a4\uc5d0\uc11c \ud56d\ubaa9\uc744 Pocket\uc5d0 \uc9c1\uc811 \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."},"error":{"page_not_saved":"\ud398\uc774\uc9c0\uac00 \uc800\uc7a5\ub418\uc9c0 \uc54a\uc74c","page_not_saved_detail":"\uc774 \ud398\uc774\uc9c0\ub97c \uc800\uc7a5\ud558\ub294 \uc911\uc5d0 Pocket\uc5d0 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. \ub2e4\uc2dc \uc2dc\ub3c4\ud558\uc2ed\uc2dc\uc624. "}}')},function(e){e.exports=JSON.parse('{"status":{"archived":"Gearchiveerd.","archiving":"Archiveren...","error":"Fout!","link_saved":"Link opgeslagen!","page_saved":"Pagina opgeslagen!","removed":"Verwijderd.","removing":"Verwijderen...","saving":"Opslaan..."},"actions":{"archive_page":"Pagina archiveren","close":"Afsluiten","open_pocket":"Pocket openen","remove_page":"Verwijder pagina","save":"Opslaan","settings":"Instellingen"},"tagging":{"add_tags":"Tags toevoegen","invalid_tags":"Tags zijn beperkt tot 25 tekens","getting_tags":"Tags ophalen","saving_tags":"Tags opslaan"},"recommendations":{"explore":"Ontdek wat de aanbevelingen zijn van Pocket","loading":"Aanbevelingen laden","more_on":"Meer over","more_stories_detail":"Wil je nog meer geweldige verhalen ontdekken?","people_also_saved":"Anderen bewaarden ook: ","rec_saved":"Aanbeveling opgeslagen","save_to_pocket":"Opslaan naar Pocket","saved":"Opgeslagen","saving":"Opslaan"},"options_page":{"get_in_touch_on_twitter_link":"neem contact met ons op via Twitter","header":"OPTIES","keyboard_shortcut_enabled":"Ingeschakeld","keyboard_shortcut_title":"Snelkoppeling toetsenbord:","learn_more_link":"(meer info)","login_link":"Klik hier om in te loggen ","login_title":"Ingelogd als: ","logout_link":"uitloggen","more_ways_to_save_title":"Meer manieren om Pocket te gebruiken:","questions_pocket_title":"Vragen over Pocket?","quick_save_services_title":"Diensten snel opslaan:","recommendations_detail":"Wanneer je een pagina opslaat, kun je aanbevolen verhalen van Pocket bekijken op basis van vergelijkbare onderwerpen.","recommendations_title":"Aanbevelingen bij opslaan","record_shortcut":"Een nieuwe snelkoppeling vastleggen","reset_to_default":"Terug naar standaardinstellingen","save_to_pocket":"Opslaan naar Pocket","search_support_link":"Hulp bij Zoeken","send_us_an_email_link":"stuur ons een e-mail","services_info":"Als deze diensten zijn ingeschakeld, kun je vandaaruit rechtstreeks alle items toevoegen aan Pocket"},"error":{"page_not_saved":"Pagina niet opgeslagen","page_not_saved_detail":"Pocket heeft problemen bij het opslaan van deze pagina. Probeer het opnieuw."}}')},function(e){e.exports=JSON.parse('{"status":{"archived":"Zarchiwizowano.","archiving":"Archiwizowanie...","error":"B\u0142\u0105d!","link_saved":"Zapisano \u0142\u0105cze!","page_saved":"Zapisano stron\u0119!","removed":"Usuni\u0119to.","removing":"Usuwanie...","saving":"Zapisywanie..."},"actions":{"archive_page":"Archiwizuj stron\u0119","close":"Zamknij","open_pocket":"Otw\xf3rz aplikacj\u0119 Pocket","remove_page":"Usu\u0144 stron\u0119","save":"Zapisz","settings":"Ustawienia"},"tagging":{"add_tags":"Dodaj tagi","invalid_tags":"Tagi mog\u0105 mie\u0107 maksymalnie 25 znak\xf3w","getting_tags":"Pobieranie tag\xf3w","saving_tags":"Zapisywanie tag\xf3w"},"recommendations":{"explore":"Odkryj rekomendacje Pocket","loading":"Wgrywanie rekomendacji","more_on":"Wi\u0119cej w","more_stories_detail":"Chcesz znale\u017a\u0107 wi\u0119cej \u015bwietnych historii?","people_also_saved":"Inne osoby zapisa\u0142y r\xf3wnie\u017c: ","rec_saved":"Zapisano rekomendacj\u0119","save_to_pocket":"Zapisz w aplikacji Pocket","saved":"Zapisano","saving":"Zapisywanie"},"options_page":{"get_in_touch_on_twitter_link":"skontaktuj si\u0119 za pomoc\u0105 serwisu Twitter","header":"OPCJE","keyboard_shortcut_enabled":"W\u0142\u0105czono","keyboard_shortcut_title":"Skr\xf3ty klawiaturowe:","learn_more_link":"(dowiedz si\u0119 wi\u0119cej)","login_link":"Kliknij tutaj, aby si\u0119 zalogowa\u0107","login_title":"Zalogowano jako: ","logout_link":"wyloguj","more_ways_to_save_title":"Wi\u0119cej metod korzystania z aplikacji Pocket:","questions_pocket_title":"Masz pytania na temat aplikacji Pocket?","quick_save_services_title":"Serwisy umo\u017cliwiaj\u0105ce szybkie zapisywanie:","recommendations_detail":"Podczas zapisywania strony zobacz publikacje w aplikacji Pocket rekomendowane ze wzgl\u0119du na podobny temat.","recommendations_title":"Rekomendacje przy zapisywaniu","record_shortcut":"Zarejestruj nowy skr\xf3t","reset_to_default":"Zresetuj do ustawie\u0144 domy\u015blnych","save_to_pocket":"Zapisz w aplikacji Pocket","search_support_link":"Znajd\u017a pomoc","send_us_an_email_link":"wy\u015blij do nas wiadomo\u015b\u0107 e-mail","services_info":"Po w\u0142\u0105czeniu tej funkcji elementy z tych serwis\xf3w mo\u017cna dodawa\u0107 bezpo\u015brednio do aplikacji Pocket"},"error":{"page_not_saved":"Strony nie zapisano","page_not_saved_detail":"Podczas zapisywania strony w Pocket wyst\u0105pi\u0142 b\u0142\u0105d. Spr\xf3buj ponownie. "}}')},function(e){e.exports=JSON.parse('{"status":{"archived":"Arquivado.","archiving":"Arquivando...","error":"Erro!","link_saved":"Link salvo!","page_saved":"P\xe1gina salva!","removed":"Removido.","removing":"Removendo...","saving":"Salvando\u2026"},"actions":{"archive_page":"Arquivar p\xe1gina","close":"Fechar","open_pocket":"Abrir o Pocket","remove_page":"Remover p\xe1gina","save":"Salvar","settings":"Configura\xe7\xf5es"},"tagging":{"add_tags":"Adicionar tags","invalid_tags":"As tags t\xeam um limite de 25 caracteres","getting_tags":"Recebendo tags","saving_tags":"Salvando tags"},"recommendations":{"explore":"Explorar as recomenda\xe7\xf5es do Pocket","loading":"Carregando recomenda\xe7\xf5es","more_on":"Mais em","more_stories_detail":"Quer achar outras grandes hist\xf3rias?","people_also_saved":"Pessoas tamb\xe9m salvaram: ","rec_saved":"Recomenda\xe7\xe3o salva","save_to_pocket":"Salvar no Pocket","saved":"Salvo","saving":"Salvando"},"options_page":{"get_in_touch_on_twitter_link":"Conecte-se usando o Twitter","header":"OP\xc7\xd5ES","keyboard_shortcut_enabled":"Ativado","keyboard_shortcut_title":"Atalhos do teclado:","learn_more_link":"(Saiba mais)","login_link":"Clique aqui para acessar","login_title":"Acessou como: ","logout_link":"Sair","more_ways_to_save_title":"Mais maneiras de usar o Pocket:","questions_pocket_title":"D\xfavidas sobre o Pocket?","quick_save_services_title":"Servi\xe7os r\xe1pidos para salvar:","recommendations_detail":"Ao salvar uma p\xe1gina, confira as hist\xf3rias recomendadas do Pocket com base em t\xf3picos similares.","recommendations_title":"Recomenda\xe7\xf5es baseadas em itens salvos","record_shortcut":"Gravar um novo atalho","reset_to_default":"Redefinir para o padr\xe3o","save_to_pocket":"Salvar no Pocket","search_support_link":"Procurar suporte","send_us_an_email_link":"Envie um e-mail","services_info":"Quando estiver ativado, \xe9 poss\xedvel adicionar qualquer item destes servi\xe7os diretamente ao Pocket "},"error":{"page_not_saved":"P\xe1gina n\xe3o salva","page_not_saved_detail":"O Pocket encontrou um erro ao tentar salvar esta p\xe1gina. Tente novamente."}}')},function(e){e.exports=JSON.parse('{"status":{"archived":"Arquivado.","archiving":"A arquivar...","error":"Erro!","link_saved":"Liga\xe7\xe3o guardada!","page_saved":"P\xe1gina guardada!","removed":"Removido.","removing":"A remover...","saving":"A guardar\u2026"},"actions":{"archive_page":"P\xe1gina de Arquivo","close":"Fechar","open_pocket":"Abrir o Pocket","remove_page":"Remover P\xe1gina","save":"Guardar","settings":"Configura\xe7\xf5es"},"tagging":{"add_tags":"Adicionar Etiquetas","invalid_tags":"As etiquetas t\xeam um limite de 25 caracteres","getting_tags":"A obter etiquetas","saving_tags":"A guardar etiquetas"},"recommendations":{"explore":"Explorar as recomenda\xe7\xf5es do Pocket","loading":"A carregar recomenda\xe7\xf5es","more_on":"Mais sobre","more_stories_detail":"Quer encontrar mais \xf3timas hist\xf3rias?","people_also_saved":"As pessoas tamb\xe9m guardaram: ","rec_saved":"Recomenda\xe7\xe3o guardada","save_to_pocket":"Guardar no Pocket","saved":"Guardado","saving":"A guardar"},"options_page":{"get_in_touch_on_twitter_link":"contacte-nos no Twitter","header":"OP\xc7\xd5ES","keyboard_shortcut_enabled":"Activado","keyboard_shortcut_title":"Atalho de teclado:","learn_more_link":"(mais informa\xe7\xe3o)","login_link":"Clique aqui para entrar","login_title":"Sess\xe3o iniciada como: ","logout_link":"sair","more_ways_to_save_title":"Mais formas de usar o Pocket:","questions_pocket_title":"D\xfavidas sobre o Pocket?","quick_save_services_title":"Servi\xe7os guardar rapidamente:","recommendations_detail":"Quando guardares uma p\xe1gina, v\xea as hist\xf3rias recomendadas do Pocket com base em t\xf3picos similares.","recommendations_title":"Recomenda\xe7\xf5es sobre Guardar","record_shortcut":"Gravar um atalho novo","reset_to_default":"Repor configura\xe7\xe3o original","save_to_pocket":"Guardar no Pocket","search_support_link":"Procurar assist\xeancia","send_us_an_email_link":"envie-nos um e-mail","services_info":"Se estiverem activos, pode adicionar directamente ao Pocket quaisquer itens destes servi\xe7os"},"error":{"page_not_saved":"P\xe1gina N\xe3o Guardada","page_not_saved_detail":"O Pocket detectou um erro ao guardar esta p\xe1gina. Tente de novo."}}')},function(e){e.exports=JSON.parse('{"status":{"archived":"\u0412 \u0430\u0440\u0445\u0438\u0432\u0435.","archiving":"\u0410\u0440\u0445\u0438\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435...","error":"\u041e\u0448\u0438\u0431\u043a\u0430!","link_saved":"\u0421\u0441\u044b\u043b\u043a\u0430 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0430!","page_saved":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0430!","removed":"\u0423\u0434\u0430\u043b\u0435\u043d\u043e.","removing":"\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435...","saving":"\u0421\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435..."},"actions":{"archive_page":"\u0410\u0440\u0445\u0438\u0432\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443","close":"\u0417\u0430\u043a\u0440\u044b\u0442\u044c","open_pocket":"\u041e\u0442\u043a\u0440\u044b\u0442\u044c Pocket","remove_page":"\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443","save":"\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c","settings":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438"},"tagging":{"add_tags":"\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0442\u0435\u0433\u0438","invalid_tags":"\u0414\u043b\u0438\u043d\u0430 \u0442\u0435\u0433\u0430 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0430 25 \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c\u0438","getting_tags":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0442\u0435\u0433\u043e\u0432","saving_tags":"\u0421\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0442\u0435\u0433\u043e\u0432"},"recommendations":{"explore":"\u041f\u043e\u0437\u043d\u0430\u043a\u043e\u043c\u044c\u0442\u0435\u0441\u044c \u0441 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u044f\u043c\u0438 Pocket","loading":"\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0439","more_on":"\u0415\u0449\u0435 \u043d\u0430","more_stories_detail":"\u0425\u043e\u0442\u0438\u0442\u0435 \u0443\u0437\u043d\u0430\u0442\u044c \u0435\u0449\u0435 \u0431\u043e\u043b\u044c\u0448\u0435 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u044b\u0445 \u0438\u0441\u0442\u043e\u0440\u0438\u0439?","people_also_saved":"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u0442\u0430\u043a\u0436\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044e\u0442: ","rec_saved":"\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u044b","save_to_pocket":"\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0432 Pocket","saved":"\u0421\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u043e","saving":"\u0421\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435"},"options_page":{"get_in_touch_on_twitter_link":"\u0438\u043b\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043d\u0430\u043c \u0432 Twitter","header":"\u041d\u0410\u0421\u0422\u0420\u041e\u0419\u041a\u0418","keyboard_shortcut_enabled":"\u0412\u043a\u043b\u044e\u0447\u0435\u043d\u043e","keyboard_shortcut_title":"\u0421\u043e\u0447\u0435\u0442\u0430\u043d\u0438\u0435 \u043a\u043b\u0430\u0432\u0438\u0448:","learn_more_link":"(\u0443\u0437\u043d\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435)","login_link":"\u041d\u0430\u0436\u043c\u0438\u0442\u0435, \u0447\u0442\u043e\u0431\u044b \u0432\u043e\u0439\u0442\u0438","login_title":"\u0412\u044b \u0432\u043e\u0448\u043b\u0438 \u043a\u0430\u043a: ","logout_link":"\u0432\u044b\u0439\u0442\u0438","more_ways_to_save_title":"\u0411\u043e\u043b\u044c\u0448\u0435 \u0441\u043f\u043e\u0441\u043e\u0431\u043e\u0432 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c Pocket:","questions_pocket_title":"\u0412\u043e\u0437\u043d\u0438\u043a\u043b\u0438 \u0432\u043e\u043f\u0440\u043e\u0441\u044b?","quick_save_services_title":"\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441 \u0431\u044b\u0441\u0442\u0440\u044b\u043c \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435\u043c:","recommendations_detail":"\u041f\u0440\u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u0442\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0438\u0441\u0442\u043e\u0440\u0438\u0438 Pocket \u0441 \u043f\u043e\u0445\u043e\u0436\u0438\u043c\u0438 \u0442\u0435\u043c\u0430\u043c\u0438.","recommendations_title":"\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438 \u0432 \u0421\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u043d\u043e\u043c","record_shortcut":"\u0417\u0430\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u043e\u0435 \u0441\u043e\u0447\u0435\u0442\u0430\u043d\u0438\u0435 \u043a\u043b\u0430\u0432\u0438\u0448","reset_to_default":"\u0421\u0431\u0440\u043e\u0441\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438","save_to_pocket":"\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0432 Pocket","search_support_link":"\u041f\u043e\u0438\u0441\u043a \u0432 \u0431\u0430\u0437\u0435 \u0437\u043d\u0430\u043d\u0438\u0439","send_us_an_email_link":"\u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043d\u0430\u043c \u043f\u0438\u0441\u044c\u043c\u043e","services_info":"\u0412 \u044d\u0442\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u0440\u0430\u0437\u0443 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0432 Pocket \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b \u0438\u0437 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439"},"error":{"page_not_saved":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043d\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0430","page_not_saved_detail":"\u041f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430, \u0438 Pocket \u043d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443. \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0435\u0449\u0435 \u0440\u0430\u0437."}}')},function(e){e.exports=JSON.parse('{"status":{"archived":"\u5df2\u5b58\u6863\u3002","archiving":"\u6b63\u5728\u5b58\u6863...","error":"\u9519\u8bef\uff01","link_saved":"\u94fe\u63a5\u5df2\u4fdd\u5b58\uff01","page_saved":"\u9875\u9762\u5df2\u4fdd\u5b58\uff01","removed":"\u5df2\u5220\u9664\u3002","removing":"\u6b63\u5728\u5220\u9664...","saving":"\u4fdd\u5b58..."},"actions":{"archive_page":"\u5b58\u6863\u9875\u9762","close":"\u5173\u95ed","open_pocket":"\u6253\u5f00 Pocket","remove_page":"\u5220\u9664\u9875\u9762","save":"\u4fdd\u5b58","settings":"\u8bbe\u7f6e"},"tagging":{"add_tags":"\u6dfb\u52a0\u6807\u8bb0","invalid_tags":"\u6807\u8bb0\u9650\u4e8e 25 \u4e2a\u5b57\u7b26","getting_tags":"\u6b63\u5728\u83b7\u53d6\u6807\u8bb0","saving_tags":"\u6b63\u5728\u4fdd\u5b58\u6807\u8bb0"},"recommendations":{"explore":"\u67e5\u770b Pocket \u7684\u63a8\u8350","loading":"\u6b63\u5728\u52a0\u8f7d\u63a8\u8350","more_on":"\u66f4\u591a\u5c31\u5728","more_stories_detail":"\u60f3\u8981\u67e5\u627e\u66f4\u591a\u597d\u6545\u4e8b\uff1f","people_also_saved":"\u5176\u4ed6\u4eba\u8fd8\u4fdd\u5b58\u4e86\uff1a ","rec_saved":"\u63a8\u8350\u5df2\u4fdd\u5b58","save_to_pocket":"\u4fdd\u5b58\u5230 Pocket","saved":"\u5df2\u4fdd\u5b58","saving":"\u6b63\u5728\u4fdd\u5b58"},"options_page":{"get_in_touch_on_twitter_link":"\u5728 Twitter \u4e0a\u8054\u7cfb","header":"\u9009\u9879","keyboard_shortcut_enabled":"\u5df2\u542f\u7528","keyboard_shortcut_title":"\u952e\u76d8\u5feb\u6377\u952e\uff1a","learn_more_link":"\uff08\u4e86\u89e3\u66f4\u591a\uff09","login_link":"\u5355\u51fb\u6b64\u5904\u767b\u5f55","login_title":"\u5df2\u767b\u5f55\u4e3a\uff1a ","logout_link":"\u6ce8\u9500","more_ways_to_save_title":"\u66f4\u591a\u4f7f\u7528 Pocket \u7684\u65b9\u5f0f\uff1a","questions_pocket_title":"\u6709\u5173\u4e8e Pocket \u7684\u95ee\u9898\uff1f","quick_save_services_title":"\u5feb\u901f\u4fdd\u5b58\u670d\u52a1\uff1a","recommendations_detail":"\u4fdd\u5b58\u9875\u9762\u65f6\uff0c\u8bf7\u53c2\u8003 Pocket \u6839\u636e\u7c7b\u4f3c\u4e3b\u9898\u63a8\u8350\u7684\u6545\u4e8b\u3002","recommendations_title":"\u4fdd\u5b58\u63a8\u8350","record_shortcut":"\u8bb0\u5f55\u65b0\u7684\u5feb\u6377\u952e","reset_to_default":"\u91cd\u8bbe\u4e3a\u9ed8\u8ba4\u503c","save_to_pocket":"\u4fdd\u5b58\u5230 Pocket","search_support_link":"\u641c\u7d22\u652f\u6301","send_us_an_email_link":"\u5411\u6211\u4eec\u53d1\u9001\u7535\u5b50\u90ae\u4ef6","services_info":"\u542f\u7528\u540e\uff0c\u60a8\u53ef\u4ee5\u76f4\u63a5\u4ece\u8fd9\u4e9b\u670d\u52a1\u6dfb\u52a0\u4efb\u4f55\u9879\u76ee\u5230 Pocket"},"error":{"page_not_saved":"\u9875\u9762\u672a\u4fdd\u5b58","page_not_saved_detail":"Pocket \u5c1d\u8bd5\u4fdd\u5b58\u6b64\u9875\u9762\u65f6\u9047\u5230\u9519\u8bef\u3002\u8bf7\u91cd\u8bd5\u3002"}}')},function(e){e.exports=JSON.parse('{"status":{"archived":"\u5df2\u5c01\u5b58\u3002","archiving":"\u5c01\u5b58\u4e2d...","error":"\u932f\u8aa4\uff01","link_saved":"\u9023\u7d50\u5df2\u5132\u5b58\uff01","page_saved":"\u9801\u9762\u5df2\u5132\u5b58\uff01","removed":"\u5df2\u79fb\u9664\u3002","removing":"\u79fb\u9664\u4e2d...","saving":"\u6b63\u5728\u5132\u5b58..."},"actions":{"archive_page":"\u5c01\u5b58\u9801\u9762","close":"\u95dc\u9589","open_pocket":"\u958b\u555f Pocket","remove_page":"\u79fb\u9664\u9801\u9762","save":"\u5132\u5b58","settings":"\u8a2d\u5b9a"},"tagging":{"add_tags":"\u65b0\u589e\u6a19\u7c64","invalid_tags":"\u6a19\u7c64\u9577\u5ea6\u9650\u65bc 25 \u500b\u5b57\u5143","getting_tags":"\u6b63\u5728\u53d6\u5f97\u6a19\u7c64","saving_tags":"\u6b63\u5728\u5132\u5b58\u6a19\u7c64"},"recommendations":{"explore":"\u63a2\u7d22 Pocket \u7684\u63a8\u85a6\u6e05\u55ae","loading":"\u6b63\u5728\u8f09\u5165\u63a8\u85a6\u6e05\u55ae","more_on":"\u66f4\u591a\u5c31\u5728","more_stories_detail":"\u60f3\u627e\u66f4\u591a\u597d\u6545\u4e8b\u55ce\uff1f","people_also_saved":"\u5176\u4ed6\u4eba\u4e5f\u5132\u5b58\uff1a ","rec_saved":"\u63a8\u85a6\u5df2\u5132\u5b58","save_to_pocket":"\u5132\u5b58\u5230 Pocket","saved":"\u5df2\u5132\u5b58","saving":"\u5132\u5b58\u4e2d"},"options_page":{"get_in_touch_on_twitter_link":"\u5728 Twitter \u4e0a\u806f\u7d61","header":"\u9078\u9805","keyboard_shortcut_enabled":"\u5df2\u555f\u7528","keyboard_shortcut_title":"\u9375\u76e4\u6377\u5f91\uff1a","learn_more_link":"\uff08\u77ad\u89e3\u66f4\u591a\uff09","login_link":"\u6309\u9019\u88e1\u767b\u5165","login_title":"\u5df2\u767b\u5165\u70ba\uff1a ","logout_link":"\u767b\u51fa","more_ways_to_save_title":"\u4f7f\u7528 Pocket \u7684\u66f4\u591a\u65b9\u5f0f\uff1a","questions_pocket_title":"\u95dc\u65bc Pocket \u7684\u554f\u984c\uff1f","quick_save_services_title":"\u5feb\u901f\u5132\u5b58\u670d\u52d9\uff1a","recommendations_detail":"\u7576\u60a8\u5132\u5b58\u9801\u9762\u6642\uff0c\u53ef\u53c3\u95b1 Pocket \u57fa\u65bc\u985e\u4f3c\u4e3b\u984c\u6240\u63a8\u85a6\u7684\u6587\u7ae0\u3002","recommendations_title":"\u5132\u5b58\u63a8\u85a6","record_shortcut":"\u8a18\u9304\u65b0\u6377\u5f91","reset_to_default":"\u91cd\u8a2d\u70ba\u9810\u8a2d\u503c","save_to_pocket":"\u5132\u5b58\u5230 Pocket","search_support_link":"\u641c\u5c0b\u652f\u63f4","send_us_an_email_link":"\u5411\u6211\u5011\u50b3\u9001\u96fb\u5b50\u90f5\u4ef6","services_info":"\u555f\u7528\u5f8c\uff0c\u60a8\u53ef\u4ee5\u76f4\u63a5\u5f9e\u9019\u4e9b\u670d\u52d9\u65b0\u589e\u4efb\u4f55\u9805\u76ee\u81f3 Pocket"},"error":{"page_not_saved":"\u9801\u9762\u672a\u5132\u5b58","page_not_saved_detail":"Pocket \u5617\u8a66\u5132\u5b58\u6b64\u9801\u9762\u6642\u9047\u5230\u932f\u8aa4\u3002\u8acb\u91cd\u8a66\u3002"}}')},,,function(e,t,n){"use strict";var r=n(30),a="function"===typeof Symbol&&Symbol.for,o=a?Symbol.for("react.element"):60103,i=a?Symbol.for("react.portal"):60106,l=a?Symbol.for("react.fragment"):60107,u=a?Symbol.for("react.strict_mode"):60108,c=a?Symbol.for("react.profiler"):60114,s=a?Symbol.for("react.provider"):60109,d=a?Symbol.for("react.context"):60110,f=a?Symbol.for("react.forward_ref"):60112,p=a?Symbol.for("react.suspense"):60113,m=a?Symbol.for("react.memo"):60115,g=a?Symbol.for("react.lazy"):60116,h="function"===typeof Symbol&&Symbol.iterator;function v(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var _={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function y(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||_}function k(){}function w(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||_}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error(v(85));this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=y.prototype;var x=w.prototype=new k;x.constructor=w,r(x,y.prototype),x.isPureReactComponent=!0;var E={current:null},S=Object.prototype.hasOwnProperty,T={key:!0,ref:!0,__self:!0,__source:!0};function C(e,t,n){var r,a={},i=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)S.call(t,r)&&!T.hasOwnProperty(r)&&(a[r]=t[r]);var u=arguments.length-2;if(1===u)a.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];a.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===a[r]&&(a[r]=u[r]);return{$$typeof:o,type:e,key:i,ref:l,props:a,_owner:E.current}}function P(e){return"object"===typeof e&&null!==e&&e.$$typeof===o}var O=/\/+/g,A=[];function z(e,t,n,r){if(A.length){var a=A.pop();return a.result=e,a.keyPrefix=t,a.func=n,a.context=r,a.count=0,a}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function R(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>A.length&&A.push(e)}function j(e,t,n){return null==e?0:function e(t,n,r,a){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var u=!1;if(null===t)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case o:case i:u=!0}}if(u)return r(a,t,""===n?"."+N(t,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var s=n+N(l=t[c],c);u+=e(l,s,r,a)}else if(null===t||"object"!==typeof t?s=null:s="function"===typeof(s=h&&t[h]||t["@@iterator"])?s:null,"function"===typeof s)for(t=s.call(t),c=0;!(l=t.next()).done;)u+=e(l=l.value,s=n+N(l,c++),r,a);else if("object"===l)throw r=""+t,Error(v(31,"[object Object]"===r?"object with keys {"+Object.keys(t).join(", ")+"}":r,""));return u}(e,"",t,n)}function N(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function M(e,t){e.func.call(e.context,t,e.count++)}function I(e,t,n){var r=e.result,a=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?L(e,r,n,(function(e){return e})):null!=e&&(P(e)&&(e=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,a+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(O,"$&/")+"/")+n)),r.push(e))}function L(e,t,n,r,a){var o="";null!=n&&(o=(""+n).replace(O,"$&/")+"/"),j(e,I,t=z(t,o,r,a)),R(t)}var D={current:null};function F(){var e=D.current;if(null===e)throw Error(v(321));return e}var U={ReactCurrentDispatcher:D,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:E,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return L(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;j(e,M,t=z(null,null,t,n)),R(t)},count:function(e){return j(e,(function(){return null}),null)},toArray:function(e){var t=[];return L(e,t,null,(function(e){return e})),t},only:function(e){if(!P(e))throw Error(v(143));return e}},t.Component=y,t.Fragment=l,t.Profiler=c,t.PureComponent=w,t.StrictMode=u,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=U,t.cloneElement=function(e,t,n){if(null===e||void 0===e)throw Error(v(267,e));var a=r({},e.props),i=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=E.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)S.call(t,s)&&!T.hasOwnProperty(s)&&(a[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)a.children=n;else if(1<s){c=Array(s);for(var d=0;d<s;d++)c[d]=arguments[d+2];a.children=c}return{$$typeof:o,type:e.type,key:i,ref:l,props:a,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:d,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=C,t.createFactory=function(e){var t=C.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:f,render:e}},t.isValidElement=P,t.lazy=function(e){return{$$typeof:g,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return F().useCallback(e,t)},t.useContext=function(e,t){return F().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return F().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return F().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return F().useLayoutEffect(e,t)},t.useMemo=function(e,t){return F().useMemo(e,t)},t.useReducer=function(e,t,n){return F().useReducer(e,t,n)},t.useRef=function(e){return F().useRef(e)},t.useState=function(e){return F().useState(e)},t.version="16.13.1"},,function(e,t,n){"use strict";var r=n(0),a=n(30),o=n(53);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(i(227));function l(e,t,n,r,a,o,i,l,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(s){this.onError(s)}}var u=!1,c=null,s=!1,d=null,f={onError:function(e){u=!0,c=e}};function p(e,t,n,r,a,o,i,s,d){u=!1,c=null,l.apply(f,arguments)}var m=null,g=null,h=null;function v(e,t,n){var r=e.type||"unknown-event";e.currentTarget=h(n),function(e,t,n,r,a,o,l,f,m){if(p.apply(this,arguments),u){if(!u)throw Error(i(198));var g=c;u=!1,c=null,s||(s=!0,d=g)}}(r,t,void 0,e),e.currentTarget=null}var _=null,b={};function y(){if(_)for(var e in b){var t=b[e],n=_.indexOf(e);if(!(-1<n))throw Error(i(96,e));if(!w[n]){if(!t.extractEvents)throw Error(i(97,e));for(var r in w[n]=t,n=t.eventTypes){var a=void 0,o=n[r],l=t,u=r;if(x.hasOwnProperty(u))throw Error(i(99,u));x[u]=o;var c=o.phasedRegistrationNames;if(c){for(a in c)c.hasOwnProperty(a)&&k(c[a],l,u);a=!0}else o.registrationName?(k(o.registrationName,l,u),a=!0):a=!1;if(!a)throw Error(i(98,r,e))}}}}function k(e,t,n){if(E[e])throw Error(i(100,e));E[e]=t,S[e]=t.eventTypes[n].dependencies}var w=[],x={},E={},S={};function T(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!b.hasOwnProperty(t)||b[t]!==r){if(b[t])throw Error(i(102,t));b[t]=r,n=!0}}n&&y()}var C=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),P=null,O=null,A=null;function z(e){if(e=g(e)){if("function"!==typeof P)throw Error(i(280));var t=e.stateNode;t&&(t=m(t),P(e.stateNode,e.type,t))}}function R(e){O?A?A.push(e):A=[e]:O=e}function j(){if(O){var e=O,t=A;if(A=O=null,z(e),t)for(e=0;e<t.length;e++)z(t[e])}}function N(e,t){return e(t)}function M(e,t,n,r,a){return e(t,n,r,a)}function I(){}var L=N,D=!1,F=!1;function U(){null===O&&null===A||(I(),j())}function V(e,t,n){if(F)return e(t,n);F=!0;try{return L(e,t,n)}finally{F=!1,U()}}var $=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,q=Object.prototype.hasOwnProperty,W={},H={};function G(e,t,n,r,a,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o}var B={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){B[e]=new G(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];B[t]=new G(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){B[e]=new G(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){B[e]=new G(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){B[e]=new G(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){B[e]=new G(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){B[e]=new G(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){B[e]=new G(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){B[e]=new G(e,5,!1,e.toLowerCase(),null,!1)}));var Q=/[\-:]([a-z])/g;function K(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(Q,K);B[t]=new G(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(Q,K);B[t]=new G(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(Q,K);B[t]=new G(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){B[e]=new G(e,1,!1,e.toLowerCase(),null,!1)})),B.xlinkHref=new G("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){B[e]=new G(e,1,!1,e.toLowerCase(),null,!0)}));var Z=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function Y(e,t,n,r){var a=B.hasOwnProperty(t)?B[t]:null;(null!==a?0===a.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null===t||"undefined"===typeof t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!q.call(H,e)||!q.call(W,e)&&($.test(e)?H[e]=!0:(W[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}Z.hasOwnProperty("ReactCurrentDispatcher")||(Z.ReactCurrentDispatcher={current:null}),Z.hasOwnProperty("ReactCurrentBatchConfig")||(Z.ReactCurrentBatchConfig={suspense:null});var X=/^(.*)[\\\/]/,J="function"===typeof Symbol&&Symbol.for,ee=J?Symbol.for("react.element"):60103,te=J?Symbol.for("react.portal"):60106,ne=J?Symbol.for("react.fragment"):60107,re=J?Symbol.for("react.strict_mode"):60108,ae=J?Symbol.for("react.profiler"):60114,oe=J?Symbol.for("react.provider"):60109,ie=J?Symbol.for("react.context"):60110,le=J?Symbol.for("react.concurrent_mode"):60111,ue=J?Symbol.for("react.forward_ref"):60112,ce=J?Symbol.for("react.suspense"):60113,se=J?Symbol.for("react.suspense_list"):60120,de=J?Symbol.for("react.memo"):60115,fe=J?Symbol.for("react.lazy"):60116,pe=J?Symbol.for("react.block"):60121,me="function"===typeof Symbol&&Symbol.iterator;function ge(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=me&&e[me]||e["@@iterator"])?e:null}function he(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case ne:return"Fragment";case te:return"Portal";case ae:return"Profiler";case re:return"StrictMode";case ce:return"Suspense";case se:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case ie:return"Context.Consumer";case oe:return"Context.Provider";case ue:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case de:return he(e.type);case pe:return he(e.render);case fe:if(e=1===e._status?e._result:null)return he(e)}return null}function ve(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,a=e._debugSource,o=he(e.type);n=null,r&&(n=he(r.type)),r=o,o="",a?o=" (at "+a.fileName.replace(X,"")+":"+a.lineNumber+")":n&&(o=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+o}t+=n,e=e.return}while(e);return t}function _e(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function ye(e){e._valueTracker||(e._valueTracker=function(e){var t=be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var a=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function ke(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=be(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function we(e,t){var n=t.checked;return a({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function xe(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=_e(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Ee(e,t){null!=(t=t.checked)&&Y(e,"checked",t,!1)}function Se(e,t){Ee(e,t);var n=_e(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Ce(e,t.type,n):t.hasOwnProperty("defaultValue")&&Ce(e,t.type,_e(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Te(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Ce(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Pe(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Oe(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+_e(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function Ae(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ze(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(i(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(i(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:_e(n)}}function Re(e,t){var n=_e(t.value),r=_e(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function je(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var Ne="http://www.w3.org/1999/xhtml",Me="http://www.w3.org/2000/svg";function Ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Le(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Ie(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var De,Fe=function(e){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,a){MSApp.execUnsafeLocalFunction((function(){return e(t,n)}))}:e}((function(e,t){if(e.namespaceURI!==Me||"innerHTML"in e)e.innerHTML=t;else{for((De=De||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=De.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function Ue(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function Ve(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var $e={animationend:Ve("Animation","AnimationEnd"),animationiteration:Ve("Animation","AnimationIteration"),animationstart:Ve("Animation","AnimationStart"),transitionend:Ve("Transition","TransitionEnd")},qe={},We={};function He(e){if(qe[e])return qe[e];if(!$e[e])return e;var t,n=$e[e];for(t in n)if(n.hasOwnProperty(t)&&t in We)return qe[e]=n[t];return e}C&&(We=document.createElement("div").style,"AnimationEvent"in window||(delete $e.animationend.animation,delete $e.animationiteration.animation,delete $e.animationstart.animation),"TransitionEvent"in window||delete $e.transitionend.transition);var Ge=He("animationend"),Be=He("animationiteration"),Qe=He("animationstart"),Ke=He("transitionend"),Ze="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ye=new("function"===typeof WeakMap?WeakMap:Map);function Xe(e){var t=Ye.get(e);return void 0===t&&(t=new Map,Ye.set(e,t)),t}function Je(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function et(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function tt(e){if(Je(e)!==e)throw Error(i(188))}function nt(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Je(e)))throw Error(i(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(r=a.return)){n=r;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===n)return tt(a),e;if(o===r)return tt(a),t;o=o.sibling}throw Error(i(188))}if(n.return!==r.return)n=a,r=o;else{for(var l=!1,u=a.child;u;){if(u===n){l=!0,n=a,r=o;break}if(u===r){l=!0,r=a,n=o;break}u=u.sibling}if(!l){for(u=o.child;u;){if(u===n){l=!0,n=o,r=a;break}if(u===r){l=!0,r=o,n=a;break}u=u.sibling}if(!l)throw Error(i(189))}}if(n.alternate!==r)throw Error(i(190))}if(3!==n.tag)throw Error(i(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function rt(e,t){if(null==t)throw Error(i(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function at(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var ot=null;function it(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)v(e,t[r],n[r]);else t&&v(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function lt(e){if(null!==e&&(ot=rt(ot,e)),e=ot,ot=null,e){if(at(e,it),ot)throw Error(i(95));if(s)throw e=d,s=!1,d=null,e}}function ut(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ct(e){if(!C)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"===typeof t[e]),t}var st=[];function dt(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>st.length&&st.push(e)}function ft(e,t,n,r){if(st.length){var a=st.pop();return a.topLevelType=e,a.eventSystemFlags=r,a.nativeEvent=t,a.targetInst=n,a}return{topLevelType:e,eventSystemFlags:r,nativeEvent:t,targetInst:n,ancestors:[]}}function pt(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=Cn(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var a=ut(e.nativeEvent);r=e.topLevelType;var o=e.nativeEvent,i=e.eventSystemFlags;0===n&&(i|=64);for(var l=null,u=0;u<w.length;u++){var c=w[u];c&&(c=c.extractEvents(r,t,o,a,i))&&(l=rt(l,c))}lt(l)}}function mt(e,t,n){if(!n.has(e)){switch(e){case"scroll":Qt(t,"scroll",!0);break;case"focus":case"blur":Qt(t,"focus",!0),Qt(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":ct(e)&&Qt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Ze.indexOf(e)&&Bt(e,t)}n.set(e,null)}}var gt,ht,vt,_t=!1,bt=[],yt=null,kt=null,wt=null,xt=new Map,Et=new Map,St=[],Tt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Ct="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function Pt(e,t,n,r,a){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:a,container:r}}function Ot(e,t){switch(e){case"focus":case"blur":yt=null;break;case"dragenter":case"dragleave":kt=null;break;case"mouseover":case"mouseout":wt=null;break;case"pointerover":case"pointerout":xt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Et.delete(t.pointerId)}}function At(e,t,n,r,a,o){return null===e||e.nativeEvent!==o?(e=Pt(t,n,r,a,o),null!==t&&(null!==(t=Pn(t))&&ht(t)),e):(e.eventSystemFlags|=r,e)}function zt(e){var t=Cn(e.target);if(null!==t){var n=Je(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=et(n)))return e.blockedOn=t,void o.unstable_runWithPriority(e.priority,(function(){vt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Rt(e){if(null!==e.blockedOn)return!1;var t=Xt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=Pn(t);return null!==n&&ht(n),e.blockedOn=t,!1}return!0}function jt(e,t,n){Rt(e)&&n.delete(t)}function Nt(){for(_t=!1;0<bt.length;){var e=bt[0];if(null!==e.blockedOn){null!==(e=Pn(e.blockedOn))&&gt(e);break}var t=Xt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:bt.shift()}null!==yt&&Rt(yt)&&(yt=null),null!==kt&&Rt(kt)&&(kt=null),null!==wt&&Rt(wt)&&(wt=null),xt.forEach(jt),Et.forEach(jt)}function Mt(e,t){e.blockedOn===t&&(e.blockedOn=null,_t||(_t=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,Nt)))}function It(e){function t(t){return Mt(t,e)}if(0<bt.length){Mt(bt[0],e);for(var n=1;n<bt.length;n++){var r=bt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==yt&&Mt(yt,e),null!==kt&&Mt(kt,e),null!==wt&&Mt(wt,e),xt.forEach(t),Et.forEach(t),n=0;n<St.length;n++)(r=St[n]).blockedOn===e&&(r.blockedOn=null);for(;0<St.length&&null===(n=St[0]).blockedOn;)zt(n),null===n.blockedOn&&St.shift()}var Lt={},Dt=new Map,Ft=new Map,Ut=["abort","abort",Ge,"animationEnd",Be,"animationIteration",Qe,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ke,"transitionEnd","waiting","waiting"];function Vt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],a=e[n+1],o="on"+(a[0].toUpperCase()+a.slice(1));o={phasedRegistrationNames:{bubbled:o,captured:o+"Capture"},dependencies:[r],eventPriority:t},Ft.set(r,t),Dt.set(r,o),Lt[a]=o}}Vt("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Vt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Vt(Ut,2);for(var $t="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),qt=0;qt<$t.length;qt++)Ft.set($t[qt],0);var Wt=o.unstable_UserBlockingPriority,Ht=o.unstable_runWithPriority,Gt=!0;function Bt(e,t){Qt(t,e,!1)}function Qt(e,t,n){var r=Ft.get(t);switch(void 0===r?2:r){case 0:r=Kt.bind(null,t,1,e);break;case 1:r=Zt.bind(null,t,1,e);break;default:r=Yt.bind(null,t,1,e)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function Kt(e,t,n,r){D||I();var a=Yt,o=D;D=!0;try{M(a,e,t,n,r)}finally{(D=o)||U()}}function Zt(e,t,n,r){Ht(Wt,Yt.bind(null,e,t,n,r))}function Yt(e,t,n,r){if(Gt)if(0<bt.length&&-1<Tt.indexOf(e))e=Pt(null,e,t,n,r),bt.push(e);else{var a=Xt(e,t,n,r);if(null===a)Ot(e,r);else if(-1<Tt.indexOf(e))e=Pt(a,e,t,n,r),bt.push(e);else if(!function(e,t,n,r,a){switch(t){case"focus":return yt=At(yt,e,t,n,r,a),!0;case"dragenter":return kt=At(kt,e,t,n,r,a),!0;case"mouseover":return wt=At(wt,e,t,n,r,a),!0;case"pointerover":var o=a.pointerId;return xt.set(o,At(xt.get(o)||null,e,t,n,r,a)),!0;case"gotpointercapture":return o=a.pointerId,Et.set(o,At(Et.get(o)||null,e,t,n,r,a)),!0}return!1}(a,e,t,n,r)){Ot(e,r),e=ft(e,r,null,t);try{V(pt,e)}finally{dt(e)}}}}function Xt(e,t,n,r){if(null!==(n=Cn(n=ut(r)))){var a=Je(n);if(null===a)n=null;else{var o=a.tag;if(13===o){if(null!==(n=et(a)))return n;n=null}else if(3===o){if(a.stateNode.hydrate)return 3===a.tag?a.stateNode.containerInfo:null;n=null}else a!==n&&(n=null)}}e=ft(e,r,n,t);try{V(pt,e)}finally{dt(e)}return null}var Jt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},en=["Webkit","ms","Moz","O"];function tn(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||Jt.hasOwnProperty(e)&&Jt[e]?(""+t).trim():t+"px"}function nn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=tn(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(Jt).forEach((function(e){en.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Jt[t]=Jt[e]}))}));var rn=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function an(e,t){if(t){if(rn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(i(62,""))}}function on(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ln=Ne;function un(e,t){var n=Xe(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=S[t];for(var r=0;r<t.length;r++)mt(t[r],e,n)}function cn(){}function sn(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function dn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function fn(e,t){var n,r=dn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=dn(r)}}function pn(){for(var e=window,t=sn();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(r){n=!1}if(!n)break;t=sn((e=t.contentWindow).document)}return t}function mn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var gn=null,hn=null;function vn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function _n(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var bn="function"===typeof setTimeout?setTimeout:void 0,yn="function"===typeof clearTimeout?clearTimeout:void 0;function kn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function wn(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var xn=Math.random().toString(36).slice(2),En="__reactInternalInstance$"+xn,Sn="__reactEventHandlers$"+xn,Tn="__reactContainere$"+xn;function Cn(e){var t=e[En];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Tn]||n[En]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=wn(e);null!==e;){if(n=e[En])return n;e=wn(e)}return t}n=(e=n).parentNode}return null}function Pn(e){return!(e=e[En]||e[Tn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function On(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function An(e){return e[Sn]||null}function zn(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Rn(e,t){var n=e.stateNode;if(!n)return null;var r=m(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(i(231,t,typeof n));return n}function jn(e,t,n){(t=Rn(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function Nn(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=zn(t);for(t=n.length;0<t--;)jn(n[t],"captured",e);for(t=0;t<n.length;t++)jn(n[t],"bubbled",e)}}function Mn(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=Rn(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function In(e){e&&e.dispatchConfig.registrationName&&Mn(e._targetInst,null,e)}function Ln(e){at(e,Nn)}var Dn=null,Fn=null,Un=null;function Vn(){if(Un)return Un;var e,t,n=Fn,r=n.length,a="value"in Dn?Dn.value:Dn.textContent,o=a.length;for(e=0;e<r&&n[e]===a[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===a[o-t];t++);return Un=a.slice(e,1<t?1-t:void 0)}function $n(){return!0}function qn(){return!1}function Wn(e,t,n,r){for(var a in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(a)&&((t=e[a])?this[a]=t(n):"target"===a?this.target=r:this[a]=n[a]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?$n:qn,this.isPropagationStopped=qn,this}function Hn(e,t,n,r){if(this.eventPool.length){var a=this.eventPool.pop();return this.call(a,e,t,n,r),a}return new this(e,t,n,r)}function Gn(e){if(!(e instanceof this))throw Error(i(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Bn(e){e.eventPool=[],e.getPooled=Hn,e.release=Gn}a(Wn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=$n)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=$n)},persist:function(){this.isPersistent=$n},isPersistent:qn,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=qn,this._dispatchInstances=this._dispatchListeners=null}}),Wn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Wn.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var o=new t;return a(o,n.prototype),n.prototype=o,n.prototype.constructor=n,n.Interface=a({},r.Interface,e),n.extend=r.extend,Bn(n),n},Bn(Wn);var Qn=Wn.extend({data:null}),Kn=Wn.extend({data:null}),Zn=[9,13,27,32],Yn=C&&"CompositionEvent"in window,Xn=null;C&&"documentMode"in document&&(Xn=document.documentMode);var Jn=C&&"TextEvent"in window&&!Xn,er=C&&(!Yn||Xn&&8<Xn&&11>=Xn),tr=String.fromCharCode(32),nr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},rr=!1;function ar(e,t){switch(e){case"keyup":return-1!==Zn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function or(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var ir=!1;var lr={eventTypes:nr,extractEvents:function(e,t,n,r){var a;if(Yn)e:{switch(e){case"compositionstart":var o=nr.compositionStart;break e;case"compositionend":o=nr.compositionEnd;break e;case"compositionupdate":o=nr.compositionUpdate;break e}o=void 0}else ir?ar(e,n)&&(o=nr.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=nr.compositionStart);return o?(er&&"ko"!==n.locale&&(ir||o!==nr.compositionStart?o===nr.compositionEnd&&ir&&(a=Vn()):(Fn="value"in(Dn=r)?Dn.value:Dn.textContent,ir=!0)),o=Qn.getPooled(o,t,n,r),a?o.data=a:null!==(a=or(n))&&(o.data=a),Ln(o),a=o):a=null,(e=Jn?function(e,t){switch(e){case"compositionend":return or(t);case"keypress":return 32!==t.which?null:(rr=!0,tr);case"textInput":return(e=t.data)===tr&&rr?null:e;default:return null}}(e,n):function(e,t){if(ir)return"compositionend"===e||!Yn&&ar(e,t)?(e=Vn(),Un=Fn=Dn=null,ir=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return er&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=Kn.getPooled(nr.beforeInput,t,n,r)).data=e,Ln(t)):t=null,null===a?t:null===t?a:[a,t]}},ur={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function cr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!ur[e.type]:"textarea"===t}var sr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function dr(e,t,n){return(e=Wn.getPooled(sr.change,e,t,n)).type="change",R(n),Ln(e),e}var fr=null,pr=null;function mr(e){lt(e)}function gr(e){if(ke(On(e)))return e}function hr(e,t){if("change"===e)return t}var vr=!1;function _r(){fr&&(fr.detachEvent("onpropertychange",br),pr=fr=null)}function br(e){if("value"===e.propertyName&&gr(pr))if(e=dr(pr,e,ut(e)),D)lt(e);else{D=!0;try{N(mr,e)}finally{D=!1,U()}}}function yr(e,t,n){"focus"===e?(_r(),pr=n,(fr=t).attachEvent("onpropertychange",br)):"blur"===e&&_r()}function kr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return gr(pr)}function wr(e,t){if("click"===e)return gr(t)}function xr(e,t){if("input"===e||"change"===e)return gr(t)}C&&(vr=ct("input")&&(!document.documentMode||9<document.documentMode));var Er={eventTypes:sr,_isInputEventSupported:vr,extractEvents:function(e,t,n,r){var a=t?On(t):window,o=a.nodeName&&a.nodeName.toLowerCase();if("select"===o||"input"===o&&"file"===a.type)var i=hr;else if(cr(a))if(vr)i=xr;else{i=kr;var l=yr}else(o=a.nodeName)&&"input"===o.toLowerCase()&&("checkbox"===a.type||"radio"===a.type)&&(i=wr);if(i&&(i=i(e,t)))return dr(i,n,r);l&&l(e,a,t),"blur"===e&&(e=a._wrapperState)&&e.controlled&&"number"===a.type&&Ce(a,"number",a.value)}},Sr=Wn.extend({view:null,detail:null}),Tr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Cr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Tr[e])&&!!t[e]}function Pr(){return Cr}var Or=0,Ar=0,zr=!1,Rr=!1,jr=Sr.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Pr,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Or;return Or=e.screenX,zr?"mousemove"===e.type?e.screenX-t:0:(zr=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Ar;return Ar=e.screenY,Rr?"mousemove"===e.type?e.screenY-t:0:(Rr=!0,0)}}),Nr=jr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Mr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Ir={eventTypes:Mr,extractEvents:function(e,t,n,r,a){var o="mouseover"===e||"pointerover"===e,i="mouseout"===e||"pointerout"===e;if(o&&0===(32&a)&&(n.relatedTarget||n.fromElement)||!i&&!o)return null;(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,i)?(i=t,null!==(t=(t=n.relatedTarget||n.toElement)?Cn(t):null)&&(t!==Je(t)||5!==t.tag&&6!==t.tag)&&(t=null)):i=null;if(i===t)return null;if("mouseout"===e||"mouseover"===e)var l=jr,u=Mr.mouseLeave,c=Mr.mouseEnter,s="mouse";else"pointerout"!==e&&"pointerover"!==e||(l=Nr,u=Mr.pointerLeave,c=Mr.pointerEnter,s="pointer");if(e=null==i?o:On(i),o=null==t?o:On(t),(u=l.getPooled(u,i,n,r)).type=s+"leave",u.target=e,u.relatedTarget=o,(n=l.getPooled(c,t,n,r)).type=s+"enter",n.target=o,n.relatedTarget=e,s=t,(r=i)&&s)e:{for(c=s,i=0,e=l=r;e;e=zn(e))i++;for(e=0,t=c;t;t=zn(t))e++;for(;0<i-e;)l=zn(l),i--;for(;0<e-i;)c=zn(c),e--;for(;i--;){if(l===c||l===c.alternate)break e;l=zn(l),c=zn(c)}l=null}else l=null;for(c=l,l=[];r&&r!==c&&(null===(i=r.alternate)||i!==c);)l.push(r),r=zn(r);for(r=[];s&&s!==c&&(null===(i=s.alternate)||i!==c);)r.push(s),s=zn(s);for(s=0;s<l.length;s++)Mn(l[s],"bubbled",u);for(s=r.length;0<s--;)Mn(r[s],"captured",n);return 0===(64&a)?[u]:[u,n]}};var Lr="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t},Dr=Object.prototype.hasOwnProperty;function Fr(e,t){if(Lr(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Dr.call(t,n[r])||!Lr(e[n[r]],t[n[r]]))return!1;return!0}var Ur=C&&"documentMode"in document&&11>=document.documentMode,Vr={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},$r=null,qr=null,Wr=null,Hr=!1;function Gr(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Hr||null==$r||$r!==sn(n)?null:("selectionStart"in(n=$r)&&mn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Wr&&Fr(Wr,n)?null:(Wr=n,(e=Wn.getPooled(Vr.select,qr,e,t)).type="select",e.target=$r,Ln(e),e))}var Br={eventTypes:Vr,extractEvents:function(e,t,n,r,a,o){if(!(o=!(a=o||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{a=Xe(a),o=S.onSelect;for(var i=0;i<o.length;i++)if(!a.has(o[i])){a=!1;break e}a=!0}o=!a}if(o)return null;switch(a=t?On(t):window,e){case"focus":(cr(a)||"true"===a.contentEditable)&&($r=a,qr=t,Wr=null);break;case"blur":Wr=qr=$r=null;break;case"mousedown":Hr=!0;break;case"contextmenu":case"mouseup":case"dragend":return Hr=!1,Gr(n,r);case"selectionchange":if(Ur)break;case"keydown":case"keyup":return Gr(n,r)}return null}},Qr=Wn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Kr=Wn.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Zr=Sr.extend({relatedTarget:null});function Yr(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Xr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Jr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},ea=Sr.extend({key:function(e){if(e.key){var t=Xr[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Yr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Jr[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Pr,charCode:function(e){return"keypress"===e.type?Yr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Yr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),ta=jr.extend({dataTransfer:null}),na=Sr.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Pr}),ra=Wn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),aa=jr.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),oa={eventTypes:Lt,extractEvents:function(e,t,n,r){var a=Dt.get(e);if(!a)return null;switch(e){case"keypress":if(0===Yr(n))return null;case"keydown":case"keyup":e=ea;break;case"blur":case"focus":e=Zr;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=jr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=ta;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=na;break;case Ge:case Be:case Qe:e=Qr;break;case Ke:e=ra;break;case"scroll":e=Sr;break;case"wheel":e=aa;break;case"copy":case"cut":case"paste":e=Kr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Nr;break;default:e=Wn}return Ln(t=e.getPooled(a,t,n,r)),t}};if(_)throw Error(i(101));_=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),y(),m=An,g=Pn,h=On,T({SimpleEventPlugin:oa,EnterLeaveEventPlugin:Ir,ChangeEventPlugin:Er,SelectEventPlugin:Br,BeforeInputEventPlugin:lr});var ia=[],la=-1;function ua(e){0>la||(e.current=ia[la],ia[la]=null,la--)}function ca(e,t){la++,ia[la]=e.current,e.current=t}var sa={},da={current:sa},fa={current:!1},pa=sa;function ma(e,t){var n=e.type.contextTypes;if(!n)return sa;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in n)o[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function ga(e){return null!==(e=e.childContextTypes)&&void 0!==e}function ha(){ua(fa),ua(da)}function va(e,t,n){if(da.current!==sa)throw Error(i(168));ca(da,t),ca(fa,n)}function _a(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!==typeof r.getChildContext)return n;for(var o in r=r.getChildContext())if(!(o in e))throw Error(i(108,he(t)||"Unknown",o));return a({},n,{},r)}function ba(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||sa,pa=da.current,ca(da,e),ca(fa,fa.current),!0}function ya(e,t,n){var r=e.stateNode;if(!r)throw Error(i(169));n?(e=_a(e,t,pa),r.__reactInternalMemoizedMergedChildContext=e,ua(fa),ua(da),ca(da,e)):ua(fa),ca(fa,n)}var ka=o.unstable_runWithPriority,wa=o.unstable_scheduleCallback,xa=o.unstable_cancelCallback,Ea=o.unstable_requestPaint,Sa=o.unstable_now,Ta=o.unstable_getCurrentPriorityLevel,Ca=o.unstable_ImmediatePriority,Pa=o.unstable_UserBlockingPriority,Oa=o.unstable_NormalPriority,Aa=o.unstable_LowPriority,za=o.unstable_IdlePriority,Ra={},ja=o.unstable_shouldYield,Na=void 0!==Ea?Ea:function(){},Ma=null,Ia=null,La=!1,Da=Sa(),Fa=1e4>Da?Sa:function(){return Sa()-Da};function Ua(){switch(Ta()){case Ca:return 99;case Pa:return 98;case Oa:return 97;case Aa:return 96;case za:return 95;default:throw Error(i(332))}}function Va(e){switch(e){case 99:return Ca;case 98:return Pa;case 97:return Oa;case 96:return Aa;case 95:return za;default:throw Error(i(332))}}function $a(e,t){return e=Va(e),ka(e,t)}function qa(e,t,n){return e=Va(e),wa(e,t,n)}function Wa(e){return null===Ma?(Ma=[e],Ia=wa(Ca,Ga)):Ma.push(e),Ra}function Ha(){if(null!==Ia){var e=Ia;Ia=null,xa(e)}Ga()}function Ga(){if(!La&&null!==Ma){La=!0;var e=0;try{var t=Ma;$a(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Ma=null}catch(n){throw null!==Ma&&(Ma=Ma.slice(e+1)),wa(Ca,Ha),n}finally{La=!1}}}function Ba(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function Qa(e,t){if(e&&e.defaultProps)for(var n in t=a({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var Ka={current:null},Za=null,Ya=null,Xa=null;function Ja(){Xa=Ya=Za=null}function eo(e){var t=Ka.current;ua(Ka),e.type._context._currentValue=t}function to(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function no(e,t){Za=e,Xa=Ya=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Ai=!0),e.firstContext=null)}function ro(e,t){if(Xa!==e&&!1!==t&&0!==t)if("number"===typeof t&&1073741823!==t||(Xa=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Ya){if(null===Za)throw Error(i(308));Ya=t,Za.dependencies={expirationTime:0,firstContext:t,responders:null}}else Ya=Ya.next=t;return e._currentValue}var ao=!1;function oo(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function io(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function lo(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function uo(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function co(e,t){var n=e.alternate;null!==n&&io(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function so(e,t,n,r){var o=e.updateQueue;ao=!1;var i=o.baseQueue,l=o.shared.pending;if(null!==l){if(null!==i){var u=i.next;i.next=l.next,l.next=u}i=l,o.shared.pending=null,null!==(u=e.alternate)&&(null!==(u=u.updateQueue)&&(u.baseQueue=l))}if(null!==i){u=i.next;var c=o.baseState,s=0,d=null,f=null,p=null;if(null!==u)for(var m=u;;){if((l=m.expirationTime)<r){var g={expirationTime:m.expirationTime,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null};null===p?(f=p=g,d=c):p=p.next=g,l>s&&(s=l)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null}),ou(l,m.suspenseConfig);e:{var h=e,v=m;switch(l=t,g=n,v.tag){case 1:if("function"===typeof(h=v.payload)){c=h.call(g,c,l);break e}c=h;break e;case 3:h.effectTag=-4097&h.effectTag|64;case 0:if(null===(l="function"===typeof(h=v.payload)?h.call(g,c,l):h)||void 0===l)break e;c=a({},c,l);break e;case 2:ao=!0}}null!==m.callback&&(e.effectTag|=32,null===(l=o.effects)?o.effects=[m]:l.push(m))}if(null===(m=m.next)||m===u){if(null===(l=o.shared.pending))break;m=i.next=l.next,l.next=u,o.baseQueue=i=l,o.shared.pending=null}}null===p?d=c:p.next=f,o.baseState=d,o.baseQueue=p,iu(s),e.expirationTime=s,e.memoizedState=c}}function fo(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=a,a=n,"function"!==typeof r)throw Error(i(191,r));r.call(a)}}}var po=Z.ReactCurrentBatchConfig,mo=(new r.Component).refs;function go(e,t,n,r){n=null===(n=n(r,t=e.memoizedState))||void 0===n?t:a({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var ho={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Je(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Gl(),a=po.suspense;(a=lo(r=Bl(r,e,a),a)).payload=t,void 0!==n&&null!==n&&(a.callback=n),uo(e,a),Ql(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Gl(),a=po.suspense;(a=lo(r=Bl(r,e,a),a)).tag=1,a.payload=t,void 0!==n&&null!==n&&(a.callback=n),uo(e,a),Ql(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Gl(),r=po.suspense;(r=lo(n=Bl(n,e,r),r)).tag=2,void 0!==t&&null!==t&&(r.callback=t),uo(e,r),Ql(e,n)}};function vo(e,t,n,r,a,o,i){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,i):!t.prototype||!t.prototype.isPureReactComponent||(!Fr(n,r)||!Fr(a,o))}function _o(e,t,n){var r=!1,a=sa,o=t.contextType;return"object"===typeof o&&null!==o?o=ro(o):(a=ga(t)?pa:da.current,o=(r=null!==(r=t.contextTypes)&&void 0!==r)?ma(e,a):sa),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ho,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=o),t}function bo(e,t,n,r){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ho.enqueueReplaceState(t,t.state,null)}function yo(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=mo,oo(e);var o=t.contextType;"object"===typeof o&&null!==o?a.context=ro(o):(o=ga(t)?pa:da.current,a.context=ma(e,o)),so(e,n,a,r),a.state=e.memoizedState,"function"===typeof(o=t.getDerivedStateFromProps)&&(go(e,t,o,n),a.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof a.getSnapshotBeforeUpdate||"function"!==typeof a.UNSAFE_componentWillMount&&"function"!==typeof a.componentWillMount||(t=a.state,"function"===typeof a.componentWillMount&&a.componentWillMount(),"function"===typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&ho.enqueueReplaceState(a,a.state,null),so(e,n,a,r),a.state=e.memoizedState),"function"===typeof a.componentDidMount&&(e.effectTag|=4)}var ko=Array.isArray;function wo(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(i(309));var r=n.stateNode}if(!r)throw Error(i(147,e));var a=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===a?t.ref:((t=function(e){var t=r.refs;t===mo&&(t=r.refs={}),null===e?delete t[a]:t[a]=e})._stringRef=a,t)}if("string"!==typeof e)throw Error(i(284));if(!n._owner)throw Error(i(290,e))}return e}function xo(e,t){if("textarea"!==e.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function Eo(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Tu(e,t)).index=0,e.sibling=null,e}function o(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Ou(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=a(t,n.props)).ref=wo(e,t,n),r.return=e,r):((r=Cu(n.type,n.key,n.props,null,e.mode,r)).ref=wo(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Au(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function d(e,t,n,r,o){return null===t||7!==t.tag?((t=Pu(n,e.mode,r,o)).return=e,t):((t=a(t,n)).return=e,t)}function f(e,t,n){if("string"===typeof t||"number"===typeof t)return(t=Ou(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case ee:return(n=Cu(t.type,t.key,t.props,null,e.mode,n)).ref=wo(e,null,t),n.return=e,n;case te:return(t=Au(t,e.mode,n)).return=e,t}if(ko(t)||ge(t))return(t=Pu(t,e.mode,n,null)).return=e,t;xo(e,t)}return null}function p(e,t,n,r){var a=null!==t?t.key:null;if("string"===typeof n||"number"===typeof n)return null!==a?null:u(e,t,""+n,r);if("object"===typeof n&&null!==n){switch(n.$$typeof){case ee:return n.key===a?n.type===ne?d(e,t,n.props.children,r,a):c(e,t,n,r):null;case te:return n.key===a?s(e,t,n,r):null}if(ko(n)||ge(n))return null!==a?null:d(e,t,n,r,null);xo(e,n)}return null}function m(e,t,n,r,a){if("string"===typeof r||"number"===typeof r)return u(t,e=e.get(n)||null,""+r,a);if("object"===typeof r&&null!==r){switch(r.$$typeof){case ee:return e=e.get(null===r.key?n:r.key)||null,r.type===ne?d(t,e,r.props.children,a,r.key):c(t,e,r,a);case te:return s(t,e=e.get(null===r.key?n:r.key)||null,r,a)}if(ko(r)||ge(r))return d(t,e=e.get(n)||null,r,a,null);xo(t,r)}return null}function g(a,i,l,u){for(var c=null,s=null,d=i,g=i=0,h=null;null!==d&&g<l.length;g++){d.index>g?(h=d,d=null):h=d.sibling;var v=p(a,d,l[g],u);if(null===v){null===d&&(d=h);break}e&&d&&null===v.alternate&&t(a,d),i=o(v,i,g),null===s?c=v:s.sibling=v,s=v,d=h}if(g===l.length)return n(a,d),c;if(null===d){for(;g<l.length;g++)null!==(d=f(a,l[g],u))&&(i=o(d,i,g),null===s?c=d:s.sibling=d,s=d);return c}for(d=r(a,d);g<l.length;g++)null!==(h=m(d,a,g,l[g],u))&&(e&&null!==h.alternate&&d.delete(null===h.key?g:h.key),i=o(h,i,g),null===s?c=h:s.sibling=h,s=h);return e&&d.forEach((function(e){return t(a,e)})),c}function h(a,l,u,c){var s=ge(u);if("function"!==typeof s)throw Error(i(150));if(null==(u=s.call(u)))throw Error(i(151));for(var d=s=null,g=l,h=l=0,v=null,_=u.next();null!==g&&!_.done;h++,_=u.next()){g.index>h?(v=g,g=null):v=g.sibling;var b=p(a,g,_.value,c);if(null===b){null===g&&(g=v);break}e&&g&&null===b.alternate&&t(a,g),l=o(b,l,h),null===d?s=b:d.sibling=b,d=b,g=v}if(_.done)return n(a,g),s;if(null===g){for(;!_.done;h++,_=u.next())null!==(_=f(a,_.value,c))&&(l=o(_,l,h),null===d?s=_:d.sibling=_,d=_);return s}for(g=r(a,g);!_.done;h++,_=u.next())null!==(_=m(g,a,h,_.value,c))&&(e&&null!==_.alternate&&g.delete(null===_.key?h:_.key),l=o(_,l,h),null===d?s=_:d.sibling=_,d=_);return e&&g.forEach((function(e){return t(a,e)})),s}return function(e,r,o,u){var c="object"===typeof o&&null!==o&&o.type===ne&&null===o.key;c&&(o=o.props.children);var s="object"===typeof o&&null!==o;if(s)switch(o.$$typeof){case ee:e:{for(s=o.key,c=r;null!==c;){if(c.key===s){switch(c.tag){case 7:if(o.type===ne){n(e,c.sibling),(r=a(c,o.props.children)).return=e,e=r;break e}break;default:if(c.elementType===o.type){n(e,c.sibling),(r=a(c,o.props)).ref=wo(e,c,o),r.return=e,e=r;break e}}n(e,c);break}t(e,c),c=c.sibling}o.type===ne?((r=Pu(o.props.children,e.mode,u,o.key)).return=e,e=r):((u=Cu(o.type,o.key,o.props,null,e.mode,u)).ref=wo(e,r,o),u.return=e,e=u)}return l(e);case te:e:{for(c=o.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===o.containerInfo&&r.stateNode.implementation===o.implementation){n(e,r.sibling),(r=a(r,o.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Au(o,e.mode,u)).return=e,e=r}return l(e)}if("string"===typeof o||"number"===typeof o)return o=""+o,null!==r&&6===r.tag?(n(e,r.sibling),(r=a(r,o)).return=e,e=r):(n(e,r),(r=Ou(o,e.mode,u)).return=e,e=r),l(e);if(ko(o))return g(e,r,o,u);if(ge(o))return h(e,r,o,u);if(s&&xo(e,o),"undefined"===typeof o&&!c)switch(e.tag){case 1:case 0:throw e=e.type,Error(i(152,e.displayName||e.name||"Component"))}return n(e,r)}}var So=Eo(!0),To=Eo(!1),Co={},Po={current:Co},Oo={current:Co},Ao={current:Co};function zo(e){if(e===Co)throw Error(i(174));return e}function Ro(e,t){switch(ca(Ao,t),ca(Oo,e),ca(Po,Co),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Le(null,"");break;default:t=Le(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}ua(Po),ca(Po,t)}function jo(){ua(Po),ua(Oo),ua(Ao)}function No(e){zo(Ao.current);var t=zo(Po.current),n=Le(t,e.type);t!==n&&(ca(Oo,e),ca(Po,n))}function Mo(e){Oo.current===e&&(ua(Po),ua(Oo))}var Io={current:0};function Lo(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Do(e,t){return{responder:e,props:t}}var Fo=Z.ReactCurrentDispatcher,Uo=Z.ReactCurrentBatchConfig,Vo=0,$o=null,qo=null,Wo=null,Ho=!1;function Go(){throw Error(i(321))}function Bo(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Lr(e[n],t[n]))return!1;return!0}function Qo(e,t,n,r,a,o){if(Vo=o,$o=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,Fo.current=null===e||null===e.memoizedState?vi:_i,e=n(r,a),t.expirationTime===Vo){o=0;do{if(t.expirationTime=0,!(25>o))throw Error(i(301));o+=1,Wo=qo=null,t.updateQueue=null,Fo.current=bi,e=n(r,a)}while(t.expirationTime===Vo)}if(Fo.current=hi,t=null!==qo&&null!==qo.next,Vo=0,Wo=qo=$o=null,Ho=!1,t)throw Error(i(300));return e}function Ko(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Wo?$o.memoizedState=Wo=e:Wo=Wo.next=e,Wo}function Zo(){if(null===qo){var e=$o.alternate;e=null!==e?e.memoizedState:null}else e=qo.next;var t=null===Wo?$o.memoizedState:Wo.next;if(null!==t)Wo=t,qo=e;else{if(null===e)throw Error(i(310));e={memoizedState:(qo=e).memoizedState,baseState:qo.baseState,baseQueue:qo.baseQueue,queue:qo.queue,next:null},null===Wo?$o.memoizedState=Wo=e:Wo=Wo.next=e}return Wo}function Yo(e,t){return"function"===typeof t?t(e):t}function Xo(e){var t=Zo(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=qo,a=r.baseQueue,o=n.pending;if(null!==o){if(null!==a){var l=a.next;a.next=o.next,o.next=l}r.baseQueue=a=o,n.pending=null}if(null!==a){a=a.next,r=r.baseState;var u=l=o=null,c=a;do{var s=c.expirationTime;if(s<Vo){var d={expirationTime:c.expirationTime,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(l=u=d,o=r):u=u.next=d,s>$o.expirationTime&&($o.expirationTime=s,iu(s))}else null!==u&&(u=u.next={expirationTime:1073741823,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),ou(s,c.suspenseConfig),r=c.eagerReducer===e?c.eagerState:e(r,c.action);c=c.next}while(null!==c&&c!==a);null===u?o=r:u.next=l,Lr(r,t.memoizedState)||(Ai=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function Jo(e){var t=Zo(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,o=t.memoizedState;if(null!==a){n.pending=null;var l=a=a.next;do{o=e(o,l.action),l=l.next}while(l!==a);Lr(o,t.memoizedState)||(Ai=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function ei(e){var t=Ko();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:Yo,lastRenderedState:e}).dispatch=gi.bind(null,$o,e),[t.memoizedState,e]}function ti(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=$o.updateQueue)?(t={lastEffect:null},$o.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function ni(){return Zo().memoizedState}function ri(e,t,n,r){var a=Ko();$o.effectTag|=e,a.memoizedState=ti(1|t,n,void 0,void 0===r?null:r)}function ai(e,t,n,r){var a=Zo();r=void 0===r?null:r;var o=void 0;if(null!==qo){var i=qo.memoizedState;if(o=i.destroy,null!==r&&Bo(r,i.deps))return void ti(t,n,o,r)}$o.effectTag|=e,a.memoizedState=ti(1|t,n,o,r)}function oi(e,t){return ri(516,4,e,t)}function ii(e,t){return ai(516,4,e,t)}function li(e,t){return ai(4,2,e,t)}function ui(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function ci(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,ai(4,2,ui.bind(null,t,e),n)}function si(){}function di(e,t){return Ko().memoizedState=[e,void 0===t?null:t],e}function fi(e,t){var n=Zo();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Bo(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function pi(e,t){var n=Zo();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Bo(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function mi(e,t,n){var r=Ua();$a(98>r?98:r,(function(){e(!0)})),$a(97<r?97:r,(function(){var r=Uo.suspense;Uo.suspense=void 0===t?null:t;try{e(!1),n()}finally{Uo.suspense=r}}))}function gi(e,t,n){var r=Gl(),a=po.suspense;a={expirationTime:r=Bl(r,e,a),suspenseConfig:a,action:n,eagerReducer:null,eagerState:null,next:null};var o=t.pending;if(null===o?a.next=a:(a.next=o.next,o.next=a),t.pending=a,o=e.alternate,e===$o||null!==o&&o===$o)Ho=!0,a.expirationTime=Vo,$o.expirationTime=Vo;else{if(0===e.expirationTime&&(null===o||0===o.expirationTime)&&null!==(o=t.lastRenderedReducer))try{var i=t.lastRenderedState,l=o(i,n);if(a.eagerReducer=o,a.eagerState=l,Lr(l,i))return}catch(u){}Ql(e,r)}}var hi={readContext:ro,useCallback:Go,useContext:Go,useEffect:Go,useImperativeHandle:Go,useLayoutEffect:Go,useMemo:Go,useReducer:Go,useRef:Go,useState:Go,useDebugValue:Go,useResponder:Go,useDeferredValue:Go,useTransition:Go},vi={readContext:ro,useCallback:di,useContext:ro,useEffect:oi,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,ri(4,2,ui.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ri(4,2,e,t)},useMemo:function(e,t){var n=Ko();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Ko();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=gi.bind(null,$o,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Ko().memoizedState=e},useState:ei,useDebugValue:si,useResponder:Do,useDeferredValue:function(e,t){var n=ei(e),r=n[0],a=n[1];return oi((function(){var n=Uo.suspense;Uo.suspense=void 0===t?null:t;try{a(e)}finally{Uo.suspense=n}}),[e,t]),r},useTransition:function(e){var t=ei(!1),n=t[0];return t=t[1],[di(mi.bind(null,t,e),[t,e]),n]}},_i={readContext:ro,useCallback:fi,useContext:ro,useEffect:ii,useImperativeHandle:ci,useLayoutEffect:li,useMemo:pi,useReducer:Xo,useRef:ni,useState:function(){return Xo(Yo)},useDebugValue:si,useResponder:Do,useDeferredValue:function(e,t){var n=Xo(Yo),r=n[0],a=n[1];return ii((function(){var n=Uo.suspense;Uo.suspense=void 0===t?null:t;try{a(e)}finally{Uo.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Xo(Yo),n=t[0];return t=t[1],[fi(mi.bind(null,t,e),[t,e]),n]}},bi={readContext:ro,useCallback:fi,useContext:ro,useEffect:ii,useImperativeHandle:ci,useLayoutEffect:li,useMemo:pi,useReducer:Jo,useRef:ni,useState:function(){return Jo(Yo)},useDebugValue:si,useResponder:Do,useDeferredValue:function(e,t){var n=Jo(Yo),r=n[0],a=n[1];return ii((function(){var n=Uo.suspense;Uo.suspense=void 0===t?null:t;try{a(e)}finally{Uo.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Jo(Yo),n=t[0];return t=t[1],[fi(mi.bind(null,t,e),[t,e]),n]}},yi=null,ki=null,wi=!1;function xi(e,t){var n=Eu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Ei(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Si(e){if(wi){var t=ki;if(t){var n=t;if(!Ei(e,t)){if(!(t=kn(n.nextSibling))||!Ei(e,t))return e.effectTag=-1025&e.effectTag|2,wi=!1,void(yi=e);xi(yi,n)}yi=e,ki=kn(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,wi=!1,yi=e}}function Ti(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;yi=e}function Ci(e){if(e!==yi)return!1;if(!wi)return Ti(e),wi=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!_n(t,e.memoizedProps))for(t=ki;t;)xi(e,t),t=kn(t.nextSibling);if(Ti(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ki=kn(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ki=null}}else ki=yi?kn(e.stateNode.nextSibling):null;return!0}function Pi(){ki=yi=null,wi=!1}var Oi=Z.ReactCurrentOwner,Ai=!1;function zi(e,t,n,r){t.child=null===e?To(t,null,n,r):So(t,e.child,n,r)}function Ri(e,t,n,r,a){n=n.render;var o=t.ref;return no(t,a),r=Qo(e,t,n,r,o,a),null===e||Ai?(t.effectTag|=1,zi(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=a&&(e.expirationTime=0),Qi(e,t,a))}function ji(e,t,n,r,a,o){if(null===e){var i=n.type;return"function"!==typeof i||Su(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Cu(n.type,null,r,null,t.mode,o)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Ni(e,t,i,r,a,o))}return i=e.child,a<o&&(a=i.memoizedProps,(n=null!==(n=n.compare)?n:Fr)(a,r)&&e.ref===t.ref)?Qi(e,t,o):(t.effectTag|=1,(e=Tu(i,r)).ref=t.ref,e.return=t,t.child=e)}function Ni(e,t,n,r,a,o){return null!==e&&Fr(e.memoizedProps,r)&&e.ref===t.ref&&(Ai=!1,a<o)?(t.expirationTime=e.expirationTime,Qi(e,t,o)):Ii(e,t,n,r,o)}function Mi(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Ii(e,t,n,r,a){var o=ga(n)?pa:da.current;return o=ma(t,o),no(t,a),n=Qo(e,t,n,r,o,a),null===e||Ai?(t.effectTag|=1,zi(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=a&&(e.expirationTime=0),Qi(e,t,a))}function Li(e,t,n,r,a){if(ga(n)){var o=!0;ba(t)}else o=!1;if(no(t,a),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),_o(t,n,r),yo(t,n,r,a),r=!0;else if(null===e){var i=t.stateNode,l=t.memoizedProps;i.props=l;var u=i.context,c=n.contextType;"object"===typeof c&&null!==c?c=ro(c):c=ma(t,c=ga(n)?pa:da.current);var s=n.getDerivedStateFromProps,d="function"===typeof s||"function"===typeof i.getSnapshotBeforeUpdate;d||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(l!==r||u!==c)&&bo(t,i,r,c),ao=!1;var f=t.memoizedState;i.state=f,so(t,r,i,a),u=t.memoizedState,l!==r||f!==u||fa.current||ao?("function"===typeof s&&(go(t,n,s,r),u=t.memoizedState),(l=ao||vo(t,n,l,r,f,u,c))?(d||"function"!==typeof i.UNSAFE_componentWillMount&&"function"!==typeof i.componentWillMount||("function"===typeof i.componentWillMount&&i.componentWillMount(),"function"===typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"===typeof i.componentDidMount&&(t.effectTag|=4)):("function"===typeof i.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),i.props=r,i.state=u,i.context=c,r=l):("function"===typeof i.componentDidMount&&(t.effectTag|=4),r=!1)}else i=t.stateNode,io(e,t),l=t.memoizedProps,i.props=t.type===t.elementType?l:Qa(t.type,l),u=i.context,"object"===typeof(c=n.contextType)&&null!==c?c=ro(c):c=ma(t,c=ga(n)?pa:da.current),(d="function"===typeof(s=n.getDerivedStateFromProps)||"function"===typeof i.getSnapshotBeforeUpdate)||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(l!==r||u!==c)&&bo(t,i,r,c),ao=!1,u=t.memoizedState,i.state=u,so(t,r,i,a),f=t.memoizedState,l!==r||u!==f||fa.current||ao?("function"===typeof s&&(go(t,n,s,r),f=t.memoizedState),(s=ao||vo(t,n,l,r,u,f,c))?(d||"function"!==typeof i.UNSAFE_componentWillUpdate&&"function"!==typeof i.componentWillUpdate||("function"===typeof i.componentWillUpdate&&i.componentWillUpdate(r,f,c),"function"===typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,f,c)),"function"===typeof i.componentDidUpdate&&(t.effectTag|=4),"function"===typeof i.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!==typeof i.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!==typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=f),i.props=r,i.state=f,i.context=c,r=s):("function"!==typeof i.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!==typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return Di(e,t,n,r,o,a)}function Di(e,t,n,r,a,o){Mi(e,t);var i=0!==(64&t.effectTag);if(!r&&!i)return a&&ya(t,n,!1),Qi(e,t,o);r=t.stateNode,Oi.current=t;var l=i&&"function"!==typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&i?(t.child=So(t,e.child,null,o),t.child=So(t,null,l,o)):zi(e,t,l,o),t.memoizedState=r.state,a&&ya(t,n,!0),t.child}function Fi(e){var t=e.stateNode;t.pendingContext?va(0,t.pendingContext,t.pendingContext!==t.context):t.context&&va(0,t.context,!1),Ro(e,t.containerInfo)}var Ui,Vi,$i,qi={dehydrated:null,retryTime:0};function Wi(e,t,n){var r,a=t.mode,o=t.pendingProps,i=Io.current,l=!1;if((r=0!==(64&t.effectTag))||(r=0!==(2&i)&&(null===e||null!==e.memoizedState)),r?(l=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(i|=1),ca(Io,1&i),null===e){if(void 0!==o.fallback&&Si(t),l){if(l=o.fallback,(o=Pu(null,a,0,null)).return=t,0===(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,o.child=e;null!==e;)e.return=o,e=e.sibling;return(n=Pu(l,a,n,null)).return=t,o.sibling=n,t.memoizedState=qi,t.child=o,n}return a=o.children,t.memoizedState=null,t.child=To(t,null,a,n)}if(null!==e.memoizedState){if(a=(e=e.child).sibling,l){if(o=o.fallback,(n=Tu(e,e.pendingProps)).return=t,0===(2&t.mode)&&(l=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=l;null!==l;)l.return=n,l=l.sibling;return(a=Tu(a,o)).return=t,n.sibling=a,n.childExpirationTime=0,t.memoizedState=qi,t.child=n,a}return n=So(t,e.child,o.children,n),t.memoizedState=null,t.child=n}if(e=e.child,l){if(l=o.fallback,(o=Pu(null,a,0,null)).return=t,o.child=e,null!==e&&(e.return=o),0===(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,o.child=e;null!==e;)e.return=o,e=e.sibling;return(n=Pu(l,a,n,null)).return=t,o.sibling=n,n.effectTag|=2,o.childExpirationTime=0,t.memoizedState=qi,t.child=o,n}return t.memoizedState=null,t.child=So(t,e,o.children,n)}function Hi(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),to(e.return,t)}function Gi(e,t,n,r,a,o){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:a,lastEffect:o}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=n,i.tailExpiration=0,i.tailMode=a,i.lastEffect=o)}function Bi(e,t,n){var r=t.pendingProps,a=r.revealOrder,o=r.tail;if(zi(e,t,r.children,n),0!==(2&(r=Io.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!==(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Hi(e,n);else if(19===e.tag)Hi(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ca(Io,r),0===(2&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===Lo(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Gi(t,!1,a,n,o,t.lastEffect);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===Lo(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Gi(t,!0,n,null,o,t.lastEffect);break;case"together":Gi(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Qi(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&iu(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(n=Tu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Tu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Ki(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Zi(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return ga(t.type)&&ha(),null;case 3:return jo(),ua(fa),ua(da),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!Ci(t)||(t.effectTag|=4),null;case 5:Mo(t),n=zo(Ao.current);var o=t.type;if(null!==e&&null!=t.stateNode)Vi(e,t,o,r,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!r){if(null===t.stateNode)throw Error(i(166));return null}if(e=zo(Po.current),Ci(t)){r=t.stateNode,o=t.type;var l=t.memoizedProps;switch(r[En]=t,r[Sn]=l,o){case"iframe":case"object":case"embed":Bt("load",r);break;case"video":case"audio":for(e=0;e<Ze.length;e++)Bt(Ze[e],r);break;case"source":Bt("error",r);break;case"img":case"image":case"link":Bt("error",r),Bt("load",r);break;case"form":Bt("reset",r),Bt("submit",r);break;case"details":Bt("toggle",r);break;case"input":xe(r,l),Bt("invalid",r),un(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!l.multiple},Bt("invalid",r),un(n,"onChange");break;case"textarea":ze(r,l),Bt("invalid",r),un(n,"onChange")}for(var u in an(o,l),e=null,l)if(l.hasOwnProperty(u)){var c=l[u];"children"===u?"string"===typeof c?r.textContent!==c&&(e=["children",c]):"number"===typeof c&&r.textContent!==""+c&&(e=["children",""+c]):E.hasOwnProperty(u)&&null!=c&&un(n,u)}switch(o){case"input":ye(r),Te(r,l,!0);break;case"textarea":ye(r),je(r);break;case"select":case"option":break;default:"function"===typeof l.onClick&&(r.onclick=cn)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(u=9===n.nodeType?n:n.ownerDocument,e===ln&&(e=Ie(o)),e===ln?"script"===o?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof r.is?e=u.createElement(o,{is:r.is}):(e=u.createElement(o),"select"===o&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,o),e[En]=t,e[Sn]=r,Ui(e,t),t.stateNode=e,u=on(o,r),o){case"iframe":case"object":case"embed":Bt("load",e),c=r;break;case"video":case"audio":for(c=0;c<Ze.length;c++)Bt(Ze[c],e);c=r;break;case"source":Bt("error",e),c=r;break;case"img":case"image":case"link":Bt("error",e),Bt("load",e),c=r;break;case"form":Bt("reset",e),Bt("submit",e),c=r;break;case"details":Bt("toggle",e),c=r;break;case"input":xe(e,r),c=we(e,r),Bt("invalid",e),un(n,"onChange");break;case"option":c=Pe(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},c=a({},r,{value:void 0}),Bt("invalid",e),un(n,"onChange");break;case"textarea":ze(e,r),c=Ae(e,r),Bt("invalid",e),un(n,"onChange");break;default:c=r}an(o,c);var s=c;for(l in s)if(s.hasOwnProperty(l)){var d=s[l];"style"===l?nn(e,d):"dangerouslySetInnerHTML"===l?null!=(d=d?d.__html:void 0)&&Fe(e,d):"children"===l?"string"===typeof d?("textarea"!==o||""!==d)&&Ue(e,d):"number"===typeof d&&Ue(e,""+d):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(E.hasOwnProperty(l)?null!=d&&un(n,l):null!=d&&Y(e,l,d,u))}switch(o){case"input":ye(e),Te(e,r,!1);break;case"textarea":ye(e),je(e);break;case"option":null!=r.value&&e.setAttribute("value",""+_e(r.value));break;case"select":e.multiple=!!r.multiple,null!=(n=r.value)?Oe(e,!!r.multiple,n,!1):null!=r.defaultValue&&Oe(e,!!r.multiple,r.defaultValue,!0);break;default:"function"===typeof c.onClick&&(e.onclick=cn)}vn(o,r)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)$i(0,t,e.memoizedProps,r);else{if("string"!==typeof r&&null===t.stateNode)throw Error(i(166));n=zo(Ao.current),zo(Po.current),Ci(t)?(n=t.stateNode,r=t.memoizedProps,n[En]=t,n.nodeValue!==r&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[En]=t,t.stateNode=n)}return null;case 13:return ua(Io),r=t.memoizedState,0!==(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==r,r=!1,null===e?void 0!==t.memoizedProps.fallback&&Ci(t):(r=null!==(o=e.memoizedState),n||null===o||null!==(o=e.child.sibling)&&(null!==(l=t.firstEffect)?(t.firstEffect=o,o.nextEffect=l):(t.firstEffect=t.lastEffect=o,o.nextEffect=null),o.effectTag=8)),n&&!r&&0!==(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!==(1&Io.current)?Cl===yl&&(Cl=kl):(Cl!==yl&&Cl!==kl||(Cl=wl),0!==Rl&&null!==El&&(ju(El,Tl),Nu(El,Rl)))),(n||r)&&(t.effectTag|=4),null);case 4:return jo(),null;case 10:return eo(t),null;case 17:return ga(t.type)&&ha(),null;case 19:if(ua(Io),null===(r=t.memoizedState))return null;if(o=0!==(64&t.effectTag),null===(l=r.rendering)){if(o)Ki(r,!1);else if(Cl!==yl||null!==e&&0!==(64&e.effectTag))for(l=t.child;null!==l;){if(null!==(e=Lo(l))){for(t.effectTag|=64,Ki(r,!1),null!==(o=e.updateQueue)&&(t.updateQueue=o,t.effectTag|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=t.child;null!==r;)l=n,(o=r).effectTag&=2,o.nextEffect=null,o.firstEffect=null,o.lastEffect=null,null===(e=o.alternate)?(o.childExpirationTime=0,o.expirationTime=l,o.child=null,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null):(o.childExpirationTime=e.childExpirationTime,o.expirationTime=e.expirationTime,o.child=e.child,o.memoizedProps=e.memoizedProps,o.memoizedState=e.memoizedState,o.updateQueue=e.updateQueue,l=e.dependencies,o.dependencies=null===l?null:{expirationTime:l.expirationTime,firstContext:l.firstContext,responders:l.responders}),r=r.sibling;return ca(Io,1&Io.current|2),t.child}l=l.sibling}}else{if(!o)if(null!==(e=Lo(l))){if(t.effectTag|=64,o=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),Ki(r,!0),null===r.tail&&"hidden"===r.tailMode&&!l.alternate)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Fa()-r.renderingStartTime>r.tailExpiration&&1<n&&(t.effectTag|=64,o=!0,Ki(r,!1),t.expirationTime=t.childExpirationTime=n-1);r.isBackwards?(l.sibling=t.child,t.child=l):(null!==(n=r.last)?n.sibling=l:t.child=l,r.last=l)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=Fa()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Fa(),n.sibling=null,t=Io.current,ca(Io,o?1&t|2:1&t),n):null}throw Error(i(156,t.tag))}function Yi(e){switch(e.tag){case 1:ga(e.type)&&ha();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(jo(),ua(fa),ua(da),0!==(64&(t=e.effectTag)))throw Error(i(285));return e.effectTag=-4097&t|64,e;case 5:return Mo(e),null;case 13:return ua(Io),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return ua(Io),null;case 4:return jo(),null;case 10:return eo(e),null;default:return null}}function Xi(e,t){return{value:e,source:t,stack:ve(t)}}Ui=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Vi=function(e,t,n,r,o){var i=e.memoizedProps;if(i!==r){var l,u,c=t.stateNode;switch(zo(Po.current),e=null,n){case"input":i=we(c,i),r=we(c,r),e=[];break;case"option":i=Pe(c,i),r=Pe(c,r),e=[];break;case"select":i=a({},i,{value:void 0}),r=a({},r,{value:void 0}),e=[];break;case"textarea":i=Ae(c,i),r=Ae(c,r),e=[];break;default:"function"!==typeof i.onClick&&"function"===typeof r.onClick&&(c.onclick=cn)}for(l in an(n,r),n=null,i)if(!r.hasOwnProperty(l)&&i.hasOwnProperty(l)&&null!=i[l])if("style"===l)for(u in c=i[l])c.hasOwnProperty(u)&&(n||(n={}),n[u]="");else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(E.hasOwnProperty(l)?e||(e=[]):(e=e||[]).push(l,null));for(l in r){var s=r[l];if(c=null!=i?i[l]:void 0,r.hasOwnProperty(l)&&s!==c&&(null!=s||null!=c))if("style"===l)if(c){for(u in c)!c.hasOwnProperty(u)||s&&s.hasOwnProperty(u)||(n||(n={}),n[u]="");for(u in s)s.hasOwnProperty(u)&&c[u]!==s[u]&&(n||(n={}),n[u]=s[u])}else n||(e||(e=[]),e.push(l,n)),n=s;else"dangerouslySetInnerHTML"===l?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(l,s)):"children"===l?c===s||"string"!==typeof s&&"number"!==typeof s||(e=e||[]).push(l,""+s):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(E.hasOwnProperty(l)?(null!=s&&un(o,l),e||c===s||(e=[])):(e=e||[]).push(l,s))}n&&(e=e||[]).push("style",n),o=e,(t.updateQueue=o)&&(t.effectTag|=4)}},$i=function(e,t,n,r){n!==r&&(t.effectTag|=4)};var Ji="function"===typeof WeakSet?WeakSet:Set;function el(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ve(n)),null!==n&&he(n.type),t=t.value,null!==e&&1===e.tag&&he(e.type);try{console.error(t)}catch(a){setTimeout((function(){throw a}))}}function tl(e){var t=e.ref;if(null!==t)if("function"===typeof t)try{t(null)}catch(n){_u(e,n)}else t.current=null}function nl(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Qa(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(i(163))}function rl(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==t)}}function al(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function ol(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void al(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var r=n.elementType===n.type?t.memoizedProps:Qa(n.type,t.memoizedProps);e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&fo(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}fo(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&vn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&It(n)))));case 19:case 17:case 20:case 21:return}throw Error(i(163))}function il(e,t,n){switch("function"===typeof wu&&wu(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;$a(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var a=t;try{n()}catch(o){_u(a,o)}}e=e.next}while(e!==r)}))}break;case 1:tl(t),"function"===typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(n){_u(e,n)}}(t,n);break;case 5:tl(t);break;case 4:sl(e,t,n)}}function ll(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&ll(t)}function ul(e){return 5===e.tag||3===e.tag||4===e.tag}function cl(e){e:{for(var t=e.return;null!==t;){if(ul(t)){var n=t;break e}t=t.return}throw Error(i(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(i(161))}16&n.effectTag&&(Ue(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||ul(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}r?function e(t,n,r){var a=t.tag,o=5===a||6===a;if(o)t=o?t.stateNode:t.stateNode.instance,n?8===r.nodeType?r.parentNode.insertBefore(t,n):r.insertBefore(t,n):(8===r.nodeType?(n=r.parentNode).insertBefore(t,r):(n=r).appendChild(t),null!==(r=r._reactRootContainer)&&void 0!==r||null!==n.onclick||(n.onclick=cn));else if(4!==a&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t):function e(t,n,r){var a=t.tag,o=5===a||6===a;if(o)t=o?t.stateNode:t.stateNode.instance,n?r.insertBefore(t,n):r.appendChild(t);else if(4!==a&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t)}function sl(e,t,n){for(var r,a,o=t,l=!1;;){if(!l){l=o.return;e:for(;;){if(null===l)throw Error(i(160));switch(r=l.stateNode,l.tag){case 5:a=!1;break e;case 3:case 4:r=r.containerInfo,a=!0;break e}l=l.return}l=!0}if(5===o.tag||6===o.tag){e:for(var u=e,c=o,s=n,d=c;;)if(il(u,d,s),null!==d.child&&4!==d.tag)d.child.return=d,d=d.child;else{if(d===c)break e;for(;null===d.sibling;){if(null===d.return||d.return===c)break e;d=d.return}d.sibling.return=d.return,d=d.sibling}a?(u=r,c=o.stateNode,8===u.nodeType?u.parentNode.removeChild(c):u.removeChild(c)):r.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){r=o.stateNode.containerInfo,a=!0,o.child.return=o,o=o.child;continue}}else if(il(e,o,n),null!==o.child){o.child.return=o,o=o.child;continue}if(o===t)break;for(;null===o.sibling;){if(null===o.return||o.return===t)return;4===(o=o.return).tag&&(l=!1)}o.sibling.return=o.return,o=o.sibling}}function dl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void rl(3,t);case 1:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,a=null!==e?e.memoizedProps:r;e=t.type;var o=t.updateQueue;if(t.updateQueue=null,null!==o){for(n[Sn]=r,"input"===e&&"radio"===r.type&&null!=r.name&&Ee(n,r),on(e,a),t=on(e,r),a=0;a<o.length;a+=2){var l=o[a],u=o[a+1];"style"===l?nn(n,u):"dangerouslySetInnerHTML"===l?Fe(n,u):"children"===l?Ue(n,u):Y(n,l,u,t)}switch(e){case"input":Se(n,r);break;case"textarea":Re(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Oe(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Oe(n,!!r.multiple,r.defaultValue,!0):Oe(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(i(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,It(t.containerInfo)));case 12:return;case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,Nl=Fa()),null!==n)e:for(e=n;;){if(5===e.tag)o=e.stateNode,r?"function"===typeof(o=o.style).setProperty?o.setProperty("display","none","important"):o.display="none":(o=e.stateNode,a=void 0!==(a=e.memoizedProps.style)&&null!==a&&a.hasOwnProperty("display")?a.display:null,o.style.display=tn("display",a));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(o=e.child.sibling).return=e,e=o;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void fl(t);case 19:return void fl(t);case 17:return}throw Error(i(163))}function fl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Ji),t.forEach((function(t){var r=yu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var pl="function"===typeof WeakMap?WeakMap:Map;function ml(e,t,n){(n=lo(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Il||(Il=!0,Ll=r),el(e,t)},n}function gl(e,t,n){(n=lo(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"===typeof r){var a=t.value;n.payload=function(){return el(e,t),r(a)}}var o=e.stateNode;return null!==o&&"function"===typeof o.componentDidCatch&&(n.callback=function(){"function"!==typeof r&&(null===Dl?Dl=new Set([this]):Dl.add(this),el(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var hl,vl=Math.ceil,_l=Z.ReactCurrentDispatcher,bl=Z.ReactCurrentOwner,yl=0,kl=3,wl=4,xl=0,El=null,Sl=null,Tl=0,Cl=yl,Pl=null,Ol=1073741823,Al=1073741823,zl=null,Rl=0,jl=!1,Nl=0,Ml=null,Il=!1,Ll=null,Dl=null,Fl=!1,Ul=null,Vl=90,$l=null,ql=0,Wl=null,Hl=0;function Gl(){return 0!==(48&xl)?1073741821-(Fa()/10|0):0!==Hl?Hl:Hl=1073741821-(Fa()/10|0)}function Bl(e,t,n){if(0===(2&(t=t.mode)))return 1073741823;var r=Ua();if(0===(4&t))return 99===r?1073741823:1073741822;if(0!==(16&xl))return Tl;if(null!==n)e=Ba(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=Ba(e,150,100);break;case 97:case 96:e=Ba(e,5e3,250);break;case 95:e=2;break;default:throw Error(i(326))}return null!==El&&e===Tl&&--e,e}function Ql(e,t){if(50<ql)throw ql=0,Wl=null,Error(i(185));if(null!==(e=Kl(e,t))){var n=Ua();1073741823===t?0!==(8&xl)&&0===(48&xl)?Jl(e):(Yl(e),0===xl&&Ha()):Yl(e),0===(4&xl)||98!==n&&99!==n||(null===$l?$l=new Map([[e,t]]):(void 0===(n=$l.get(e))||n>t)&&$l.set(e,t))}}function Kl(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,a=null;if(null===r&&3===e.tag)a=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){a=r.stateNode;break}r=r.return}return null!==a&&(El===a&&(iu(t),Cl===wl&&ju(a,Tl)),Nu(a,t)),a}function Zl(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!Ru(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function Yl(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Wa(Jl.bind(null,e));else{var t=Zl(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=Gl();if(1073741823===t?r=99:1===t||2===t?r=95:r=0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var a=e.callbackPriority;if(e.callbackExpirationTime===t&&a>=r)return;n!==Ra&&xa(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Wa(Jl.bind(null,e)):qa(r,Xl.bind(null,e),{timeout:10*(1073741821-t)-Fa()}),e.callbackNode=t}}}function Xl(e,t){if(Hl=0,t)return Mu(e,t=Gl()),Yl(e),null;var n=Zl(e);if(0!==n){if(t=e.callbackNode,0!==(48&xl))throw Error(i(327));if(gu(),e===El&&n===Tl||nu(e,n),null!==Sl){var r=xl;xl|=16;for(var a=au();;)try{uu();break}catch(u){ru(e,u)}if(Ja(),xl=r,_l.current=a,1===Cl)throw t=Pl,nu(e,n),ju(e,n),Yl(e),t;if(null===Sl)switch(a=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=Cl,El=null,r){case yl:case 1:throw Error(i(345));case 2:Mu(e,2<n?2:n);break;case kl:if(ju(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=du(a)),1073741823===Ol&&10<(a=Nl+500-Fa())){if(jl){var o=e.lastPingedTime;if(0===o||o>=n){e.lastPingedTime=n,nu(e,n);break}}if(0!==(o=Zl(e))&&o!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=bn(fu.bind(null,e),a);break}fu(e);break;case wl:if(ju(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=du(a)),jl&&(0===(a=e.lastPingedTime)||a>=n)){e.lastPingedTime=n,nu(e,n);break}if(0!==(a=Zl(e))&&a!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==Al?r=10*(1073741821-Al)-Fa():1073741823===Ol?r=0:(r=10*(1073741821-Ol)-5e3,0>(r=(a=Fa())-r)&&(r=0),(n=10*(1073741821-n)-a)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*vl(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=bn(fu.bind(null,e),r);break}fu(e);break;case 5:if(1073741823!==Ol&&null!==zl){o=Ol;var l=zl;if(0>=(r=0|l.busyMinDurationMs)?r=0:(a=0|l.busyDelayMs,r=(o=Fa()-(10*(1073741821-o)-(0|l.timeoutMs||5e3)))<=a?0:a+r-o),10<r){ju(e,n),e.timeoutHandle=bn(fu.bind(null,e),r);break}}fu(e);break;default:throw Error(i(329))}if(Yl(e),e.callbackNode===t)return Xl.bind(null,e)}}return null}function Jl(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,0!==(48&xl))throw Error(i(327));if(gu(),e===El&&t===Tl||nu(e,t),null!==Sl){var n=xl;xl|=16;for(var r=au();;)try{lu();break}catch(a){ru(e,a)}if(Ja(),xl=n,_l.current=r,1===Cl)throw n=Pl,nu(e,t),ju(e,t),Yl(e),n;if(null!==Sl)throw Error(i(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,El=null,fu(e),Yl(e)}return null}function eu(e,t){var n=xl;xl|=1;try{return e(t)}finally{0===(xl=n)&&Ha()}}function tu(e,t){var n=xl;xl&=-2,xl|=8;try{return e(t)}finally{0===(xl=n)&&Ha()}}function nu(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,yn(n)),null!==Sl)for(n=Sl.return;null!==n;){var r=n;switch(r.tag){case 1:null!==(r=r.type.childContextTypes)&&void 0!==r&&ha();break;case 3:jo(),ua(fa),ua(da);break;case 5:Mo(r);break;case 4:jo();break;case 13:case 19:ua(Io);break;case 10:eo(r)}n=n.return}El=e,Sl=Tu(e.current,null),Tl=t,Cl=yl,Pl=null,Al=Ol=1073741823,zl=null,Rl=0,jl=!1}function ru(e,t){for(;;){try{if(Ja(),Fo.current=hi,Ho)for(var n=$o.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if(Vo=0,Wo=qo=$o=null,Ho=!1,null===Sl||null===Sl.return)return Cl=1,Pl=t,Sl=null;e:{var a=e,o=Sl.return,i=Sl,l=t;if(t=Tl,i.effectTag|=2048,i.firstEffect=i.lastEffect=null,null!==l&&"object"===typeof l&&"function"===typeof l.then){var u=l;if(0===(2&i.mode)){var c=i.alternate;c?(i.updateQueue=c.updateQueue,i.memoizedState=c.memoizedState,i.expirationTime=c.expirationTime):(i.updateQueue=null,i.memoizedState=null)}var s=0!==(1&Io.current),d=o;do{var f;if(f=13===d.tag){var p=d.memoizedState;if(null!==p)f=null!==p.dehydrated;else{var m=d.memoizedProps;f=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!s)}}if(f){var g=d.updateQueue;if(null===g){var h=new Set;h.add(u),d.updateQueue=h}else g.add(u);if(0===(2&d.mode)){if(d.effectTag|=64,i.effectTag&=-2981,1===i.tag)if(null===i.alternate)i.tag=17;else{var v=lo(1073741823,null);v.tag=2,uo(i,v)}i.expirationTime=1073741823;break e}l=void 0,i=t;var _=a.pingCache;if(null===_?(_=a.pingCache=new pl,l=new Set,_.set(u,l)):void 0===(l=_.get(u))&&(l=new Set,_.set(u,l)),!l.has(i)){l.add(i);var b=bu.bind(null,a,u,i);u.then(b,b)}d.effectTag|=4096,d.expirationTime=t;break e}d=d.return}while(null!==d);l=Error((he(i.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ve(i))}5!==Cl&&(Cl=2),l=Xi(l,i),d=o;do{switch(d.tag){case 3:u=l,d.effectTag|=4096,d.expirationTime=t,co(d,ml(d,u,t));break e;case 1:u=l;var y=d.type,k=d.stateNode;if(0===(64&d.effectTag)&&("function"===typeof y.getDerivedStateFromError||null!==k&&"function"===typeof k.componentDidCatch&&(null===Dl||!Dl.has(k)))){d.effectTag|=4096,d.expirationTime=t,co(d,gl(d,u,t));break e}}d=d.return}while(null!==d)}Sl=su(Sl)}catch(w){t=w;continue}break}}function au(){var e=_l.current;return _l.current=hi,null===e?hi:e}function ou(e,t){e<Ol&&2<e&&(Ol=e),null!==t&&e<Al&&2<e&&(Al=e,zl=t)}function iu(e){e>Rl&&(Rl=e)}function lu(){for(;null!==Sl;)Sl=cu(Sl)}function uu(){for(;null!==Sl&&!ja();)Sl=cu(Sl)}function cu(e){var t=hl(e.alternate,e,Tl);return e.memoizedProps=e.pendingProps,null===t&&(t=su(e)),bl.current=null,t}function su(e){Sl=e;do{var t=Sl.alternate;if(e=Sl.return,0===(2048&Sl.effectTag)){if(t=Zi(t,Sl,Tl),1===Tl||1!==Sl.childExpirationTime){for(var n=0,r=Sl.child;null!==r;){var a=r.expirationTime,o=r.childExpirationTime;a>n&&(n=a),o>n&&(n=o),r=r.sibling}Sl.childExpirationTime=n}if(null!==t)return t;null!==e&&0===(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=Sl.firstEffect),null!==Sl.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=Sl.firstEffect),e.lastEffect=Sl.lastEffect),1<Sl.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=Sl:e.firstEffect=Sl,e.lastEffect=Sl))}else{if(null!==(t=Yi(Sl)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=Sl.sibling))return t;Sl=e}while(null!==Sl);return Cl===yl&&(Cl=5),null}function du(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function fu(e){var t=Ua();return $a(99,pu.bind(null,e,t)),null}function pu(e,t){do{gu()}while(null!==Ul);if(0!==(48&xl))throw Error(i(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(i(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var a=du(n);if(e.firstPendingTime=a,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===El&&(Sl=El=null,Tl=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,a=n.firstEffect):a=n:a=n.firstEffect,null!==a){var o=xl;xl|=32,bl.current=null,gn=Gt;var l=pn();if(mn(l)){if("selectionStart"in l)var u={start:l.selectionStart,end:l.selectionEnd};else e:{var c=(u=(u=l.ownerDocument)&&u.defaultView||window).getSelection&&u.getSelection();if(c&&0!==c.rangeCount){u=c.anchorNode;var s=c.anchorOffset,d=c.focusNode;c=c.focusOffset;try{u.nodeType,d.nodeType}catch(T){u=null;break e}var f=0,p=-1,m=-1,g=0,h=0,v=l,_=null;t:for(;;){for(var b;v!==u||0!==s&&3!==v.nodeType||(p=f+s),v!==d||0!==c&&3!==v.nodeType||(m=f+c),3===v.nodeType&&(f+=v.nodeValue.length),null!==(b=v.firstChild);)_=v,v=b;for(;;){if(v===l)break t;if(_===u&&++g===s&&(p=f),_===d&&++h===c&&(m=f),null!==(b=v.nextSibling))break;_=(v=_).parentNode}v=b}u=-1===p||-1===m?null:{start:p,end:m}}else u=null}u=u||{start:0,end:0}}else u=null;hn={activeElementDetached:null,focusedElem:l,selectionRange:u},Gt=!1,Ml=a;do{try{mu()}catch(T){if(null===Ml)throw Error(i(330));_u(Ml,T),Ml=Ml.nextEffect}}while(null!==Ml);Ml=a;do{try{for(l=e,u=t;null!==Ml;){var y=Ml.effectTag;if(16&y&&Ue(Ml.stateNode,""),128&y){var k=Ml.alternate;if(null!==k){var w=k.ref;null!==w&&("function"===typeof w?w(null):w.current=null)}}switch(1038&y){case 2:cl(Ml),Ml.effectTag&=-3;break;case 6:cl(Ml),Ml.effectTag&=-3,dl(Ml.alternate,Ml);break;case 1024:Ml.effectTag&=-1025;break;case 1028:Ml.effectTag&=-1025,dl(Ml.alternate,Ml);break;case 4:dl(Ml.alternate,Ml);break;case 8:sl(l,s=Ml,u),ll(s)}Ml=Ml.nextEffect}}catch(T){if(null===Ml)throw Error(i(330));_u(Ml,T),Ml=Ml.nextEffect}}while(null!==Ml);if(w=hn,k=pn(),y=w.focusedElem,u=w.selectionRange,k!==y&&y&&y.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(y.ownerDocument.documentElement,y)){null!==u&&mn(y)&&(k=u.start,void 0===(w=u.end)&&(w=k),"selectionStart"in y?(y.selectionStart=k,y.selectionEnd=Math.min(w,y.value.length)):(w=(k=y.ownerDocument||document)&&k.defaultView||window).getSelection&&(w=w.getSelection(),s=y.textContent.length,l=Math.min(u.start,s),u=void 0===u.end?l:Math.min(u.end,s),!w.extend&&l>u&&(s=u,u=l,l=s),s=fn(y,l),d=fn(y,u),s&&d&&(1!==w.rangeCount||w.anchorNode!==s.node||w.anchorOffset!==s.offset||w.focusNode!==d.node||w.focusOffset!==d.offset)&&((k=k.createRange()).setStart(s.node,s.offset),w.removeAllRanges(),l>u?(w.addRange(k),w.extend(d.node,d.offset)):(k.setEnd(d.node,d.offset),w.addRange(k))))),k=[];for(w=y;w=w.parentNode;)1===w.nodeType&&k.push({element:w,left:w.scrollLeft,top:w.scrollTop});for("function"===typeof y.focus&&y.focus(),y=0;y<k.length;y++)(w=k[y]).element.scrollLeft=w.left,w.element.scrollTop=w.top}Gt=!!gn,hn=gn=null,e.current=n,Ml=a;do{try{for(y=e;null!==Ml;){var x=Ml.effectTag;if(36&x&&ol(y,Ml.alternate,Ml),128&x){k=void 0;var E=Ml.ref;if(null!==E){var S=Ml.stateNode;switch(Ml.tag){case 5:k=S;break;default:k=S}"function"===typeof E?E(k):E.current=k}}Ml=Ml.nextEffect}}catch(T){if(null===Ml)throw Error(i(330));_u(Ml,T),Ml=Ml.nextEffect}}while(null!==Ml);Ml=null,Na(),xl=o}else e.current=n;if(Fl)Fl=!1,Ul=e,Vl=t;else for(Ml=a;null!==Ml;)t=Ml.nextEffect,Ml.nextEffect=null,Ml=t;if(0===(t=e.firstPendingTime)&&(Dl=null),1073741823===t?e===Wl?ql++:(ql=0,Wl=e):ql=0,"function"===typeof ku&&ku(n.stateNode,r),Yl(e),Il)throw Il=!1,e=Ll,Ll=null,e;return 0!==(8&xl)||Ha(),null}function mu(){for(;null!==Ml;){var e=Ml.effectTag;0!==(256&e)&&nl(Ml.alternate,Ml),0===(512&e)||Fl||(Fl=!0,qa(97,(function(){return gu(),null}))),Ml=Ml.nextEffect}}function gu(){if(90!==Vl){var e=97<Vl?97:Vl;return Vl=90,$a(e,hu)}}function hu(){if(null===Ul)return!1;var e=Ul;if(Ul=null,0!==(48&xl))throw Error(i(331));var t=xl;for(xl|=32,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!==(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:rl(5,n),al(5,n)}}catch(r){if(null===e)throw Error(i(330));_u(e,r)}n=e.nextEffect,e.nextEffect=null,e=n}return xl=t,Ha(),!0}function vu(e,t,n){uo(e,t=ml(e,t=Xi(n,t),1073741823)),null!==(e=Kl(e,1073741823))&&Yl(e)}function _u(e,t){if(3===e.tag)vu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){vu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"===typeof n.type.getDerivedStateFromError||"function"===typeof r.componentDidCatch&&(null===Dl||!Dl.has(r))){uo(n,e=gl(n,e=Xi(t,e),1073741823)),null!==(n=Kl(n,1073741823))&&Yl(n);break}}n=n.return}}function bu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),El===e&&Tl===n?Cl===wl||Cl===kl&&1073741823===Ol&&Fa()-Nl<500?nu(e,Tl):jl=!0:Ru(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,Yl(e)))}function yu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(t=Bl(t=Gl(),e,null)),null!==(e=Kl(e,t))&&Yl(e)}hl=function(e,t,n){var r=t.expirationTime;if(null!==e){var a=t.pendingProps;if(e.memoizedProps!==a||fa.current)Ai=!0;else{if(r<n){switch(Ai=!1,t.tag){case 3:Fi(t),Pi();break;case 5:if(No(t),4&t.mode&&1!==n&&a.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:ga(t.type)&&ba(t);break;case 4:Ro(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value,a=t.type._context,ca(Ka,a._currentValue),a._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Wi(e,t,n):(ca(Io,1&Io.current),null!==(t=Qi(e,t,n))?t.sibling:null);ca(Io,1&Io.current);break;case 19:if(r=t.childExpirationTime>=n,0!==(64&e.effectTag)){if(r)return Bi(e,t,n);t.effectTag|=64}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null),ca(Io,Io.current),!r)return null}return Qi(e,t,n)}Ai=!1}}else Ai=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,a=ma(t,da.current),no(t,n),a=Qo(null,t,r,e,a,n),t.effectTag|=1,"object"===typeof a&&null!==a&&"function"===typeof a.render&&void 0===a.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,ga(r)){var o=!0;ba(t)}else o=!1;t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,oo(t);var l=r.getDerivedStateFromProps;"function"===typeof l&&go(t,r,l,e),a.updater=ho,t.stateNode=a,a._reactInternalFiber=t,yo(t,r,e,n),t=Di(null,t,r,!0,o,n)}else t.tag=0,zi(null,t,a,n),t=t.child;return t;case 16:e:{if(a=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(a),1!==a._status)throw a._result;switch(a=a._result,t.type=a,o=t.tag=function(e){if("function"===typeof e)return Su(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===ue)return 11;if(e===de)return 14}return 2}(a),e=Qa(a,e),o){case 0:t=Ii(null,t,a,e,n);break e;case 1:t=Li(null,t,a,e,n);break e;case 11:t=Ri(null,t,a,e,n);break e;case 14:t=ji(null,t,a,Qa(a.type,e),r,n);break e}throw Error(i(306,a,""))}return t;case 0:return r=t.type,a=t.pendingProps,Ii(e,t,r,a=t.elementType===r?a:Qa(r,a),n);case 1:return r=t.type,a=t.pendingProps,Li(e,t,r,a=t.elementType===r?a:Qa(r,a),n);case 3:if(Fi(t),r=t.updateQueue,null===e||null===r)throw Error(i(282));if(r=t.pendingProps,a=null!==(a=t.memoizedState)?a.element:null,io(e,t),so(t,r,null,n),(r=t.memoizedState.element)===a)Pi(),t=Qi(e,t,n);else{if((a=t.stateNode.hydrate)&&(ki=kn(t.stateNode.containerInfo.firstChild),yi=t,a=wi=!0),a)for(n=To(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else zi(e,t,r,n),Pi();t=t.child}return t;case 5:return No(t),null===e&&Si(t),r=t.type,a=t.pendingProps,o=null!==e?e.memoizedProps:null,l=a.children,_n(r,a)?l=null:null!==o&&_n(r,o)&&(t.effectTag|=16),Mi(e,t),4&t.mode&&1!==n&&a.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(zi(e,t,l,n),t=t.child),t;case 6:return null===e&&Si(t),null;case 13:return Wi(e,t,n);case 4:return Ro(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=So(t,null,r,n):zi(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,Ri(e,t,r,a=t.elementType===r?a:Qa(r,a),n);case 7:return zi(e,t,t.pendingProps,n),t.child;case 8:case 12:return zi(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,a=t.pendingProps,l=t.memoizedProps,o=a.value;var u=t.type._context;if(ca(Ka,u._currentValue),u._currentValue=o,null!==l)if(u=l.value,0===(o=Lr(u,o)?0:0|("function"===typeof r._calculateChangedBits?r._calculateChangedBits(u,o):1073741823))){if(l.children===a.children&&!fa.current){t=Qi(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){l=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!==(s.observedBits&o)){1===u.tag&&((s=lo(n,null)).tag=2,uo(u,s)),u.expirationTime<n&&(u.expirationTime=n),null!==(s=u.alternate)&&s.expirationTime<n&&(s.expirationTime=n),to(u.return,n),c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}zi(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=(o=t.pendingProps).children,no(t,n),r=r(a=ro(a,o.unstable_observedBits)),t.effectTag|=1,zi(e,t,r,n),t.child;case 14:return o=Qa(a=t.type,t.pendingProps),ji(e,t,a,o=Qa(a.type,o),r,n);case 15:return Ni(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:Qa(r,a),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,ga(r)?(e=!0,ba(t)):e=!1,no(t,n),_o(t,r,a),yo(t,r,a,n),Di(null,t,r,!0,e,n);case 19:return Bi(e,t,n)}throw Error(i(156,t.tag))};var ku=null,wu=null;function xu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Eu(e,t,n,r){return new xu(e,t,n,r)}function Su(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Tu(e,t){var n=e.alternate;return null===n?((n=Eu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Cu(e,t,n,r,a,o){var l=2;if(r=e,"function"===typeof e)Su(e)&&(l=1);else if("string"===typeof e)l=5;else e:switch(e){case ne:return Pu(n.children,a,o,t);case le:l=8,a|=7;break;case re:l=8,a|=1;break;case ae:return(e=Eu(12,n,t,8|a)).elementType=ae,e.type=ae,e.expirationTime=o,e;case ce:return(e=Eu(13,n,t,a)).type=ce,e.elementType=ce,e.expirationTime=o,e;case se:return(e=Eu(19,n,t,a)).elementType=se,e.expirationTime=o,e;default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case oe:l=10;break e;case ie:l=9;break e;case ue:l=11;break e;case de:l=14;break e;case fe:l=16,r=null;break e;case pe:l=22;break e}throw Error(i(130,null==e?e:typeof e,""))}return(t=Eu(l,n,t,a)).elementType=e,t.type=r,t.expirationTime=o,t}function Pu(e,t,n,r){return(e=Eu(7,e,r,t)).expirationTime=n,e}function Ou(e,t,n){return(e=Eu(6,e,null,t)).expirationTime=n,e}function Au(e,t,n){return(t=Eu(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function zu(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Ru(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function ju(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Nu(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function Mu(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Iu(e,t,n,r){var a=t.current,o=Gl(),l=po.suspense;o=Bl(o,a,l);e:if(n){t:{if(Je(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(i(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(ga(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(i(171))}if(1===n.tag){var c=n.type;if(ga(c)){n=_a(n,c,u);break e}}n=u}else n=sa;return null===t.context?t.context=n:t.pendingContext=n,(t=lo(o,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),uo(a,t),Ql(a,o),o}function Lu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Du(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function Fu(e,t){Du(e,t),(e=e.alternate)&&Du(e,t)}function Uu(e,t,n){var r=new zu(e,t,n=null!=n&&!0===n.hydrate),a=Eu(3,null,null,2===t?7:1===t?3:0);r.current=a,a.stateNode=r,oo(a),e[Tn]=r.current,n&&0!==t&&function(e,t){var n=Xe(t);Tt.forEach((function(e){mt(e,t,n)})),Ct.forEach((function(e){mt(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function Vu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function $u(e,t,n,r,a){var o=n._reactRootContainer;if(o){var i=o._internalRoot;if("function"===typeof a){var l=a;a=function(){var e=Lu(i);l.call(e)}}Iu(t,i,e,a)}else{if(o=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Uu(e,0,t?{hydrate:!0}:void 0)}(n,r),i=o._internalRoot,"function"===typeof a){var u=a;a=function(){var e=Lu(i);u.call(e)}}tu((function(){Iu(t,i,e,a)}))}return Lu(i)}function qu(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:te,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Wu(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Vu(t))throw Error(i(200));return qu(e,t,null,n)}Uu.prototype.render=function(e){Iu(e,this._internalRoot,null,null)},Uu.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Iu(null,e,null,(function(){t[Tn]=null}))},gt=function(e){if(13===e.tag){var t=Ba(Gl(),150,100);Ql(e,t),Fu(e,t)}},ht=function(e){13===e.tag&&(Ql(e,3),Fu(e,3))},vt=function(e){if(13===e.tag){var t=Gl();Ql(e,t=Bl(t,e,null)),Fu(e,t)}},P=function(e,t,n){switch(t){case"input":if(Se(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=An(r);if(!a)throw Error(i(90));ke(r),Se(r,a)}}}break;case"textarea":Re(e,n);break;case"select":null!=(t=n.value)&&Oe(e,!!n.multiple,t,!1)}},N=eu,M=function(e,t,n,r,a){var o=xl;xl|=4;try{return $a(98,e.bind(null,t,n,r,a))}finally{0===(xl=o)&&Ha()}},I=function(){0===(49&xl)&&(function(){if(null!==$l){var e=$l;$l=null,e.forEach((function(e,t){Mu(t,e),Yl(t)})),Ha()}}(),gu())},L=function(e,t){var n=xl;xl|=2;try{return e(t)}finally{0===(xl=n)&&Ha()}};var Hu={Events:[Pn,On,An,T,x,Ln,function(e){at(e,In)},R,j,Yt,lt,gu,{current:!1}]};!function(e){var t=e.findFiberByHostInstance;(function(e){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);ku=function(e){try{t.onCommitFiberRoot(n,e,void 0,64===(64&e.current.effectTag))}catch(r){}},wu=function(e){try{t.onCommitFiberUnmount(n,e)}catch(r){}}}catch(r){}})(a({},e,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Z.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=nt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))}({findFiberByHostInstance:Cn,bundleType:0,version:"16.13.1",rendererPackageName:"react-dom"}),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Hu,t.createPortal=Wu,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"===typeof e.render)throw Error(i(188));throw Error(i(268,Object.keys(e)))}return e=null===(e=nt(t))?null:e.stateNode},t.flushSync=function(e,t){if(0!==(48&xl))throw Error(i(187));var n=xl;xl|=1;try{return $a(99,e.bind(null,t))}finally{xl=n,Ha()}},t.hydrate=function(e,t,n){if(!Vu(t))throw Error(i(200));return $u(null,e,t,!0,n)},t.render=function(e,t,n){if(!Vu(t))throw Error(i(200));return $u(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Vu(e))throw Error(i(40));return!!e._reactRootContainer&&(tu((function(){$u(null,null,e,!1,(function(){e._reactRootContainer=null,e[Tn]=null}))})),!0)},t.unstable_batchedUpdates=eu,t.unstable_createPortal=function(e,t){return Wu(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Vu(n))throw Error(i(200));if(null==e||void 0===e._reactInternalFiber)throw Error(i(38));return $u(e,t,n,!1,r)},t.version="16.13.1"},function(e,t,n){"use strict";e.exports=n(54)},function(e,t,n){"use strict";var r,a,o,i,l;if("undefined"===typeof window||"function"!==typeof MessageChannel){var u=null,c=null,s=function e(){if(null!==u)try{var n=t.unstable_now();u(!0,n),u=null}catch(r){throw setTimeout(e,0),r}},d=Date.now();t.unstable_now=function(){return Date.now()-d},r=function(e){null!==u?setTimeout(r,0,e):(u=e,setTimeout(s,0))},a=function(e,t){c=setTimeout(e,t)},o=function(){clearTimeout(c)},i=function(){return!1},l=t.unstable_forceFrameRate=function(){}}else{var f=window.performance,p=window.Date,m=window.setTimeout,g=window.clearTimeout;if("undefined"!==typeof console){var h=window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!==typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"===typeof f&&"function"===typeof f.now)t.unstable_now=function(){return f.now()};else{var v=p.now();t.unstable_now=function(){return p.now()-v}}var _=!1,b=null,y=-1,k=5,w=0;i=function(){return t.unstable_now()>=w},l=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):k=0<e?Math.floor(1e3/e):5};var x=new MessageChannel,E=x.port2;x.port1.onmessage=function(){if(null!==b){var e=t.unstable_now();w=e+k;try{b(!0,e)?E.postMessage(null):(_=!1,b=null)}catch(n){throw E.postMessage(null),n}}else _=!1},r=function(e){b=e,_||(_=!0,E.postMessage(null))},a=function(e,n){y=m((function(){e(t.unstable_now())}),n)},o=function(){g(y),y=-1}}function S(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,a=e[r];if(!(void 0!==a&&0<P(a,t)))break e;e[r]=t,e[n]=a,n=r}}function T(e){return void 0===(e=e[0])?null:e}function C(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length;r<a;){var o=2*(r+1)-1,i=e[o],l=o+1,u=e[l];if(void 0!==i&&0>P(i,n))void 0!==u&&0>P(u,i)?(e[r]=u,e[l]=n,r=l):(e[r]=i,e[o]=n,r=o);else{if(!(void 0!==u&&0>P(u,n)))break e;e[r]=u,e[l]=n,r=l}}}return t}return null}function P(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var O=[],A=[],z=1,R=null,j=3,N=!1,M=!1,I=!1;function L(e){for(var t=T(A);null!==t;){if(null===t.callback)C(A);else{if(!(t.startTime<=e))break;C(A),t.sortIndex=t.expirationTime,S(O,t)}t=T(A)}}function D(e){if(I=!1,L(e),!M)if(null!==T(O))M=!0,r(F);else{var t=T(A);null!==t&&a(D,t.startTime-e)}}function F(e,n){M=!1,I&&(I=!1,o()),N=!0;var r=j;try{for(L(n),R=T(O);null!==R&&(!(R.expirationTime>n)||e&&!i());){var l=R.callback;if(null!==l){R.callback=null,j=R.priorityLevel;var u=l(R.expirationTime<=n);n=t.unstable_now(),"function"===typeof u?R.callback=u:R===T(O)&&C(O),L(n)}else C(O);R=T(O)}if(null!==R)var c=!0;else{var s=T(A);null!==s&&a(D,s.startTime-n),c=!1}return c}finally{R=null,j=r,N=!1}}function U(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var V=l;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){M||N||(M=!0,r(F))},t.unstable_getCurrentPriorityLevel=function(){return j},t.unstable_getFirstCallbackNode=function(){return T(O)},t.unstable_next=function(e){switch(j){case 1:case 2:case 3:var t=3;break;default:t=j}var n=j;j=t;try{return e()}finally{j=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=V,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=j;j=e;try{return t()}finally{j=n}},t.unstable_scheduleCallback=function(e,n,i){var l=t.unstable_now();if("object"===typeof i&&null!==i){var u=i.delay;u="number"===typeof u&&0<u?l+u:l,i="number"===typeof i.timeout?i.timeout:U(e)}else i=U(e),u=l;return e={id:z++,callback:n,priorityLevel:e,startTime:u,expirationTime:i=u+i,sortIndex:-1},u>l?(e.sortIndex=u,S(A,e),null===T(O)&&e===T(A)&&(I?o():I=!0,a(D,u-l))):(e.sortIndex=i,S(O,e),M||N||(M=!0,r(F))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();L(e);var n=T(O);return n!==R&&null!==R&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<R.expirationTime||i()},t.unstable_wrapCallback=function(e){var t=j;return function(){var n=j;j=t;try{return e.apply(this,arguments)}finally{j=n}}}},,,,,,,,,,,,,,function(e,t,n){e.exports=n(77)},,,,,,,,,function(e,t,n){"use strict";n.r(t);var r=n(12),a=n(13),o=n(15),i=n(14),l=n(4),u=n(29),c=n.n(u),s=n(0),d=n.n(s),f=n(19),p=n(5),m=n(2);function g(){var e=Object(l.a)(["\n  all: unset;\n  background: ",";\n  border: 1px solid ",";\n  border-color: ",";\n  border-radius: 2em;\n  cursor: pointer;\n  display: inline-block;\n  height: 10px;\n  margin-right: 5px;\n  outline: 0;\n  padding: 2px;\n  transition: all 0.4s ease;\n  width: 20px;\n\n  &::after {\n    background: ",";\n    border-radius: 50%;\n    content: '';\n    display: block;\n    height: 100%;\n    left: ",";\n    position: relative;\n    transition: all 0.2s ease;\n    width: 50%;\n  }\n"]);return g=function(){return e},e}var h=m.a.$silver,v=m.a.$overcast,_=m.a.$teal,b=m.a.$white,y=m.a.$pitch,k=p.a.button(g(),(function(e){return e.active?_:h}),v,(function(e){return e.darkMode?y:v}),b,(function(e){return e.active?"50%":"0"}));function w(e){var t=e.action,n=e.active,r=e.darkMode;return d.a.createElement(k,{onClick:t,active:n,darkMode:r})}var x=n(16),E=n(9),S=n(8),T=n(28),C=n(20),P=n(26),O=n(1);function A(){var e=Object(l.a)(["\n  color: ",";\n  display: block;\n  font-size: 14px;\n  font-weight: 300;\n  margin-top: 40px;\n  text-align: center;\n"]);return A=function(){return e},e}function z(){var e=Object(l.a)(["\n  line-height: 1.5em;\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n\n  a {\n    color: ",";\n    padding: 5px 0;\n    text-transform: lowercase;\n\n    &:hover {\n      color: ",";\n    }\n  }\n"]);return z=function(){return e},e}function R(){var e=Object(l.a)(["\n  list-style: none;\n  margin: 0;\n  padding: 0;\n\n  & > li {\n    margin-bottom: 10px;\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n"]);return R=function(){return e},e}function j(){var e=Object(l.a)(["\n  font-size: 0.8em;\n  margin-top: 10px;\n"]);return j=function(){return e},e}function N(){var e=Object(l.a)(["\n  display: block;\n  font-weight: 600;\n  margin-top: 15px;\n"]);return N=function(){return e},e}function M(){var e=Object(l.a)(["\n  color: ",";\n  display: block;\n  font-size: 16px;\n  width: 370px;\n\n  .sectionContentFull & {\n    display: flex;\n    justify-content: space-around;\n    width: 100%;\n  }\n  @media (min-width: 320px) and (max-width: 767px) {\n    width: 100%;\n  }\n"]);return M=function(){return e},e}function I(){var e=Object(l.a)(["\n  color: ",";\n  display: block;\n  margin: 10px 0 0;\n\n  &:hover {\n    color: ",";\n  }\n"]);return I=function(){return e},e}function L(){var e=Object(l.a)(["\n  color: ",";\n  display: block;\n  margin: 20px 0 10px;\n  text-align: center;\n\n  &:hover {\n    color: ",";\n  }\n"]);return L=function(){return e},e}function D(){var e=Object(l.a)(["\n  display: block;\n  width: 100%;\n"]);return D=function(){return e},e}function F(){var e=Object(l.a)(["\n  display: flex;\n"]);return F=function(){return e},e}function U(){var e=Object(l.a)(["\n  color: ",";\n  display: block;\n  font-size: 14px;\n  font-weight: 600;\n  letter-spacing: 0.04em;\n  margin-right: 35px;\n  padding-bottom: 5px;\n  text-transform: uppercase;\n  width: 230px;\n  @media (min-width: 320px) and (max-width: 767px) {\n    margin-bottom: 20px;\n    width: 100%;\n  }\n"]);return U=function(){return e},e}function V(){var e=Object(l.a)(["\n  align-items: center;\n  border-top: 1px solid ",";\n  display: flex;\n  font-size: 14px;\n  justify-content: flex-start;\n  padding: 20px 0;\n  text-align: left;\n\n  .darkMode & {\n    border-color: ",";\n  }\n\n  @media (min-width: 320px) and (max-width: 767px) {\n    flex-direction: column;\n  }\n"]);return V=function(){return e},e}function $(){var e=Object(l.a)(["\n  color: ",";\n  font-size: 28px;\n  font-weight: 300;\n  margin: 70px 0 0;\n  padding: 0 0 20px;\n  text-align: left;\n"]);return $=function(){return e},e}function q(){var e=Object(l.a)(["\n  box-sizing: border-box;\n  display: inline-block;\n  font-family: ",";\n  margin-bottom: 80px;\n  padding: 0 30px;\n  width: 700px;\n\n  @media (min-width: 320px) and (max-width: 767px) {\n    width: 100%;\n  }\n"]);return q=function(){return e},e}function W(){var e=Object(l.a)(["\n  ","\n  color: ",";\n  text-decoration: underline;\n\n  &:hover {\n    color: ",";\n  }\n"]);return W=function(){return e},e}var H=m.a.$pitch,G=m.a.$gray,B=m.a.$snow,Q=m.a.$tar,K=m.a.$darksmoke,Z=m.a.$teal,Y=m.a.$coal,X=m.a.$emerald,J=C.a.$fontstackDefault,ee=p.a.button(W(),P.b,Y,X),te=p.a.div(q(),J),ne=p.a.h1($(),(function(e){return e.darkMode?G:H})),re=p.a.div(V(),B,Q),ae=p.a.div(U(),(function(e){return e.darkMode?G:K})),oe=p.a.div(F()),ie=p.a.div(D()),le=p.a.a(L(),K,Z),ue=p.a.a(I(),K,Z),ce=p.a.div(M(),(function(e){return e.darkMode?G:K})),se=p.a.div(N()),de=p.a.div(j()),fe=p.a.ul(R()),pe=p.a.ul(z(),K,Z),me=p.a.footer(A(),K),ge=function(e){Object(o.a)(n,e);var t=Object(i.a)(n);function n(){var e;Object(r.a)(this,n);for(var a=arguments.length,o=new Array(a),i=0;i<a;i++)o[i]=arguments[i];return(e=t.call.apply(t,[this].concat(o))).state={on_save_recommendations:Object(x.c)(Object(E.b)("on_save_recommendations")),sites_twitter:Object(x.c)(Object(E.b)("sites_twitter")),darkMode:Object(x.c)(Object(E.b)("darkMode")),access_token:Object(E.b)("access_token"),username:Object(E.b)("username")},e.userData=function(){var t=e.state,n=t.access_token,r=t.username;return n&&r?e.loggedIn(r):e.loggedOut()},e.loggedIn=function(e){return d.a.createElement("div",null,e," \xa0 ("," ",d.a.createElement(ee,{onClick:function(){return Object(E.c)(T.b)}},Object(S.a)("options_page","logout_link"))," ",")")},e.loggedOut=function(){return d.a.createElement(ee,{onClick:function(){return Object(E.c)(T.a)}},Object(S.a)("options_page","login_link"))},e.toggleTwitter=function(){e.setState((function(e){return{sites_twitter:!e.sites_twitter}}),(function(){Object(E.e)({type:O.S,payload:{isEnabled:e.state.sites_twitter}})}))},e.toggleRecommendations=function(){e.setState((function(e){return{on_save_recommendations:!e.on_save_recommendations}}),(function(){Object(E.e)({type:O.R,payload:{isEnabled:e.state.on_save_recommendations}})}))},e.setShortcuts=function(){return Object(E.c)(T.c)},e}return Object(a.a)(n,[{key:"render",value:function(){var e=this.state,t=e.on_save_recommendations,n=e.sites_twitter,r=e.darkMode;return d.a.createElement(te,null,d.a.createElement(ne,{darkMode:r},Object(f.j)({width:"26px",height:"26px",marginRight:"10px",marginTop:"3px",verticalAlign:"text-top"}),Object(S.a)("options_page","header")," -"," ",Object(S.a)("options_page","save_to_pocket")),d.a.createElement(re,null,d.a.createElement(oe,null,d.a.createElement(ae,null,Object(S.a)("options_page","login_title")),d.a.createElement(ce,null,this.userData()))),d.a.createElement(re,null,d.a.createElement(oe,null,d.a.createElement(ae,null,Object(S.a)("options_page","keyboard_shortcut_title")),d.a.createElement(ce,null,d.a.createElement(ee,{onClick:this.setShortcuts},Object(S.a)("options_page","record_shortcut"))))),d.a.createElement(re,null,d.a.createElement(oe,null,d.a.createElement(ae,null,Object(S.a)("options_page","quick_save_services_title")),d.a.createElement(ce,null,d.a.createElement(fe,null,d.a.createElement("li",null,d.a.createElement(w,{active:n,action:this.toggleTwitter}),"Twitter")),d.a.createElement(de,null,Object(S.a)("options_page","services_info"))))),d.a.createElement(re,null,d.a.createElement(oe,null,d.a.createElement(ae,null,Object(S.a)("options_page","recommendations_title")),d.a.createElement(ce,null,d.a.createElement(w,{active:t,action:this.toggleRecommendations}),d.a.createElement(de,null,Object(S.a)("options_page","recommendations_detail"))))),d.a.createElement(re,null,d.a.createElement(oe,null,d.a.createElement(ae,null,Object(S.a)("options_page","questions_pocket_title")),d.a.createElement(ce,null,d.a.createElement(pe,null,d.a.createElement("li",null,d.a.createElement("a",{href:"https://help.getpocket.com"},Object(S.a)("options_page","search_support_link"))),d.a.createElement("li",null,d.a.createElement("a",{href:"https://getpocket.com/extension/support"},Object(S.a)("options_page","send_us_an_email_link"))),d.a.createElement("li",null,d.a.createElement("a",{href:"https://twitter.com/intent/tweet?screen_name=pocketsupport&text=%23chrome"},Object(S.a)("options_page","get_in_touch_on_twitter_link"))))))),d.a.createElement(re,null,d.a.createElement(ie,{className:"sectionContentFull"},d.a.createElement(ae,null,Object(S.a)("options_page","more_ways_to_save_title")),d.a.createElement(ce,null,d.a.createElement(le,{href:"https://chrome.google.com/webstore/detail/pocket-new-tab/mlnnopicjonfamklpcdfnbcomdlopmof?authuser=1",rel:"noopener noreferrer",target:"_blank"},Object(f.k)({width:"48px",height:"48px",marginRight:0}),d.a.createElement(se,{darkMode:r},"Pocket New Tab")),d.a.createElement(le,{href:"http://getpocket.com/android/",rel:"noopener noreferrer",target:"_blank"},Object(f.b)({width:"48px",height:"48px",marginRight:0}),d.a.createElement(se,{darkMode:r},"Android")),d.a.createElement(le,{href:"http://getpocket.com/iphone/",rel:"noopener noreferrer",target:"_blank"},Object(f.g)({width:"48px",height:"48px",marginRight:0}),d.a.createElement(se,{darkMode:r},"iPhone/Ipad")),d.a.createElement(le,{href:"http://getpocket.com/mac/",rel:"noopener noreferrer",target:"_blank"},Object(f.h)({width:"48px",height:"48px",marginRight:0}),d.a.createElement(se,{darkMode:r},"Mac"))))),d.a.createElement(me,null,"\xa9 Copyright ",(new Date).getFullYear()," Read It Later Inc.",d.a.createElement(ue,{href:"https://getpocket.com/legal?src=extensions",rel:"noopener noreferrer",target:"_blank"},"Legal & Privacy")))}}]),n}(s.Component),he=document.getElementById("pocket-extension-anchor");c.a.render(d.a.createElement(ge,null),he)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3dlYnBhY2svYm9vdHN0cmFwIiwiLi4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwiYWN0aW9ucy5qcyIsImNvbXBvbmVudHMvZWxlbWVudHMvY29sb3JzL2NvbG9ycy5qcyIsIi4uL25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtcmVhY3QtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyLmpzIiwiLi4vbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbC5qcyIsIi4uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9pcy1wcm9wLXZhbGlkL2Rpc3QvaXMtcHJvcC12YWxpZC5icm93c2VyLmVzbS5qcyIsIi4uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9zdHlsZWQtYmFzZS9kaXN0L3N0eWxlZC1iYXNlLmJyb3dzZXIuZXNtLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL3N0eWxlZC9kaXN0L3N0eWxlZC5icm93c2VyLmVzbS5qcyIsImNvbW1vbi9oZWxwZXJzLmpzIiwiY29tbW9uL19sb2NhbGVzL2xvY2FsZXMuanMiLCJjb21tb24vaW50ZXJmYWNlLmpzIiwiLi4vbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5LmpzIiwiLi4vbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FycmF5V2l0aG91dEhvbGVzLmpzIiwiLi4vbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2l0ZXJhYmxlVG9BcnJheS5qcyIsIi4uL25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtcmVhY3QtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9ub25JdGVyYWJsZVNwcmVhZC5qcyIsIi4uL25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtcmVhY3QtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hcnJheUxpa2VUb0FycmF5LmpzIiwiLi4vbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrLmpzIiwiLi4vbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzLmpzIiwiLi4vbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2dldFByb3RvdHlwZU9mLmpzIiwiLi4vbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdC5qcyIsIi4uL25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtcmVhY3QtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90eXBlb2YuanMiLCIuLi9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vcG9zc2libGVDb25zdHJ1Y3RvclJldHVybi5qcyIsIi4uL25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtcmVhY3QtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQuanMiLCIuLi9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlU3VwZXIuanMiLCIuLi9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2V0UHJvdG90eXBlT2YuanMiLCIuLi9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHMuanMiLCJjb21tb24vdXRpbGl0aWVzLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL2hhc2gvZGlzdC9oYXNoLmJyb3dzZXIuZXNtLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL3VuaXRsZXNzL2Rpc3QvdW5pdGxlc3MuYnJvd3Nlci5lc20uanMiLCIuLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vc2VyaWFsaXplL2Rpc3Qvc2VyaWFsaXplLmJyb3dzZXIuZXNtLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL3V0aWxzL2Rpc3QvdXRpbHMuYnJvd3Nlci5lc20uanMiLCJjb21wb25lbnRzL2VsZW1lbnRzL2ljb25zL3N0eWxlLmpzIiwiY29tcG9uZW50cy9lbGVtZW50cy9pY29ucy9pY29ucy5hYm91dC5qcyIsImNvbXBvbmVudHMvZWxlbWVudHMvaWNvbnMvaWNvbnMuYW5kcm9pZGxvZ28uanMiLCJjb21wb25lbnRzL2VsZW1lbnRzL2ljb25zL2ljb25zLmFyY2hpdmUuanMiLCJjb21wb25lbnRzL2VsZW1lbnRzL2ljb25zL2ljb25zLmNhcnJldGRvd24uanMiLCJjb21wb25lbnRzL2VsZW1lbnRzL2ljb25zL2ljb25zLmhpZGUuanMiLCJjb21wb25lbnRzL2VsZW1lbnRzL2ljb25zL2ljb25zLmhpZGVhbGwuanMiLCJjb21wb25lbnRzL2VsZW1lbnRzL2ljb25zL2ljb25zLmlwaG9uZWlwYWQuanMiLCJjb21wb25lbnRzL2VsZW1lbnRzL2ljb25zL2ljb25zLm1hYy5qcyIsImNvbXBvbmVudHMvZWxlbWVudHMvaWNvbnMvaWNvbnMub3ZlcmZsb3cuanMiLCJjb21wb25lbnRzL2VsZW1lbnRzL2ljb25zL2ljb25zLnBvY2tldGxvZ28uanMiLCJjb21wb25lbnRzL2VsZW1lbnRzL2ljb25zL2ljb25zLnBvY2tldG5ld3RhYi5qcyIsImNvbXBvbmVudHMvZWxlbWVudHMvaWNvbnMvaWNvbnMucmVtb3ZlLmpzIiwiY29tcG9uZW50cy9lbGVtZW50cy9pY29ucy9pY29ucy5zYXZlLmpzIiwiY29tcG9uZW50cy9lbGVtZW50cy9pY29ucy9pbmRleC5qcyIsImNvbW1vbi9zdHlsZXMvdmFyaWFibGVzLmpzIiwiLi4vbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5LmpzIiwiLi4vbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5LmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL3NoZWV0L2Rpc3Qvc2hlZXQuYnJvd3Nlci5lc20uanMiLCIuLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vbWVtb2l6ZS9kaXN0L21lbW9pemUuYnJvd3Nlci5lc20uanMiLCIuLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vc3R5bGlzL2Rpc3Qvc3R5bGlzLmJyb3dzZXIuZXNtLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL2NhY2hlL2Rpc3QvY2FjaGUuYnJvd3Nlci5lc20uanMiLCJjb21tb24vc3R5bGVzL2NvbXBvbmVudHMuanMiLCIuLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vY29yZS9kaXN0L2NvcmUuYnJvd3Nlci5lc20uanMiLCJjb21tb24vY29uc3RhbnRzLmpzIiwiLi4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIi4uL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHNMb29zZS5qcyIsIi4uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2RlZmluZVByb3BlcnR5LmpzIiwiLi4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsIi4uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcyIsIi4uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCIuLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMiLCJjb21wb25lbnRzL2VsZW1lbnRzL3RvZ2dsZS90b2dnbGUuanMiLCJjb21wb25lbnRzL3ZpZXdzL29wdGlvbnMvb3B0aW9ucy5qcyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsIkxPR0dFRF9PVVRfT0ZfUE9DS0VUIiwiQVJDSElWRV9JVEVNIiwiUkVNT1ZFX0lURU0iLCJPUEVOX1BPQ0tFVCIsIkFVVEhfQ09ERV9SRUNFSVZFRCIsIkNPTE9SX01PREVfQ0hBTkdFIiwiVE9HR0xFX09OX1NBVkVfUkVDUyIsIlRPR0dMRV9UV0lUVEVSIiwiU0FWRV9UT19QT0NLRVRfUkVRVUVTVCIsIlNBVkVfVE9fUE9DS0VUX1NVQ0NFU1MiLCJTQVZFX1RPX1BPQ0tFVF9GQUlMVVJFIiwiU0FWRV9UT19QT0NLRVRfVVBEQVRFIiwiU0FWRV9UT19QT0NLRVRfQ09NUExFVEUiLCJBUkNISVZFX0lURU1fUkVRVUVTVCIsIkFSQ0hJVkVfSVRFTV9TVUNDRVNTIiwiQVJDSElWRV9JVEVNX0ZBSUxVUkUiLCJSRU1PVkVfSVRFTV9SRVFVRVNUIiwiUkVNT1ZFX0lURU1fU1VDQ0VTUyIsIlJFTU9WRV9JVEVNX0ZBSUxVUkUiLCJTVUdHRVNURURfVEFHU19SRVFVRVNUIiwiU1VHR0VTVEVEX1RBR1NfU1VDQ0VTUyIsIlNVR0dFU1RFRF9UQUdTX0ZBSUxVUkUiLCJUQUdfQUNUSVZBVEUiLCJUQUdfREVBQ1RJVkFURSIsIlRBR1NfREVBQ1RJVkFURSIsIlRBR19BREQiLCJUQUdfUkVNT1ZFIiwiVEFHU19SRU1PVkUiLCJUQUdTX0FEREVEX0ZBSUxVUkUiLCJUQUdTX0FEREVEX1NVQ0NFU1MiLCJUQUdTX1NZTkMiLCJUQUdfU1lOQ19SRVFVRVNUIiwiVEFHX1NZTkNfU1VDQ0VTUyIsIlRBR19TWU5DX0ZBSUxVUkUiLCJVUERBVEVfU1RPUkVEX1RBR1MiLCJVU0VSX0xPR19JTiIsIlVTRVJfTE9HX0lOX1NVQ0NFU1MiLCJVU0VSX0xPR19JTl9GQUlMVVJFIiwiVVNFUl9MT0dfT1VUIiwiVVNFUl9MT0dfT1VUX1NVQ0NFU1MiLCJVU0VSX0xPR19PVVRfRkFJTFVSRSIsIkdFVF9SRUNTX1JFUVVFU1QiLCJHRVRfUkVDU19TVUNDRVNTIiwiR0VUX1JFQ1NfRkFJTFVSRSIsIlNBVkVfUkVDIiwiU0FWRV9SRUNfUkVRVUVTVCIsIlNBVkVfUkVDX1NVQ0NFU1MiLCJTQVZFX1JFQ19GQUlMVVJFIiwiT1BFTl9SRUMiLCJDSEVDS19UV0lUVEVSX0lOVEVHUkFUSU9OIiwiU1RBUlRfVFdJVFRFUl9JTlRFR1JBVElPTiIsIlNUT1BfVFdJVFRFUl9JTlRFR1JBVElPTiIsIlRXSVRURVJfU0FWRV9SRVFVRVNUIiwiVFdJVFRFUl9TQVZFX1NVQ0NFU1MiLCJUV0lUVEVSX1NBVkVfRkFJTFVSRSIsIkNPTE9SUyIsIiRob3RDb3JhbCIsIiRhbWJlciIsIiRtaW50R3JlZW4iLCIkdGVhbCIsIiR0ZWFsSG92ZXIiLCIkZW1lcmFsZCIsIiRibGFjayIsIiRuaWdodCIsIiRwaXRjaCIsIiR0YXIiLCIkY29hbCIsIiRkYXJrc21va2UiLCIkb3ZlcmNhc3QiLCIkc2lsdmVyIiwiJGdyYXkiLCIkc21va2UiLCIkYWxhYmFzdGVyIiwiJHNub3ciLCIkcG93ZGVyIiwiJHdoaXRlIiwiVVRJTElaQVRJT04iLCIkcmFpbmJvdyIsIiRzaGFkb3dCdXR0b24iLCIkc2hhZG93QnV0dG9uRG93biIsIiRwYW5lbFNoYWRvdyIsIiRzaGFkb3ciLCIkc2hhZG93RWRnZSIsIiRzaGFkb3dEb3duIiwiJHNoYWRvd0xvdyIsIiRzaGFkb3dIaWdoIiwiJHNoYWRvd0xpZ2h0IiwiJHNoYWRvd1VwcGVyIiwib3duS2V5cyIsImVudW1lcmFibGVPbmx5Iiwia2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsInN5bWJvbHMiLCJmaWx0ZXIiLCJzeW0iLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJwdXNoIiwiYXBwbHkiLCJfb2JqZWN0U3ByZWFkMiIsInRhcmdldCIsImFyZ3VtZW50cyIsImxlbmd0aCIsInNvdXJjZSIsImZvckVhY2giLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiZGVmaW5lUHJvcGVydGllcyIsIl90YWdnZWRUZW1wbGF0ZUxpdGVyYWwiLCJzdHJpbmdzIiwicmF3Iiwic2xpY2UiLCJmcmVlemUiLCJyZWFjdFByb3BzUmVnZXgiLCJwcm9wIiwidGVzdCIsImNoYXJDb2RlQXQiLCJ0ZXN0T21pdFByb3BzT25TdHJpbmdUYWciLCJ0ZXN0T21pdFByb3BzT25Db21wb25lbnQiLCJnZXREZWZhdWx0U2hvdWxkRm9yd2FyZFByb3AiLCJ0YWciLCJfb2JqZWN0U3ByZWFkIiwibmV3U3R5bGVkIiwiY3JlYXRlU3R5bGVkIiwib3B0aW9ucyIsImlkZW50aWZpZXJOYW1lIiwic2hvdWxkRm9yd2FyZFByb3AiLCJ0YXJnZXRDbGFzc05hbWUiLCJ1bmRlZmluZWQiLCJsYWJlbCIsIl9fZW1vdGlvbl9mb3J3YXJkUHJvcCIsInByb3BOYW1lIiwiaXNSZWFsIiwiX19lbW90aW9uX3JlYWwiLCJiYXNlVGFnIiwiX19lbW90aW9uX2Jhc2UiLCJkZWZhdWx0U2hvdWxkRm9yd2FyZFByb3AiLCJzaG91bGRVc2VBcyIsImFyZ3MiLCJzdHlsZXMiLCJfX2Vtb3Rpb25fc3R5bGVzIiwibGVuIiwiU3R5bGVkIiwicHJvcHMiLCJjb250ZXh0IiwicmVmIiwiQ29uc3VtZXIiLCJ0aGVtZSIsImZpbmFsVGFnIiwiYXMiLCJjbGFzc05hbWUiLCJjbGFzc0ludGVycG9sYXRpb25zIiwibWVyZ2VkUHJvcHMiLCJyZWdpc3RlcmVkIiwic2VyaWFsaXplZCIsImNvbmNhdCIsImZpbmFsU2hvdWxkRm9yd2FyZFByb3AiLCJuZXdQcm9wcyIsIl9rZXkiLCJpbm5lclJlZiIsImRpc3BsYXlOYW1lIiwiZGVmYXVsdFByb3BzIiwid2l0aENvbXBvbmVudCIsIm5leHRUYWciLCJuZXh0T3B0aW9ucyIsInRhZ05hbWUiLCJvcGVuUG9ja2V0Iiwib3BlblVybCIsImdldEJhc2VVcmwiLCJpc1N5c3RlbVBhZ2UiLCJ0YWIiLCJhY3RpdmUiLCJpc1N5c3RlbUxpbmsiLCJ1cmwiLCJsaW5rIiwic3RhcnRzV2l0aCIsImJhc2VVUkxTZXR0aW5nIiwiZ2V0U2V0dGluZyIsInNldFNldHRpbmdzIiwiYmFzZV9VUkwiLCJnZXRBUElVcmwiLCJBUElTZXR0aW5nIiwiYmFzZV9hcGlfdmVyc2lvbiIsImdldEFQSVZlcnNpb24iLCJnZXRBY2Nlc3NUb2tlbiIsImdldEN1cnJlbnRMYW5ndWFnZUNvZGUiLCJsYW5ndWFnZSIsIm5hdmlnYXRvciIsImxhbmd1YWdlcyIsInVzZXJMYW5ndWFnZSIsInRvTG93ZXJDYXNlIiwiaW5kZXhPZiIsImdldEJlc3RJbWFnZSIsIml0ZW0iLCJ0b3BfaW1hZ2VfdXJsIiwiaW1hZ2VzIiwic3JjIiwiZ2V0SW1hZ2VDYWNoZVVybCIsImltYWdlU2l6ZSIsInJlc2l6ZVBhcmFtIiwid2lkdGgiLCJoZWlnaHQiLCJlbmNvZGVkVVJMIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwicmVwbGFjZSIsInVybFBhcmFtIiwiY2hlY2tEdXBsaWNhdGUiLCJsaXN0IiwidGFnVmFsdWUiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwidmFsdWVzIiwic2V0SXRlbSIsInJlbW92ZVNldHRpbmdzIiwicmVtb3ZlSXRlbSIsImNsb3NlTG9naW5QYWdlIiwiY2hyb21lIiwidGFicyIsInF1ZXJ5IiwicmVtb3ZlIiwibWFwIiwiaWQiLCJjdXJyZW50U3RyaW5ncyIsImxvY2FsaXplZENvcHkiLCJkZSIsImVuIiwiZXMiLCJlc180MTkiLCJmciIsIml0IiwiamEiLCJrbyIsIm5sIiwicGwiLCJwdF9CUiIsInB0X1BUIiwicnUiLCJ6aF9DTiIsInpoX1RXIiwibG9jYWxpemVkU3RyaW5ncyIsImxvY2FsaXplIiwic2VjdGlvbiIsInN0cmluZyIsInNlbmRNZXNzYWdlIiwibWVzc2FnZSIsInNhZmFyaSIsImV4dGVuc2lvbiIsImRpc3BhdGNoTWVzc2FnZSIsInR5cGUiLCJwYXlsb2FkIiwicnVudGltZSIsImNvb2tpZXMiLCJjdXJyZW50V2luZG93IiwidXBkYXRlIiwib3BlblRhYldpdGhVcmwiLCJpbkJhY2tncm91bmQiLCJtYWtlVGFiQWN0aXZlIiwic2V0VG9vbGJhckljb24iLCJ0YWJJZCIsImljb25OYW1lIiwiZGFya01vZGUiLCJ3aW5kb3ciLCJtYXRjaE1lZGlhIiwibWF0Y2hlcyIsInNtYWxsSWNvblBhdGgiLCJiaWdJY29uUGF0aCIsImJyb3dzZXJBY3Rpb24iLCJzZXRJY29uIiwicGF0aCIsInVwZGF0ZVRvb2xiYXJJY29uIiwiYWN0aXZhdGVJY29uIiwiX3RvQ29uc3VtYWJsZUFycmF5IiwiYXJyIiwiQXJyYXkiLCJpc0FycmF5IiwiYXJyYXlMaWtlVG9BcnJheSIsIml0ZXIiLCJpdGVyYXRvciIsImZyb20iLCJ1bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSIsIlR5cGVFcnJvciIsIl9hcnJheUxpa2VUb0FycmF5IiwiYXJyMiIsIl9jbGFzc0NhbGxDaGVjayIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJfZGVmaW5lUHJvcGVydGllcyIsImRlc2NyaXB0b3IiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIl9jcmVhdGVDbGFzcyIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsIl9nZXRQcm90b3R5cGVPZiIsInNldFByb3RvdHlwZU9mIiwiZ2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0IiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsInNoYW0iLCJQcm94eSIsIkRhdGUiLCJ0b1N0cmluZyIsImUiLCJfdHlwZW9mIiwib2JqIiwiY29uc3RydWN0b3IiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsInNlbGYiLCJSZWZlcmVuY2VFcnJvciIsIl9jcmVhdGVTdXBlciIsIkRlcml2ZWQiLCJyZXN1bHQiLCJTdXBlciIsIk5ld1RhcmdldCIsInRoaXMiLCJfc2V0UHJvdG90eXBlT2YiLCJfaW5oZXJpdHMiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJkb21haW5Gb3JVcmwiLCJtYXRjaCIsImlzRnVuY3Rpb24iLCJ4IiwiYXJyYXlIYXNWYWx1ZXMiLCJjaGVja0FycmF5IiwiZ2V0Qm9vbCIsInBhcnNlSW50Iiwic3RyIiwiayIsImgiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwibXNHcmlkUm93IiwibXNHcmlkUm93U3BhbiIsIm1zR3JpZENvbHVtbiIsIm1zR3JpZENvbHVtblNwYW4iLCJmb250V2VpZ2h0IiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsIldlYmtpdExpbmVDbGFtcCIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsImh5cGhlbmF0ZVJlZ2V4IiwiYW5pbWF0aW9uUmVnZXgiLCJpc0N1c3RvbVByb3BlcnR5IiwiaXNQcm9jZXNzYWJsZVZhbHVlIiwicHJvY2Vzc1N0eWxlTmFtZSIsInN0eWxlTmFtZSIsInAxIiwicDIiLCJjdXJzb3IiLCJuZXh0IiwiaGFuZGxlSW50ZXJwb2xhdGlvbiIsImludGVycG9sYXRpb24iLCJjb3VsZEJlU2VsZWN0b3JJbnRlcnBvbGF0aW9uIiwiYW5pbSIsImludGVycG9sYXRlZCIsIl9pIiwiY3JlYXRlU3RyaW5nRnJvbU9iamVjdCIsInByZXZpb3VzQ3Vyc29yIiwiY2FjaGVkIiwibGFiZWxQYXR0ZXJuIiwic3RyaW5nTW9kZSIsImxhc3RJbmRleCIsImV4ZWMiLCJnZXRSZWdpc3RlcmVkU3R5bGVzIiwicmVnaXN0ZXJlZFN0eWxlcyIsImNsYXNzTmFtZXMiLCJyYXdDbGFzc05hbWUiLCJzcGxpdCIsImluc2VydFN0eWxlcyIsImNhY2hlIiwiaXNTdHJpbmdUYWciLCJpbnNlcnRlZCIsImN1cnJlbnQiLCJpbnNlcnQiLCJzaGVldCIsInN2Z1N0eWxlcyIsImFkZGl0aW9uYWxfc3R5bGVzIiwiZGlzcGxheSIsInZlcnRpY2FsQWxpZ24iLCJtYXJnaW5SaWdodCIsImZpbGwiLCJBYm91dCIsInN0eWxlIiwieG1sbnMiLCJ2aWV3Qm94IiwiQW5kcm9pZExvZ28iLCJBcmNoaXZlIiwiQ2FycmV0RG93biIsIkhpZGUiLCJIaWRlQWxsIiwiSXBob25lSXBhZCIsIk1hYyIsIk92ZXJmbG93IiwiUG9ja2V0TG9nbyIsInRpdGxlIiwiYWx0IiwiUG9ja2V0TmV3dGFiIiwiUmVtb3ZlIiwiU2F2ZSIsIlRZUE9HUkFQSFkiLCIkZm9udHN0YWNrRGVmYXVsdCIsIl91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSIsIm1pbkxlbiIsIl9kZWZpbmVQcm9wZXJ0eSIsIlN0eWxlU2hlZXQiLCJpc1NwZWVkeSIsInNwZWVkeSIsInRhZ3MiLCJjdHIiLCJub25jZSIsImNvbnRhaW5lciIsImJlZm9yZSIsIl9wcm90byIsInJ1bGUiLCJfdGFnIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlIiwiYXBwZW5kQ2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsImNyZWF0ZVN0eWxlRWxlbWVudCIsIm5leHRTaWJsaW5nIiwiaW5zZXJ0QmVmb3JlIiwic3R5bGVTaGVldHMiLCJvd25lck5vZGUiLCJzaGVldEZvclRhZyIsImlzSW1wb3J0UnVsZSIsImluc2VydFJ1bGUiLCJjc3NSdWxlcyIsImZsdXNoIiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwiZm4iLCJhcmciLCJXIiwiWCIsInRyaW0iLCJpYSIsImEiLCJiIiwiWiIsInYiLCJGIiwiUCIsInN1YnN0cmluZyIsInciLCJMIiwia2EiLCJhYSIsIkciLCJiYSIsImxhIiwibWEiLCJSIiwibmEiLCJlYSIsIm9hIiwiSCIsInEiLCJnIiwiQSIsIlMiLCJCIiwiVSIsInByZWZpeCIsIkQiLCJ6IiwiTSIsInkiLCJDIiwiSyIsInUiLCJJIiwiSiIsImYiLCJOIiwiY2hhckF0IiwiY2EiLCJPIiwiam9pbiIsImRhIiwiZmEiLCJZIiwiRSIsImhhIiwiUSIsInVzZSIsIlQiLCJzZXQiLCJ0b1NoZWV0IiwiYmxvY2siLCJTaGVldCIsInJ1bGVTaGVldCIsImNvbnRlbnQiLCJzZWxlY3RvcnMiLCJwYXJlbnRzIiwibGluZSIsImNvbHVtbiIsImRlcHRoIiwiYXQiLCJkZWxpbWl0ZXIiLCJzdHlsaXNPcHRpb25zIiwic3R5bGlzIiwiaGVhZCIsIl9pbnNlcnQiLCJub2RlcyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJub2RlIiwiZ2V0QXR0cmlidXRlIiwic3R5bGlzUGx1Z2lucyIsInNlbGVjdG9yIiwic2hvdWxkQ2FjaGUiLCJtaXhpbl9mb250QmFzZSIsIm1peGluX3BvY2tldEJ1dHRvbiIsIm1peGluX3BvY2tldEJ1dHRvblN0eWxlZCIsIkVtb3Rpb25DYWNoZUNvbnRleHQiLCJIVE1MRWxlbWVudCIsIlRoZW1lQ29udGV4dCIsIkNhY2hlUHJvdmlkZXIiLCJQcm92aWRlciIsImZ1bmMiLCJjbGFzc25hbWVzIiwiY2xzIiwidG9BZGQiLCJtZXJnZSIsImNzcyIsIl9sZW4iLCJjeCIsIl9sZW4yIiwiX2tleTIiLCJlbGUiLCJjaGlsZHJlbiIsIkFVVEhfVVJMIiwiTE9HT1VUX1VSTCIsIlNFVF9TSE9SVENVVFMiLCJjaGVja0RDRSIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsInByb3BJc0VudW1lcmFibGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsInRvT2JqZWN0IiwidmFsIiwiYXNzaWduIiwidGVzdDEiLCJTdHJpbmciLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwidGVzdDIiLCJmcm9tQ2hhckNvZGUiLCJ0ZXN0MyIsImxldHRlciIsInNob3VsZFVzZU5hdGl2ZSIsInRvIiwiZm9yIiwiaXNNb3VudGVkIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVTZXRTdGF0ZSIsInJlZnMiLCJ1cGRhdGVyIiwiaXNSZWFjdENvbXBvbmVudCIsInNldFN0YXRlIiwiRXJyb3IiLCJmb3JjZVVwZGF0ZSIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiX19zZWxmIiwiX19zb3VyY2UiLCIkJHR5cGVvZiIsIl9vd25lciIsInBvcCIsImtleVByZWZpeCIsImNvdW50IiwiViIsImRvbmUiLCJlc2NhcGUiLCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyIiwiUmVhY3RDdXJyZW50QmF0Y2hDb25maWciLCJzdXNwZW5zZSIsIlJlYWN0Q3VycmVudE93bmVyIiwiSXNTb21lUmVuZGVyZXJBY3RpbmciLCJDaGlsZHJlbiIsInRvQXJyYXkiLCJvbmx5IiwiQ29tcG9uZW50IiwiRnJhZ21lbnQiLCJQcm9maWxlciIsIlB1cmVDb21wb25lbnQiLCJTdHJpY3RNb2RlIiwiU3VzcGVuc2UiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsImNsb25lRWxlbWVudCIsImNyZWF0ZUNvbnRleHQiLCJfY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJfY3VycmVudFZhbHVlIiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJfY29udGV4dCIsImNyZWF0ZUZhY3RvcnkiLCJjcmVhdGVSZWYiLCJmb3J3YXJkUmVmIiwicmVuZGVyIiwiaXNWYWxpZEVsZW1lbnQiLCJsYXp5IiwiX2N0b3IiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsIm1lbW8iLCJjb21wYXJlIiwidXNlQ2FsbGJhY2siLCJ1c2VDb250ZXh0IiwidXNlRGVidWdWYWx1ZSIsInVzZUVmZmVjdCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VNZW1vIiwidXNlUmVkdWNlciIsInVzZVJlZiIsInVzZVN0YXRlIiwidmVyc2lvbiIsIm9uRXJyb3IiLCJjdXJyZW50VGFyZ2V0IiwicGEiLCJxYSIsInJhIiwic2EiLCJleHRyYWN0RXZlbnRzIiwiZXZlbnRUeXBlcyIsInRhIiwicGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMiLCJ1YSIsInJlZ2lzdHJhdGlvbk5hbWUiLCJ2YSIsIndhIiwiZGVwZW5kZW5jaWVzIiwieGEiLCJ5YSIsInphIiwiQWEiLCJCYSIsIkNhIiwic3RhdGVOb2RlIiwiRGEiLCJFYSIsIkZhIiwiR2EiLCJIYSIsIklhIiwiSmEiLCJLYSIsIkxhIiwiTWEiLCJOYSIsIk9hIiwiUGEiLCJRYSIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJzYW5pdGl6ZVVSTCIsIlVhIiwiVmEiLCJ0b1VwcGVyQ2FzZSIsInhsaW5rSHJlZiIsIldhIiwiWGEiLCJTYSIsImlzTmFOIiwiVGEiLCJSYSIsInJlbW92ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZU5TIiwiWWEiLCJaYSIsIiRhIiwiYWIiLCJiYiIsImNiIiwiZGIiLCJlYiIsImZiIiwiZ2IiLCJoYiIsImliIiwiamIiLCJrYiIsImxiIiwibWIiLCJuYiIsInBiIiwicWIiLCJfZGVidWdPd25lciIsIl9kZWJ1Z1NvdXJjZSIsImZpbGVOYW1lIiwibGluZU51bWJlciIsInJldHVybiIsInJiIiwic2IiLCJub2RlTmFtZSIsInhiIiwiX3ZhbHVlVHJhY2tlciIsImdldFZhbHVlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJ0YiIsInliIiwiY2hlY2tlZCIsInpiIiwiZGVmYXVsdENoZWNrZWQiLCJkZWZhdWx0VmFsdWUiLCJfd3JhcHBlclN0YXRlIiwiaW5pdGlhbENoZWNrZWQiLCJBYiIsImluaXRpYWxWYWx1ZSIsImNvbnRyb2xsZWQiLCJCYiIsIkNiIiwiRGIiLCJFYiIsIm93bmVyRG9jdW1lbnQiLCJhY3RpdmVFbGVtZW50IiwiR2IiLCJGYiIsIkhiIiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJkaXNhYmxlZCIsIkliIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJKYiIsIktiIiwiTGIiLCJ0ZXh0Q29udGVudCIsIk1iIiwiTmIiLCJPYiIsIlBiIiwiUWIiLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwibmFtZXNwYWNlVVJJIiwiaW5uZXJIVE1MIiwidmFsdWVPZiIsImZpcnN0Q2hpbGQiLCJSYiIsImxhc3RDaGlsZCIsIm5vZGVUeXBlIiwibm9kZVZhbHVlIiwiU2IiLCJUYiIsImFuaW1hdGlvbmVuZCIsImFuaW1hdGlvbml0ZXJhdGlvbiIsImFuaW1hdGlvbnN0YXJ0IiwidHJhbnNpdGlvbmVuZCIsIlViIiwiVmIiLCJXYiIsImFuaW1hdGlvbiIsInRyYW5zaXRpb24iLCJYYiIsIlliIiwiWmIiLCIkYiIsImFjIiwiYmMiLCJXZWFrTWFwIiwiTWFwIiwiY2MiLCJkYyIsImFsdGVybmF0ZSIsImVmZmVjdFRhZyIsImVjIiwibWVtb2l6ZWRTdGF0ZSIsImRlaHlkcmF0ZWQiLCJmYyIsImhjIiwiY2hpbGQiLCJzaWJsaW5nIiwiZ2MiLCJpYyIsImpjIiwia2MiLCJsYyIsIl9kaXNwYXRjaExpc3RlbmVycyIsIl9kaXNwYXRjaEluc3RhbmNlcyIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiaXNQZXJzaXN0ZW50IiwicmVsZWFzZSIsIm1jIiwibmMiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJvYyIsInBjIiwicWMiLCJ0b3BMZXZlbFR5cGUiLCJuYXRpdmVFdmVudCIsInRhcmdldEluc3QiLCJhbmNlc3RvcnMiLCJyYyIsImV2ZW50U3lzdGVtRmxhZ3MiLCJzYyIsImNvbnRhaW5lckluZm8iLCJ0YyIsInVjIiwiaGFzIiwidmMiLCJ3YyIsInhjIiwieWMiLCJ6YyIsIkFjIiwiQmMiLCJDYyIsIkRjIiwiRWMiLCJGYyIsIkdjIiwiSGMiLCJJYyIsIktjIiwiYmxvY2tlZE9uIiwiTGMiLCJkZWxldGUiLCJwb2ludGVySWQiLCJNYyIsIk5jIiwiUGMiLCJ1bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkiLCJwcmlvcml0eSIsImh5ZHJhdGUiLCJRYyIsIlJjIiwiU2MiLCJUYyIsInNoaWZ0IiwiVWMiLCJ1bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrIiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJWYyIsIldjIiwiWWMiLCJaYyIsIiRjIiwiYWQiLCJidWJibGVkIiwiY2FwdHVyZWQiLCJldmVudFByaW9yaXR5IiwiYmQiLCJjZCIsImRkIiwidW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkiLCJlZCIsImZkIiwiZ2QiLCJoZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJPYyIsImpkIiwiZ3JpZEFyZWEiLCJsaW5lQ2xhbXAiLCJrZCIsImxkIiwibWQiLCJzZXRQcm9wZXJ0eSIsIm5kIiwibWVudWl0ZW0iLCJhcmVhIiwiYmFzZSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImlucHV0Iiwia2V5Z2VuIiwibWV0YSIsInBhcmFtIiwidHJhY2siLCJ3YnIiLCJvZCIsInBkIiwiaXMiLCJxZCIsInJkIiwic2QiLCJ0ZCIsImJvZHkiLCJ1ZCIsInZkIiwib2Zmc2V0IiwieGQiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnRXaW5kb3ciLCJsb2NhdGlvbiIsImhyZWYiLCJ5ZCIsImNvbnRlbnRFZGl0YWJsZSIsIkRkIiwiRWQiLCJGZCIsImF1dG9Gb2N1cyIsIkdkIiwiX19odG1sIiwiSGQiLCJzZXRUaW1lb3V0IiwiSWQiLCJjbGVhclRpbWVvdXQiLCJKZCIsIktkIiwicHJldmlvdXNTaWJsaW5nIiwiZGF0YSIsIkxkIiwiTWF0aCIsInJhbmRvbSIsIk1kIiwiTmQiLCJPZCIsIlBkIiwiUWQiLCJSZCIsIlNkIiwiVGQiLCJkaXNwYXRjaENvbmZpZyIsIlVkIiwiX3RhcmdldEluc3QiLCJWZCIsIldkIiwiWGQiLCJZZCIsIlpkIiwiJGQiLCJhZSIsImJlIiwiY2UiLCJJbnRlcmZhY2UiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmV0dXJuVmFsdWUiLCJlZSIsImV2ZW50UG9vbCIsImZlIiwiZGVzdHJ1Y3RvciIsImdldFBvb2xlZCIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwiY2FuY2VsQnViYmxlIiwicGVyc2lzdCIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsIm5vdyIsImlzVHJ1c3RlZCIsImV4dGVuZCIsImdlIiwiaGUiLCJpZSIsImplIiwia2UiLCJkb2N1bWVudE1vZGUiLCJsZSIsIm1lIiwibmUiLCJvZSIsImJlZm9yZUlucHV0IiwiY29tcG9zaXRpb25FbmQiLCJjb21wb3NpdGlvblN0YXJ0IiwiY29tcG9zaXRpb25VcGRhdGUiLCJwZSIsInFlIiwia2V5Q29kZSIsInJlIiwiZGV0YWlsIiwic2UiLCJ2ZSIsImxvY2FsZSIsIndoaWNoIiwidGUiLCJjdHJsS2V5IiwiYWx0S2V5IiwibWV0YUtleSIsImNoYXIiLCJ1ZSIsIndlIiwiY29sb3IiLCJkYXRlIiwiZGF0ZXRpbWUiLCJlbWFpbCIsIm1vbnRoIiwibnVtYmVyIiwicGFzc3dvcmQiLCJyYW5nZSIsInNlYXJjaCIsInRlbCIsInRleHQiLCJ0aW1lIiwid2VlayIsInhlIiwieWUiLCJjaGFuZ2UiLCJ6ZSIsIkFlIiwiQmUiLCJDZSIsIkRlIiwiRWUiLCJGZSIsIkdlIiwiZGV0YWNoRXZlbnQiLCJIZSIsIkllIiwiYXR0YWNoRXZlbnQiLCJKZSIsIktlIiwiTGUiLCJNZSIsIl9pc0lucHV0RXZlbnRTdXBwb3J0ZWQiLCJOZSIsInZpZXciLCJPZSIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJQZSIsImdldE1vZGlmaWVyU3RhdGUiLCJRZSIsIlJlIiwiU2UiLCJUZSIsIlVlIiwiVmUiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsInNoaWZ0S2V5IiwiYnV0dG9uIiwiYnV0dG9ucyIsInJlbGF0ZWRUYXJnZXQiLCJmcm9tRWxlbWVudCIsInRvRWxlbWVudCIsIm1vdmVtZW50WCIsIm1vdmVtZW50WSIsIldlIiwicHJlc3N1cmUiLCJ0YW5nZW50aWFsUHJlc3N1cmUiLCJ0aWx0WCIsInRpbHRZIiwidHdpc3QiLCJwb2ludGVyVHlwZSIsImlzUHJpbWFyeSIsIlhlIiwibW91c2VFbnRlciIsIm1vdXNlTGVhdmUiLCJwb2ludGVyRW50ZXIiLCJwb2ludGVyTGVhdmUiLCJZZSIsImRlZmF1bHRWaWV3IiwicGFyZW50V2luZG93IiwiJGUiLCJhZiIsImJmIiwiY2YiLCJkZiIsInNlbGVjdCIsImVmIiwiZmYiLCJnZiIsImhmIiwiamYiLCJzdGFydCIsInNlbGVjdGlvblN0YXJ0IiwiZW5kIiwic2VsZWN0aW9uRW5kIiwiYW5jaG9yTm9kZSIsImdldFNlbGVjdGlvbiIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0Iiwia2YiLCJvblNlbGVjdCIsImxmIiwiYW5pbWF0aW9uTmFtZSIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsIm1mIiwiY2xpcGJvYXJkRGF0YSIsIm5mIiwib2YiLCJjaGFyQ29kZSIsInBmIiwiRXNjIiwiU3BhY2ViYXIiLCJMZWZ0IiwiVXAiLCJSaWdodCIsIkRvd24iLCJEZWwiLCJXaW4iLCJNZW51IiwiQXBwcyIsIlNjcm9sbCIsIk1velByaW50YWJsZUtleSIsInFmIiwiOCIsIjkiLCIxMiIsIjEzIiwiMTYiLCIxNyIsIjE4IiwiMTkiLCIyMCIsIjI3IiwiMzIiLCIzMyIsIjM0IiwiMzUiLCIzNiIsIjM3IiwiMzgiLCIzOSIsIjQwIiwiNDUiLCI0NiIsIjExMiIsIjExMyIsIjExNCIsIjExNSIsIjExNiIsIjExNyIsIjExOCIsIjExOSIsIjEyMCIsIjEyMSIsIjEyMiIsIjEyMyIsIjE0NCIsIjE0NSIsIjIyNCIsInJmIiwicmVwZWF0Iiwic2YiLCJkYXRhVHJhbnNmZXIiLCJ0ZiIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJ1ZiIsInZmIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCJ3ZiIsIlNpbXBsZUV2ZW50UGx1Z2luIiwiRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIiwiQ2hhbmdlRXZlbnRQbHVnaW4iLCJTZWxlY3RFdmVudFBsdWdpbiIsIkJlZm9yZUlucHV0RXZlbnRQbHVnaW4iLCJ5ZiIsInpmIiwiQWYiLCJCZiIsIkNmIiwiY29udGV4dFR5cGVzIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0IiwiY2hpbGRDb250ZXh0VHlwZXMiLCJEZiIsIkVmIiwiRmYiLCJnZXRDaGlsZENvbnRleHQiLCJHZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiSGYiLCJJZiIsIkpmIiwiS2YiLCJ1bnN0YWJsZV9jYW5jZWxDYWxsYmFjayIsIkxmIiwidW5zdGFibGVfcmVxdWVzdFBhaW50IiwiTWYiLCJ1bnN0YWJsZV9ub3ciLCJOZiIsInVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsIiwiT2YiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsIlBmIiwiUWYiLCJSZiIsInVuc3RhYmxlX0xvd1ByaW9yaXR5IiwiU2YiLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJUZiIsIlVmIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJWZiIsIldmIiwiWGYiLCJZZiIsIlpmIiwiJGYiLCJhZyIsImJnIiwiY2ciLCJkZyIsImVnIiwiZmciLCJnZyIsImhnIiwiaWciLCJqZyIsImtnIiwibGciLCJtZyIsIm5nIiwib2ciLCJwZyIsImNoaWxkRXhwaXJhdGlvblRpbWUiLCJxZyIsImZpcnN0Q29udGV4dCIsImV4cGlyYXRpb25UaW1lIiwicmciLCJzZyIsIm9ic2VydmVkQml0cyIsInJlc3BvbmRlcnMiLCJ0ZyIsInVnIiwidXBkYXRlUXVldWUiLCJiYXNlU3RhdGUiLCJiYXNlUXVldWUiLCJzaGFyZWQiLCJwZW5kaW5nIiwiZWZmZWN0cyIsInZnIiwid2ciLCJzdXNwZW5zZUNvbmZpZyIsImNhbGxiYWNrIiwieGciLCJ5ZyIsInpnIiwiQWciLCJCZyIsIkNnIiwiRGciLCJFZyIsIkZnIiwiSmciLCJfcmVhY3RJbnRlcm5hbEZpYmVyIiwiR2ciLCJIZyIsIklnIiwiS2ciLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJMZyIsImNvbnRleHRUeXBlIiwic3RhdGUiLCJNZyIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIk5nIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJPZyIsIlBnIiwiX3N0cmluZ1JlZiIsIlFnIiwiUmciLCJsYXN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImZpcnN0RWZmZWN0IiwiaW5kZXgiLCJTZyIsIlRnIiwiZWxlbWVudFR5cGUiLCJVZyIsImltcGxlbWVudGF0aW9uIiwiVmciLCJXZyIsIlhnIiwiWWciLCJaZyIsIiRnIiwiYWgiLCJiaCIsImNoIiwiZGgiLCJkb2N1bWVudEVsZW1lbnQiLCJlaCIsImZoIiwiZ2giLCJoaCIsIm1lbW9pemVkUHJvcHMiLCJyZXZlYWxPcmRlciIsImloIiwicmVzcG9uZGVyIiwiamgiLCJraCIsImxoIiwibWgiLCJuaCIsIm9oIiwicGgiLCJxaCIsInJoIiwic2giLCJ0aCIsInF1ZXVlIiwidWgiLCJ2aCIsIndoIiwibGFzdFJlbmRlcmVkUmVkdWNlciIsImFjdGlvbiIsImVhZ2VyUmVkdWNlciIsImVhZ2VyU3RhdGUiLCJsYXN0UmVuZGVyZWRTdGF0ZSIsImRpc3BhdGNoIiwieGgiLCJ5aCIsInpoIiwiQWgiLCJkZXN0cm95IiwiZGVwcyIsIkJoIiwiQ2giLCJEaCIsIkVoIiwiRmgiLCJHaCIsIkhoIiwiSWgiLCJKaCIsIktoIiwiTGgiLCJNaCIsIk5oIiwicmVhZENvbnRleHQiLCJ1c2VSZXNwb25kZXIiLCJ1c2VEZWZlcnJlZFZhbHVlIiwidXNlVHJhbnNpdGlvbiIsIk9oIiwiUGgiLCJRaCIsIlJoIiwiU2giLCJUaCIsInBlbmRpbmdQcm9wcyIsIlVoIiwiVmgiLCJXaCIsIlhoIiwiWWgiLCJaaCIsIiRoIiwiYWkiLCJiaSIsImNpIiwiZGkiLCJlaSIsImZpIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwiZ2kiLCJnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IiLCJoaSIsInBlbmRpbmdDb250ZXh0IiwibmkiLCJwaSIsInFpIiwiaWkiLCJyZXRyeVRpbWUiLCJqaSIsImZhbGxiYWNrIiwidW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2siLCJraSIsImxpIiwiaXNCYWNrd2FyZHMiLCJyZW5kZXJpbmciLCJyZW5kZXJpbmdTdGFydFRpbWUiLCJsYXN0IiwidGFpbCIsInRhaWxFeHBpcmF0aW9uIiwidGFpbE1vZGUiLCJtaSIsInJpIiwic2kiLCJ3YXNNdWx0aXBsZSIsIm11bHRpcGxlIiwib25DbGljayIsIm9uY2xpY2siLCJzaXplIiwiY3JlYXRlRWxlbWVudE5TIiwidGkiLCJ1aSIsInZpIiwid2kiLCJ4aSIsInlpIiwiemkiLCJBaSIsInN0YWNrIiwiQmkiLCJXZWFrU2V0IiwiU2V0IiwiQ2kiLCJGaSIsIkVpIiwiR2kiLCJfX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIkhpIiwiSWkiLCJKaSIsImZvY3VzIiwiS2kiLCJMaSIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwiRGkiLCJNaSIsIk5pIiwiT2kiLCJQaSIsIlFpIiwiX3JlYWN0Um9vdENvbnRhaW5lciIsIlJpIiwiU2kiLCJUaSIsIlVpIiwiVmkiLCJhZGQiLCJ0aGVuIiwiV2kiLCJYaSIsImVsZW1lbnQiLCJZaSIsIlppIiwiJGkiLCJjb21wb25lbnREaWRDYXRjaCIsImFqIiwiY29tcG9uZW50U3RhY2siLCJSaiIsImJqIiwiY2VpbCIsImNqIiwiZGoiLCJraiIsImxqIiwibWoiLCJuaiIsIm9qIiwicWoiLCJyaiIsInNqIiwidGoiLCJ1aiIsInZqIiwid2oiLCJ0aW1lb3V0TXMiLCJ4aiIsInlqIiwiemoiLCJsYXN0RXhwaXJlZFRpbWUiLCJBaiIsImZpcnN0UGVuZGluZ1RpbWUiLCJsYXN0UGluZ2VkVGltZSIsIm5leHRLbm93blBlbmRpbmdMZXZlbCIsImNhbGxiYWNrRXhwaXJhdGlvblRpbWUiLCJjYWxsYmFja1ByaW9yaXR5IiwiY2FsbGJhY2tOb2RlIiwiQmoiLCJ0aW1lb3V0IiwiQ2oiLCJEaiIsIkVqIiwiRmoiLCJHaiIsIkhqIiwiZmluaXNoZWRXb3JrIiwiZmluaXNoZWRFeHBpcmF0aW9uVGltZSIsImxhc3RTdXNwZW5kZWRUaW1lIiwiSWoiLCJ0aW1lb3V0SGFuZGxlIiwiSmoiLCJidXN5TWluRHVyYXRpb25NcyIsImJ1c3lEZWxheU1zIiwiS2oiLCJNaiIsIk5qIiwicGluZ0NhY2hlIiwiT2oiLCJ1YiIsIlBqIiwiWGMiLCJRaiIsIlNqIiwiZmlyc3RTdXNwZW5kZWRUaW1lIiwicmFuZ2VDb3VudCIsIndiIiwiYWN0aXZlRWxlbWVudERldGFjaGVkIiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsIlRqIiwid2QiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwibWluIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJ2YiIsIlVqIiwiVmoiLCJXaiIsImhpZGRlbiIsImRlZmF1bHQiLCJvYiIsIlhqIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwiWmoiLCJwZW5kaW5nQ2hpbGRyZW4iLCJhayIsImJrIiwiY2siLCJkayIsImVrIiwiZmsiLCJKYyIsIl9pbnRlcm5hbFJvb3QiLCJnayIsImlrIiwiaGFzQXR0cmlidXRlIiwiaGsiLCJqayIsImtrIiwidW5tb3VudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJmb3JtIiwiTGoiLCJsayIsIkV2ZW50cyIsImZpbmRGaWJlckJ5SG9zdEluc3RhbmNlIiwiaXNEaXNhYmxlZCIsInN1cHBvcnRzRmliZXIiLCJpbmplY3QiLCJvbkNvbW1pdEZpYmVyUm9vdCIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiWWoiLCJvdmVycmlkZUhvb2tTdGF0ZSIsIm92ZXJyaWRlUHJvcHMiLCJzZXRTdXNwZW5zZUhhbmRsZXIiLCJzY2hlZHVsZVVwZGF0ZSIsImN1cnJlbnREaXNwYXRjaGVyUmVmIiwiZmluZEhvc3RJbnN0YW5jZUJ5RmliZXIiLCJmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2giLCJzY2hlZHVsZVJlZnJlc2giLCJzY2hlZHVsZVJvb3QiLCJzZXRSZWZyZXNoSGFuZGxlciIsImdldEN1cnJlbnRGaWJlciIsImJ1bmRsZVR5cGUiLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwiY3JlYXRlUG9ydGFsIiwiZmluZERPTU5vZGUiLCJmbHVzaFN5bmMiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9jcmVhdGVQb3J0YWwiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsIl9mIiwiTWVzc2FnZUNoYW5uZWwiLCJ1bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZSIsInBlcmZvcm1hbmNlIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJmbG9vciIsInBvcnQyIiwicG9ydDEiLCJvbm1lc3NhZ2UiLCJwb3N0TWVzc2FnZSIsInNvcnRJbmRleCIsInN0YXJ0VGltZSIsInByaW9yaXR5TGV2ZWwiLCJ1bnN0YWJsZV9Qcm9maWxpbmciLCJ1bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlIiwidW5zdGFibGVfbmV4dCIsInVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uIiwiZGVsYXkiLCJ1bnN0YWJsZV93cmFwQ2FsbGJhY2siLCJCdXR0b24iLCJzdHlsZWQiLCJUb2dnbGUiLCJPcHRpb25zQnV0dG9uTGluayIsIk9wdGlvbnNDb250YWluZXIiLCJkaXYiLCJPcHRpb25zVGl0bGUiLCJoMSIsIk9wdGlvbnNTZWN0aW9uIiwiT3B0aW9uc1NlY3Rpb25UaXRsZSIsIk9wdGlvbnNTZWN0aW9uQ29udGVudCIsIk9wdGlvbnNTZWN0aW9uQ29udGVudEZ1bGwiLCJPcHRpb25zQ29udGVudEZ1bGxCbG9jayIsIk9wdGlvbnNQcml2YWN5TGVnYWwiLCJPcHRpb25zU2VjdGlvbk1haW4iLCJPcHRpb25zQmxvY2tDb3B5IiwiT3B0aW9uc0luZm8iLCJPcHRpb25zU2F2ZVNlcnZpY2VzTGlzdCIsInVsIiwiT3B0aW9uc1F1ZXN0aW9uc0xpc3QiLCJPcHRpb25zRm9vdGVyIiwiZm9vdGVyIiwiT3B0aW9uc0FwcCIsIm9uX3NhdmVfcmVjb21tZW5kYXRpb25zIiwic2l0ZXNfdHdpdHRlciIsImFjY2Vzc190b2tlbiIsInVzZXJuYW1lIiwidXNlckRhdGEiLCJsb2dnZWRJbiIsImxvZ2dlZE91dCIsInRvZ2dsZVR3aXR0ZXIiLCJpc0VuYWJsZWQiLCJ0b2dnbGVSZWNvbW1lbmRhdGlvbnMiLCJzZXRTaG9ydGN1dHMiLCJtYXJnaW5Ub3AiLCJyZWwiLCJnZXRGdWxsWWVhciIsInJvb3QiLCJnZXRFbGVtZW50QnlJZCIsIlJlYWN0RE9NIl0sIm1hcHBpbmdzIjoiO2FBQ0UsSUFBSUEsRUFBbUIsR0FHdkIsU0FBU0MsRUFBb0JDLEdBRzVCLEdBQUdGLEVBQWlCRSxHQUNuQixPQUFPRixFQUFpQkUsR0FBVUMsUUFHbkMsSUFBSUMsRUFBU0osRUFBaUJFLEdBQVksQ0FDekNHLEVBQUdILEVBQ0hJLEdBQUcsRUFDSEgsUUFBUyxJQVVWLE9BTkFJLEVBQVFMLEdBQVVNLEtBQUtKLEVBQU9ELFFBQVNDLEVBQVFBLEVBQU9ELFFBQVNGLEdBRy9ERyxFQUFPRSxHQUFJLEVBR0pGLEVBQU9ELFFBS2ZGLEVBQW9CUSxFQUFJRixFQUd4Qk4sRUFBb0JTLEVBQUlWLEVBR3hCQyxFQUFvQlUsRUFBSSxTQUFTUixFQUFTUyxFQUFNQyxHQUMzQ1osRUFBb0JhLEVBQUVYLEVBQVNTLElBQ2xDRyxPQUFPQyxlQUFlYixFQUFTUyxFQUFNLENBQUVLLFlBQVksRUFBTUMsSUFBS0wsS0FLaEVaLEVBQW9Ca0IsRUFBSSxTQUFTaEIsR0FDWCxxQkFBWGlCLFFBQTBCQSxPQUFPQyxhQUMxQ04sT0FBT0MsZUFBZWIsRUFBU2lCLE9BQU9DLFlBQWEsQ0FBRUMsTUFBTyxXQUU3RFAsT0FBT0MsZUFBZWIsRUFBUyxhQUFjLENBQUVtQixPQUFPLEtBUXZEckIsRUFBb0JzQixFQUFJLFNBQVNELEVBQU9FLEdBRXZDLEdBRFUsRUFBUEEsSUFBVUYsRUFBUXJCLEVBQW9CcUIsSUFDL0IsRUFBUEUsRUFBVSxPQUFPRixFQUNwQixHQUFXLEVBQVBFLEdBQThCLGtCQUFWRixHQUFzQkEsR0FBU0EsRUFBTUcsV0FBWSxPQUFPSCxFQUNoRixJQUFJSSxFQUFLWCxPQUFPWSxPQUFPLE1BR3ZCLEdBRkExQixFQUFvQmtCLEVBQUVPLEdBQ3RCWCxPQUFPQyxlQUFlVSxFQUFJLFVBQVcsQ0FBRVQsWUFBWSxFQUFNSyxNQUFPQSxJQUN0RCxFQUFQRSxHQUE0QixpQkFBVEYsRUFBbUIsSUFBSSxJQUFJTSxLQUFPTixFQUFPckIsRUFBb0JVLEVBQUVlLEVBQUlFLEVBQUssU0FBU0EsR0FBTyxPQUFPTixFQUFNTSxJQUFRQyxLQUFLLEtBQU1ELElBQzlJLE9BQU9GLEdBSVJ6QixFQUFvQjZCLEVBQUksU0FBUzFCLEdBQ2hDLElBQUlTLEVBQVNULEdBQVVBLEVBQU9xQixXQUM3QixXQUF3QixPQUFPckIsRUFBZ0IsU0FDL0MsV0FBOEIsT0FBT0EsR0FFdEMsT0FEQUgsRUFBb0JVLEVBQUVFLEVBQVEsSUFBS0EsR0FDNUJBLEdBSVJaLEVBQW9CYSxFQUFJLFNBQVNpQixFQUFRQyxHQUFZLE9BQU9qQixPQUFPa0IsVUFBVUMsZUFBZTFCLEtBQUt1QixFQUFRQyxJQUd6Ry9CLEVBQW9Ca0MsRUFBSSxJQUlqQmxDLEVBQW9CQSxFQUFvQm1DLEVBQUksSSwrQkMvRW5EaEMsRUFBT0QsUUFBVSxFQUFRLEssNkJDSDNCLHExREFBTyxJQUNNa0MsRUFBdUIsdUJBQ3ZCQyxFQUFlLGVBQ2ZDLEVBQWMsY0FDZEMsRUFBYyxjQUNkQyxFQUFxQixxQkFDckJDLEVBQW9CLG9CQUNwQkMsRUFBc0Isc0JBQ3RCQyxFQUFpQixpQkFFakJDLEVBQXlCLHlCQUN6QkMsRUFBeUIseUJBQ3pCQyxFQUF5Qix5QkFDekJDLEVBQXdCLHdCQUN4QkMsRUFBMEIsMEJBRTFCQyxFQUF1Qix1QkFDdkJDLEVBQXVCLHVCQUN2QkMsRUFBdUIsdUJBRXZCQyxFQUFzQixzQkFDdEJDLEVBQXNCLHNCQUN0QkMsRUFBc0Isc0JBRXRCQyxFQUF5Qix5QkFDekJDLEVBQXlCLHlCQUN6QkMsRUFBeUIseUJBRXpCQyxFQUFlLGVBQ2ZDLEVBQWlCLGlCQUNqQkMsRUFBa0Isa0JBQ2xCQyxFQUFVLFVBQ1ZDLEVBQWEsYUFDYkMsRUFBYyxjQUNkQyxFQUFxQixxQkFDckJDLEVBQXFCLHFCQUdyQkMsRUFBWSxZQUNaQyxFQUFtQixtQkFDbkJDLEVBQW1CLG1CQUNuQkMsRUFBbUIsbUJBRW5CQyxFQUFxQixxQkFFckJDLEVBQWMsY0FDZEMsRUFBc0Isc0JBQ3RCQyxFQUFzQixzQkFFdEJDLEVBQWUsZUFDZkMsRUFBdUIsdUJBQ3ZCQyxFQUF1QixzQkFFdkJDLEVBQW1CLG1CQUNuQkMsRUFBbUIsbUJBQ25CQyxFQUFtQixtQkFFbkJDLEVBQVcsV0FDWEMsRUFBbUIsbUJBQ25CQyxFQUFtQixtQkFDbkJDLEVBQW1CLG1CQUVuQkMsRUFBVyxXQUVYQyxFQUE0Qiw0QkFDNUJDLEVBQTRCLDRCQUM1QkMsR0FBMkIsMkJBRzNCQyxHQUF1Qix1QkFDdkJDLEdBQXVCLHVCQUN2QkMsR0FBdUIsd0IsNkJDdkVwQyxvRUFBTyxJQUFNQyxFQUFTLENBQ3BCQyxVQUFXLFVBQ1hDLE9BQVEsVUFDUkMsV0FBWSxVQUNaQyxNQUFPLFVBQ1BDLFdBQVksVUFDWkMsU0FBVSxVQUNWQyxPQUFRLE9BQ1JDLE9BQVEsVUFDUkMsT0FBUSxPQUNSQyxLQUFNLE9BQ05DLE1BQU8sT0FDUEMsV0FBWSxPQUNaQyxVQUFXLE9BQ1hDLFFBQVMsT0FDVEMsTUFBTyxPQUNQQyxPQUFRLE9BQ1JDLFdBQVksVUFDWkMsTUFBTyxPQUNQQyxRQUFTLFVBQ1RDLE9BQVEsUUFNR0MsRUFBYyxDQUN6QkMsU0FIQSxpRkFJQUMsY0FBZSxpQ0FDZkMsa0JBQW1CLGlDQUNuQkMsYUFBYywrQkFDZEMsUUFBUywyQkFDVEMsWUFBYSwyQkFDYkMsWUFBYSwrQkFDYkMsV0FBWSwyQkFDWkMsWUFBYSxnQ0FDYkMsYUFBYywyQkFDZEMsYUFBYyxtQyw2QkNyQ2hCLDhDQUVBLFNBQVNDLEVBQVE5RixFQUFRK0YsR0FDdkIsSUFBSUMsRUFBT2hILE9BQU9nSCxLQUFLaEcsR0FFdkIsR0FBSWhCLE9BQU9pSCxzQkFBdUIsQ0FDaEMsSUFBSUMsRUFBVWxILE9BQU9pSCxzQkFBc0JqRyxHQUN2QytGLElBQWdCRyxFQUFVQSxFQUFRQyxRQUFPLFNBQVVDLEdBQ3JELE9BQU9wSCxPQUFPcUgseUJBQXlCckcsRUFBUW9HLEdBQUtsSCxlQUV0RDhHLEVBQUtNLEtBQUtDLE1BQU1QLEVBQU1FLEdBR3hCLE9BQU9GLEVBR00sU0FBU1EsRUFBZUMsR0FDckMsSUFBSyxJQUFJbkksRUFBSSxFQUFHQSxFQUFJb0ksVUFBVUMsT0FBUXJJLElBQUssQ0FDekMsSUFBSXNJLEVBQXlCLE1BQWhCRixVQUFVcEksR0FBYW9JLFVBQVVwSSxHQUFLLEdBRS9DQSxFQUFJLEVBQ053SCxFQUFROUcsT0FBTzRILElBQVMsR0FBTUMsU0FBUSxTQUFVaEgsR0FDOUMsWUFBZTRHLEVBQVE1RyxFQUFLK0csRUFBTy9HLE9BRTVCYixPQUFPOEgsMEJBQ2hCOUgsT0FBTytILGlCQUFpQk4sRUFBUXpILE9BQU84SCwwQkFBMEJGLElBRWpFZCxFQUFROUcsT0FBTzRILElBQVNDLFNBQVEsU0FBVWhILEdBQ3hDYixPQUFPQyxlQUFld0gsRUFBUTVHLEVBQUtiLE9BQU9xSCx5QkFBeUJPLEVBQVEvRyxPQUtqRixPQUFPNEcsSSw2QkNqQ00sU0FBU08sRUFBdUJDLEVBQVNDLEdBS3RELE9BSktBLElBQ0hBLEVBQU1ELEVBQVFFLE1BQU0sSUFHZm5JLE9BQU9vSSxPQUFPcEksT0FBTytILGlCQUFpQkUsRUFBUyxDQUNwREMsSUFBSyxDQUNIM0gsTUFBT1AsT0FBT29JLE9BQU9GLE9BUDNCLG1DLGlFQ0NJRyxFQUFrQiw0NUhBV1AsRUFUSCxhQUFRLFNBQVVDLEdBQzVCLE9BQU9ELEVBQWdCRSxLQUFLRCxJQUFnQyxNQUF2QkEsRUFBS0UsV0FBVyxJQUUzQixNQUF2QkYsRUFBS0UsV0FBVyxJQUVoQkYsRUFBS0UsV0FBVyxHQUFLLE0sd0JDRnRCQyxFQUEyQixFQUUzQkMsRUFBMkIsU0FBa0M3SCxHQUMvRCxNQUFlLFVBQVJBLEdBQTJCLGFBQVJBLEdBR3hCOEgsRUFBOEIsU0FBcUNDLEdBQ3JFLE1BQXNCLGtCQUFSQSxHQUdkQSxFQUFJSixXQUFXLEdBQUssR0FBS0MsRUFBMkJDLEdBR3RELFNBQVM1QixFQUFROUYsRUFBUStGLEdBQ3ZCLElBQUlDLEVBQU9oSCxPQUFPZ0gsS0FBS2hHLEdBRXZCLEdBQUloQixPQUFPaUgsc0JBQXVCLENBQ2hDLElBQUlDLEVBQVVsSCxPQUFPaUgsc0JBQXNCakcsR0FDdkMrRixJQUFnQkcsRUFBVUEsRUFBUUMsUUFBTyxTQUFVQyxHQUNyRCxPQUFPcEgsT0FBT3FILHlCQUF5QnJHLEVBQVFvRyxHQUFLbEgsZUFFdEQ4RyxFQUFLTSxLQUFLQyxNQUFNUCxFQUFNRSxHQUd4QixPQUFPRixFQUdULFNBQVM2QixFQUFjcEIsR0FDckIsSUFBSyxJQUFJbkksRUFBSSxFQUFHQSxFQUFJb0ksVUFBVUMsT0FBUXJJLElBQUssQ0FDekMsSUFBSXNJLEVBQXlCLE1BQWhCRixVQUFVcEksR0FBYW9JLFVBQVVwSSxHQUFLLEdBRS9DQSxFQUFJLEVBQ053SCxFQUFRYyxHQUFRLEdBQU1DLFNBQVEsU0FBVWhILEdBQ3RDLElBQWdCNEcsRUFBUTVHLEVBQUsrRyxFQUFPL0csT0FFN0JiLE9BQU84SCwwQkFDaEI5SCxPQUFPK0gsaUJBQWlCTixFQUFRekgsT0FBTzhILDBCQUEwQkYsSUFFakVkLEVBQVFjLEdBQVFDLFNBQVEsU0FBVWhILEdBQ2hDYixPQUFPQyxlQUFld0gsRUFBUTVHLEVBQUtiLE9BQU9xSCx5QkFBeUJPLEVBQVEvRyxPQUtqRixPQUFPNEcsRUFHVCxJQ2xESXFCLEVEb0RlLFNBQVNDLEVBQWFILEVBQUtJLEdBTzVDLElBQUlDLEVBQ0FDLEVBQ0FDLE9BRVlDLElBQVpKLElBQ0ZDLEVBQWlCRCxFQUFRSyxNQUN6QkYsRUFBa0JILEVBQVF2QixPQUMxQnlCLEVBQW9CTixFQUFJVSx1QkFBeUJOLEVBQVFFLGtCQUFvQixTQUFVSyxHQUNyRixPQUFPWCxFQUFJVSxzQkFBc0JDLElBQ2pDUCxFQUFRRSxrQkFBa0JLLElBQ3hCUCxFQUFRRSxtQkFHZCxJQUFJTSxFQUFTWixFQUFJYSxpQkFBbUJiLEVBQ2hDYyxFQUFVRixHQUFVWixFQUFJZSxnQkFBa0JmLEVBRWIsb0JBQXRCTSxHQUFvQ00sSUFDN0NOLEVBQW9CTixFQUFJVSx1QkFHMUIsSUFBSU0sRUFBMkJWLEdBQXFCUCxFQUE0QmUsR0FDNUVHLEdBQWVELEVBQXlCLE1BQzVDLE9BQU8sV0FDTCxJQUFJRSxFQUFPcEMsVUFDUHFDLEVBQVNQLFFBQW1DSixJQUF6QlIsRUFBSW9CLGlCQUFpQ3BCLEVBQUlvQixpQkFBaUI3QixNQUFNLEdBQUssR0FNNUYsUUFKdUJpQixJQUFuQkgsR0FDRmMsRUFBT3pDLEtBQUssU0FBVzJCLEVBQWlCLEtBRzNCLE1BQVhhLEVBQUssU0FBOEJWLElBQWhCVSxFQUFLLEdBQUc1QixJQUM3QjZCLEVBQU96QyxLQUFLQyxNQUFNd0MsRUFBUUQsT0FDckIsQ0FDRCxFQUlKQyxFQUFPekMsS0FBS3dDLEVBQUssR0FBRyxJQUlwQixJQUhBLElBQUlHLEVBQU1ILEVBQUtuQyxPQUNYckksRUFBSSxFQUVEQSxFQUFJMkssRUFBSzNLLElBS2R5SyxFQUFPekMsS0FBS3dDLEVBQUt4SyxHQUFJd0ssRUFBSyxHQUFHeEssSUFLakMsSUFBSTRLLEVBQVMsYUFBaUIsU0FBVUMsRUFBT0MsRUFBU0MsR0FDdEQsT0FBTyx3QkFBYyxJQUFhQyxTQUFVLE1BQU0sU0FBVUMsR0FDMUQsSUFBSUMsRUFBV1gsR0FBZU0sRUFBTU0sSUFBTWYsRUFDdENnQixFQUFZLEdBQ1pDLEVBQXNCLEdBQ3RCQyxFQUFjVCxFQUVsQixHQUFtQixNQUFmQSxFQUFNSSxNQUFlLENBR3ZCLElBQUssSUFBSTFKLEtBRlQrSixFQUFjLEdBRUVULEVBQ2RTLEVBQVkvSixHQUFPc0osRUFBTXRKLEdBRzNCK0osRUFBWUwsTUFBUUEsRUFHUyxrQkFBcEJKLEVBQU1PLFVBQ2ZBLEVBQVksWUFBb0JOLEVBQVFTLFdBQVlGLEVBQXFCUixFQUFNTyxXQUNuRCxNQUFuQlAsRUFBTU8sWUFDZkEsRUFBWVAsRUFBTU8sVUFBWSxLQUdoQyxJQUFJSSxFQUFhLFlBQWdCZixFQUFPZ0IsT0FBT0osR0FBc0JQLEVBQVFTLFdBQVlELEdBQzdFLFlBQWFSLEVBQVNVLEVBQWdDLGtCQUFiTixHQUNyREUsR0FBYU4sRUFBUXZKLElBQU0sSUFBTWlLLEVBQVdqTCxVQUVwQnVKLElBQXBCRCxJQUNGdUIsR0FBYSxJQUFNdkIsR0FHckIsSUFBSTZCLEVBQXlCbkIsUUFBcUNULElBQXRCRixFQUFrQ1AsRUFBNEI2QixHQUFZWixFQUNsSHFCLEVBQVcsR0FFZixJQUFLLElBQUlDLEtBQVFmLEVBQ1hOLEdBQXdCLE9BQVRxQixHQUduQkYsRUFBdUJFLEtBQ3JCRCxFQUFTQyxHQUFRZixFQUFNZSxJQVkzQixPQVJBRCxFQUFTUCxVQUFZQSxFQUNyQk8sRUFBU1osSUFBTUEsR0FBT0YsRUFBTWdCLFNBTWxCLHdCQUFjWCxFQUFVUyxTQXlCdEMsT0FyQkFmLEVBQU9rQixpQkFBaUNoQyxJQUFuQkgsRUFBK0JBLEVBQWlCLFdBQWdDLGtCQUFaUyxFQUF1QkEsRUFBVUEsRUFBUTBCLGFBQWUxQixFQUFRN0osTUFBUSxhQUFlLElBQ2hMcUssRUFBT21CLGFBQWV6QyxFQUFJeUMsYUFDMUJuQixFQUFPVCxlQUFpQlMsRUFDeEJBLEVBQU9QLGVBQWlCRCxFQUN4QlEsRUFBT0YsaUJBQW1CRCxFQUMxQkcsRUFBT1osc0JBQXdCSixFQUMvQmxKLE9BQU9DLGVBQWVpSyxFQUFRLFdBQVksQ0FDeEMzSixNQUFPLFdBTUwsTUFBTyxJQUFNNEksS0FJakJlLEVBQU9vQixjQUFnQixTQUFVQyxFQUFTQyxHQUN4QyxPQUFPekMsRUFBYXdDLE9BQXlCbkMsSUFBaEJvQyxFQUE0QjNDLEVBQWMsR0FBSUcsR0FBVyxHQUFJLEdBQUl3QyxHQUFleEMsR0FBU3pCLFdBQU0sRUFBUXdDLElBRy9IRyxJQ3pMWXBKLE9BRlosQ0FBQyxJQUFLLE9BQVEsVUFBVyxPQUFRLFVBQVcsUUFBUyxRQUFTLElBQUssT0FBUSxNQUFPLE1BQU8sTUFBTyxhQUFjLE9BQVEsS0FBTSxTQUFVLFNBQVUsVUFBVyxPQUFRLE9BQVEsTUFBTyxXQUFZLE9BQVEsV0FBWSxLQUFNLE1BQU8sVUFBVyxNQUFPLFNBQVUsTUFBTyxLQUFNLEtBQU0sS0FBTSxRQUFTLFdBQVksYUFBYyxTQUFVLFNBQVUsT0FBUSxLQUFNLEtBQU0sS0FBTSxLQUFNLEtBQU0sS0FBTSxPQUFRLFNBQVUsU0FBVSxLQUFNLE9BQVEsSUFBSyxTQUFVLE1BQU8sUUFBUyxNQUFPLE1BQU8sU0FBVSxRQUFTLFNBQVUsS0FBTSxPQUFRLE9BQVEsTUFBTyxPQUFRLFVBQVcsT0FBUSxXQUFZLE9BQVEsUUFBUyxNQUFPLFdBQVksU0FBVSxLQUFNLFdBQVksU0FBVSxTQUFVLElBQUssUUFBUyxVQUFXLE1BQU8sV0FBWSxJQUFLLEtBQU0sS0FBTSxPQUFRLElBQUssT0FBUSxTQUFVLFVBQVcsU0FBVSxRQUFTLFNBQVUsT0FBUSxTQUFVLFFBQVMsTUFBTyxVQUFXLE1BQU8sUUFBUyxRQUFTLEtBQU0sV0FBWSxRQUFTLEtBQU0sUUFBUyxPQUFRLFFBQVMsS0FBTSxRQUFTLElBQUssS0FBTSxNQUFPLFFBQVMsTUFDNzdCLFNBQVUsV0FBWSxPQUFRLFVBQVcsZ0JBQWlCLElBQUssUUFBUyxPQUFRLGlCQUFrQixPQUFRLE9BQVEsVUFBVyxVQUFXLFdBQVksaUJBQWtCLE9BQVEsT0FBUSxNQUFPLE9BQVEsU0FFaE0rRyxTQUFRLFNBQVU0RCxHQUNyQjNDLEVBQVUyQyxHQUFXM0MsRUFBVTJDLE1BRWxCLE8sNkJDUGYsdWVBSU8sU0FBU0MsSUFDZEMsWUFBUUMsS0FTSCxTQUFTQyxFQUFhQyxHQUMzQixPQUFPQSxFQUFJQyxRQUFVQyxFQUFhRixFQUFJRyxLQUdqQyxTQUFTRCxFQUFhRSxHQUMzQixPQUNFQSxFQUFLQyxXQUFXLGNBQ2hCRCxFQUFLQyxXQUFXLHdCQUNoQkQsRUFBS0MsV0FBVyxvQkFJYixTQUFTUCxJQUNkLElBQU1RLEVBQWlCQyxFQUFXLFlBRWxDLE9BREtELEdBQWdCRSxFQUFZLENBQUVDLFNBQVUsMkJBQ3RDSCxHQUFrQix5QkFTcEIsU0FBU0ksSUFDZCxPQUFPWixJQVBGLFdBQ0wsSUFBTWEsRUFBYUosRUFBVyxvQkFFOUIsT0FES0ksR0FBWUgsRUFBWSxDQUFFSSxpQkFBa0IsUUFDMUNELEdBQWMsTUFJQ0UsR0FRakIsU0FBU0MsSUFDZCxPQUFPUCxFQUFXLGdCQWNiLFNBQVNRLElBQ2QsSUFBSUMsRUFBV0MsVUFBVUMsVUFDckJELFVBQVVDLFVBQVUsR0FDcEJELFVBQVVELFVBQVlDLFVBQVVFLGFBSXBDLE9BQStCLEtBRi9CSCxFQUErQixxQkFBYkEsRUFBMkJBLEVBQVNJLGNBQWdCLE1BRXpEQyxRQUFRLE1BQW9CLEtBQ1YsSUFBM0JMLEVBQVNLLFFBQVEsTUFBb0IsS0FDVixJQUEzQkwsRUFBU0ssUUFBUSxNQUFvQixLQUNWLElBQTNCTCxFQUFTSyxRQUFRLE1BQW9CLEtBQ04sSUFBL0JMLEVBQVNLLFFBQVEsVUFBd0IsU0FDZCxJQUEzQkwsRUFBU0ssUUFBUSxNQUFvQixLQUNWLElBQTNCTCxFQUFTSyxRQUFRLE1BQW9CLEtBQ1YsSUFBM0JMLEVBQVNLLFFBQVEsTUFBb0IsS0FDVixJQUEzQkwsRUFBU0ssUUFBUSxNQUFvQixLQUNWLElBQTNCTCxFQUFTSyxRQUFRLE1BQW9CLEtBQ1YsSUFBM0JMLEVBQVNLLFFBQVEsTUFBb0IsS0FDUCxJQUE5QkwsRUFBU0ssUUFBUSxTQUF1QixRQUNWLElBQTlCTCxFQUFTSyxRQUFRLFNBQXVCLFFBQ1YsSUFBOUJMLEVBQVNLLFFBQVEsU0FBdUIsUUFDVixJQUE5QkwsRUFBU0ssUUFBUSxTQUF1QixRQUNyQyxLQVNGLFNBQVNDLEVBQWFDLEdBQzNCLE9BQU9BLEVBQUtDLGNBQ1JELEVBQUtDLGNBQ0xELEVBQUtFLE9BQU92TixPQUFPZ0gsS0FBS3FHLEVBQUtFLFFBQVEsSUFBSUMsSUFHeEMsU0FBU0MsRUFBaUJ4QixFQUFLeUIsR0FDcEMsR0FBS3pCLEVBQUwsQ0FDQSxJQUFNMEIsRUFBY0QsRUFBUyxVQUFNQSxFQUFVRSxNQUFoQixZQUF5QkYsRUFBVUcsUUFBVyxHQUNyRUMsRUFBYUMsbUJBQW1COUIsRUFBSStCLFFBQVEsS0FBTSxRQUNsREMsRUFBUSxVQUFNSCxHQUVwQixNQUFNLEdBQU4sT0FEaUIsaUNBQ2pCLFlBQXNCSCxFQUF0QixpQ0FBMERNLElBT3JELFNBQVNDLEVBQWVDLEVBQU1DLEdBQ25DLE9BQU9ELEVBQUtoSCxRQUFPLFNBQUN5QixHQUFELE9BQVNBLEVBQUkvSSxPQUFTdU8sS0FBVXpHLE9BRzlDLFNBQVMwRSxFQUFXeEwsR0FDekIsT0FBT3dOLGFBQWFDLFFBQVF6TixHQUd2QixTQUFTeUwsRUFBWWlDLEdBQzFCdk8sT0FBT2dILEtBQUt1SCxHQUFRMUcsU0FBUSxTQUFVaEgsR0FDcEN3TixhQUFhRyxRQUFRM04sRUFBSzBOLEVBQU8xTixPQUk5QixTQUFTNE4sRUFBZUYsR0FDN0JBLEVBQU8xRyxTQUFRLFNBQVVoSCxHQUN2QndOLGFBQWFLLFdBQVc3TixNQUlyQixTQUFTOE4sSUFDZEMsT0FBT0MsS0FBS0MsTUFDVixDQUFFN0MsSUFBSyw4Q0FDUCxTQUFDNEMsR0FDQ0QsT0FBT0MsS0FBS0UsT0FBT0YsRUFBS0csS0FBSSxTQUFDbEQsR0FBRCxPQUFTQSxFQUFJbUQsWSw4QkN4SS9DLHFLQXlDQSxJQUFNQyxFQXZCTixXQUNFLElBQU1DLEVBQWdCLENBQ3BCQyxLQUNBQyxLQUNBQyxLQUNBQyxTQUNBQyxLQUNBQyxLQUNBQyxLQUNBQyxLQUNBQyxLQUNBQyxLQUNBQyxRQUNBQyxRQUNBQyxLQUNBQyxRQUNBQyxTQUlGLE9BQU9mLEVBRGlCdEMsZ0JBQ2lCc0MsRUFBYSxHQUdqQ2dCLEdBRWhCLFNBQVNDLEVBQVNDLEVBQVNDLEdBQ2hDLE9BQU9wQixFQUFlbUIsR0FBU0MsSyw2QkM1Q2pDLGtOQThETyxTQUFTQyxFQUFZQyxHQUMxQixHQUFzQixxQkFBWEMsT0FDVCxPQUFPQSxPQUFPQyxVQUFVQyxnQkFBZ0JILEVBQVFJLEtBQU1KLEVBQVFLLFNBR2hFakMsT0FBT2tDLFFBQVFQLFlBQVlDLEdBVXRCLFNBQVNPLElBQ2QsT0FBT25DLE9BQU9tQyxRQU9ULFNBQVNwRixFQUFRTSxHQUN0QjJDLE9BQU9DLEtBQUtDLE1BQU0sQ0FBRS9DLFFBQVEsRUFBTWlGLGVBQWUsSUFBUSxTQUFTbEYsR0FDaEU4QyxPQUFPQyxLQUFLb0MsT0FBT25GLEVBQUksR0FBR21ELEdBQUksQ0FBRWhELFdBSTdCLFNBQVNpRixFQUFlakYsRUFBS2tGLEdBQ2xDLElBQUlDLEdBQWlDLElBQWpCRCxFQUNwQixPQUFPdkMsT0FBT0MsS0FBS2pPLE9BQU8sQ0FBRXFMLElBQUtBLEVBQUtGLE9BQVFxRixJQU96QyxTQUFTQyxFQUFlQyxFQUFPQyxHQUNwQyxJQUdNQyxFQUZKQyxPQUFPQyxZQUNQRCxPQUFPQyxXQUFXLGdDQUFnQ0MsUUFDckIsUUFBVSxHQUVuQ0MsRUFBYSxpQkFBYUwsR0FBYixPQUF3QkMsRUFBeEIsV0FDYkssRUFBVyxpQkFBYU4sR0FBYixPQUF3QkMsRUFBeEIsV0FFakI1QyxPQUFPa0QsY0FBY0MsUUFBUSxDQUMzQlQsUUFDQVUsS0FBTSxDQUNKLEdBQU1KLEVBQ04sR0FBTUMsS0FLTCxTQUFTSSxFQUFrQlgsRUFBT1ksR0FFbkNiLEVBQWVDLEVBRG5CWSxFQUMwQiw0QkFDQSx1QkFjckIsU0FBUzdGLEVBQVd4TCxHQUN6QixPQUFPd04sYUFBYUMsUUFBUXpOLEsscURDcElmLFNBQVNzUixFQUFtQkMsR0FDekMsT0NKYSxTQUE0QkEsR0FDekMsR0FBSUMsTUFBTUMsUUFBUUYsR0FBTSxPQUFPLE9BQUFHLEVBQUEsR0FBaUJILEdER3pDLENBQWtCQSxJRUxaLFNBQTBCSSxHQUN2QyxHQUFzQixxQkFBWG5TLFFBQTBCQSxPQUFPb1MsWUFBWXpTLE9BQU93UyxHQUFPLE9BQU9ILE1BQU1LLEtBQUtGLEdGSXZELENBQWdCSixJQUFRLE9BQUFPLEVBQUEsR0FBMkJQLElHTHZFLFdBQ2IsTUFBTSxJQUFJUSxVQUFVLHdJSEl3RSxHQUw5RixtQyw2QklBZSxTQUFTQyxFQUFrQlQsRUFBS25JLElBQ2xDLE1BQVBBLEdBQWVBLEVBQU1tSSxFQUFJekssVUFBUXNDLEVBQU1tSSxFQUFJekssUUFFL0MsSUFBSyxJQUFJckksRUFBSSxFQUFHd1QsRUFBTyxJQUFJVCxNQUFNcEksR0FBTTNLLEVBQUkySyxFQUFLM0ssSUFDOUN3VCxFQUFLeFQsR0FBSzhTLEVBQUk5UyxHQUdoQixPQUFPd1QsRUFQVCxtQyw2QkNBZSxTQUFTQyxFQUFnQkMsRUFBVUMsR0FDaEQsS0FBTUQsYUFBb0JDLEdBQ3hCLE1BQU0sSUFBSUwsVUFBVSxxQ0FGeEIsbUMsNkJDQUEsU0FBU00sRUFBa0J6TCxFQUFRMEMsR0FDakMsSUFBSyxJQUFJN0ssRUFBSSxFQUFHQSxFQUFJNkssRUFBTXhDLE9BQVFySSxJQUFLLENBQ3JDLElBQUk2VCxFQUFhaEosRUFBTTdLLEdBQ3ZCNlQsRUFBV2pULFdBQWFpVCxFQUFXalQsYUFBYyxFQUNqRGlULEVBQVdDLGNBQWUsRUFDdEIsVUFBV0QsSUFBWUEsRUFBV0UsVUFBVyxHQUNqRHJULE9BQU9DLGVBQWV3SCxFQUFRMEwsRUFBV3RTLElBQUtzUyxJQUluQyxTQUFTRyxFQUFhTCxFQUFhTSxFQUFZQyxHQUc1RCxPQUZJRCxHQUFZTCxFQUFrQkQsRUFBWS9SLFVBQVdxUyxHQUNyREMsR0FBYU4sRUFBa0JELEVBQWFPLEdBQ3pDUCxFQWJULG1DLDZCQ0FlLFNBQVNRLEVBQWdCMVQsR0FJdEMsT0FIQTBULEVBQWtCelQsT0FBTzBULGVBQWlCMVQsT0FBTzJULGVBQWlCLFNBQXlCNVQsR0FDekYsT0FBT0EsRUFBRTZULFdBQWE1VCxPQUFPMlQsZUFBZTVULEtBRXZCQSxHQ0pWLFNBQVM4VCxJQUN0QixHQUF1QixxQkFBWkMsVUFBNEJBLFFBQVFDLFVBQVcsT0FBTyxFQUNqRSxHQUFJRCxRQUFRQyxVQUFVQyxLQUFNLE9BQU8sRUFDbkMsR0FBcUIsb0JBQVZDLE1BQXNCLE9BQU8sRUFFeEMsSUFFRSxPQURBQyxLQUFLaFQsVUFBVWlULFNBQVMxVSxLQUFLcVUsUUFBUUMsVUFBVUcsS0FBTSxJQUFJLGlCQUNsRCxFQUNQLE1BQU9FLEdBQ1AsT0FBTyxHQ1RJLFNBQVNDLEVBQVFDLEdBYTlCLE9BVEVELEVBRG9CLG9CQUFYaFUsUUFBb0Qsa0JBQXBCQSxPQUFPb1MsU0FDdEMsU0FBaUI2QixHQUN6QixjQUFjQSxHQUdOLFNBQWlCQSxHQUN6QixPQUFPQSxHQUF5QixvQkFBWGpVLFFBQXlCaVUsRUFBSUMsY0FBZ0JsVSxRQUFVaVUsSUFBUWpVLE9BQU9hLFVBQVksZ0JBQWtCb1QsSUFJOUdBLEdDWEYsU0FBU0UsRUFBMkJDLEVBQU1oVixHQUN2RCxPQUFJQSxHQUEyQixXQUFsQjRVLEVBQVE1VSxJQUFzQyxvQkFBVEEsRUNIckMsU0FBZ0NnVixHQUM3QyxRQUFhLElBQVRBLEVBQ0YsTUFBTSxJQUFJQyxlQUFlLDZEQUczQixPQUFPRCxFREVBLENBQXNCQSxHQUhwQmhWLEVFREksU0FBU2tWLEVBQWFDLEdBQ25DLE9BQU8sV0FDTCxJQUNJQyxFQURBQyxFQUFRLEVBQWVGLEdBRzNCLEdBQUksSUFBNEIsQ0FDOUIsSUFBSUcsRUFBWSxFQUFlQyxNQUFNVCxZQUNyQ00sRUFBU2YsUUFBUUMsVUFBVWUsRUFBT3BOLFVBQVdxTixRQUU3Q0YsRUFBU0MsRUFBTXZOLE1BQU15TixLQUFNdE4sV0FHN0IsT0FBTyxFQUEwQnNOLEtBQU1ILElBZjNDLG1DLDZCQ0FlLFNBQVNJLEVBQWdCbFYsRUFBR3FCLEdBTXpDLE9BTEE2VCxFQUFrQmpWLE9BQU8wVCxnQkFBa0IsU0FBeUIzVCxFQUFHcUIsR0FFckUsT0FEQXJCLEVBQUU2VCxVQUFZeFMsRUFDUHJCLElBR2NBLEVBQUdxQixHQ0xiLFNBQVM4VCxFQUFVQyxFQUFVQyxHQUMxQyxHQUEwQixvQkFBZkEsR0FBNEMsT0FBZkEsRUFDdEMsTUFBTSxJQUFJeEMsVUFBVSxzREFHdEJ1QyxFQUFTalUsVUFBWWxCLE9BQU9ZLE9BQU93VSxHQUFjQSxFQUFXbFUsVUFBVyxDQUNyRXFULFlBQWEsQ0FDWGhVLE1BQU80VSxFQUNQOUIsVUFBVSxFQUNWRCxjQUFjLEtBR2RnQyxHQUFZLEVBQWVELEVBQVVDLEdBYjNDLG1DLDJLQ3NCTyxTQUFTQyxFQUFhcEosR0FJM0IsT0FIY0EsRUFBSXFKLE1BQ2hCLDBEQUVXLEdBVVIsU0FBU0MsRUFBV0MsR0FDekIsTUFBNkMsc0JBQXRDeFYsT0FBT2tCLFVBQVVpVCxTQUFTMVUsS0FBSytWLEdBR2pDLFNBQVNDLEVBQWVDLEdBQzdCLE9BQU9BLEVBQVd2TyxRQUFPLFNBQUE1RyxHQUFLLE9BQUlBLEdBQTBCLHFCQUFWQSxLQXlDN0MsU0FBU29WLEVBQVFwVixHQUN0QixPQUNZLElBQVZBLEdBQ1UsU0FBVkEsR0FDVSxJQUFWQSxHQUN3QixJQUF4QnFWLFNBQVNyVixFQUFPLE0sNkJDakNMLE1BbkRmLFNBQWlCc1YsR0FZZixJQU5BLElBRUlDLEVBRkFDLEVBQUksRUFHSnpXLEVBQUksRUFDSjJLLEVBQU00TCxFQUFJbE8sT0FFUHNDLEdBQU8sSUFBSzNLLEVBQUcySyxHQUFPLEVBRTNCNkwsRUFFZSxZQUFWLE9BSExBLEVBQXdCLElBQXBCRCxFQUFJck4sV0FBV2xKLElBQW1DLElBQXRCdVcsRUFBSXJOLGFBQWFsSixLQUFjLEdBQTJCLElBQXRCdVcsRUFBSXJOLGFBQWFsSixLQUFjLElBQTRCLElBQXRCdVcsRUFBSXJOLGFBQWFsSixLQUFjLE1BRzlGLE9BQVp3VyxJQUFNLEtBQWdCLElBSXBEQyxFQUVlLFlBQVYsT0FMTEQsR0FFQUEsSUFBTSxNQUdvQyxPQUFaQSxJQUFNLEtBQWdCLElBRXJDLFlBQVYsTUFBSkMsSUFBeUMsT0FBWkEsSUFBTSxLQUFnQixJQUl0RCxPQUFROUwsR0FDTixLQUFLLEVBQ0g4TCxJQUE4QixJQUF4QkYsRUFBSXJOLFdBQVdsSixFQUFJLEtBQWMsR0FFekMsS0FBSyxFQUNIeVcsSUFBOEIsSUFBeEJGLEVBQUlyTixXQUFXbEosRUFBSSxLQUFjLEVBRXpDLEtBQUssRUFFSHlXLEVBRWUsWUFBVixPQUhMQSxHQUF5QixJQUFwQkYsRUFBSXJOLFdBQVdsSixNQUdzQixPQUFaeVcsSUFBTSxLQUFnQixJQVN4RCxTQUhBQSxFQUVlLFlBQVYsT0FITEEsR0FBS0EsSUFBTSxNQUcrQixPQUFaQSxJQUFNLEtBQWdCLEtBQ3ZDQSxJQUFNLE1BQVEsR0FBRzVCLFNBQVMsS0NIMUIsRUFoREksQ0FDakI2Qix3QkFBeUIsRUFDekJDLGtCQUFtQixFQUNuQkMsaUJBQWtCLEVBQ2xCQyxpQkFBa0IsRUFDbEJDLFFBQVMsRUFDVEMsYUFBYyxFQUNkQyxnQkFBaUIsRUFDakJDLFlBQWEsRUFDYkMsUUFBUyxFQUNUQyxLQUFNLEVBQ05DLFNBQVUsRUFDVkMsYUFBYyxFQUNkQyxXQUFZLEVBQ1pDLGFBQWMsRUFDZEMsVUFBVyxFQUNYQyxRQUFTLEVBQ1RDLFdBQVksRUFDWkMsWUFBYSxFQUNiQyxhQUFjLEVBQ2RDLFdBQVksRUFDWkMsY0FBZSxFQUNmQyxlQUFnQixFQUNoQkMsZ0JBQWlCLEVBQ2pCQyxVQUFXLEVBQ1hDLGNBQWUsRUFDZkMsYUFBYyxFQUNkQyxpQkFBa0IsRUFDbEJDLFdBQVksRUFDWkMsV0FBWSxFQUNaQyxRQUFTLEVBQ1RDLE1BQU8sRUFDUEMsUUFBUyxFQUNUQyxRQUFTLEVBQ1RDLE9BQVEsRUFDUkMsT0FBUSxFQUNSQyxLQUFNLEVBQ05DLGdCQUFpQixFQUVqQkMsWUFBYSxFQUNiQyxhQUFjLEVBQ2RDLFlBQWEsRUFDYkMsZ0JBQWlCLEVBQ2pCQyxpQkFBa0IsRUFDbEJDLGlCQUFrQixFQUNsQkMsY0FBZSxFQUNmQyxZQUFhLEcsUUM5Q2Ysa0NBR0EsSUFFSUMsRUFBaUIsYUFDakJDLEVBQWlCLDhCQUVqQkMsRUFBbUIsU0FBMEI5WCxHQUMvQyxPQUFrQyxLQUEzQkEsRUFBU3VILFdBQVcsSUFHekJ3USxFQUFxQixTQUE0QnpZLEdBQ25ELE9BQWdCLE1BQVRBLEdBQWtDLG1CQUFWQSxHQUc3QjBZLEVBQW1CLGFBQVEsU0FBVUMsR0FDdkMsT0FBT0gsRUFBaUJHLEdBQWFBLEVBQVlBLEVBQVVsTCxRQUFRNkssRUFBZ0IsT0FBTzNMLGlCQUd4RixFQUFvQixTQUEyQnJNLEVBQUtOLEdBQ3RELE9BQVFNLEdBQ04sSUFBSyxZQUNMLElBQUssZ0JBRUQsR0FBcUIsa0JBQVZOLEVBQ1QsT0FBT0EsRUFBTXlOLFFBQVE4SyxHQUFnQixTQUFVeEQsRUFBTzZELEVBQUlDLEdBTXhELE9BTEFDLEVBQVMsQ0FDUHhaLEtBQU1zWixFQUNOcFAsT0FBUXFQLEVBQ1JFLEtBQU1ELEdBRURGLEtBTWpCLE9BQXNCLElBQWxCLEVBQVN0WSxJQUFla1ksRUFBaUJsWSxJQUF5QixrQkFBVk4sR0FBZ0MsSUFBVkEsRUFJM0VBLEVBSEVBLEVBQVEsTUFvQ25CLFNBQVNnWixFQUFvQjNPLEVBQWFDLEVBQVkyTyxFQUFlQyxHQUNuRSxHQUFxQixNQUFqQkQsRUFDRixNQUFPLEdBR1QsUUFBdUNwUSxJQUFuQ29RLEVBQWN4UCxpQkFLaEIsT0FBT3dQLEVBR1QsY0FBZUEsR0FDYixJQUFLLFVBRUQsTUFBTyxHQUdYLElBQUssU0FFRCxHQUEyQixJQUF2QkEsRUFBY0UsS0FNaEIsT0FMQUwsRUFBUyxDQUNQeFosS0FBTTJaLEVBQWMzWixLQUNwQmtLLE9BQVF5UCxFQUFjelAsT0FDdEJ1UCxLQUFNRCxHQUVERyxFQUFjM1osS0FHdkIsUUFBNkJ1SixJQUF6Qm9RLEVBQWN6UCxPQUFzQixDQUN0QyxJQUFJdVAsRUFBT0UsRUFBY0YsS0FFekIsUUFBYWxRLElBQVRrUSxFQUdGLFVBQWdCbFEsSUFBVGtRLEdBQ0xELEVBQVMsQ0FDUHhaLEtBQU15WixFQUFLelosS0FDWGtLLE9BQVF1UCxFQUFLdlAsT0FDYnVQLEtBQU1ELEdBRVJDLEVBQU9BLEVBQUtBLEtBVWhCLE9BTmFFLEVBQWN6UCxPQUFTLElBU3RDLE9BaURSLFNBQWdDYSxFQUFhQyxFQUFZeUosR0FDdkQsSUFBSWhFLEVBQVMsR0FFYixHQUFJK0IsTUFBTUMsUUFBUWdDLEdBQ2hCLElBQUssSUFBSWhWLEVBQUksRUFBR0EsRUFBSWdWLEVBQUkzTSxPQUFRckksSUFDOUJnUixHQUFVaUosRUFBb0IzTyxFQUFhQyxFQUFZeUosRUFBSWhWLElBQUksUUFHakUsSUFBSyxJQUFJNEwsS0FBUW9KLEVBQUssQ0FDcEIsSUFBSS9ULEVBQVErVCxFQUFJcEosR0FFaEIsR0FBcUIsa0JBQVYzSyxFQUNTLE1BQWRzSyxRQUE0Q3pCLElBQXRCeUIsRUFBV3RLLEdBQ25DK1AsR0FBVXBGLEVBQU8sSUFBTUwsRUFBV3RLLEdBQVMsSUFDbEN5WSxFQUFtQnpZLEtBQzVCK1AsR0FBVTJJLEVBQWlCL04sR0FBUSxJQUFNLEVBQWtCQSxFQUFNM0ssR0FBUyxVQU81RSxJQUFJOFIsTUFBTUMsUUFBUS9SLElBQThCLGtCQUFiQSxFQUFNLElBQWtDLE1BQWRzSyxRQUErQ3pCLElBQXpCeUIsRUFBV3RLLEVBQU0sSUFNN0YsQ0FDTCxJQUFJb1osRUFBZUosRUFBb0IzTyxFQUFhQyxFQUFZdEssR0FBTyxHQUV2RSxPQUFRMkssR0FDTixJQUFLLFlBQ0wsSUFBSyxnQkFFRG9GLEdBQVUySSxFQUFpQi9OLEdBQVEsSUFBTXlPLEVBQWUsSUFDeEQsTUFHSixRQU1JckosR0FBVXBGLEVBQU8sSUFBTXlPLEVBQWUsVUF0QjVDLElBQUssSUFBSUMsRUFBSyxFQUFHQSxFQUFLclosRUFBTW9ILE9BQVFpUyxJQUM5QlosRUFBbUJ6WSxFQUFNcVosTUFDM0J0SixHQUFVMkksRUFBaUIvTixHQUFRLElBQU0sRUFBa0JBLEVBQU0zSyxFQUFNcVosSUFBTyxLQTRCMUYsT0FBT3RKLEVBdEdNdUosQ0FBdUJqUCxFQUFhQyxFQUFZMk8sR0FHM0QsSUFBSyxXQUVELFFBQW9CcFEsSUFBaEJ3QixFQUEyQixDQUM3QixJQUFJa1AsRUFBaUJULEVBQ2pCeEUsRUFBUzJFLEVBQWM1TyxHQUUzQixPQURBeU8sRUFBU1MsRUFDRlAsRUFBb0IzTyxFQUFhQyxFQUFZZ0ssRUFBUTRFLEdBSzlELE1BR0osSUFBSyxVQWtCUCxHQUFrQixNQUFkNU8sRUFDRixPQUFPMk8sRUFHVCxJQUFJTyxFQUFTbFAsRUFBVzJPLEdBT3hCLFlBQWtCcFEsSUFBWDJRLEdBQXlCTixFQUF3Q0QsRUFBVE8sRUEyRGpFLElBU0lWLEVBVEFXLEVBQWUsNkJBV25CLElBQUksRUFBa0IsU0FBeUJsUSxFQUFNZSxFQUFZRCxHQUMvRCxHQUFvQixJQUFoQmQsRUFBS25DLFFBQW1DLGtCQUFabUMsRUFBSyxJQUErQixPQUFaQSxFQUFLLFNBQWtDVixJQUFuQlUsRUFBSyxHQUFHQyxPQUNsRixPQUFPRCxFQUFLLEdBR2QsSUFBSW1RLEdBQWEsRUFDYmxRLEVBQVMsR0FDYnNQLE9BQVNqUSxFQUNULElBQUluQixFQUFVNkIsRUFBSyxHQUVKLE1BQVg3QixRQUFtQ21CLElBQWhCbkIsRUFBUUMsS0FDN0IrUixHQUFhLEVBQ2JsUSxHQUFVd1AsRUFBb0IzTyxFQUFhQyxFQUFZNUMsR0FBUyxJQU1oRThCLEdBQVU5QixFQUFRLEdBSXBCLElBQUssSUFBSTNJLEVBQUksRUFBR0EsRUFBSXdLLEVBQUtuQyxPQUFRckksSUFDL0J5SyxHQUFVd1AsRUFBb0IzTyxFQUFhQyxFQUFZZixFQUFLeEssR0FBNkMsS0FBekN5SyxFQUFPdkIsV0FBV3VCLEVBQU9wQyxPQUFTLElBRTlGc1MsSUFLRmxRLEdBQVU5QixFQUFRM0ksSUFjdEIwYSxFQUFhRSxVQUFZLEVBSXpCLElBSEEsSUFDSTVFLEVBREFyTSxFQUFpQixHQUcwQixRQUF2Q3FNLEVBQVEwRSxFQUFhRyxLQUFLcFEsS0FDaENkLEdBQWtCLElBQ2xCcU0sRUFBTSxHQWtCUixNQUFPLENBQ0x6VixLQWhCUyxFQUFXa0ssR0FBVWQsRUFpQjlCYyxPQUFRQSxFQUNSdVAsS0FBTUQsSyw2QkM3VFYsb0VBRUEsU0FBU2UsRUFBb0J2UCxFQUFZd1AsRUFBa0JDLEdBQ3pELElBQUlDLEVBQWUsR0FRbkIsT0FQQUQsRUFBV0UsTUFBTSxLQUFLM1MsU0FBUSxTQUFVNkMsUUFDUnRCLElBQTFCeUIsRUFBV0gsR0FDYjJQLEVBQWlCL1MsS0FBS3VELEVBQVdILElBRWpDNlAsR0FBZ0I3UCxFQUFZLE9BR3pCNlAsRUFHVCxJQUFJRSxFQUFlLFNBQXNCQyxFQUFPNVAsRUFBWTZQLEdBQzFELElBQUlqUSxFQUFZZ1EsRUFBTTdaLElBQU0sSUFBTWlLLEVBQVdqTCxLQWU3QyxJQVJpQixJQUFoQjhhLFFBSXFGdlIsSUFBaENzUixFQUFNN1AsV0FBV0gsS0FDckVnUSxFQUFNN1AsV0FBV0gsR0FBYUksRUFBV2YsYUFHSFgsSUFBcENzUixFQUFNRSxTQUFTOVAsRUFBV2pMLE1BQXFCLENBQ2pELElBQUlnYixFQUFVL1AsRUFFZCxFQUFHLENBQ2lCNFAsRUFBTUksT0FBTyxJQUFNcFEsRUFBV21RLEVBQVNILEVBQU1LLE9BQU8sR0FDdEVGLEVBQVVBLEVBQVF2QixnQkFDQ2xRLElBQVp5UixNLHdEQ3BDQUcsRUFBWSxXQUE2QixJQUE1QkMsRUFBMkIsdURBQVAsR0FDNUMsT0FBTyxhQUNMQyxRQUFTLGVBQ1RDLGNBQWUsU0FDZnZOLE1BQU8sT0FDUEMsT0FBUSxPQUNSdU4sWUFBYSxNQUNiQyxLQUFNLGVBQ056RCxXQUFZLE9BQ1RxRCxJQ05NSyxFQUFRLFNBQUF2UixHQUNuQixPQUNFLHlCQUNFd1IsTUFBT1AsRUFBVWpSLEdBQ2pCeVIsTUFBTSw2QkFDTkMsUUFBUSxhQUNSLDBCQUFNN2IsRUFBRSw2eEJDTkQ4YixFQUFjLFNBQUEzUixHQUN6QixPQUNFLHlCQUFLd1IsTUFBT1AsRUFBVWpSLEdBQVMwUixRQUFRLGVBQ3JDLDBCQUFNN2IsRUFBRSwwakJDSEQrYixFQUFVLFdBQ3JCLE9BQ0UseUJBQUtKLE1BQU9QLElBQWFTLFFBQVEsYUFDL0IsMEJBQU03YixFQUFFLDIwQkFBMjBCcVAsR0FBRyxxQkNILzBCMk0sRUFBYSxTQUFBN1IsR0FDeEIsT0FDRSx5QkFDRXdSLE1BQU9QLEVBQVVqUixHQUNqQnlSLE1BQU0sNkJBQ05DLFFBQVEsYUFDUiwwQkFBTTdiLEVBQUUsZ01DTkRpYyxFQUFPLFNBQUE5UixHQUNsQixPQUNFLHlCQUNFd1IsTUFBT1AsRUFBVWpSLEdBQ2pCeVIsTUFBTSw2QkFDTkMsUUFBUSxhQUNSLDBCQUFNN2IsRUFBRSx3WkNORGtjLEVBQVUsU0FBQS9SLEdBQ3JCLE9BQ0UseUJBQ0V3UixNQUFPUCxFQUFValIsR0FDakJ5UixNQUFNLDZCQUNOQyxRQUFRLGFBQ1IsMEJBQU03YixFQUFFLG0yQkNORG1jLEVBQWEsU0FBQWhTLEdBQ3hCLE9BQ0UseUJBQUt3UixNQUFPUCxFQUFValIsR0FBUzBSLFFBQVEsYUFDckMsMEJBQU03YixFQUFFLG9ZQ0hEb2MsRUFBTSxTQUFBalMsR0FDakIsT0FDRSx5QkFBS3dSLE1BQU9QLEVBQVVqUixHQUFTMFIsUUFBUSxhQUNyQywwQkFBTTdiLEVBQUUsc05DSERxYyxFQUFXLFdBQ3RCLE9BQ0UseUJBQ0VWLE1BQU9QLEVBQVUsQ0FBRUksWUFBYSxFQUFHeE4sTUFBTyxPQUFRQyxPQUFRLFNBQzFENE4sUUFBUSxlQUNSLDBCQUFNN2IsRUFBRSx5TkNMRHNjLEVBQWEsU0FBQW5TLEdBQ3hCLE9BQ0UseUJBQ0V3UixNQUFPUCxFQUFValIsR0FDakJ5UixNQUFNLDZCQUNOQyxRQUFRLGFBQ1IsMEJBQ0VKLEtBQUssVUFDTGMsTUFBTSxTQUNOQyxJQUFJLFNBQ0p4YyxFQUFFLGdQQ1ZHeWMsRUFBZSxTQUFBdFMsR0FDMUIsT0FDRSx5QkFBS3dSLE1BQU9QLEVBQVVqUixHQUFTMFIsUUFBUSxhQUNyQywwQkFBTTdiLEVBQUUsdUZBQ1IsMEJBQU1BLEVBQUUsK1dDSkQwYyxFQUFTLFdBQ3BCLE9BQ0UseUJBQUtmLE1BQU9QLElBQWFTLFFBQVEsYUFDL0IsMEJBQU03YixFQUFFLG9qQkFBb2pCcVAsR0FBRyxxQkNIeGpCc04sRUFBTyxTQUFBeFMsR0FDbEIsT0FDRSx5QkFDRXdSLE1BQU9QLEVBQVVqUixHQUNqQlcsVUFBVSxpQkFDVjhRLE1BQU0sNkJBQ05DLFFBQVEsYUFDUiwwQkFDRVcsSUFBSSxpQkFDSnhjLEVBQUUsZ1BDWlYsMmIsNkJDQUEsc0NBQ1F3RixFQURSLEtBQ21CUCxFQUFYTyxPQVFLb1gsRUFBYSxDQUN4QkMsa0JBQ0Usd0lBT2lCLDJCQUF1QnJYLEVBQXZCLFVBQ0osMkJBQXVCQSxFQUF2QixVQUNNLDJCQUF1QkEsRUFBdkIsV0FDQSwyQkFBdUJBLEVBQXZCLFVBT1Qsa0JBQUQsT0FBb0JBLEVBQXBCLFVBQ08sa0JBQUQsT0FBb0JBLEVBQXBCLFVBRUEsa0JBQUQsT0FBb0JBLEVBQXBCLFdBQ0gsa0JBQUQsT0FBb0JBLEVBQXBCLFVBQ08sa0JBQUQsT0FBb0JBLEVBQXBCLFdBRUYsa0JBQUQsT0FBb0JBLEVBQXBCLFdBQ0gsa0JBQUQsT0FBb0JBLEVBQXBCLFdBQ08sa0JBQUQsT0FBb0JBLEVBQXBCLFVBQ0Msa0JBQUQsT0FBb0JBLEVBQXBCLFVBT0Esd0JBQUQsT0FBMEJBLEVBQTFCLFVBQ0ksb0JBQUQsT0FBc0JBLEVBQXRCLFMsNkJDOUNyQiw4Q0FDZSxTQUFTc1gsRUFBNEIzYyxFQUFHNGMsR0FDckQsR0FBSzVjLEVBQUwsQ0FDQSxHQUFpQixrQkFBTkEsRUFBZ0IsT0FBTyxZQUFpQkEsRUFBRzRjLEdBQ3RELElBQUk1YixFQUFJZixPQUFPa0IsVUFBVWlULFNBQVMxVSxLQUFLTSxHQUFHb0ksTUFBTSxHQUFJLEdBRXBELE1BRFUsV0FBTnBILEdBQWtCaEIsRUFBRXdVLGNBQWF4VCxFQUFJaEIsRUFBRXdVLFlBQVkxVSxNQUM3QyxRQUFOa0IsR0FBcUIsUUFBTkEsRUFBb0JzUixNQUFNSyxLQUFLM1IsR0FDeEMsY0FBTkEsR0FBcUIsMkNBQTJDd0gsS0FBS3hILEdBQVcsWUFBaUJoQixFQUFHNGMsUUFBeEcsSyw2QkNQYSxTQUFTQyxFQUFnQnRJLEVBQUt6VCxFQUFLTixHQVloRCxPQVhJTSxLQUFPeVQsRUFDVHRVLE9BQU9DLGVBQWVxVSxFQUFLelQsRUFBSyxDQUM5Qk4sTUFBT0EsRUFDUEwsWUFBWSxFQUNaa1QsY0FBYyxFQUNkQyxVQUFVLElBR1ppQixFQUFJelQsR0FBT04sRUFHTitULEVBWlQsbUMsNkJDQUEsa0NBb0RBLElBQUl1SSxFQUEwQixXQUM1QixTQUFTQSxFQUFXN1QsR0FDbEJnTSxLQUFLOEgsY0FBOEIxVCxJQUFuQkosRUFBUStULFFBQStEL1QsRUFBUStULE9BQy9GL0gsS0FBS2dJLEtBQU8sR0FDWmhJLEtBQUtpSSxJQUFNLEVBQ1hqSSxLQUFLa0ksTUFBUWxVLEVBQVFrVSxNQUVyQmxJLEtBQUtuVSxJQUFNbUksRUFBUW5JLElBQ25CbVUsS0FBS21JLFVBQVluVSxFQUFRbVUsVUFDekJuSSxLQUFLb0ksT0FBUyxLQUdoQixJQUFJQyxFQUFTUixFQUFXM2IsVUFpRXhCLE9BL0RBbWMsRUFBT3ZDLE9BQVMsU0FBZ0J3QyxHQUk5QixHQUFJdEksS0FBS2lJLEtBQU9qSSxLQUFLOEgsU0FBVyxLQUFRLEtBQU8sRUFBRyxDQUNoRCxJQUVJTSxFQUZBRyxFQS9CVixTQUE0QnZVLEdBQzFCLElBQUlKLEVBQU00VSxTQUFTQyxjQUFjLFNBUWpDLE9BUEE3VSxFQUFJOFUsYUFBYSxlQUFnQjFVLEVBQVFuSSxVQUVuQnVJLElBQWxCSixFQUFRa1UsT0FDVnRVLEVBQUk4VSxhQUFhLFFBQVMxVSxFQUFRa1UsT0FHcEN0VSxFQUFJK1UsWUFBWUgsU0FBU0ksZUFBZSxLQUNqQ2hWLEVBc0JRaVYsQ0FBbUI3SSxNQUs1Qm9JLEVBRHVCLElBQXJCcEksS0FBS2dJLEtBQUtyVixPQUNIcU4sS0FBS29JLE9BRUxwSSxLQUFLZ0ksS0FBS2hJLEtBQUtnSSxLQUFLclYsT0FBUyxHQUFHbVcsWUFHM0M5SSxLQUFLbUksVUFBVVksYUFBYVIsRUFBTUgsR0FDbENwSSxLQUFLZ0ksS0FBSzFWLEtBQUtpVyxHQUdqQixJQUFJM1UsRUFBTW9NLEtBQUtnSSxLQUFLaEksS0FBS2dJLEtBQUtyVixPQUFTLEdBRXZDLEdBQUlxTixLQUFLOEgsU0FBVSxDQUNqQixJQUFJL0IsRUFqRVYsU0FBcUJuUyxHQUNuQixHQUFJQSxFQUFJbVMsTUFFTixPQUFPblMsRUFBSW1TLE1BTWIsSUFBSyxJQUFJemIsRUFBSSxFQUFHQSxFQUFJa2UsU0FBU1EsWUFBWXJXLE9BQVFySSxJQUMvQyxHQUFJa2UsU0FBU1EsWUFBWTFlLEdBQUcyZSxZQUFjclYsRUFFeEMsT0FBTzRVLFNBQVNRLFlBQVkxZSxHQXFEaEI0ZSxDQUFZdFYsR0FFeEIsSUFLRSxJQUFJdVYsRUFBc0MsTUFBdkJiLEVBQUs5VSxXQUFXLElBQXFDLEtBQXZCOFUsRUFBSzlVLFdBQVcsR0FHakV1UyxFQUFNcUQsV0FBV2QsRUFTakJhLEVBQWUsRUFBSXBELEVBQU1zRCxTQUFTMVcsUUFDbEMsTUFBT3lNLEdBQ0gsUUFLTnhMLEVBQUkrVSxZQUFZSCxTQUFTSSxlQUFlTixJQUcxQ3RJLEtBQUtpSSxPQUdQSSxFQUFPaUIsTUFBUSxXQUVidEosS0FBS2dJLEtBQUtuVixTQUFRLFNBQVVlLEdBQzFCLE9BQU9BLEVBQUkyVixXQUFXQyxZQUFZNVYsTUFFcENvTSxLQUFLZ0ksS0FBTyxHQUNaaEksS0FBS2lJLElBQU0sR0FHTkosRUE3RXFCLEksNkJDNUNmLElBUmYsU0FBaUI0QixHQUNmLElBQUkvRCxFQUFRLEdBQ1osT0FBTyxTQUFVZ0UsR0FFZixZQURtQnRWLElBQWZzUixFQUFNZ0UsS0FBb0JoRSxFQUFNZ0UsR0FBT0QsRUFBR0MsSUFDdkNoRSxFQUFNZ0UsTSx5Q0NpbUJGLE1Bcm1CZixTQUFvQkMsR0FpVWxCLFNBQVNDLEVBQUVoZixFQUFHRCxFQUFHeVUsR0FDZixJQUFJMkIsRUFBSXBXLEVBQUVrZixPQUFPckUsTUFBTXNFLEdBQ3ZCbmYsRUFBSW9XLEVBQ0osSUFBSWdKLEVBQUloSixFQUFFcE8sT0FDTmpJLEVBQUlFLEVBQUUrSCxPQUVWLE9BQVFqSSxHQUNOLEtBQUssRUFDTCxLQUFLLEVBQ0gsSUFBSXNmLEVBQUksRUFFUixJQUFLcGYsRUFBSSxJQUFNRixFQUFJLEdBQUtFLEVBQUUsR0FBSyxJQUFLb2YsRUFBSUQsSUFBS0MsRUFDM0NyZixFQUFFcWYsR0FBS0MsRUFBRXJmLEVBQUdELEVBQUVxZixHQUFJNUssR0FBR3lLLE9BR3ZCLE1BRUYsUUFDRSxJQUFJSyxFQUFJRixFQUFJLEVBRVosSUFBS3JmLEVBQUksR0FBSXFmLEVBQUlELElBQUtDLEVBQ3BCLElBQUssSUFBSWplLEVBQUksRUFBR0EsRUFBSXJCLElBQUtxQixFQUN2QnBCLEVBQUV1ZixLQUFPRCxFQUFFcmYsRUFBRW1CLEdBQUssSUFBS2dWLEVBQUVpSixHQUFJNUssR0FBR3lLLE9BTXhDLE9BQU9sZixFQUdULFNBQVNzZixFQUFFcmYsRUFBR0QsRUFBR3lVLEdBQ2YsSUFBSTJCLEVBQUlwVyxFQUFFNkksV0FBVyxHQUdyQixPQUZBLEdBQUt1TixJQUFNQSxHQUFLcFcsRUFBSUEsRUFBRWtmLFFBQVFyVyxXQUFXLElBRWpDdU4sR0FDTixLQUFLLEdBQ0gsT0FBT3BXLEVBQUVxTyxRQUFRbVIsRUFBRyxLQUFPdmYsRUFBRWlmLFFBRS9CLEtBQUssR0FDSCxPQUFPamYsRUFBRWlmLE9BQVNsZixFQUFFcU8sUUFBUW1SLEVBQUcsS0FBT3ZmLEVBQUVpZixRQUUxQyxRQUNFLEdBQUksRUFBSSxFQUFJekssR0FBSyxFQUFJelUsRUFBRXdOLFFBQVEsTUFBTyxPQUFPeE4sRUFBRXFPLFFBQVFtUixHQUFJLEtBQU92ZixFQUFFNEksV0FBVyxHQUFLLEdBQUssTUFBUTVJLEVBQUVpZixRQUd2RyxPQUFPamYsRUFBSUQsRUFHYixTQUFTeWYsRUFBRXhmLEVBQUdELEVBQUd5VSxFQUFHMkIsR0FDbEIsSUFBSWdKLEVBQUluZixFQUFJLElBQ1JGLEVBQUksRUFBSUMsRUFBSSxFQUFJeVUsRUFBSSxFQUFJMkIsRUFFNUIsR0FBSSxNQUFRclcsRUFBRyxDQUNiRSxFQUFJbWYsRUFBRTVSLFFBQVEsSUFBSyxHQUFLLEVBQ3hCLElBQUk2UixFQUFJRCxFQUFFTSxVQUFVemYsRUFBR21mLEVBQUVwWCxPQUFTLEdBQUdrWCxPQUVyQyxPQURBRyxFQUFJRCxFQUFFTSxVQUFVLEVBQUd6ZixHQUFHaWYsT0FBU0csRUFBSSxJQUM1QixJQUFNTSxHQUFLLElBQU1BLEdBQUtDLEVBQUVQLEVBQUcsR0FBSyxXQUFhQSxFQUFJQSxFQUFJQSxFQUc5RCxHQUFJLElBQU1NLEdBQUssSUFBTUEsSUFBTUMsRUFBRVIsRUFBRyxHQUFJLE9BQU9BLEVBRTNDLE9BQVFyZixHQUNOLEtBQUssS0FDSCxPQUFPLEtBQU9xZixFQUFFdlcsV0FBVyxJQUFNLFdBQWF1VyxFQUFJQSxFQUFJQSxFQUV4RCxLQUFLLElBQ0gsT0FBTyxNQUFRQSxFQUFFdlcsV0FBVyxHQUFLLFdBQWF1VyxFQUFJQSxFQUFJQSxFQUV4RCxLQUFLLElBQ0gsT0FBTyxNQUFRQSxFQUFFdlcsV0FBVyxHQUFLLFdBQWF1VyxFQUFJQSxFQUFJQSxFQUV4RCxLQUFLLEtBQ0gsR0FBSSxNQUFRQSxFQUFFdlcsV0FBVyxHQUFJLE1BRS9CLEtBQUssSUFDTCxLQUFLLElBQ0gsTUFBTyxXQUFhdVcsRUFBSUEsRUFFMUIsS0FBSyxJQUNILE1BQU8sV0FBYUEsRUFBSSxRQUFVQSxFQUFJQSxFQUV4QyxLQUFLLEtBQ0wsS0FBSyxJQUNILE1BQU8sV0FBYUEsRUFBSSxRQUFVQSxFQUFJLE9BQVNBLEVBQUlBLEVBRXJELEtBQUssSUFDSCxHQUFJLEtBQU9BLEVBQUV2VyxXQUFXLEdBQUksTUFBTyxXQUFhdVcsRUFBSUEsRUFDcEQsR0FBSSxFQUFJQSxFQUFFNVIsUUFBUSxhQUFjLElBQUssT0FBTzRSLEVBQUUvUSxRQUFRMEIsRUFBSSxnQkFBa0JxUCxFQUM1RSxNQUVGLEtBQUssSUFDSCxHQUFJLEtBQU9BLEVBQUV2VyxXQUFXLEdBQUksT0FBUXVXLEVBQUV2VyxXQUFXLElBQy9DLEtBQUssSUFDSCxNQUFPLGVBQWlCdVcsRUFBRS9RLFFBQVEsUUFBUyxJQUFNLFdBQWErUSxFQUFJLE9BQVNBLEVBQUUvUSxRQUFRLE9BQVEsWUFBYytRLEVBRTdHLEtBQUssSUFDSCxNQUFPLFdBQWFBLEVBQUksT0FBU0EsRUFBRS9RLFFBQVEsU0FBVSxZQUFjK1EsRUFFckUsS0FBSyxHQUNILE1BQU8sV0FBYUEsRUFBSSxPQUFTQSxFQUFFL1EsUUFBUSxRQUFTLGtCQUFvQitRLEVBRTVFLE1BQU8sV0FBYUEsRUFBSSxPQUFTQSxFQUFJQSxFQUV2QyxLQUFLLElBQ0gsTUFBTyxXQUFhQSxFQUFJLFlBQWNBLEVBQUlBLEVBRTVDLEtBQUssS0FDSCxHQUFJLEtBQU9BLEVBQUV2VyxXQUFXLEdBQUksTUFFNUIsTUFBTyxvQkFEUHdXLEVBQUlELEVBQUVNLFVBQVVOLEVBQUU1UixRQUFRLElBQUssS0FBS2EsUUFBUSxRQUFTLElBQUlBLFFBQVEsZ0JBQWlCLFlBQ2xELFdBQWErUSxFQUFJLGdCQUFrQkMsRUFBSUQsRUFFekUsS0FBSyxLQUNILE9BQU9TLEVBQUdqWCxLQUFLd1csR0FBS0EsRUFBRS9RLFFBQVF5UixFQUFJLGFBQWVWLEVBQUUvUSxRQUFReVIsRUFBSSxVQUFZVixFQUFJQSxFQUVqRixLQUFLLElBSUgsT0FGQXBmLEdBREFxZixFQUFJRCxFQUFFTSxVQUFVLElBQUlSLFFBQ2QxUixRQUFRLEtBQU8sRUFFYjZSLEVBQUV4VyxXQUFXLEdBQUt3VyxFQUFFeFcsV0FBVzdJLElBQ3JDLEtBQUssSUFDSHFmLEVBQUlELEVBQUUvUSxRQUFRMFIsRUFBRyxNQUNqQixNQUVGLEtBQUssSUFDSFYsRUFBSUQsRUFBRS9RLFFBQVEwUixFQUFHLFNBQ2pCLE1BRUYsS0FBSyxJQUNIVixFQUFJRCxFQUFFL1EsUUFBUTBSLEVBQUcsTUFDakIsTUFFRixRQUNFLE9BQU9YLEVBR1gsTUFBTyxXQUFhQSxFQUFJLE9BQVNDLEVBQUlELEVBRXZDLEtBQUssS0FDSCxJQUFLLElBQU1BLEVBQUU1UixRQUFRLFNBQVUsR0FBSSxNQUVyQyxLQUFLLElBSUgsT0FIQXhOLEdBQUtvZixFQUFJbmYsR0FBRytILE9BQVMsR0FHYmpJLEdBRlJzZixHQUFLLEtBQU9ELEVBQUV2VyxXQUFXN0ksR0FBS29mLEVBQUVNLFVBQVUsRUFBRzFmLEdBQUtvZixHQUFHTSxVQUFVemYsRUFBRXVOLFFBQVEsSUFBSyxHQUFLLEdBQUcwUixRQUV4RXJXLFdBQVcsSUFBd0IsRUFBbEJ3VyxFQUFFeFcsV0FBVyxLQUMxQyxLQUFLLElBQ0gsR0FBSSxJQUFNd1csRUFBRXhXLFdBQVcsR0FBSSxNQUU3QixLQUFLLElBQ0h1VyxFQUFJQSxFQUFFL1EsUUFBUWdSLEVBQUcsV0FBYUEsR0FBSyxJQUFNRCxFQUN6QyxNQUVGLEtBQUssSUFDTCxLQUFLLElBQ0hBLEVBQUlBLEVBQUUvUSxRQUFRZ1IsRUFBRyxZQUFjLElBQU10ZixFQUFJLFVBQVksSUFBTSxPQUFTLElBQU1xZixFQUFFL1EsUUFBUWdSLEVBQUcsV0FBYUEsR0FBSyxJQUFNRCxFQUFFL1EsUUFBUWdSLEVBQUcsT0FBU0EsRUFBSSxPQUFTLElBQU1ELEVBRzVKLE9BQU9BLEVBQUksSUFFYixLQUFLLElBQ0gsR0FBSSxLQUFPQSxFQUFFdlcsV0FBVyxHQUFJLE9BQVF1VyxFQUFFdlcsV0FBVyxJQUMvQyxLQUFLLElBQ0gsT0FBT3dXLEVBQUlELEVBQUUvUSxRQUFRLFNBQVUsSUFBSyxXQUFhK1EsRUFBSSxlQUFpQkMsRUFBSSxZQUFjQSxFQUFJRCxFQUU5RixLQUFLLElBQ0gsTUFBTyxXQUFhQSxFQUFJLGlCQUFtQkEsRUFBRS9RLFFBQVEyUixFQUFJLElBQU1aLEVBRWpFLFFBQ0UsTUFBTyxXQUFhQSxFQUFJLHFCQUF1QkEsRUFBRS9RLFFBQVEsZ0JBQWlCLElBQUlBLFFBQVEyUixFQUFJLElBQU1aLEVBRXBHLE1BRUYsS0FBSyxJQUNMLEtBQUssSUFDSCxHQUFJLEtBQU9BLEVBQUV2VyxXQUFXLElBQU0sTUFBUXVXLEVBQUV2VyxXQUFXLEdBQUksTUFFekQsS0FBSyxJQUNMLEtBQUssSUFDSCxJQUFJLElBQU9vWCxFQUFHclgsS0FBSzNJLEdBQUksT0FBTyxPQUFTb2YsRUFBSXBmLEVBQUV5ZixVQUFVemYsRUFBRXVOLFFBQVEsS0FBTyxJQUFJM0UsV0FBVyxHQUFLNFcsRUFBRXhmLEVBQUVvTyxRQUFRLFVBQVcsa0JBQW1Cck8sRUFBR3lVLEVBQUcyQixHQUFHL0gsUUFBUSxrQkFBbUIsWUFBYytRLEVBQUUvUSxRQUFRZ1IsRUFBRyxXQUFhQSxHQUFLRCxFQUFFL1EsUUFBUWdSLEVBQUcsUUFBVUEsRUFBRWhSLFFBQVEsUUFBUyxLQUFPK1EsRUFDeFEsTUFFRixLQUFLLElBQ0gsR0FBSUEsRUFBSSxXQUFhQSxHQUFLLE1BQVFBLEVBQUV2VyxXQUFXLEdBQUssT0FBU3VXLEVBQUksSUFBTUEsRUFBRyxNQUFRM0ssRUFBSTJCLEdBQUssTUFBUWdKLEVBQUV2VyxXQUFXLEtBQU8sRUFBSXVXLEVBQUU1UixRQUFRLFlBQWEsSUFBSyxPQUFPNFIsRUFBRU0sVUFBVSxFQUFHTixFQUFFNVIsUUFBUSxJQUFLLElBQU0sR0FBR2EsUUFBUTZSLEVBQUksZ0JBQWtCZCxFQUd2TyxPQUFPQSxFQUdULFNBQVNRLEVBQUUzZixFQUFHRCxHQUNaLElBQUl5VSxFQUFJeFUsRUFBRXVOLFFBQVEsSUFBTXhOLEVBQUksSUFBTSxLQUM5Qm9XLEVBQUluVyxFQUFFeWYsVUFBVSxFQUFHLElBQU0xZixFQUFJeVUsRUFBSSxJQUVyQyxPQURBQSxFQUFJeFUsRUFBRXlmLFVBQVVqTCxFQUFJLEVBQUd4VSxFQUFFK0gsT0FBUyxHQUMzQm1ZLEVBQUUsSUFBTW5nQixFQUFJb1csRUFBSUEsRUFBRS9ILFFBQVErUixFQUFJLE1BQU8zTCxFQUFHelUsR0FHakQsU0FBU3FnQixFQUFHcGdCLEVBQUdELEdBQ2IsSUFBSXlVLEVBQUlnTCxFQUFFemYsRUFBR0EsRUFBRTZJLFdBQVcsR0FBSTdJLEVBQUU2SSxXQUFXLEdBQUk3SSxFQUFFNkksV0FBVyxJQUM1RCxPQUFPNEwsSUFBTXpVLEVBQUksSUFBTXlVLEVBQUVwRyxRQUFRaVMsRUFBSSxZQUFZWixVQUFVLEdBQUssSUFBTTFmLEVBQUksSUFHNUUsU0FBU3VnQixFQUFFdGdCLEVBQUdELEVBQUd5VSxFQUFHMkIsRUFBR2dKLEVBQUdyZixFQUFHc2YsRUFBR0UsRUFBR25lLEVBQUdvZixHQUNwQyxJQUFLLElBQWtCYixFQUFkYyxFQUFJLEVBQUc1SyxFQUFJN1YsRUFBTXlnQixFQUFJQyxJQUFLRCxFQUNqQyxPQUFRZCxFQUFJZ0IsRUFBRUYsR0FBRzNnQixLQUFLOGdCLEVBQUczZ0IsRUFBRzRWLEVBQUdwQixFQUFHMkIsRUFBR2dKLEVBQUdyZixFQUFHc2YsRUFBR0UsRUFBR25lLEVBQUdvZixJQUNsRCxVQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEtBQ0gsTUFFRixRQUNFM0ssRUFBSThKLEVBSVYsR0FBSTlKLElBQU03VixFQUFHLE9BQU82VixFQW1CdEIsU0FBU2dMLEVBQUU1Z0IsR0FHVCxZQURBLEtBREFBLEVBQUlBLEVBQUU2Z0IsVUFDV1gsRUFBSSxLQUFNbGdCLEVBQUksb0JBQXNCQSxFQUFJMGYsRUFBSSxHQUFLQSxFQUFJLEVBQUdRLEVBQUlsZ0IsR0FBSzBmLEVBQUksR0FDL0VrQixFQUdULFNBQVNELEVBQUUzZ0IsRUFBR0QsR0FDWixJQUFJeVUsRUFBSXhVLEVBS1IsR0FKQSxHQUFLd1UsRUFBRTVMLFdBQVcsS0FBTzRMLEVBQUlBLEVBQUV5SyxRQUUvQnpLLEVBQUksQ0FEQUEsR0FHQSxFQUFJaU0sRUFBRyxDQUNULElBQUl0SyxFQUFJbUssR0FBRyxFQUFHdmdCLEVBQUd5VSxFQUFHQSxFQUFHc00sRUFBR0MsRUFBRyxFQUFHLEVBQUcsRUFBRyxRQUN0QyxJQUFXNUssR0FBSyxrQkFBb0JBLElBQU1wVyxFQUFJb1csR0FHaEQsSUFBSWdKLEVBM2pCTixTQUFTNkIsRUFBRWhoQixFQUFHRCxFQUFHeVUsRUFBRzJCLEVBQUdnSixHQUNyQixJQUFLLElBQWdDb0IsRUFBR0MsRUFBaUJ0SyxFQUF1RStLLEVBQW1DQyxFQUExSnBoQixFQUFJLEVBQUdzZixFQUFJLEVBQUdFLEVBQUksRUFBR25lLEVBQUksRUFBU3lVLEVBQUksRUFBR3VMLEVBQUksRUFBTUMsRUFBSWxMLEVBQUlxSyxFQUFJLEVBQUc1Z0IsRUFBSSxFQUFHYSxFQUFJLEVBQUc2Z0IsRUFBSSxFQUFHemdCLEVBQUksRUFBRytmLEVBQUluTSxFQUFFek0sT0FBUXVaLEVBQUlYLEVBQUksRUFBTVksRUFBSSxHQUFJL2YsRUFBSSxHQUFJK2QsRUFBSSxHQUFJTyxFQUFJLEdBQU9uZ0IsRUFBSWdoQixHQUFJLENBSTVLLEdBSEFILEVBQUloTSxFQUFFNUwsV0FBV2pKLEdBQ2pCQSxJQUFNMmhCLEdBQUssSUFBTWxDLEVBQUlqZSxFQUFJbWUsRUFBSXhmLElBQU0sSUFBTXNmLElBQU1vQixFQUFJLEtBQU9wQixFQUFJLEdBQUssSUFBS2plLEVBQUltZSxFQUFJeGYsRUFBSSxFQUFHNmdCLElBQUtXLEtBRXhGLElBQU1sQyxFQUFJamUsRUFBSW1lLEVBQUl4ZixFQUFHLENBQ3ZCLEdBQUlILElBQU0yaEIsSUFBTSxFQUFJOWdCLElBQU0rZ0IsRUFBSUEsRUFBRW5ULFFBQVFvVCxFQUFHLEtBQU0sRUFBSUQsRUFBRXRDLE9BQU9sWCxRQUFTLENBQ3JFLE9BQVF5WSxHQUNOLEtBQUssR0FDTCxLQUFLLEVBQ0wsS0FBSyxHQUNMLEtBQUssR0FDTCxLQUFLLEdBQ0gsTUFFRixRQUNFZSxHQUFLL00sRUFBRWlOLE9BQU85aEIsR0FHbEI2Z0IsRUFBSSxHQUdOLE9BQVFBLEdBQ04sS0FBSyxJQUtILElBSEFELEdBREFnQixFQUFJQSxFQUFFdEMsUUFDQXJXLFdBQVcsR0FDakJzTixFQUFJLEVBRUN0VixJQUFNakIsRUFBR0EsRUFBSWdoQixHQUFJLENBQ3BCLE9BQVFILEVBQUloTSxFQUFFNUwsV0FBV2pKLElBQ3ZCLEtBQUssSUFDSHVXLElBQ0EsTUFFRixLQUFLLElBQ0hBLElBQ0EsTUFFRixLQUFLLEdBQ0gsT0FBUXNLLEVBQUloTSxFQUFFNUwsV0FBV2pKLEVBQUksSUFDM0IsS0FBSyxHQUNMLEtBQUssR0FDSHdmLEVBQUcsQ0FDRCxJQUFLaUMsRUFBSXpoQixFQUFJLEVBQUd5aEIsRUFBSUUsSUFBS0YsRUFDdkIsT0FBUTVNLEVBQUU1TCxXQUFXd1ksSUFDbkIsS0FBSyxHQUNILEdBQUksS0FBT1osR0FBSyxLQUFPaE0sRUFBRTVMLFdBQVd3WSxFQUFJLElBQU16aEIsRUFBSSxJQUFNeWhCLEVBQUcsQ0FDekR6aEIsRUFBSXloQixFQUFJLEVBQ1IsTUFBTWpDLEVBR1IsTUFFRixLQUFLLEdBQ0gsR0FBSSxLQUFPcUIsRUFBRyxDQUNaN2dCLEVBQUl5aEIsRUFBSSxFQUNSLE1BQU1qQyxHQU1keGYsRUFBSXloQixHQUtWLE1BRUYsS0FBSyxHQUNIWixJQUVGLEtBQUssR0FDSEEsSUFFRixLQUFLLEdBQ0wsS0FBSyxHQUNILEtBQU83Z0IsSUFBTTJoQixHQUFLOU0sRUFBRTVMLFdBQVdqSixLQUFPNmdCLEtBSTFDLEdBQUksSUFBTXRLLEVBQUcsTUFDYnZXLElBTUYsT0FIQXVXLEVBQUkxQixFQUFFaUwsVUFBVTdlLEVBQUdqQixHQUNuQixJQUFNNGdCLElBQU1BLEdBQUtnQixFQUFJQSxFQUFFblQsUUFBUXNULEVBQUksSUFBSXpDLFFBQVFyVyxXQUFXLElBRWxEMlgsR0FDTixLQUFLLEdBSUgsT0FIQSxFQUFJL2YsSUFBTStnQixFQUFJQSxFQUFFblQsUUFBUW9ULEVBQUcsS0FDM0JoQixFQUFJZSxFQUFFM1ksV0FBVyxJQUdmLEtBQUssSUFDTCxLQUFLLElBQ0wsS0FBSyxJQUNMLEtBQUssR0FDSHBJLEVBQUlULEVBQ0osTUFFRixRQUNFUyxFQUFJbWhCLEVBTVIsR0FGQS9nQixHQURBc1YsRUFBSThLLEVBQUVqaEIsRUFBR1MsRUFBRzBWLEVBQUdzSyxFQUFHckIsRUFBSSxJQUNoQnBYLE9BQ04sRUFBSTBZLElBQXNCUyxFQUFJWixFQUFFLEVBQUdwSyxFQUF6QjFWLEVBQUl3ZSxFQUFFMkMsRUFBR0osRUFBR0YsR0FBbUJ0aEIsRUFBRytnQixFQUFHQyxFQUFHbmdCLEVBQUc0ZixFQUFHckIsRUFBR2hKLEdBQUlvTCxFQUFJL2dCLEVBQUVvaEIsS0FBSyxTQUFLLElBQVdWLEdBQUssS0FBT3RnQixHQUFLc1YsRUFBSWdMLEVBQUVqQyxRQUFRbFgsVUFBWXlZLEVBQUksRUFBR3RLLEVBQUksS0FDNUksRUFBSXRWLEVBQUcsT0FBUTRmLEdBQ2pCLEtBQUssSUFDSGUsRUFBSUEsRUFBRW5ULFFBQVF5VCxFQUFJekIsR0FFcEIsS0FBSyxJQUNMLEtBQUssSUFDTCxLQUFLLEdBQ0hsSyxFQUFJcUwsRUFBSSxJQUFNckwsRUFBSSxJQUNsQixNQUVGLEtBQUssSUFFSEEsR0FEQXFMLEVBQUlBLEVBQUVuVCxRQUFRMFQsRUFBSSxVQUNWLElBQU01TCxFQUFJLElBQ2xCQSxFQUFJLElBQU13SixHQUFLLElBQU1BLEdBQUtDLEVBQUUsSUFBTXpKLEVBQUcsR0FBSyxZQUFjQSxFQUFJLElBQU1BLEVBQUksSUFBTUEsRUFDNUUsTUFFRixRQUNFQSxFQUFJcUwsRUFBSXJMLEVBQUcsTUFBUUMsSUFBVzNVLEdBQUswVSxFQUFWQSxFQUFhLFNBQ25DQSxFQUFJLEdBQ1gsTUFFRixRQUNFQSxFQUFJOEssRUFBRWpoQixFQUFHaWYsRUFBRWpmLEVBQUd3aEIsRUFBR0YsR0FBSW5MLEVBQUdDLEVBQUdnSixFQUFJLEdBR25DSSxHQUFLckosRUFDTEEsRUFBSW1MLEVBQUk3Z0IsRUFBSTRnQixFQUFJYixFQUFJLEVBQ3BCZ0IsRUFBSSxHQUNKZixFQUFJaE0sRUFBRTVMLGFBQWFqSixHQUNuQixNQUVGLEtBQUssSUFDTCxLQUFLLEdBRUgsR0FBSSxHQUFLaUIsR0FEVDJnQixHQUFLLEVBQUkvZ0IsRUFBSStnQixFQUFFblQsUUFBUW9ULEVBQUcsSUFBTUQsR0FBR3RDLFFBQ3BCbFgsUUFBUyxPQUFRLElBQU1xWixJQUFNYixFQUFJZ0IsRUFBRTNZLFdBQVcsR0FBSSxLQUFPMlgsR0FBSyxHQUFLQSxHQUFLLElBQU1BLEtBQU8zZixHQUFLMmdCLEVBQUlBLEVBQUVuVCxRQUFRLElBQUssTUFBTXJHLFFBQVMsRUFBSTBZLFFBQUssS0FBWVMsRUFBSVosRUFBRSxFQUFHaUIsRUFBR3hoQixFQUFHQyxFQUFHOGdCLEVBQUdDLEVBQUd2ZixFQUFFdUcsT0FBUW9PLEVBQUdnSixFQUFHaEosS0FBTyxLQUFPdlYsR0FBSzJnQixFQUFJTCxFQUFFakMsUUFBUWxYLFVBQVl3WixFQUFJLFFBQWFoQixFQUFJZ0IsRUFBRTNZLFdBQVcsR0FBSTRYLEVBQUllLEVBQUUzWSxXQUFXLEdBQUkyWCxHQUM5UyxLQUFLLEVBQ0gsTUFFRixLQUFLLEdBQ0gsR0FBSSxNQUFRQyxHQUFLLEtBQU9BLEVBQUcsQ0FDekJWLEdBQUt5QixFQUFJL00sRUFBRWlOLE9BQU85aEIsR0FDbEIsTUFHSixRQUNFLEtBQU80aEIsRUFBRTNZLFdBQVdoSSxFQUFJLEtBQU9ZLEdBQUtnZSxFQUFFK0IsRUFBR2hCLEVBQUdDLEVBQUdlLEVBQUUzWSxXQUFXLEtBRWhFeVksRUFBSTdnQixFQUFJNGdCLEVBQUliLEVBQUksRUFDaEJnQixFQUFJLEdBQ0pmLEVBQUloTSxFQUFFNUwsYUFBYWpKLElBSXpCLE9BQVE2Z0IsR0FDTixLQUFLLEdBQ0wsS0FBSyxHQUNILEtBQU9wQixFQUFJQSxFQUFJLEVBQUksSUFBTSxFQUFJbUIsR0FBSyxNQUFRcEssR0FBSyxFQUFJb0wsRUFBRXhaLFNBQVd2SCxFQUFJLEVBQUcrZ0IsR0FBSyxNQUM1RSxFQUFJZCxFQUFJc0IsR0FBS3pCLEVBQUUsRUFBR2lCLEVBQUd4aEIsRUFBR0MsRUFBRzhnQixFQUFHQyxFQUFHdmYsRUFBRXVHLE9BQVFvTyxFQUFHZ0osRUFBR2hKLEdBQ2pENEssRUFBSSxFQUNKRCxJQUNBLE1BRUYsS0FBSyxHQUNMLEtBQUssSUFDSCxHQUFJLElBQU0xQixFQUFJamUsRUFBSW1lLEVBQUl4ZixFQUFHLENBQ3ZCaWhCLElBQ0EsTUFHSixRQUlFLE9BSEFBLElBQ0FFLEVBQUl6TSxFQUFFaU4sT0FBTzloQixHQUVMNmdCLEdBQ04sS0FBSyxFQUNMLEtBQUssR0FDSCxHQUFJLElBQU1yZixFQUFJckIsRUFBSXNmLEVBQUcsT0FBUXhKLEdBQzNCLEtBQUssR0FDTCxLQUFLLEdBQ0wsS0FBSyxFQUNMLEtBQUssR0FDSHFMLEVBQUksR0FDSixNQUVGLFFBQ0UsS0FBT1QsSUFBTVMsRUFBSSxLQUVyQixNQUVGLEtBQUssRUFDSEEsRUFBSSxNQUNKLE1BRUYsS0FBSyxHQUNIQSxFQUFJLE1BQ0osTUFFRixLQUFLLEdBQ0hBLEVBQUksTUFDSixNQUVGLEtBQUssR0FDSCxJQUFNOWYsRUFBSWllLEVBQUl0ZixJQUFNVSxFQUFJNmdCLEVBQUksRUFBR0osRUFBSSxLQUFPQSxHQUMxQyxNQUVGLEtBQUssSUFDSCxHQUFJLElBQU05ZixFQUFJaWUsRUFBSXRmLEVBQUlraUIsR0FBSyxFQUFJWixFQUFHLE9BQVF6aEIsRUFBSXloQixHQUM1QyxLQUFLLEVBQ0gsTUFBUXhMLEdBQUssS0FBT3BCLEVBQUU1TCxXQUFXakosRUFBSSxLQUFPcWlCLEVBQUlwTSxHQUVsRCxLQUFLLEVBQ0gsTUFBUXVMLElBQU1hLEVBQUliLEdBRXRCLE1BRUYsS0FBSyxHQUNILElBQU1oZ0IsRUFBSWllLEVBQUl0ZixJQUFNc2hCLEVBQUl6aEIsR0FDeEIsTUFFRixLQUFLLEdBQ0gsSUFBTXlmLEVBQUlFLEVBQUluZSxFQUFJckIsSUFBTVUsRUFBSSxFQUFHeWdCLEdBQUssTUFDcEMsTUFFRixLQUFLLEdBQ0wsS0FBSyxHQUNILElBQU03QixJQUFNamUsRUFBSUEsSUFBTXFmLEVBQUksRUFBSSxJQUFNcmYsRUFBSXFmLEVBQUlyZixHQUM1QyxNQUVGLEtBQUssR0FDSCxJQUFNQSxFQUFJaWUsRUFBSUUsR0FBS3hmLElBQ25CLE1BRUYsS0FBSyxHQUNILElBQU1xQixFQUFJaWUsRUFBSUUsR0FBS3hmLElBQ25CLE1BRUYsS0FBSyxHQUNILElBQU1xQixFQUFJaWUsRUFBSXRmLEdBQUt3ZixJQUNuQixNQUVGLEtBQUssR0FDSCxHQUFJLElBQU1uZSxFQUFJaWUsRUFBSXRmLEVBQUcsQ0FDbkIsR0FBSSxJQUFNeWdCLEVBQUcsT0FBUSxFQUFJM0ssRUFBSSxFQUFJdUwsR0FDL0IsS0FBSyxJQUNILE1BRUYsUUFDRVosRUFBSSxFQUVSakIsSUFHRixNQUVGLEtBQUssR0FDSCxJQUFNRixFQUFJRSxFQUFJbmUsRUFBSXJCLEVBQUlzaEIsRUFBSWxMLElBQU1BLEVBQUksR0FDcEMsTUFFRixLQUFLLEdBQ0wsS0FBSyxHQUNILEtBQU0sRUFBSS9VLEVBQUlyQixFQUFJd2YsR0FBSSxPQUFRRixHQUM1QixLQUFLLEVBQ0gsT0FBUSxFQUFJb0IsRUFBSSxFQUFJaE0sRUFBRTVMLFdBQVdqSixFQUFJLElBQ25DLEtBQUssSUFDSHlmLEVBQUksR0FDSixNQUVGLEtBQUssSUFDSHhlLEVBQUlqQixFQUFHeWYsRUFBSSxHQUdmLE1BRUYsS0FBSyxHQUNILEtBQU9vQixHQUFLLEtBQU81SyxHQUFLaFYsRUFBSSxJQUFNakIsSUFBTSxLQUFPNlUsRUFBRTVMLFdBQVdoSSxFQUFJLEtBQU9ZLEdBQUtnVCxFQUFFaUwsVUFBVTdlLEVBQUdqQixFQUFJLElBQUtzaEIsRUFBSSxHQUFJN0IsRUFBSSxJQUl4SCxJQUFNQSxJQUFNbUMsR0FBS04sR0FHckJFLEVBQUl2TCxFQUNKQSxFQUFJNEssRUFDSjdnQixJQUtGLEdBQUksR0FGSmlCLEVBQUlZLEVBQUV1RyxRQUVLLENBRVQsR0FEQXZILEVBQUlULEVBQ0EsRUFBSTBnQixTQUEyQyxLQUFyQ1MsRUFBSVosRUFBRSxFQUFHOWUsRUFBR2hCLEVBQUdSLEVBQUc4Z0IsRUFBR0MsRUFBR25nQixFQUFHdVYsRUFBR2dKLEVBQUdoSixLQUFvQixLQUFPM1UsRUFBSTBmLEdBQUduWixRQUFTLE9BQU8rWCxFQUFJdGUsRUFBSStkLEVBR3pHLEdBRkEvZCxFQUFJaEIsRUFBRW9oQixLQUFLLEtBQU8sSUFBTXBnQixFQUFJLElBRXhCLElBQU1rZSxFQUFJc0MsRUFBRyxDQUdmLE9BRkEsSUFBTXRDLEdBQUtDLEVBQUVuZSxFQUFHLEtBQU93Z0IsRUFBSSxHQUVuQkEsR0FDTixLQUFLLElBQ0h4Z0IsRUFBSUEsRUFBRTRNLFFBQVE2VCxFQUFJLFlBQWN6Z0IsRUFDaEMsTUFFRixLQUFLLElBQ0hBLEVBQUlBLEVBQUU0TSxRQUFROFQsRUFBRyxzQkFBd0IxZ0IsRUFBRTRNLFFBQVE4VCxFQUFHLGFBQWUxZ0IsRUFBRTRNLFFBQVE4VCxFQUFHLGlCQUFtQjFnQixFQUd6R3dnQixFQUFJLEdBSVIsT0FBT2xDLEVBQUl0ZSxFQUFJK2QsRUE4UFB5QixDQUFFVyxFQUFHbk4sRUFBR3pVLEVBQUcsRUFBRyxHQUt0QixPQUpBLEVBQUkwZ0IsU0FBbUQsS0FBN0N0SyxFQUFJbUssR0FBRyxFQUFHbkIsRUFBRzNLLEVBQUdBLEVBQUdzTSxFQUFHQyxFQUFHNUIsRUFBRXBYLE9BQVEsRUFBRyxFQUFHLE1BQXFCb1gsRUFBSWhKLElBQ3hFLEdBQ0o2TCxFQUFJLEVBQ0pqQixFQUFJRCxFQUFJLEVBQ0QzQixFQUdULElBQUl1QyxFQUFLLFFBQ0xGLEVBQUksWUFDSjNCLEVBQUssT0FDTEQsRUFBSyxVQUNMSyxFQUFLLHNCQUNMZixFQUFLLFNBQ0xLLEVBQUksb0JBQ0p1QyxFQUFLLHFCQUNMSSxFQUFJLGFBQ0pELEVBQUssZ0JBQ0xuQyxFQUFJLHFCQUNKK0IsRUFBSyxrQkFDTHhCLEVBQUssZUFDTE4sRUFBSyxlQUNMSSxFQUFLLDhCQUNMSCxFQUFLLG1DQUNMbFEsRUFBSyxzQkFDTGlSLEVBQUksRUFDSkQsRUFBSSxFQUNKa0IsRUFBSSxFQUNKdEMsRUFBSSxFQUNKaUMsRUFBSSxHQUNKakIsRUFBSSxHQUNKRCxFQUFJLEVBQ0pQLEVBQUksS0FDSjZCLEVBQUksRUFLUixPQUhBcEIsRUFBRXdCLElBcEVGLFNBQVNDLEVBQUVwaUIsR0FDVCxPQUFRQSxHQUNOLFVBQUssRUFDTCxLQUFLLEtBQ0h5Z0IsRUFBSUMsRUFBRTNZLE9BQVMsRUFDZixNQUVGLFFBQ0UsR0FBSSxvQkFBc0IvSCxFQUFHMGdCLEVBQUVELEtBQU96Z0IsT0FBTyxHQUFJLGtCQUFvQkEsRUFBRyxJQUFLLElBQUlELEVBQUksRUFBR3lVLEVBQUl4VSxFQUFFK0gsT0FBUWhJLEVBQUl5VSxJQUFLelUsRUFDN0dxaUIsRUFBRXBpQixFQUFFRCxTQUNDZ2lCLEVBQVUsSUFBSi9oQixFQUdqQixPQUFPb2lCLEdBd0RUekIsRUFBRTBCLElBQU16QixPQUNSLElBQVc3QixHQUFLNkIsRUFBRTdCLEdBQ1g0QixHQ3psQlQsU0FBUzJCLEVBQVFDLEdBQ1hBLEdBQ0ZDLEVBQU12SCxRQUFRQyxPQUFPcUgsRUFBUSxLQUlqQyxJQUFJQyxFQUFRLENBQ1Z2SCxRQUFTLE1BR1B3SCxFQUFZLFNBQW1CalksRUFBU2tZLEVBQVNDLEVBQVdDLEVBQVNDLEVBQU1DLEVBQVEvYSxFQUFRaEgsRUFBSWdpQixFQUFPQyxHQUN4RyxPQUFReFksR0FFTixLQUFLLEVBRUQsT0FBUWtZLEVBQVE5WixXQUFXLElBQ3pCLEtBQUssR0FJRCxPQURBNFosRUFBTXZILFFBQVFDLE9BQU93SCxFQUFVLEtBQ3hCLEdBSVgsS0FBSyxJQUlELEdBQThCLEtBQTFCQSxFQUFROVosV0FBVyxHQUNyQixNQUFPLEdBS2YsTUFJSixLQUFLLEVBRUQsR0FBVyxJQUFQN0gsRUFBVSxPQUFPMmhCLEVBM0NiLFFBNENSLE1BSUosS0FBSyxFQUVELE9BQVEzaEIsR0FFTixLQUFLLElBQ0wsS0FBSyxJQUdELE9BREF5aEIsRUFBTXZILFFBQVFDLE9BQU95SCxFQUFVLEdBQUtELEdBQzdCLEdBR1gsUUFFSSxPQUFPQSxHQUFrQixJQUFQTSxFQTdEaEIsUUE2RHVDLElBS25ELEtBQU0sRUFFRk4sRUFBUTlILE1BbkVIcUksVUFtRWlCaGIsUUFBUXFhLEtBc0l2QixJQWpJRyxTQUFxQmxaLFFBQ3JCSSxJQUFaSixJQUF1QkEsRUFBVSxJQUNyQyxJQUNJOFosRUFEQWppQixFQUFNbUksRUFBUW5JLEtBQU8sV0FHRnVJLElBQW5CSixFQUFReVgsU0FDVnFDLEVBQWdCLENBQ2RyQyxPQUFRelgsRUFBUXlYLFNBSXBCLElBQUlzQyxFQUFTLElBQUksRUFBT0QsR0FTeEIsSUFFSTNGLEVBRkF2QyxFQUFXLEdBSWJ1QyxFQUFZblUsRUFBUW1VLFdBQWFLLFNBQVN3RixLQUMxQyxJQWNFQyxFQWRFQyxFQUFRMUYsU0FBUzJGLGlCQUFpQixzQkFBd0J0aUIsRUFBTSxLQUNwRXdSLE1BQU1uUixVQUFVMkcsUUFBUXBJLEtBQUt5akIsR0FBTyxTQUFVRSxHQUMvQkEsRUFBS0MsYUFBYSxnQkFBa0J4aUIsR0FFMUMyWixNQUFNLEtBQUszUyxTQUFRLFNBQVVvSCxHQUNsQzJMLEVBQVMzTCxJQUFNLEtBR2JtVSxFQUFLN0UsYUFBZXBCLEdBQ3RCQSxFQUFVUSxZQUFZeUYsTUFRMUJMLEVBQU9oQixJQUFJL1ksRUFBUXNhLGNBQW5CUCxDQUFrQ1YsR0FFbENZLEVBQVUsU0FBZ0JNLEVBQVV6WSxFQUFZaVEsRUFBT3lJLEdBQ3JELElBQUkzakIsRUFBT2lMLEVBQVdqTCxLQUN0QnVpQixFQUFNdkgsUUFBVUUsRUFXaEJnSSxFQUFPUSxFQUFVelksRUFBV2YsUUFFeEJ5WixJQUNGOUksRUFBTUUsU0FBUy9hLElBQVEsSUFxRDdCLElBQUk2YSxFQUFRLENBQ1Y3WixJQUFLQSxFQUNMa2EsTUFBTyxJQUFJLElBQVcsQ0FDcEJsYSxJQUFLQSxFQUNMc2MsVUFBV0EsRUFDWEQsTUFBT2xVLEVBQVFrVSxNQUNmSCxPQUFRL1QsRUFBUStULFNBRWxCRyxNQUFPbFUsRUFBUWtVLE1BQ2Z0QyxTQUFVQSxFQUNWL1AsV0FBWSxHQUNaaVEsT0FBUW1JLEdBRVYsT0FBT3ZJLEksNkJDN01ULHVGQUVRelUsRUFBaUNwQixJQUFqQ29CLE9BQVFkLEVBQXlCTixJQUF6Qk0sU0FBVU0sRUFBZVosSUFBZlksV0FDbEJXLEVBQXFDRixJQUFyQ0UsY0FBZUMsRUFBc0JILElBQXRCRyxrQkFDZm9XLEVBQXNCRCxJQUF0QkMsa0JBRUtnSCxFQUFjLDBMQU1kQyxFQUFrQixpSUFNZGpILEVBTmMsMEhBWWxCa0gsRUFBd0IsY0FDakNELEVBRGlDLG9EQUlyQnRkLEVBSnFCLG9FQVFuQkMsRUFSbUIsNkNBWUgsWUFDaENzZCxFQURnQyxtQ0FHWnhlLEVBSFksdUJBSXZCYyxFQUp1QiwwREFPSGQsRUFQRyxnQkFVRCxZQUMvQndlLEVBRCtCLG1DQUdYbGUsRUFIVyx1QkFJdEJRLEVBSnNCLDBEQU9GUixFQVBFLGtCLHlGQzlDakMsc0dBUUEsSUFBSW1lLEVBQXNCLHdCQU1ILHFCQUFoQkMsWUFBOEIsY0FBZ0IsTUFDakRDLEVBQWUsd0JBQWMsSUFDN0JDLEVBQWdCSCxFQUFvQkksU0FFcEMsRUFBbUIsU0FBMEJDLEdBUS9DLE9BQU8sc0JBUE0sU0FBZ0I5WixFQUFPRSxHQUNsQyxPQUFPLHdCQUFjdVosRUFBb0J0WixTQUFVLE1BQU0sU0FBVW9RLEdBQ2pFLE9BQU91SixFQUFLOVosRUFBT3VRLEVBQU9yUSxVQWVYckssT0FBT2tCLFVBQVVDLGVBaU5wQyxZQWxKRixJQWtLSStpQixFQUFhLFNBQVNBLEVBQVdwYSxHQUtuQyxJQUpBLElBQUlHLEVBQU1ILEVBQUtuQyxPQUNYckksRUFBSSxFQUNKNmtCLEVBQU0sR0FFSDdrQixFQUFJMkssRUFBSzNLLElBQUssQ0FDbkIsSUFBSW9mLEVBQU01VSxFQUFLeEssR0FDZixHQUFXLE1BQVBvZixFQUFKLENBQ0EsSUFBSTBGLE9BQVEsRUFFWixjQUFlMUYsR0FDYixJQUFLLFVBQ0gsTUFFRixJQUFLLFNBRUQsR0FBSXJNLE1BQU1DLFFBQVFvTSxHQUNoQjBGLEVBQVFGLEVBQVd4RixRQUluQixJQUFLLElBQUk1SSxLQUZUc08sRUFBUSxHQUVNMUYsRUFDUkEsRUFBSTVJLElBQU1BLElBQ1pzTyxJQUFVQSxHQUFTLEtBQ25CQSxHQUFTdE8sR0FLZixNQUdKLFFBRUlzTyxFQUFRMUYsRUFJVjBGLElBQ0ZELElBQVFBLEdBQU8sS0FDZkEsR0FBT0MsSUFJWCxPQUFPRCxHQUdULFNBQVNFLEVBQU14WixFQUFZeVosRUFBSzVaLEdBQzlCLElBQUkyUCxFQUFtQixHQUNuQkUsRUFBZSxZQUFvQjFQLEVBQVl3UCxFQUFrQjNQLEdBRXJFLE9BQUkyUCxFQUFpQjFTLE9BQVMsRUFDckIrQyxFQUdGNlAsRUFBZStKLEVBQUlqSyxHQUdYLEdBQWlCLFNBQVVsUSxFQUFPQyxHQUNqRCxPQUFPLHdCQUFjMFosRUFBYXhaLFNBQVUsTUFBTSxTQUFVQyxHQUMxRCxJQUVJK1osRUFBTSxXQUtSLElBQUssSUFBSUMsRUFBTzdjLFVBQVVDLE9BQVFtQyxFQUFPLElBQUl1SSxNQUFNa1MsR0FBT3JaLEVBQU8sRUFBR0EsRUFBT3FaLEVBQU1yWixJQUMvRXBCLEVBQUtvQixHQUFReEQsVUFBVXdELEdBR3pCLElBQUlKLEVBQWEsWUFBZ0JoQixFQUFNTSxFQUFRUyxZQUkvQyxPQUZFLFlBQWFULEVBQVNVLEdBQVksR0FFN0JWLEVBQVF2SixJQUFNLElBQU1pSyxFQUFXakwsTUFlcEN5aUIsRUFBVSxDQUNaZ0MsSUFBS0EsRUFDTEUsR0FkTyxXQUtQLElBQUssSUFBSUMsRUFBUS9jLFVBQVVDLE9BQVFtQyxFQUFPLElBQUl1SSxNQUFNb1MsR0FBUUMsRUFBUSxFQUFHQSxFQUFRRCxFQUFPQyxJQUNwRjVhLEVBQUs0YSxHQUFTaGQsVUFBVWdkLEdBRzFCLE9BQU9MLEVBQU1qYSxFQUFRUyxXQUFZeVosRUFBS0osRUFBV3BhLEtBTWpEUyxNQUFPQSxHQUVMb2EsRUFBTXhhLEVBQU15YSxTQUFTdEMsR0FFekIsT0FEYyxFQUNQcUMsUyw2QkN0V1gsc0dBQU8sSUFhTUUsRUFDWCw0RUFFV0MsRUFBYSwyQkFFYkMsRUFBZ0IseUMsOEJDaEI3QixTQUFTQyxJQUVQLEdBQThDLHFCQUFuQ0MsZ0NBQXFHLG9CQUE1Q0EsK0JBQStCRCxTQUFuRyxDQUlJLEVBV0osSUFFRUMsK0JBQStCRCxTQUFTQSxHQUN4QyxNQUFPRSxHQUdQQyxRQUFRQyxNQUFNRixLQU9oQkYsR0FDQTNsQixFQUFPRCxRQUFVLEVBQVEsSyw2QkN6QjNCLElBQUk2SCxFQUF3QmpILE9BQU9pSCxzQkFDL0I5RixFQUFpQm5CLE9BQU9rQixVQUFVQyxlQUNsQ2trQixFQUFtQnJsQixPQUFPa0IsVUFBVW9rQixxQkFFeEMsU0FBU0MsRUFBU0MsR0FDaEIsR0FBWSxPQUFSQSxRQUF3QnBjLElBQVJvYyxFQUNsQixNQUFNLElBQUk1UyxVQUFVLHlEQUd0QixPQUFPNVMsT0FBT3dsQixHQW1EaEJubUIsRUFBT0QsUUFoRFAsV0FDRSxJQUNFLElBQUtZLE9BQU95bEIsT0FDVixPQUFPLEVBS1QsSUFBSUMsRUFBUSxJQUFJQyxPQUFPLE9BSXZCLEdBRkFELEVBQU0sR0FBSyxLQUVrQyxNQUF6QzFsQixPQUFPNGxCLG9CQUFvQkYsR0FBTyxHQUNwQyxPQUFPLEVBTVQsSUFGQSxJQUFJRyxFQUFRLEdBRUh2bUIsRUFBSSxFQUFHQSxFQUFJLEdBQUlBLElBQ3RCdW1CLEVBQU0sSUFBTUYsT0FBT0csYUFBYXhtQixJQUFNQSxFQU94QyxHQUF3QixlQUpYVSxPQUFPNGxCLG9CQUFvQkMsR0FBTzdXLEtBQUksU0FBVWpPLEdBQzNELE9BQU84a0IsRUFBTTlrQixNQUdKeWdCLEtBQUssSUFDZCxPQUFPLEVBSVQsSUFBSXVFLEVBQVEsR0FLWixNQUpBLHVCQUF1QnZMLE1BQU0sSUFBSTNTLFNBQVEsU0FBVW1lLEdBQ2pERCxFQUFNQyxHQUFVQSxLQUdxQyx5QkFBbkRobUIsT0FBT2dILEtBQUtoSCxPQUFPeWxCLE9BQU8sR0FBSU0sSUFBUXZFLEtBQUssSUFLL0MsTUFBTzBELEdBRVAsT0FBTyxHQUlNZSxHQUFvQmptQixPQUFPeWxCLE9BQVMsU0FBVWhlLEVBQVFHLEdBS3JFLElBSkEsSUFBSThLLEVBRUF4TCxFQURBZ2YsRUFBS1gsRUFBUzlkLEdBR1RwRyxFQUFJLEVBQUdBLEVBQUlxRyxVQUFVQyxPQUFRdEcsSUFBSyxDQUd6QyxJQUFLLElBQUlSLEtBRlQ2UixFQUFPMVMsT0FBTzBILFVBQVVyRyxJQUdsQkYsRUFBZTFCLEtBQUtpVCxFQUFNN1IsS0FDNUJxbEIsRUFBR3JsQixHQUFPNlIsRUFBSzdSLElBSW5CLEdBQUlvRyxFQUF1QixDQUN6QkMsRUFBVUQsRUFBc0J5TCxHQUVoQyxJQUFLLElBQUlwVCxFQUFJLEVBQUdBLEVBQUk0SCxFQUFRUyxPQUFRckksSUFDOUIrbEIsRUFBaUI1bEIsS0FBS2lULEVBQU14TCxFQUFRNUgsTUFDdEM0bUIsRUFBR2hmLEVBQVE1SCxJQUFNb1QsRUFBS3hMLEVBQVE1SCxNQU10QyxPQUFPNG1CLEksY0N2RlQ3bUIsRUFBT0QsUUFOUCxTQUF3QitWLEVBQVVDLEdBQ2hDRCxFQUFTalUsVUFBWWxCLE9BQU9ZLE9BQU93VSxFQUFXbFUsV0FDOUNpVSxFQUFTalUsVUFBVXFULFlBQWNZLEVBQ2pDQSxFQUFTdkIsVUFBWXdCLEksY0NZdkIvVixFQUFPRCxRQWZQLFNBQXlCa1YsRUFBS3pULEVBQUtOLEdBWWpDLE9BWElNLEtBQU95VCxFQUNUdFUsT0FBT0MsZUFBZXFVLEVBQUt6VCxFQUFLLENBQzlCTixNQUFPQSxFQUNQTCxZQUFZLEVBQ1prVCxjQUFjLEVBQ2RDLFVBQVUsSUFHWmlCLEVBQUl6VCxHQUFPTixFQUdOK1QsSSxrZ3hDQ0ZULElBQUkvVSxFQUFJLEVBQVEsSUFDWndCLEVBQUksb0JBQXNCVixRQUFVQSxPQUFPOGxCLElBQzNDL2tCLEVBQUlMLEVBQUlWLE9BQU84bEIsSUFBSSxpQkFBbUIsTUFDdENoRyxFQUFJcGYsRUFBSVYsT0FBTzhsQixJQUFJLGdCQUFrQixNQUNyQy9sQixFQUFJVyxFQUFJVixPQUFPOGxCLElBQUksa0JBQW9CLE1BQ3ZDM2xCLEVBQUlPLEVBQUlWLE9BQU84bEIsSUFBSSxxQkFBdUIsTUFDMUNuRixFQUFJamdCLEVBQUlWLE9BQU84bEIsSUFBSSxrQkFBb0IsTUFDdkNqSCxFQUFJbmUsRUFBSVYsT0FBTzhsQixJQUFJLGtCQUFvQixNQUN2QzdHLEVBQUl2ZSxFQUFJVixPQUFPOGxCLElBQUksaUJBQW1CLE1BQ3RDM1EsRUFBSXpVLEVBQUlWLE9BQU84bEIsSUFBSSxxQkFBdUIsTUFDMUN0RixFQUFJOWYsRUFBSVYsT0FBTzhsQixJQUFJLGtCQUFvQixNQUN2Q3hGLEVBQUk1ZixFQUFJVixPQUFPOGxCLElBQUksY0FBZ0IsTUFDbkM5RixFQUFJdGYsRUFBSVYsT0FBTzhsQixJQUFJLGNBQWdCLE1BQ25DNUYsRUFBSSxvQkFBc0JsZ0IsUUFBVUEsT0FBT29TLFNBRS9DLFNBQVNxTyxFQUFFL0IsR0FDVCxJQUFLLElBQUlDLEVBQUkseURBQTJERCxFQUFHcGYsRUFBSSxFQUFHQSxFQUFJK0gsVUFBVUMsT0FBUWhJLElBQ3RHcWYsR0FBSyxXQUFhalIsbUJBQW1CckcsVUFBVS9ILElBR2pELE1BQU8seUJBQTJCb2YsRUFBSSxXQUFhQyxFQUFJLGlIQUd6RCxJQUFJMEIsRUFBSSxDQUNOMEYsVUFBVyxXQUNULE9BQU8sR0FFVEMsbUJBQW9CLGFBQ3BCQyxvQkFBcUIsYUFDckJDLGdCQUFpQixjQUVmM0UsRUFBSSxHQUVSLFNBQVN6QyxFQUFFSixFQUFHQyxFQUFHcmYsR0FDZnFWLEtBQUs3SyxNQUFRNFUsRUFDYi9KLEtBQUs1SyxRQUFVNFUsRUFDZmhLLEtBQUt3UixLQUFPNUUsRUFDWjVNLEtBQUt5UixRQUFVOW1CLEdBQUsrZ0IsRUFjdEIsU0FBU2hCLEtBSVQsU0FBU1EsRUFBRW5CLEVBQUdDLEVBQUdyZixHQUNmcVYsS0FBSzdLLE1BQVE0VSxFQUNiL0osS0FBSzVLLFFBQVU0VSxFQUNmaEssS0FBS3dSLEtBQU81RSxFQUNaNU0sS0FBS3lSLFFBQVU5bUIsR0FBSytnQixFQW5CdEJ2QixFQUFFamUsVUFBVXdsQixpQkFBbUIsR0FFL0J2SCxFQUFFamUsVUFBVXlsQixTQUFXLFNBQVU1SCxFQUFHQyxHQUNsQyxHQUFJLGtCQUFvQkQsR0FBSyxvQkFBc0JBLEdBQUssTUFBUUEsRUFBRyxNQUFNNkgsTUFBTTlGLEVBQUUsS0FDakY5TCxLQUFLeVIsUUFBUUYsZ0JBQWdCdlIsS0FBTStKLEVBQUdDLEVBQUcsYUFHM0NHLEVBQUVqZSxVQUFVMmxCLFlBQWMsU0FBVTlILEdBQ2xDL0osS0FBS3lSLFFBQVFKLG1CQUFtQnJSLEtBQU0rSixFQUFHLGdCQUszQ1csRUFBRXhlLFVBQVlpZSxFQUFFamUsVUFTaEIsSUFBSStmLEVBQUlmLEVBQUVoZixVQUFZLElBQUl3ZSxFQUMxQnVCLEVBQUUxTSxZQUFjMkwsRUFDaEIzZ0IsRUFBRTBoQixFQUFHOUIsRUFBRWplLFdBQ1ArZixFQUFFNkYsc0JBQXVCLEVBQ3pCLElBQUk1RixFQUFJLENBQ05yRyxRQUFTLE1BRVBrRyxFQUFJL2dCLE9BQU9rQixVQUFVQyxlQUNyQm9lLEVBQUksQ0FDTjFlLEtBQUssRUFDTHdKLEtBQUssRUFDTDBjLFFBQVEsRUFDUkMsVUFBVSxHQUdaLFNBQVNwRyxFQUFFN0IsRUFBR0MsRUFBR3JmLEdBQ2YsSUFBSXlVLEVBQ0F4VSxFQUFJLEdBQ0p3Z0IsRUFBSSxLQUNKdEssRUFBSSxLQUNSLEdBQUksTUFBUWtKLEVBQUcsSUFBSzVLLFVBQUssSUFBVzRLLEVBQUUzVSxNQUFReUwsRUFBSWtKLEVBQUUzVSxVQUFNLElBQVcyVSxFQUFFbmUsTUFBUXVmLEVBQUksR0FBS3BCLEVBQUVuZSxLQUFNbWUsRUFDOUYrQixFQUFFdGhCLEtBQUt1ZixFQUFHNUssS0FBT21MLEVBQUVwZSxlQUFlaVQsS0FBT3hVLEVBQUV3VSxHQUFLNEssRUFBRTVLLElBRXBELElBQUkrTSxFQUFJelosVUFBVUMsT0FBUyxFQUMzQixHQUFJLElBQU13WixFQUFHdmhCLEVBQUVnbEIsU0FBV2psQixPQUFPLEdBQUksRUFBSXdoQixFQUFHLENBQzFDLElBQUssSUFBSXBMLEVBQUkxRCxNQUFNOE8sR0FBSXpoQixFQUFJLEVBQUdBLEVBQUl5aEIsRUFBR3poQixJQUNuQ3FXLEVBQUVyVyxHQUFLZ0ksVUFBVWhJLEVBQUksR0FHdkJFLEVBQUVnbEIsU0FBVzdPLEVBRWYsR0FBSWdKLEdBQUtBLEVBQUUxVCxhQUFjLElBQUsrSSxLQUFLK00sRUFBSXBDLEVBQUUxVCxrQkFDdkMsSUFBV3pMLEVBQUV3VSxLQUFPeFUsRUFBRXdVLEdBQUsrTSxFQUFFL00sSUFFL0IsTUFBTyxDQUNMNlMsU0FBVTdsQixFQUNWd1AsS0FBTW1PLEVBQ05sZSxJQUFLdWYsRUFDTC9WLElBQUt5TCxFQUNMM0wsTUFBT3ZLLEVBQ1BzbkIsT0FBUWhHLEVBQUVyRyxTQWVkLFNBQVMwRyxFQUFFeEMsR0FDVCxNQUFPLGtCQUFvQkEsR0FBSyxPQUFTQSxHQUFLQSxFQUFFa0ksV0FBYTdsQixFQWEvRCxJQUFJZ2UsRUFBSSxPQUNKMEMsRUFBSSxHQUVSLFNBQVNoQyxFQUFFZixFQUFHQyxFQUFHcmYsRUFBR3lVLEdBQ2xCLEdBQUkwTixFQUFFbmEsT0FBUSxDQUNaLElBQUkvSCxFQUFJa2lCLEVBQUVxRixNQU1WLE9BTEF2bkIsRUFBRWlWLE9BQVNrSyxFQUNYbmYsRUFBRXduQixVQUFZcEksRUFDZHBmLEVBQUVxa0IsS0FBT3RrQixFQUNUQyxFQUFFd0ssUUFBVWdLLEVBQ1p4VSxFQUFFeW5CLE1BQVEsRUFDSHpuQixFQUdULE1BQU8sQ0FDTGlWLE9BQVFrSyxFQUNScUksVUFBV3BJLEVBQ1hpRixLQUFNdGtCLEVBQ055SyxRQUFTZ0ssRUFDVGlULE1BQU8sR0FJWCxTQUFTL0csRUFBRXZCLEdBQ1RBLEVBQUVsSyxPQUFTLEtBQ1hrSyxFQUFFcUksVUFBWSxLQUNkckksRUFBRWtGLEtBQU8sS0FDVGxGLEVBQUUzVSxRQUFVLEtBQ1oyVSxFQUFFc0ksTUFBUSxFQUNWLEdBQUt2RixFQUFFbmEsUUFBVW1hLEVBQUV4YSxLQUFLeVgsR0FrQzFCLFNBQVN1SSxFQUFFdkksRUFBR0MsRUFBR3JmLEdBQ2YsT0FBTyxNQUFRb2YsRUFBSSxFQWhDckIsU0FBU2lELEVBQUVqRCxFQUFHQyxFQUFHcmYsRUFBR3lVLEdBQ2xCLElBQUl4VSxTQUFXbWYsRUFDWCxjQUFnQm5mLEdBQUssWUFBY0EsSUFBR21mLEVBQUksTUFDOUMsSUFBSXFCLEdBQUksRUFDUixHQUFJLE9BQVNyQixFQUFHcUIsR0FBSSxPQUFRLE9BQVF4Z0IsR0FDbEMsSUFBSyxTQUNMLElBQUssU0FDSHdnQixHQUFJLEVBQ0osTUFFRixJQUFLLFNBQ0gsT0FBUXJCLEVBQUVrSSxVQUNSLEtBQUs3bEIsRUFDTCxLQUFLK2UsRUFDSEMsR0FBSSxHQUlaLEdBQUlBLEVBQUcsT0FBT3pnQixFQUFFeVUsRUFBRzJLLEVBQUcsS0FBT0MsRUFBSSxJQUFNd0IsRUFBRXpCLEVBQUcsR0FBS0MsR0FBSSxFQUdyRCxHQUZBb0IsRUFBSSxFQUNKcEIsRUFBSSxLQUFPQSxFQUFJLElBQU1BLEVBQUksSUFDckIzTSxNQUFNQyxRQUFReU0sR0FBSSxJQUFLLElBQUlqSixFQUFJLEVBQUdBLEVBQUlpSixFQUFFcFgsT0FBUW1PLElBQUssQ0FFdkQsSUFBSXFMLEVBQUluQyxFQUFJd0IsRUFEWjVnQixFQUFJbWYsRUFBRWpKLEdBQ1dBLEdBQ2pCc0ssR0FBSzRCLEVBQUVwaUIsRUFBR3VoQixFQUFHeGhCLEVBQUd5VSxRQUNYLEdBQUksT0FBUzJLLEdBQUssa0JBQW9CQSxFQUFJb0MsRUFBSSxLQUEwQ0EsRUFBSSxvQkFBdENBLEVBQUlaLEdBQUt4QixFQUFFd0IsSUFBTXhCLEVBQUUsZUFBNkNvQyxFQUFJLEtBQU8sb0JBQXNCQSxFQUFHLElBQUtwQyxFQUFJb0MsRUFBRTFoQixLQUFLc2YsR0FBSWpKLEVBQUksSUFBS2xXLEVBQUltZixFQUFFekYsUUFBUWlPLE1BQzFLbkgsR0FBSzRCLEVBQXJDcGlCLEVBQUlBLEVBQUVXLE1BQU80Z0IsRUFBSW5DLEVBQUl3QixFQUFFNWdCLEVBQUdrVyxLQUFtQm5XLEVBQUd5VSxRQUMzQyxHQUFJLFdBQWF4VSxFQUFHLE1BQU1ELEVBQUksR0FBS29mLEVBQUc2SCxNQUFNOUYsRUFBRSxHQUFJLG9CQUFzQm5oQixFQUFJLHFCQUF1QkssT0FBT2dILEtBQUsrWCxHQUFHeUMsS0FBSyxNQUFRLElBQU03aEIsRUFBRyxLQUMvSSxPQUFPeWdCLEVBSWdCNEIsQ0FBRWpELEVBQUcsR0FBSUMsRUFBR3JmLEdBR3JDLFNBQVM2Z0IsRUFBRXpCLEVBQUdDLEdBQ1osTUFBTyxrQkFBb0JELEdBQUssT0FBU0EsR0FBSyxNQUFRQSxFQUFFbGUsSUE5RTFELFNBQWdCa2UsR0FDZCxJQUFJQyxFQUFJLENBQ04sSUFBSyxLQUNMLElBQUssTUFFUCxNQUFPLEtBQU8sR0FBS0QsR0FBRy9RLFFBQVEsU0FBUyxTQUFVK1EsR0FDL0MsT0FBT0MsRUFBRUQsTUF3RW1EeUksQ0FBT3pJLEVBQUVsZSxLQUFPbWUsRUFBRTdLLFNBQVMsSUFHM0YsU0FBU3dLLEVBQUVJLEVBQUdDLEdBQ1pELEVBQUVrRixLQUFLeGtCLEtBQUtzZixFQUFFM1UsUUFBUzRVLEVBQUdELEVBQUVzSSxTQUc5QixTQUFTNUgsRUFBR1YsRUFBR0MsRUFBR3JmLEdBQ2hCLElBQUl5VSxFQUFJMkssRUFBRWxLLE9BQ05qVixFQUFJbWYsRUFBRXFJLFVBQ1ZySSxFQUFJQSxFQUFFa0YsS0FBS3hrQixLQUFLc2YsRUFBRTNVLFFBQVM0VSxFQUFHRCxFQUFFc0ksU0FDaENoVixNQUFNQyxRQUFReU0sR0FBS0gsRUFBRUcsRUFBRzNLLEVBQUd6VSxHQUFHLFNBQVVvZixHQUN0QyxPQUFPQSxLQUNKLE1BQVFBLElBQU13QyxFQUFFeEMsS0FBT0EsRUExRzlCLFNBQVdBLEVBQUdDLEdBQ1osTUFBTyxDQUNMaUksU0FBVTdsQixFQUNWd1AsS0FBTW1PLEVBQUVuTyxLQUNSL1AsSUFBS21lLEVBQ0wzVSxJQUFLMFUsRUFBRTFVLElBQ1BGLE1BQU80VSxFQUFFNVUsTUFDVCtjLE9BQVFuSSxFQUFFbUksUUFtR29COUYsQ0FBRXJDLEVBQUduZixJQUFNbWYsRUFBRWxlLEtBQU9tZSxHQUFLQSxFQUFFbmUsTUFBUWtlLEVBQUVsZSxJQUFNLElBQU0sR0FBS2tlLEVBQUVsZSxLQUFLbU4sUUFBUW9SLEVBQUcsT0FBUyxLQUFPemYsSUFBS3lVLEVBQUU5TSxLQUFLeVgsSUFHdEksU0FBU0gsRUFBRUcsRUFBR0MsRUFBR3JmLEVBQUd5VSxFQUFHeFUsR0FDckIsSUFBSXdnQixFQUFJLEdBQ1IsTUFBUXpnQixJQUFNeWdCLEdBQUssR0FBS3pnQixHQUFHcU8sUUFBUW9SLEVBQUcsT0FBUyxLQUUvQ2tJLEVBQUV2SSxFQUFHVSxFQURMVCxFQUFJYyxFQUFFZCxFQUFHb0IsRUFBR2hNLEVBQUd4VSxJQUVmMGdCLEVBQUV0QixHQUdKLElBQUkyQyxFQUFJLENBQ045RyxRQUFTLE1BR1gsU0FBU29FLElBQ1AsSUFBSUYsRUFBSTRDLEVBQUU5RyxRQUNWLEdBQUksT0FBU2tFLEVBQUcsTUFBTTZILE1BQU05RixFQUFFLE1BQzlCLE9BQU8vQixFQUdULElBQUlZLEVBQUssQ0FDUDhILHVCQUF3QjlGLEVBQ3hCK0Ysd0JBQXlCLENBQ3ZCQyxTQUFVLE1BRVpDLGtCQUFtQjFHLEVBQ25CMkcscUJBQXNCLENBQ3BCaE4sU0FBUyxHQUVYNEssT0FBUWxtQixHQUVWSCxFQUFRMG9CLFNBQVcsQ0FDakI5WSxJQUFLLFNBQWErUCxFQUFHQyxFQUFHcmYsR0FDdEIsR0FBSSxNQUFRb2YsRUFBRyxPQUFPQSxFQUN0QixJQUFJM0ssRUFBSSxHQUVSLE9BREF3SyxFQUFFRyxFQUFHM0ssRUFBRyxLQUFNNEssRUFBR3JmLEdBQ1Z5VSxHQUVUdk0sUUFBUyxTQUFpQmtYLEVBQUdDLEVBQUdyZixHQUM5QixHQUFJLE1BQVFvZixFQUFHLE9BQU9BLEVBRXRCdUksRUFBRXZJLEVBQUdKLEVBRExLLEVBQUljLEVBQUUsS0FBTSxLQUFNZCxFQUFHcmYsSUFFckIyZ0IsRUFBRXRCLElBRUpxSSxNQUFPLFNBQWV0SSxHQUNwQixPQUFPdUksRUFBRXZJLEdBQUcsV0FDVixPQUFPLE9BQ04sT0FFTGdKLFFBQVMsU0FBaUJoSixHQUN4QixJQUFJQyxFQUFJLEdBSVIsT0FIQUosRUFBRUcsRUFBR0MsRUFBRyxNQUFNLFNBQVVELEdBQ3RCLE9BQU9BLEtBRUZDLEdBRVRnSixLQUFNLFNBQWNqSixHQUNsQixJQUFLd0MsRUFBRXhDLEdBQUksTUFBTTZILE1BQU05RixFQUFFLE1BQ3pCLE9BQU8vQixJQUdYM2YsRUFBUTZvQixVQUFZOUksRUFDcEIvZixFQUFROG9CLFNBQVc5bkIsRUFDbkJoQixFQUFRK29CLFNBQVduSCxFQUNuQjVoQixFQUFRZ3BCLGNBQWdCbEksRUFDeEI5Z0IsRUFBUWlwQixXQUFhN25CLEVBQ3JCcEIsRUFBUWtwQixTQUFXekgsRUFDbkJ6aEIsRUFBUW1wQixtREFBcUQ1SSxFQUU3RHZnQixFQUFRb3BCLGFBQWUsU0FBVXpKLEVBQUdDLEVBQUdyZixHQUNyQyxHQUFJLE9BQVNvZixRQUFLLElBQVdBLEVBQUcsTUFBTTZILE1BQU05RixFQUFFLElBQUsvQixJQUNuRCxJQUFJM0ssRUFBSTdVLEVBQUUsR0FBSXdmLEVBQUU1VSxPQUNadkssRUFBSW1mLEVBQUVsZSxJQUNOdWYsRUFBSXJCLEVBQUUxVSxJQUNOeUwsRUFBSWlKLEVBQUVtSSxPQUVWLEdBQUksTUFBUWxJLEVBQUcsQ0FHYixRQUZBLElBQVdBLEVBQUUzVSxNQUFRK1YsRUFBSXBCLEVBQUUzVSxJQUFLeUwsRUFBSW9MLEVBQUVyRyxjQUN0QyxJQUFXbUUsRUFBRW5lLE1BQVFqQixFQUFJLEdBQUtvZixFQUFFbmUsS0FDNUJrZSxFQUFFbk8sTUFBUW1PLEVBQUVuTyxLQUFLdkYsYUFBYyxJQUFJOFYsRUFBSXBDLEVBQUVuTyxLQUFLdkYsYUFFbEQsSUFBSzBLLEtBQUtpSixFQUNSK0IsRUFBRXRoQixLQUFLdWYsRUFBR2pKLEtBQU93SixFQUFFcGUsZUFBZTRVLEtBQU8zQixFQUFFMkIsUUFBSyxJQUFXaUosRUFBRWpKLFNBQU0sSUFBV29MLEVBQUlBLEVBQUVwTCxHQUFLaUosRUFBRWpKLElBSS9GLElBQUlBLEVBQUlyTyxVQUFVQyxPQUFTLEVBQzNCLEdBQUksSUFBTW9PLEVBQUczQixFQUFFd1EsU0FBV2psQixPQUFPLEdBQUksRUFBSW9XLEVBQUcsQ0FDMUNvTCxFQUFJOU8sTUFBTTBELEdBRVYsSUFBSyxJQUFJclcsRUFBSSxFQUFHQSxFQUFJcVcsRUFBR3JXLElBQ3JCeWhCLEVBQUV6aEIsR0FBS2dJLFVBQVVoSSxFQUFJLEdBR3ZCMFUsRUFBRXdRLFNBQVd6RCxFQUVmLE1BQU8sQ0FDTDhGLFNBQVU3bEIsRUFDVndQLEtBQU1tTyxFQUFFbk8sS0FDUi9QLElBQUtqQixFQUNMeUssSUFBSytWLEVBQ0xqVyxNQUFPaUssRUFDUDhTLE9BQVFwUixJQUlaMVcsRUFBUXFwQixjQUFnQixTQUFVMUosRUFBR0MsR0FlbkMsWUFkQSxJQUFXQSxJQUFNQSxFQUFJLE9BQ3JCRCxFQUFJLENBQ0ZrSSxTQUFVM0gsRUFDVm9KLHNCQUF1QjFKLEVBQ3ZCMkosY0FBZTVKLEVBQ2Y2SixlQUFnQjdKLEVBQ2hCOEosYUFBYyxFQUNkN0UsU0FBVSxLQUNWMVosU0FBVSxPQUVWMFosU0FBVyxDQUNYaUQsU0FBVS9ILEVBQ1Y0SixTQUFVL0osR0FFTEEsRUFBRXpVLFNBQVd5VSxHQUd0QjNmLEVBQVFxZSxjQUFnQm1ELEVBRXhCeGhCLEVBQVEycEIsY0FBZ0IsU0FBVWhLLEdBQ2hDLElBQUlDLEVBQUk0QixFQUFFOWYsS0FBSyxLQUFNaWUsR0FFckIsT0FEQUMsRUFBRXBPLEtBQU9tTyxFQUNGQyxHQUdUNWYsRUFBUTRwQixVQUFZLFdBQ2xCLE1BQU8sQ0FDTG5PLFFBQVMsT0FJYnpiLEVBQVE2cEIsV0FBYSxTQUFVbEssR0FDN0IsTUFBTyxDQUNMa0ksU0FBVXpSLEVBQ1YwVCxPQUFRbkssSUFJWjNmLEVBQVErcEIsZUFBaUI1SCxFQUV6Qm5pQixFQUFRZ3FCLEtBQU8sU0FBVXJLLEdBQ3ZCLE1BQU8sQ0FDTGtJLFNBQVU1RyxFQUNWZ0osTUFBT3RLLEVBQ1B1SyxTQUFVLEVBQ1ZDLFFBQVMsT0FJYm5xQixFQUFRb3FCLEtBQU8sU0FBVXpLLEVBQUdDLEdBQzFCLE1BQU8sQ0FDTGlJLFNBQVV0RyxFQUNWL1AsS0FBTW1PLEVBQ04wSyxhQUFTLElBQVd6SyxFQUFJLEtBQU9BLElBSW5DNWYsRUFBUXNxQixZQUFjLFNBQVUzSyxFQUFHQyxHQUNqQyxPQUFPQyxJQUFJeUssWUFBWTNLLEVBQUdDLElBRzVCNWYsRUFBUXVxQixXQUFhLFNBQVU1SyxFQUFHQyxHQUNoQyxPQUFPQyxJQUFJMEssV0FBVzVLLEVBQUdDLElBRzNCNWYsRUFBUXdxQixjQUFnQixhQUV4QnhxQixFQUFReXFCLFVBQVksU0FBVTlLLEVBQUdDLEdBQy9CLE9BQU9DLElBQUk0SyxVQUFVOUssRUFBR0MsSUFHMUI1ZixFQUFRMHFCLG9CQUFzQixTQUFVL0ssRUFBR0MsRUFBR3JmLEdBQzVDLE9BQU9zZixJQUFJNkssb0JBQW9CL0ssRUFBR0MsRUFBR3JmLElBR3ZDUCxFQUFRMnFCLGdCQUFrQixTQUFVaEwsRUFBR0MsR0FDckMsT0FBT0MsSUFBSThLLGdCQUFnQmhMLEVBQUdDLElBR2hDNWYsRUFBUTRxQixRQUFVLFNBQVVqTCxFQUFHQyxHQUM3QixPQUFPQyxJQUFJK0ssUUFBUWpMLEVBQUdDLElBR3hCNWYsRUFBUTZxQixXQUFhLFNBQVVsTCxFQUFHQyxFQUFHcmYsR0FDbkMsT0FBT3NmLElBQUlnTCxXQUFXbEwsRUFBR0MsRUFBR3JmLElBRzlCUCxFQUFROHFCLE9BQVMsU0FBVW5MLEdBQ3pCLE9BQU9FLElBQUlpTCxPQUFPbkwsSUFHcEIzZixFQUFRK3FCLFNBQVcsU0FBVXBMLEdBQzNCLE9BQU9FLElBQUlrTCxTQUFTcEwsSUFHdEIzZixFQUFRZ3JCLFFBQVUsVyw4QkMzWmxCLElBQUkzSyxFQUFLLEVBQVEsR0FDYjFlLEVBQUksRUFBUSxJQUNaWCxFQUFJLEVBQVEsSUFFaEIsU0FBUzRnQixFQUFFakMsR0FDVCxJQUFLLElBQUlDLEVBQUkseURBQTJERCxFQUFHcGYsRUFBSSxFQUFHQSxFQUFJK0gsVUFBVUMsT0FBUWhJLElBQ3RHcWYsR0FBSyxXQUFhalIsbUJBQW1CckcsVUFBVS9ILElBR2pELE1BQU8seUJBQTJCb2YsRUFBSSxXQUFhQyxFQUFJLGlIQUd6RCxJQUFLUyxFQUFJLE1BQU1tSCxNQUFNNUYsRUFBRSxNQUV2QixTQUFTckIsRUFBR1osRUFBR0MsRUFBR3JmLEVBQUdDLEVBQUd3VSxFQUFHK00sRUFBR2YsRUFBR3JLLEVBQUdELEdBQ2xDLElBQUl2VyxFQUFJOFMsTUFBTW5SLFVBQVVpSCxNQUFNMUksS0FBS2lJLFVBQVcsR0FFOUMsSUFDRXNYLEVBQUV6WCxNQUFNNUgsRUFBR0osR0FDWCxNQUFPRyxHQUNQc1YsS0FBS3FWLFFBQVEzcUIsSUFJakIsSUFBSStoQixHQUFLLEVBQ0x6QixFQUFLLEtBQ0wwQixHQUFLLEVBQ0xHLEVBQUssS0FDTC9DLEVBQUssQ0FDUHVMLFFBQVMsU0FBaUJ0TCxHQUN4QjBDLEdBQUssRUFDTHpCLEVBQUtqQixJQUlULFNBQVNyUCxFQUFHcVAsRUFBR0MsRUFBR3JmLEVBQUdDLEVBQUd3VSxFQUFHK00sRUFBR2YsRUFBR3JLLEVBQUdELEdBQ2xDMkwsR0FBSyxFQUNMekIsRUFBSyxLQUNMTCxFQUFHcFksTUFBTXVYLEVBQUlwWCxXQWlCZixJQUFJa1ksRUFBSyxLQUNMQyxFQUFLLEtBQ0xFLEVBQUssS0FFVCxTQUFTRSxFQUFHbEIsRUFBR0MsRUFBR3JmLEdBQ2hCLElBQUlDLEVBQUltZixFQUFFbk8sTUFBUSxnQkFDbEJtTyxFQUFFdUwsY0FBZ0J2SyxFQUFHcGdCLEdBcEJ2QixTQUFZb2YsRUFBR0MsRUFBR3JmLEVBQUdDLEVBQUd3VSxFQUFHK00sRUFBR2YsRUFBR3JLLEVBQUdELEdBR2xDLEdBRkFwRyxFQUFHbkksTUFBTXlOLEtBQU10TixXQUVYK1osRUFBSSxDQUNOLElBQUlBLEVBSUcsTUFBTW1GLE1BQU01RixFQUFFLE1BSG5CLElBQUl6aEIsRUFBSXlnQixFQUNSeUIsR0FBSyxFQUNMekIsRUFBSyxLQUdQMEIsSUFBT0EsR0FBSyxFQUFJRyxFQUFLdGlCLElBV3ZCaWdCLENBQUc1ZixFQUFHb2YsT0FBRyxFQUFRRCxHQUNqQkEsRUFBRXVMLGNBQWdCLEtBR3BCLElBQUlDLEVBQUssS0FDTEMsRUFBSyxHQUVULFNBQVNDLElBQ1AsR0FBSUYsRUFBSSxJQUFLLElBQUl4TCxLQUFLeUwsRUFBSSxDQUN4QixJQUFJeEwsRUFBSXdMLEVBQUd6TCxHQUNQcGYsRUFBSTRxQixFQUFHcGQsUUFBUTRSLEdBQ25CLE1BQU8sRUFBSXBmLEdBQUksTUFBTWluQixNQUFNNUYsRUFBRSxHQUFJakMsSUFFakMsSUFBSzJMLEVBQUcvcUIsR0FBSSxDQUNWLElBQUtxZixFQUFFMkwsY0FBZSxNQUFNL0QsTUFBTTVGLEVBQUUsR0FBSWpDLElBSXhDLElBQUssSUFBSW5mLEtBSFQ4cUIsRUFBRy9xQixHQUFLcWYsRUFDUnJmLEVBQUlxZixFQUFFNEwsV0FFVyxDQUNmLElBQUl4VyxPQUFJLEVBQ0orTSxFQUFJeGhCLEVBQUVDLEdBQ053Z0IsRUFBSXBCLEVBQ0pqSixFQUFJblcsRUFDUixHQUFJaXJCLEVBQUcxcEIsZUFBZTRVLEdBQUksTUFBTTZRLE1BQU01RixFQUFFLEdBQUlqTCxJQUM1QzhVLEVBQUc5VSxHQUFLb0wsRUFDUixJQUFJckwsRUFBSXFMLEVBQUUySix3QkFFVixHQUFJaFYsRUFBRyxDQUNMLElBQUsxQixLQUFLMEIsRUFDUkEsRUFBRTNVLGVBQWVpVCxJQUFNMlcsRUFBR2pWLEVBQUUxQixHQUFJZ00sRUFBR3JLLEdBR3JDM0IsR0FBSSxPQUNDK00sRUFBRTZKLGtCQUFvQkQsRUFBRzVKLEVBQUU2SixpQkFBa0I1SyxFQUFHckssR0FBSTNCLEdBQUksR0FBTUEsR0FBSSxFQUV6RSxJQUFLQSxFQUFHLE1BQU13UyxNQUFNNUYsRUFBRSxHQUFJcGhCLEVBQUdtZixPQU1yQyxTQUFTZ00sRUFBR2hNLEVBQUdDLEVBQUdyZixHQUNoQixHQUFJc3JCLEVBQUdsTSxHQUFJLE1BQU02SCxNQUFNNUYsRUFBRSxJQUFLakMsSUFDOUJrTSxFQUFHbE0sR0FBS0MsRUFDUmtNLEVBQUduTSxHQUFLQyxFQUFFNEwsV0FBV2pyQixHQUFHd3JCLGFBRzFCLElBQUlULEVBQUssR0FDTEcsRUFBSyxHQUNMSSxFQUFLLEdBQ0xDLEVBQUssR0FFVCxTQUFTRSxFQUFHck0sR0FDVixJQUNJcGYsRUFEQXFmLEdBQUksRUFHUixJQUFLcmYsS0FBS29mLEVBQ1IsR0FBSUEsRUFBRTVkLGVBQWV4QixHQUFJLENBQ3ZCLElBQUlDLEVBQUltZixFQUFFcGYsR0FFVixJQUFLNnFCLEVBQUdycEIsZUFBZXhCLElBQU02cUIsRUFBRzdxQixLQUFPQyxFQUFHLENBQ3hDLEdBQUk0cUIsRUFBRzdxQixHQUFJLE1BQU1pbkIsTUFBTTVGLEVBQUUsSUFBS3JoQixJQUM5QjZxQixFQUFHN3FCLEdBQUtDLEVBQ1JvZixHQUFJLEdBS1ZBLEdBQUt5TCxJQUdQLElBQUlZLElBQU8scUJBQXVCNVosUUFBVSxxQkFBdUJBLE9BQU8rTCxVQUFZLHFCQUF1Qi9MLE9BQU8rTCxTQUFTQyxlQUN6SDZOLEVBQUssS0FDTEMsRUFBSyxLQUNMQyxFQUFLLEtBRVQsU0FBU0MsRUFBRzFNLEdBQ1YsR0FBSUEsRUFBSWMsRUFBR2QsR0FBSSxDQUNiLEdBQUksb0JBQXNCdU0sRUFBSSxNQUFNMUUsTUFBTTVGLEVBQUUsTUFDNUMsSUFBSWhDLEVBQUlELEVBQUUyTSxVQUNWMU0sSUFBTUEsRUFBSVksRUFBR1osR0FBSXNNLEVBQUd2TSxFQUFFMk0sVUFBVzNNLEVBQUVuTyxLQUFNb08sS0FJN0MsU0FBUzJNLEVBQUc1TSxHQUNWd00sRUFBS0MsRUFBS0EsRUFBR2xrQixLQUFLeVgsR0FBS3lNLEVBQUssQ0FBQ3pNLEdBQUt3TSxFQUFLeE0sRUFHekMsU0FBUzZNLElBQ1AsR0FBSUwsRUFBSSxDQUNOLElBQUl4TSxFQUFJd00sRUFDSnZNLEVBQUl3TSxFQUdSLEdBRkFBLEVBQUtELEVBQUssS0FDVkUsRUFBRzFNLEdBQ0NDLEVBQUcsSUFBS0QsRUFBSSxFQUFHQSxFQUFJQyxFQUFFclgsT0FBUW9YLElBQy9CME0sRUFBR3pNLEVBQUVELEtBS1gsU0FBUzhNLEVBQUc5TSxFQUFHQyxHQUNiLE9BQU9ELEVBQUVDLEdBR1gsU0FBUzhNLEVBQUcvTSxFQUFHQyxFQUFHcmYsRUFBR0MsRUFBR3dVLEdBQ3RCLE9BQU8ySyxFQUFFQyxFQUFHcmYsRUFBR0MsRUFBR3dVLEdBR3BCLFNBQVMyWCxLQUVULElBQUlDLEVBQUtILEVBQ0xJLEdBQUssRUFDTEMsR0FBSyxFQUVULFNBQVNDLElBQ0gsT0FBU1osR0FBTSxPQUFTQyxJQUFJTyxJQUFNSCxLQUd4QyxTQUFTUSxFQUFHck4sRUFBR0MsRUFBR3JmLEdBQ2hCLEdBQUl1c0IsRUFBSSxPQUFPbk4sRUFBRUMsRUFBR3JmLEdBQ3BCdXNCLEdBQUssRUFFTCxJQUNFLE9BQU9GLEVBQUdqTixFQUFHQyxFQUFHcmYsR0FDaEIsUUFDQXVzQixHQUFLLEVBQUlDLEtBSWIsSUFBSUUsRUFBSyw4VkFDTEMsRUFBS3RzQixPQUFPa0IsVUFBVUMsZUFDdEJvckIsRUFBSyxHQUNMQyxFQUFLLEdBZ0RULFNBQVN0TixFQUFFSCxFQUFHQyxFQUFHcmYsRUFBR0MsRUFBR3dVLEVBQUcrTSxHQUN4Qm5NLEtBQUt5WCxnQkFBa0IsSUFBTXpOLEdBQUssSUFBTUEsR0FBSyxJQUFNQSxFQUNuRGhLLEtBQUswWCxjQUFnQjlzQixFQUNyQm9WLEtBQUsyWCxtQkFBcUJ2WSxFQUMxQlksS0FBSzRYLGdCQUFrQmp0QixFQUN2QnFWLEtBQUs2WCxhQUFlOU4sRUFDcEIvSixLQUFLcEUsS0FBT29PLEVBQ1poSyxLQUFLOFgsWUFBYzNMLEVBR3JCLElBQUlMLEVBQUksR0FDUix1SUFBdUl0RyxNQUFNLEtBQUszUyxTQUFRLFNBQVVrWCxHQUNsSytCLEVBQUUvQixHQUFLLElBQUlHLEVBQUVILEVBQUcsR0FBRyxFQUFJQSxFQUFHLE1BQU0sTUFFbEMsQ0FBQyxDQUFDLGdCQUFpQixrQkFBbUIsQ0FBQyxZQUFhLFNBQVUsQ0FBQyxVQUFXLE9BQVEsQ0FBQyxZQUFhLGVBQWVsWCxTQUFRLFNBQVVrWCxHQUMvSCxJQUFJQyxFQUFJRCxFQUFFLEdBQ1YrQixFQUFFOUIsR0FBSyxJQUFJRSxFQUFFRixFQUFHLEdBQUcsRUFBSUQsRUFBRSxHQUFJLE1BQU0sTUFFckMsQ0FBQyxrQkFBbUIsWUFBYSxhQUFjLFNBQVNsWCxTQUFRLFNBQVVrWCxHQUN4RStCLEVBQUUvQixHQUFLLElBQUlHLEVBQUVILEVBQUcsR0FBRyxFQUFJQSxFQUFFN1IsY0FBZSxNQUFNLE1BRWhELENBQUMsY0FBZSw0QkFBNkIsWUFBYSxpQkFBaUJyRixTQUFRLFNBQVVrWCxHQUMzRitCLEVBQUUvQixHQUFLLElBQUlHLEVBQUVILEVBQUcsR0FBRyxFQUFJQSxFQUFHLE1BQU0sTUFFbEMsd05BQXdOdkUsTUFBTSxLQUFLM1MsU0FBUSxTQUFVa1gsR0FDblArQixFQUFFL0IsR0FBSyxJQUFJRyxFQUFFSCxFQUFHLEdBQUcsRUFBSUEsRUFBRTdSLGNBQWUsTUFBTSxNQUVoRCxDQUFDLFVBQVcsV0FBWSxRQUFTLFlBQVlyRixTQUFRLFNBQVVrWCxHQUM3RCtCLEVBQUUvQixHQUFLLElBQUlHLEVBQUVILEVBQUcsR0FBRyxFQUFJQSxFQUFHLE1BQU0sTUFFbEMsQ0FBQyxVQUFXLFlBQVlsWCxTQUFRLFNBQVVrWCxHQUN4QytCLEVBQUUvQixHQUFLLElBQUlHLEVBQUVILEVBQUcsR0FBRyxFQUFJQSxFQUFHLE1BQU0sTUFFbEMsQ0FBQyxPQUFRLE9BQVEsT0FBUSxRQUFRbFgsU0FBUSxTQUFVa1gsR0FDakQrQixFQUFFL0IsR0FBSyxJQUFJRyxFQUFFSCxFQUFHLEdBQUcsRUFBSUEsRUFBRyxNQUFNLE1BRWxDLENBQUMsVUFBVyxTQUFTbFgsU0FBUSxTQUFVa1gsR0FDckMrQixFQUFFL0IsR0FBSyxJQUFJRyxFQUFFSCxFQUFHLEdBQUcsRUFBSUEsRUFBRTdSLGNBQWUsTUFBTSxNQUVoRCxJQUFJNmYsRUFBSyxnQkFFVCxTQUFTQyxFQUFHak8sR0FDVixPQUFPQSxFQUFFLEdBQUdrTyxjQUdkLDBqQ0FBMGpDelMsTUFBTSxLQUFLM1MsU0FBUSxTQUFVa1gsR0FDcmxDLElBQUlDLEVBQUlELEVBQUUvUSxRQUFRK2UsRUFBSUMsR0FDdEJsTSxFQUFFOUIsR0FBSyxJQUFJRSxFQUFFRixFQUFHLEdBQUcsRUFBSUQsRUFBRyxNQUFNLE1BRWxDLDJFQUEyRXZFLE1BQU0sS0FBSzNTLFNBQVEsU0FBVWtYLEdBQ3RHLElBQUlDLEVBQUlELEVBQUUvUSxRQUFRK2UsRUFBSUMsR0FDdEJsTSxFQUFFOUIsR0FBSyxJQUFJRSxFQUFFRixFQUFHLEdBQUcsRUFBSUQsRUFBRyxnQ0FBZ0MsTUFFNUQsQ0FBQyxXQUFZLFdBQVksYUFBYWxYLFNBQVEsU0FBVWtYLEdBQ3RELElBQUlDLEVBQUlELEVBQUUvUSxRQUFRK2UsRUFBSUMsR0FDdEJsTSxFQUFFOUIsR0FBSyxJQUFJRSxFQUFFRixFQUFHLEdBQUcsRUFBSUQsRUFBRyx3Q0FBd0MsTUFFcEUsQ0FBQyxXQUFZLGVBQWVsWCxTQUFRLFNBQVVrWCxHQUM1QytCLEVBQUUvQixHQUFLLElBQUlHLEVBQUVILEVBQUcsR0FBRyxFQUFJQSxFQUFFN1IsY0FBZSxNQUFNLE1BRWhENFQsRUFBRW9NLFVBQVksSUFBSWhPLEVBQUUsWUFBYSxHQUFHLEVBQUksYUFBYyxnQ0FBZ0MsR0FDdEYsQ0FBQyxNQUFPLE9BQVEsU0FBVSxjQUFjclgsU0FBUSxTQUFVa1gsR0FDeEQrQixFQUFFL0IsR0FBSyxJQUFJRyxFQUFFSCxFQUFHLEdBQUcsRUFBSUEsRUFBRTdSLGNBQWUsTUFBTSxNQUVoRCxJQUFJaWdCLEVBQUsxTixFQUFHOEksbURBUVosU0FBUzZFLEVBQUdyTyxFQUFHQyxFQUFHcmYsRUFBR0MsR0FDbkIsSUFBSXdVLEVBQUkwTSxFQUFFM2YsZUFBZTZkLEdBQUs4QixFQUFFOUIsR0FBSyxNQUM3QixPQUFTNUssRUFBSSxJQUFNQSxFQUFFeEQsTUFBT2hSLElBQVcsRUFBSW9mLEVBQUVyWCxTQUFXLE1BQVFxWCxFQUFFLElBQU0sTUFBUUEsRUFBRSxNQUFNLE1BQVFBLEVBQUUsSUFBTSxNQUFRQSxFQUFFLFFBN0Y1SCxTQUFZRCxFQUFHQyxFQUFHcmYsRUFBR0MsR0FDbkIsR0FBSSxPQUFTb2YsR0FBSyxxQkFBdUJBLEdBcEIzQyxTQUFZRCxFQUFHQyxFQUFHcmYsRUFBR0MsR0FDbkIsR0FBSSxPQUFTRCxHQUFLLElBQU1BLEVBQUVpUixLQUFNLE9BQU8sRUFFdkMsY0FBZW9PLEdBQ2IsSUFBSyxXQUNMLElBQUssU0FDSCxPQUFPLEVBRVQsSUFBSyxVQUNILE9BQUlwZixJQUNBLE9BQVNELEdBQVdBLEVBQUU4c0IsZ0JBRW5CLFdBRFAxTixFQUFJQSxFQUFFN1IsY0FBYy9FLE1BQU0sRUFBRyxLQUNMLFVBQVk0VyxHQUV0QyxRQUNFLE9BQU8sR0FLbUNzTyxDQUFHdE8sRUFBR0MsRUFBR3JmLEVBQUdDLEdBQUksT0FBTyxFQUNyRSxHQUFJQSxFQUFHLE9BQU8sRUFDZCxHQUFJLE9BQVNELEVBQUcsT0FBUUEsRUFBRWlSLE1BQ3hCLEtBQUssRUFDSCxPQUFRb08sRUFFVixLQUFLLEVBQ0gsT0FBTyxJQUFPQSxFQUVoQixLQUFLLEVBQ0gsT0FBT3NPLE1BQU10TyxHQUVmLEtBQUssRUFDSCxPQUFPc08sTUFBTXRPLElBQU0sRUFBSUEsRUFFM0IsT0FBTyxFQThFRHVPLENBQUd2TyxFQUFHcmYsRUFBR3lVLEVBQUd4VSxLQUFPRCxFQUFJLE1BQU9DLEdBQUssT0FBU3dVLEVBekhwRCxTQUFZMkssR0FDVixRQUFJdU4sRUFBRzdzQixLQUFLK3NCLEVBQUl6TixLQUNadU4sRUFBRzdzQixLQUFLOHNCLEVBQUl4TixLQUNac04sRUFBRzlqQixLQUFLd1csR0FBV3lOLEVBQUd6TixJQUFLLEdBQy9Cd04sRUFBR3hOLElBQUssR0FDRCxJQW9IK0N5TyxDQUFHeE8sS0FBTyxPQUFTcmYsRUFBSW9mLEVBQUUwTyxnQkFBZ0J6TyxHQUFLRCxFQUFFckIsYUFBYXNCLEVBQUcsR0FBS3JmLElBQU15VSxFQUFFd1ksZ0JBQWtCN04sRUFBRTNLLEVBQUV5WSxjQUFnQixPQUFTbHRCLEVBQUksSUFBTXlVLEVBQUV4RCxNQUFZLEdBQUtqUixHQUFLcWYsRUFBSTVLLEVBQUVzWSxjQUFlOXNCLEVBQUl3VSxFQUFFdVksbUJBQW9CLE9BQVNodEIsRUFBSW9mLEVBQUUwTyxnQkFBZ0J6TyxJQUFrQnJmLEVBQUksS0FBaEJ5VSxFQUFJQSxFQUFFeEQsT0FBcUIsSUFBTXdELElBQUssSUFBT3pVLEVBQUksR0FBSyxHQUFLQSxFQUFHQyxFQUFJbWYsRUFBRTJPLGVBQWU5dEIsRUFBR29mLEVBQUdyZixHQUFLb2YsRUFBRXJCLGFBQWFzQixFQUFHcmYsTUFWMVp3dEIsRUFBR2hzQixlQUFlLDRCQUE4QmdzQixFQUFHMUYsdUJBQXlCLENBQzFFNU0sUUFBUyxPQUVYc1MsRUFBR2hzQixlQUFlLDZCQUErQmdzQixFQUFHekYsd0JBQTBCLENBQzVFQyxTQUFVLE9BU1osSUFBSWdHLEVBQUssY0FDTC9MLEVBQUksb0JBQXNCdmhCLFFBQVVBLE9BQU84bEIsSUFDM0N5SCxHQUFLaE0sRUFBSXZoQixPQUFPOGxCLElBQUksaUJBQW1CLE1BQ3ZDMEgsR0FBS2pNLEVBQUl2aEIsT0FBTzhsQixJQUFJLGdCQUFrQixNQUN0QzJILEdBQUtsTSxFQUFJdmhCLE9BQU84bEIsSUFBSSxrQkFBb0IsTUFDeEM0SCxHQUFLbk0sRUFBSXZoQixPQUFPOGxCLElBQUkscUJBQXVCLE1BQzNDNkgsR0FBS3BNLEVBQUl2aEIsT0FBTzhsQixJQUFJLGtCQUFvQixNQUN4QzhILEdBQUtyTSxFQUFJdmhCLE9BQU84bEIsSUFBSSxrQkFBb0IsTUFDeEMrSCxHQUFLdE0sRUFBSXZoQixPQUFPOGxCLElBQUksaUJBQW1CLE1BQ3ZDZ0ksR0FBS3ZNLEVBQUl2aEIsT0FBTzhsQixJQUFJLHlCQUEyQixNQUMvQ2lJLEdBQUt4TSxFQUFJdmhCLE9BQU84bEIsSUFBSSxxQkFBdUIsTUFDM0NrSSxHQUFLek0sRUFBSXZoQixPQUFPOGxCLElBQUksa0JBQW9CLE1BQ3hDbUksR0FBSzFNLEVBQUl2aEIsT0FBTzhsQixJQUFJLHVCQUF5QixNQUM3Q29JLEdBQUszTSxFQUFJdmhCLE9BQU84bEIsSUFBSSxjQUFnQixNQUNwQ3FJLEdBQUs1TSxFQUFJdmhCLE9BQU84bEIsSUFBSSxjQUFnQixNQUNwQ3NJLEdBQUs3TSxFQUFJdmhCLE9BQU84bEIsSUFBSSxlQUFpQixNQUNyQ3VJLEdBQUssb0JBQXNCcnVCLFFBQVVBLE9BQU9vUyxTQUVoRCxTQUFTa2MsR0FBRzVQLEdBQ1YsT0FBSSxPQUFTQSxHQUFLLGtCQUFvQkEsRUFBVSxLQUV6QyxvQkFEUEEsRUFBSTJQLElBQU0zUCxFQUFFMlAsS0FBTzNQLEVBQUUsZUFDWUEsRUFBSSxLQWlCdkMsU0FBUzZQLEdBQUc3UCxHQUNWLEdBQUksTUFBUUEsRUFBRyxPQUFPLEtBQ3RCLEdBQUksb0JBQXNCQSxFQUFHLE9BQU9BLEVBQUUzVCxhQUFlMlQsRUFBRWxmLE1BQVEsS0FDL0QsR0FBSSxrQkFBb0JrZixFQUFHLE9BQU9BLEVBRWxDLE9BQVFBLEdBQ04sS0FBSytPLEdBQ0gsTUFBTyxXQUVULEtBQUtELEdBQ0gsTUFBTyxTQUVULEtBQUtHLEdBQ0gsTUFBTyxXQUVULEtBQUtELEdBQ0gsTUFBTyxhQUVULEtBQUtNLEdBQ0gsTUFBTyxXQUVULEtBQUtDLEdBQ0gsTUFBTyxlQUdYLEdBQUksa0JBQW9CdlAsRUFBRyxPQUFRQSxFQUFFa0ksVUFDbkMsS0FBS2lILEdBQ0gsTUFBTyxtQkFFVCxLQUFLRCxHQUNILE1BQU8sbUJBRVQsS0FBS0csR0FDSCxJQUFJcFAsRUFBSUQsRUFBRW1LLE9BRVYsT0FEQWxLLEVBQUlBLEVBQUU1VCxhQUFlNFQsRUFBRW5mLE1BQVEsR0FDeEJrZixFQUFFM1QsY0FBZ0IsS0FBTzRULEVBQUksY0FBZ0JBLEVBQUksSUFBTSxjQUVoRSxLQUFLdVAsR0FDSCxPQUFPSyxHQUFHN1AsRUFBRW5PLE1BRWQsS0FBSzZkLEdBQ0gsT0FBT0csR0FBRzdQLEVBQUVtSyxRQUVkLEtBQUtzRixHQUNILEdBQUl6UCxFQUFJLElBQU1BLEVBQUV1SyxRQUFVdkssRUFBRXdLLFFBQVUsS0FBTSxPQUFPcUYsR0FBRzdQLEdBRTFELE9BQU8sS0FHVCxTQUFTOFAsR0FBRzlQLEdBQ1YsSUFBSUMsRUFBSSxHQUVSLEVBQUcsQ0FDREQsRUFBRyxPQUFRQSxFQUFFblcsS0FDWCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxHQUNMLEtBQUssRUFDSCxJQUFJakosRUFBSSxHQUNSLE1BQU1vZixFQUVSLFFBQ0UsSUFBSW5mLEVBQUltZixFQUFFK1AsWUFDTjFhLEVBQUkySyxFQUFFZ1EsYUFDTjVOLEVBQUl5TixHQUFHN1AsRUFBRW5PLE1BQ2JqUixFQUFJLEtBQ0pDLElBQU1ELEVBQUlpdkIsR0FBR2h2QixFQUFFZ1IsT0FDZmhSLEVBQUl1aEIsRUFDSkEsRUFBSSxHQUNKL00sRUFBSStNLEVBQUksUUFBVS9NLEVBQUU0YSxTQUFTaGhCLFFBQVEyZixFQUFJLElBQU0sSUFBTXZaLEVBQUU2YSxXQUFhLElBQU10dkIsSUFBTXdoQixFQUFJLGdCQUFrQnhoQixFQUFJLEtBQzFHQSxFQUFJLGFBQWVDLEdBQUssV0FBYXVoQixFQUd6Q25DLEdBQUtyZixFQUNMb2YsRUFBSUEsRUFBRW1RLGFBQ0NuUSxHQUVULE9BQU9DLEVBR1QsU0FBU21RLEdBQUdwUSxHQUNWLGNBQWVBLEdBQ2IsSUFBSyxVQUNMLElBQUssU0FDTCxJQUFLLFNBQ0wsSUFBSyxTQUNMLElBQUssWUFDSCxPQUFPQSxFQUVULFFBQ0UsTUFBTyxJQUliLFNBQVNxUSxHQUFHclEsR0FDVixJQUFJQyxFQUFJRCxFQUFFbk8sS0FDVixPQUFRbU8sRUFBSUEsRUFBRXNRLFdBQWEsVUFBWXRRLEVBQUU3UixnQkFBa0IsYUFBZThSLEdBQUssVUFBWUEsR0F1QzdGLFNBQVNzUSxHQUFHdlEsR0FDVkEsRUFBRXdRLGdCQUFrQnhRLEVBQUV3USxjQXJDeEIsU0FBWXhRLEdBQ1YsSUFBSUMsRUFBSW9RLEdBQUdyUSxHQUFLLFVBQVksUUFDeEJwZixFQUFJSyxPQUFPcUgseUJBQXlCMFgsRUFBRXhLLFlBQVlyVCxVQUFXOGQsR0FDN0RwZixFQUFJLEdBQUttZixFQUFFQyxHQUVmLElBQUtELEVBQUU1ZCxlQUFlNmQsSUFBTSxxQkFBdUJyZixHQUFLLG9CQUFzQkEsRUFBRVEsS0FBTyxvQkFBc0JSLEVBQUVzaUIsSUFBSyxDQUNsSCxJQUFJN04sRUFBSXpVLEVBQUVRLElBQ05naEIsRUFBSXhoQixFQUFFc2lCLElBY1YsT0FiQWppQixPQUFPQyxlQUFlOGUsRUFBR0MsRUFBRyxDQUMxQjVMLGNBQWMsRUFDZGpULElBQUssV0FDSCxPQUFPaVUsRUFBRTNVLEtBQUt1VixPQUVoQmlOLElBQUssU0FBYWxELEdBQ2hCbmYsRUFBSSxHQUFLbWYsRUFDVG9DLEVBQUUxaEIsS0FBS3VWLEtBQU0rSixNQUdqQi9lLE9BQU9DLGVBQWU4ZSxFQUFHQyxFQUFHLENBQzFCOWUsV0FBWVAsRUFBRU8sYUFFVCxDQUNMc3ZCLFNBQVUsV0FDUixPQUFPNXZCLEdBRVQ2dkIsU0FBVSxTQUFrQjFRLEdBQzFCbmYsRUFBSSxHQUFLbWYsR0FFWDJRLGFBQWMsV0FDWjNRLEVBQUV3USxjQUFnQixZQUNYeFEsRUFBRUMsTUFPdUIyUSxDQUFHNVEsSUFHM0MsU0FBUzZRLEdBQUc3USxHQUNWLElBQUtBLEVBQUcsT0FBTyxFQUNmLElBQUlDLEVBQUlELEVBQUV3USxjQUNWLElBQUt2USxFQUFHLE9BQU8sRUFDZixJQUFJcmYsRUFBSXFmLEVBQUV3USxXQUNONXZCLEVBQUksR0FHUixPQUZBbWYsSUFBTW5mLEVBQUl3dkIsR0FBR3JRLEdBQUtBLEVBQUU4USxRQUFVLE9BQVMsUUFBVTlRLEVBQUV4ZSxRQUNuRHdlLEVBQUluZixLQUNTRCxJQUFLcWYsRUFBRXlRLFNBQVMxUSxJQUFJLEdBR25DLFNBQVMrUSxHQUFHL1EsRUFBR0MsR0FDYixJQUFJcmYsRUFBSXFmLEVBQUU2USxRQUNWLE9BQU85dUIsRUFBRSxHQUFJaWUsRUFBRyxDQUNkK1Esb0JBQWdCLEVBQ2hCQyxrQkFBYyxFQUNkenZCLFdBQU8sRUFDUHN2QixRQUFTLE1BQVFsd0IsRUFBSUEsRUFBSW9mLEVBQUVrUixjQUFjQyxpQkFJN0MsU0FBU0MsR0FBR3BSLEVBQUdDLEdBQ2IsSUFBSXJmLEVBQUksTUFBUXFmLEVBQUVnUixhQUFlLEdBQUtoUixFQUFFZ1IsYUFDcENwd0IsRUFBSSxNQUFRb2YsRUFBRTZRLFFBQVU3USxFQUFFNlEsUUFBVTdRLEVBQUUrUSxlQUMxQ3B3QixFQUFJd3ZCLEdBQUcsTUFBUW5RLEVBQUV6ZSxNQUFReWUsRUFBRXplLE1BQVFaLEdBQ25Db2YsRUFBRWtSLGNBQWdCLENBQ2hCQyxlQUFnQnR3QixFQUNoQnd3QixhQUFjendCLEVBQ2Qwd0IsV0FBWSxhQUFlclIsRUFBRXBPLE1BQVEsVUFBWW9PLEVBQUVwTyxLQUFPLE1BQVFvTyxFQUFFNlEsUUFBVSxNQUFRN1EsRUFBRXplLE9BSTVGLFNBQVMrdkIsR0FBR3ZSLEVBQUdDLEdBRWIsT0FEQUEsRUFBSUEsRUFBRTZRLFVBQ096QyxFQUFHck8sRUFBRyxVQUFXQyxHQUFHLEdBR25DLFNBQVN1UixHQUFHeFIsRUFBR0MsR0FDYnNSLEdBQUd2UixFQUFHQyxHQUNOLElBQUlyZixFQUFJd3ZCLEdBQUduUSxFQUFFemUsT0FDVFgsRUFBSW9mLEVBQUVwTyxLQUNWLEdBQUksTUFBUWpSLEVBQ04sV0FBYUMsR0FDWCxJQUFNRCxHQUFLLEtBQU9vZixFQUFFeGUsT0FBU3dlLEVBQUV4ZSxPQUFTWixLQUFHb2YsRUFBRXhlLE1BQVEsR0FBS1osR0FDekRvZixFQUFFeGUsUUFBVSxHQUFLWixJQUFNb2YsRUFBRXhlLE1BQVEsR0FBS1osUUFDeEMsR0FBSSxXQUFhQyxHQUFLLFVBQVlBLEVBRXZDLFlBREFtZixFQUFFME8sZ0JBQWdCLFNBR3BCek8sRUFBRTdkLGVBQWUsU0FBV3F2QixHQUFHelIsRUFBR0MsRUFBRXBPLEtBQU1qUixHQUFLcWYsRUFBRTdkLGVBQWUsaUJBQW1CcXZCLEdBQUd6UixFQUFHQyxFQUFFcE8sS0FBTXVlLEdBQUduUSxFQUFFZ1IsZUFDdEcsTUFBUWhSLEVBQUU2USxTQUFXLE1BQVE3USxFQUFFK1EsaUJBQW1CaFIsRUFBRWdSLGlCQUFtQi9RLEVBQUUrUSxnQkFHM0UsU0FBU1UsR0FBRzFSLEVBQUdDLEVBQUdyZixHQUNoQixHQUFJcWYsRUFBRTdkLGVBQWUsVUFBWTZkLEVBQUU3ZCxlQUFlLGdCQUFpQixDQUNqRSxJQUFJdkIsRUFBSW9mLEVBQUVwTyxLQUNWLEtBQU0sV0FBYWhSLEdBQUssVUFBWUEsUUFBSyxJQUFXb2YsRUFBRXplLE9BQVMsT0FBU3llLEVBQUV6ZSxPQUFRLE9BQ2xGeWUsRUFBSSxHQUFLRCxFQUFFa1IsY0FBY0csYUFDekJ6d0IsR0FBS3FmLElBQU1ELEVBQUV4ZSxRQUFVd2UsRUFBRXhlLE1BQVF5ZSxHQUNqQ0QsRUFBRWlSLGFBQWVoUixFQUluQixNQURBcmYsRUFBSW9mLEVBQUVsZixRQUNPa2YsRUFBRWxmLEtBQU8sSUFDdEJrZixFQUFFZ1IsaUJBQW1CaFIsRUFBRWtSLGNBQWNDLGVBQ3JDLEtBQU92d0IsSUFBTW9mLEVBQUVsZixLQUFPRixHQUd4QixTQUFTNndCLEdBQUd6UixFQUFHQyxFQUFHcmYsR0FDWixXQUFhcWYsR0FBS0QsRUFBRTJSLGNBQWNDLGdCQUFrQjVSLElBQUcsTUFBUXBmLEVBQUlvZixFQUFFaVIsYUFBZSxHQUFLalIsRUFBRWtSLGNBQWNHLGFBQWVyUixFQUFFaVIsZUFBaUIsR0FBS3J3QixJQUFNb2YsRUFBRWlSLGFBQWUsR0FBS3J3QixJQVdsTCxTQUFTaXhCLEdBQUc3UixFQUFHQyxHQUtiLE9BSkFELEVBQUloZSxFQUFFLENBQ0o2akIsY0FBVSxHQUNUNUYsSUFDQ0EsRUFaTixTQUFZRCxHQUNWLElBQUlDLEVBQUksR0FJUixPQUhBUyxFQUFHcUksU0FBU2pnQixRQUFRa1gsR0FBRyxTQUFVQSxHQUMvQixNQUFRQSxJQUFNQyxHQUFLRCxNQUVkQyxFQU9DNlIsQ0FBRzdSLEVBQUU0RixhQUFXN0YsRUFBRTZGLFNBQVc1RixHQUM5QkQsRUFHVCxTQUFTK1IsR0FBRy9SLEVBQUdDLEVBQUdyZixFQUFHQyxHQUduQixHQUZBbWYsRUFBSUEsRUFBRS9WLFFBRUZnVyxFQUFHLENBQ0xBLEVBQUksR0FFSixJQUFLLElBQUk1SyxFQUFJLEVBQUdBLEVBQUl6VSxFQUFFZ0ksT0FBUXlNLElBQzVCNEssRUFBRSxJQUFNcmYsRUFBRXlVLEtBQU0sRUFHbEIsSUFBS3pVLEVBQUksRUFBR0EsRUFBSW9mLEVBQUVwWCxPQUFRaEksSUFDeEJ5VSxFQUFJNEssRUFBRTdkLGVBQWUsSUFBTTRkLEVBQUVwZixHQUFHWSxPQUFRd2UsRUFBRXBmLEdBQUdveEIsV0FBYTNjLElBQU0ySyxFQUFFcGYsR0FBR294QixTQUFXM2MsR0FBSUEsR0FBS3hVLElBQU1tZixFQUFFcGYsR0FBR3F4QixpQkFBa0IsT0FFbkgsQ0FJTCxJQUhBcnhCLEVBQUksR0FBS3d2QixHQUFHeHZCLEdBQ1pxZixFQUFJLEtBRUM1SyxFQUFJLEVBQUdBLEVBQUkySyxFQUFFcFgsT0FBUXlNLElBQUssQ0FDN0IsR0FBSTJLLEVBQUUzSyxHQUFHN1QsUUFBVVosRUFHakIsT0FGQW9mLEVBQUUzSyxHQUFHMmMsVUFBVyxPQUNoQm54QixJQUFNbWYsRUFBRTNLLEdBQUc0YyxpQkFBa0IsSUFJL0IsT0FBU2hTLEdBQUtELEVBQUUzSyxHQUFHNmMsV0FBYWpTLEVBQUlELEVBQUUzSyxJQUd4QyxPQUFTNEssSUFBTUEsRUFBRStSLFVBQVcsSUFJaEMsU0FBU0csR0FBR25TLEVBQUdDLEdBQ2IsR0FBSSxNQUFRQSxFQUFFbVMsd0JBQXlCLE1BQU12SyxNQUFNNUYsRUFBRSxLQUNyRCxPQUFPamdCLEVBQUUsR0FBSWllLEVBQUcsQ0FDZHplLFdBQU8sRUFDUHl2QixrQkFBYyxFQUNkcEwsU0FBVSxHQUFLN0YsRUFBRWtSLGNBQWNHLGVBSW5DLFNBQVNnQixHQUFHclMsRUFBR0MsR0FDYixJQUFJcmYsRUFBSXFmLEVBQUV6ZSxNQUVWLEdBQUksTUFBUVosRUFBRyxDQUliLEdBSEFBLEVBQUlxZixFQUFFNEYsU0FDTjVGLEVBQUlBLEVBQUVnUixhQUVGLE1BQVFyd0IsRUFBRyxDQUNiLEdBQUksTUFBUXFmLEVBQUcsTUFBTTRILE1BQU01RixFQUFFLEtBRTdCLEdBQUkzTyxNQUFNQyxRQUFRM1MsR0FBSSxDQUNwQixLQUFNLEdBQUtBLEVBQUVnSSxRQUFTLE1BQU1pZixNQUFNNUYsRUFBRSxLQUNwQ3JoQixFQUFJQSxFQUFFLEdBR1JxZixFQUFJcmYsRUFHTixNQUFRcWYsSUFBTUEsRUFBSSxJQUNsQnJmLEVBQUlxZixFQUdORCxFQUFFa1IsY0FBZ0IsQ0FDaEJHLGFBQWNqQixHQUFHeHZCLElBSXJCLFNBQVMweEIsR0FBR3RTLEVBQUdDLEdBQ2IsSUFBSXJmLEVBQUl3dkIsR0FBR25RLEVBQUV6ZSxPQUNUWCxFQUFJdXZCLEdBQUduUSxFQUFFZ1IsY0FDYixNQUFRcndCLEtBQU1BLEVBQUksR0FBS0EsS0FBU29mLEVBQUV4ZSxRQUFVd2UsRUFBRXhlLE1BQVFaLEdBQUksTUFBUXFmLEVBQUVnUixjQUFnQmpSLEVBQUVpUixlQUFpQnJ3QixJQUFNb2YsRUFBRWlSLGFBQWVyd0IsSUFDOUgsTUFBUUMsSUFBTW1mLEVBQUVpUixhQUFlLEdBQUtwd0IsR0FHdEMsU0FBUzB4QixHQUFHdlMsR0FDVixJQUFJQyxFQUFJRCxFQUFFd1MsWUFDVnZTLElBQU1ELEVBQUVrUixjQUFjRyxjQUFnQixLQUFPcFIsR0FBSyxPQUFTQSxJQUFNRCxFQUFFeGUsTUFBUXllLEdBRzdFLElBQUl3UyxHQUNJLCtCQURKQSxHQUdHLDZCQUdQLFNBQVNDLEdBQUcxUyxHQUNWLE9BQVFBLEdBQ04sSUFBSyxNQUNILE1BQU8sNkJBRVQsSUFBSyxPQUNILE1BQU8scUNBRVQsUUFDRSxNQUFPLGdDQUliLFNBQVMyUyxHQUFHM1MsRUFBR0MsR0FDYixPQUFPLE1BQVFELEdBQUssaUNBQW1DQSxFQUFJMFMsR0FBR3pTLEdBQUssK0JBQWlDRCxHQUFLLGtCQUFvQkMsRUFBSSwrQkFBaUNELEVBR3BLLElBQUk0UyxHQUNBQyxHQUFLLFNBQVU3UyxHQUNqQixNQUFPLHFCQUF1QjhTLE9BQVNBLE1BQU1DLHdCQUEwQixTQUFVOVMsRUFBR3JmLEVBQUdDLEVBQUd3VSxHQUN4RnlkLE1BQU1DLHlCQUF3QixXQUM1QixPQUFPL1MsRUFBRUMsRUFBR3JmLE9BRVpvZixFQUxHLEVBTVAsU0FBVUEsRUFBR0MsR0FDYixHQUFJRCxFQUFFZ1QsZUFBaUJQLElBQVUsY0FBZXpTLEVBQUdBLEVBQUVpVCxVQUFZaFQsTUFBTyxDQUl0RSxLQUhBMlMsR0FBS0EsSUFBTW5VLFNBQVNDLGNBQWMsUUFDL0J1VSxVQUFZLFFBQVVoVCxFQUFFaVQsVUFBVTlkLFdBQWEsU0FFN0M2SyxFQUFJMlMsR0FBR08sV0FBWW5ULEVBQUVtVCxZQUN4Qm5ULEVBQUVQLFlBQVlPLEVBQUVtVCxZQUdsQixLQUFPbFQsRUFBRWtULFlBQ1BuVCxFQUFFcEIsWUFBWXFCLEVBQUVrVCxnQkFLdEIsU0FBU0MsR0FBR3BULEVBQUdDLEdBQ2IsR0FBSUEsRUFBRyxDQUNMLElBQUlyZixFQUFJb2YsRUFBRW1ULFdBRVYsR0FBSXZ5QixHQUFLQSxJQUFNb2YsRUFBRXFULFdBQWEsSUFBTXp5QixFQUFFMHlCLFNBRXBDLFlBREExeUIsRUFBRTJ5QixVQUFZdFQsR0FLbEJELEVBQUV3UyxZQUFjdlMsRUFHbEIsU0FBU3VULEdBQUd4VCxFQUFHQyxHQUNiLElBQUlyZixFQUFJLEdBSVIsT0FIQUEsRUFBRW9mLEVBQUU3UixlQUFpQjhSLEVBQUU5UixjQUN2QnZOLEVBQUUsU0FBV29mLEdBQUssU0FBV0MsRUFDN0JyZixFQUFFLE1BQVFvZixHQUFLLE1BQVFDLEVBQ2hCcmYsRUFHVCxJQUFJNnlCLEdBQUssQ0FDUEMsYUFBY0YsR0FBRyxZQUFhLGdCQUM5QkcsbUJBQW9CSCxHQUFHLFlBQWEsc0JBQ3BDSSxlQUFnQkosR0FBRyxZQUFhLGtCQUNoQ0ssY0FBZUwsR0FBRyxhQUFjLGtCQUU5Qk0sR0FBSyxHQUNMQyxHQUFLLEdBR1QsU0FBU0MsR0FBR2hVLEdBQ1YsR0FBSThULEdBQUc5VCxHQUFJLE9BQU84VCxHQUFHOVQsR0FDckIsSUFBS3lULEdBQUd6VCxHQUFJLE9BQU9BLEVBQ25CLElBQ0lwZixFQURBcWYsRUFBSXdULEdBQUd6VCxHQUdYLElBQUtwZixLQUFLcWYsRUFDUixHQUFJQSxFQUFFN2QsZUFBZXhCLElBQU1BLEtBQUttekIsR0FBSSxPQUFPRCxHQUFHOVQsR0FBS0MsRUFBRXJmLEdBR3ZELE9BQU9vZixFQVpUc00sSUFBT3lILEdBQUt0VixTQUFTQyxjQUFjLE9BQU9sQyxNQUFPLG1CQUFvQjlKLGdCQUFrQitnQixHQUFHQyxhQUFhTyxpQkFBa0JSLEdBQUdFLG1CQUFtQk0saUJBQWtCUixHQUFHRyxlQUFlSyxXQUFZLG9CQUFxQnZoQixlQUFpQitnQixHQUFHSSxjQUFjSyxZQWV0UCxJQUFJQyxHQUFLSCxHQUFHLGdCQUNSSSxHQUFLSixHQUFHLHNCQUNSSyxHQUFLTCxHQUFHLGtCQUNSTSxHQUFLTixHQUFHLGlCQUNSTyxHQUFLLHNOQUFzTjlZLE1BQU0sS0FDak8rWSxHQUFLLElBQUssb0JBQXNCQyxRQUFVQSxRQUFVQyxLQUV4RCxTQUFTQyxHQUFHM1UsR0FDVixJQUFJQyxFQUFJdVUsR0FBR3B6QixJQUFJNGUsR0FFZixZQURBLElBQVdDLElBQU1BLEVBQUksSUFBSXlVLElBQU9GLEdBQUd0UixJQUFJbEQsRUFBR0MsSUFDbkNBLEVBR1QsU0FBUzJVLEdBQUc1VSxHQUNWLElBQUlDLEVBQUlELEVBQ0pwZixFQUFJb2YsRUFDUixHQUFJQSxFQUFFNlUsVUFBVyxLQUFPNVUsRUFBRWtRLFFBQ3hCbFEsRUFBSUEsRUFBRWtRLFdBQ0QsQ0FDTG5RLEVBQUlDLEVBRUosR0FDUyxLQUFxQixNQUE1QkEsRUFBSUQsR0FBWThVLGFBQXNCbDBCLEVBQUlxZixFQUFFa1EsUUFBU25RLEVBQUlDLEVBQUVrUSxhQUNwRG5RLEdBRVgsT0FBTyxJQUFNQyxFQUFFcFcsSUFBTWpKLEVBQUksS0FHM0IsU0FBU20wQixHQUFHL1UsR0FDVixHQUFJLEtBQU9BLEVBQUVuVyxJQUFLLENBQ2hCLElBQUlvVyxFQUFJRCxFQUFFZ1YsY0FFVixHQURBLE9BQVMvVSxJQUF1QixRQUFqQkQsRUFBSUEsRUFBRTZVLGFBQTBCNVUsRUFBSUQsRUFBRWdWLGdCQUNqRCxPQUFTL1UsRUFBRyxPQUFPQSxFQUFFZ1YsV0FHM0IsT0FBTyxLQUdULFNBQVNDLEdBQUdsVixHQUNWLEdBQUk0VSxHQUFHNVUsS0FBT0EsRUFBRyxNQUFNNkgsTUFBTTVGLEVBQUUsTUFzRmpDLFNBQVNrVCxHQUFHblYsR0FFVixLQURBQSxFQXBGRixTQUFZQSxHQUNWLElBQUlDLEVBQUlELEVBQUU2VSxVQUVWLElBQUs1VSxFQUFHLENBRU4sR0FBSSxRQURKQSxFQUFJMlUsR0FBRzVVLElBQ1MsTUFBTTZILE1BQU01RixFQUFFLE1BQzlCLE9BQU9oQyxJQUFNRCxFQUFJLEtBQU9BLEVBRzFCLElBQUssSUFBSXBmLEVBQUlvZixFQUFHbmYsRUFBSW9mLElBQUssQ0FDdkIsSUFBSTVLLEVBQUl6VSxFQUFFdXZCLE9BQ1YsR0FBSSxPQUFTOWEsRUFBRyxNQUNoQixJQUFJK00sRUFBSS9NLEVBQUV3ZixVQUVWLEdBQUksT0FBU3pTLEVBQUcsQ0FHZCxHQUFJLFFBRkp2aEIsRUFBSXdVLEVBQUU4YSxRQUVVLENBQ2R2dkIsRUFBSUMsRUFDSixTQUdGLE1BR0YsR0FBSXdVLEVBQUUrZixRQUFVaFQsRUFBRWdULE1BQU8sQ0FDdkIsSUFBS2hULEVBQUkvTSxFQUFFK2YsTUFBT2hULEdBQUksQ0FDcEIsR0FBSUEsSUFBTXhoQixFQUFHLE9BQU9zMEIsR0FBRzdmLEdBQUkySyxFQUMzQixHQUFJb0MsSUFBTXZoQixFQUFHLE9BQU9xMEIsR0FBRzdmLEdBQUk0SyxFQUMzQm1DLEVBQUlBLEVBQUVpVCxRQUdSLE1BQU14TixNQUFNNUYsRUFBRSxNQUdoQixHQUFJcmhCLEVBQUV1dkIsU0FBV3R2QixFQUFFc3ZCLE9BQVF2dkIsRUFBSXlVLEVBQUd4VSxFQUFJdWhCLE1BQU8sQ0FDM0MsSUFBSyxJQUFJZixHQUFJLEVBQUlySyxFQUFJM0IsRUFBRStmLE1BQU9wZSxHQUFJLENBQ2hDLEdBQUlBLElBQU1wVyxFQUFHLENBQ1h5Z0IsR0FBSSxFQUNKemdCLEVBQUl5VSxFQUNKeFUsRUFBSXVoQixFQUNKLE1BR0YsR0FBSXBMLElBQU1uVyxFQUFHLENBQ1h3Z0IsR0FBSSxFQUNKeGdCLEVBQUl3VSxFQUNKelUsRUFBSXdoQixFQUNKLE1BR0ZwTCxFQUFJQSxFQUFFcWUsUUFHUixJQUFLaFUsRUFBRyxDQUNOLElBQUtySyxFQUFJb0wsRUFBRWdULE1BQU9wZSxHQUFJLENBQ3BCLEdBQUlBLElBQU1wVyxFQUFHLENBQ1h5Z0IsR0FBSSxFQUNKemdCLEVBQUl3aEIsRUFDSnZoQixFQUFJd1UsRUFDSixNQUdGLEdBQUkyQixJQUFNblcsRUFBRyxDQUNYd2dCLEdBQUksRUFDSnhnQixFQUFJdWhCLEVBQ0p4aEIsRUFBSXlVLEVBQ0osTUFHRjJCLEVBQUlBLEVBQUVxZSxRQUdSLElBQUtoVSxFQUFHLE1BQU13RyxNQUFNNUYsRUFBRSxPQUcxQixHQUFJcmhCLEVBQUVpMEIsWUFBY2gwQixFQUFHLE1BQU1nbkIsTUFBTTVGLEVBQUUsTUFHdkMsR0FBSSxJQUFNcmhCLEVBQUVpSixJQUFLLE1BQU1nZSxNQUFNNUYsRUFBRSxNQUMvQixPQUFPcmhCLEVBQUUrckIsVUFBVTdRLFVBQVlsYixFQUFJb2YsRUFBSUMsRUFJbkNxVixDQUFHdFYsSUFDQyxPQUFPLEtBRWYsSUFBSyxJQUFJQyxFQUFJRCxJQUFLLENBQ2hCLEdBQUksSUFBTUMsRUFBRXBXLEtBQU8sSUFBTW9XLEVBQUVwVyxJQUFLLE9BQU9vVyxFQUN2QyxHQUFJQSxFQUFFbVYsTUFBT25WLEVBQUVtVixNQUFNakYsT0FBU2xRLEVBQUdBLEVBQUlBLEVBQUVtVixVQUFXLENBQ2hELEdBQUluVixJQUFNRCxFQUFHLE1BRWIsTUFBUUMsRUFBRW9WLFNBQVUsQ0FDbEIsSUFBS3BWLEVBQUVrUSxRQUFVbFEsRUFBRWtRLFNBQVduUSxFQUFHLE9BQU8sS0FDeENDLEVBQUlBLEVBQUVrUSxPQUdSbFEsRUFBRW9WLFFBQVFsRixPQUFTbFEsRUFBRWtRLE9BQ3JCbFEsRUFBSUEsRUFBRW9WLFNBSVYsT0FBTyxLQUdULFNBQVNFLEdBQUd2VixFQUFHQyxHQUNiLEdBQUksTUFBUUEsRUFBRyxNQUFNNEgsTUFBTTVGLEVBQUUsS0FDN0IsT0FBSSxNQUFRakMsRUFBVUMsRUFFbEIzTSxNQUFNQyxRQUFReU0sR0FDWjFNLE1BQU1DLFFBQVEwTSxJQUFXRCxFQUFFelgsS0FBS0MsTUFBTXdYLEVBQUdDLEdBQUlELElBQ2pEQSxFQUFFelgsS0FBSzBYLEdBQ0FELEdBR0YxTSxNQUFNQyxRQUFRME0sR0FBSyxDQUFDRCxHQUFHaFUsT0FBT2lVLEdBQUssQ0FBQ0QsRUFBR0MsR0FHaEQsU0FBU3VWLEdBQUd4VixFQUFHQyxFQUFHcmYsR0FDaEIwUyxNQUFNQyxRQUFReU0sR0FBS0EsRUFBRWxYLFFBQVFtWCxFQUFHcmYsR0FBS29mLEdBQUtDLEVBQUV2ZixLQUFLRSxFQUFHb2YsR0FHdEQsSUFBSXlWLEdBQUssS0FFVCxTQUFTQyxHQUFHMVYsR0FDVixHQUFJQSxFQUFHLENBQ0wsSUFBSUMsRUFBSUQsRUFBRTJWLG1CQUNOLzBCLEVBQUlvZixFQUFFNFYsbUJBQ1YsR0FBSXRpQixNQUFNQyxRQUFRME0sR0FBSSxJQUFLLElBQUlwZixFQUFJLEVBQUdBLEVBQUlvZixFQUFFclgsU0FBV29YLEVBQUU2Vix1QkFBd0JoMUIsSUFDL0VxZ0IsRUFBR2xCLEVBQUdDLEVBQUVwZixHQUFJRCxFQUFFQyxTQUNUb2YsR0FBS2lCLEVBQUdsQixFQUFHQyxFQUFHcmYsR0FDckJvZixFQUFFMlYsbUJBQXFCLEtBQ3ZCM1YsRUFBRTRWLG1CQUFxQixLQUN2QjVWLEVBQUU4VixnQkFBa0I5VixFQUFFeEssWUFBWXVnQixRQUFRL1YsSUFJOUMsU0FBU2dXLEdBQUdoVyxHQUtWLEdBSkEsT0FBU0EsSUFBTXlWLEdBQUtGLEdBQUdFLEdBQUl6VixJQUMzQkEsRUFBSXlWLEdBQ0pBLEdBQUssS0FFRHpWLEVBQUcsQ0FFTCxHQURBd1YsR0FBR3hWLEVBQUcwVixJQUNGRCxHQUFJLE1BQU01TixNQUFNNUYsRUFBRSxLQUN0QixHQUFJVSxFQUFJLE1BQU0zQyxFQUFJOEMsRUFBSUgsR0FBSyxFQUFJRyxFQUFLLEtBQU05QyxHQUk5QyxTQUFTaVcsR0FBR2pXLEdBR1YsT0FGQUEsRUFBSUEsRUFBRXRYLFFBQVVzWCxFQUFFa1csWUFBY3hqQixRQUM5QnlqQiwwQkFBNEJuVyxFQUFJQSxFQUFFbVcseUJBQzdCLElBQU1uVyxFQUFFc1QsU0FBV3RULEVBQUVSLFdBQWFRLEVBRzNDLFNBQVNvVyxHQUFHcFcsR0FDVixJQUFLc00sRUFBSSxPQUFPLEVBRWhCLElBQUlyTSxHQURKRCxFQUFJLEtBQU9BLEtBQ0d2QixTQUVkLE9BREF3QixLQUFNQSxFQUFJeEIsU0FBU0MsY0FBYyxRQUFVQyxhQUFhcUIsRUFBRyxXQUFZQyxFQUFJLG9CQUFzQkEsRUFBRUQsSUFDNUZDLEVBR1QsSUFBSW9XLEdBQUssR0FFVCxTQUFTQyxHQUFHdFcsR0FDVkEsRUFBRXVXLGFBQWUsS0FDakJ2VyxFQUFFd1csWUFBYyxLQUNoQnhXLEVBQUV5VyxXQUFhLEtBQ2Z6VyxFQUFFMFcsVUFBVTl0QixPQUFTLEVBQ3JCLEdBQUt5dEIsR0FBR3p0QixRQUFVeXRCLEdBQUc5dEIsS0FBS3lYLEdBRzVCLFNBQVMyVyxHQUFHM1csRUFBR0MsRUFBR3JmLEVBQUdDLEdBQ25CLEdBQUl3MUIsR0FBR3p0QixPQUFRLENBQ2IsSUFBSXlNLEVBQUlnaEIsR0FBR2pPLE1BS1gsT0FKQS9TLEVBQUVraEIsYUFBZXZXLEVBQ2pCM0ssRUFBRXVoQixpQkFBbUIvMUIsRUFDckJ3VSxFQUFFbWhCLFlBQWN2VyxFQUNoQjVLLEVBQUVvaEIsV0FBYTcxQixFQUNSeVUsRUFHVCxNQUFPLENBQ0xraEIsYUFBY3ZXLEVBQ2Q0VyxpQkFBa0IvMUIsRUFDbEIyMUIsWUFBYXZXLEVBQ2J3VyxXQUFZNzFCLEVBQ1o4MUIsVUFBVyxJQUlmLFNBQVNHLEdBQUc3VyxHQUNWLElBQUlDLEVBQUlELEVBQUV5VyxXQUNONzFCLEVBQUlxZixFQUVSLEVBQUcsQ0FDRCxJQUFLcmYsRUFBRyxDQUNOb2YsRUFBRTBXLFVBQVVudUIsS0FBSzNILEdBQ2pCLE1BR0YsSUFBSUMsRUFBSUQsRUFDUixHQUFJLElBQU1DLEVBQUVnSixJQUFLaEosRUFBSUEsRUFBRThyQixVQUFVbUssa0JBQW1CLENBQ2xELEtBQU9qMkIsRUFBRXN2QixRQUNQdHZCLEVBQUlBLEVBQUVzdkIsT0FHUnR2QixFQUFJLElBQU1BLEVBQUVnSixJQUFNLEtBQU9oSixFQUFFOHJCLFVBQVVtSyxjQUV2QyxJQUFLajJCLEVBQUcsTUFFUixLQURBb2YsRUFBSXJmLEVBQUVpSixNQUNLLElBQU1vVyxHQUFLRCxFQUFFMFcsVUFBVW51QixLQUFLM0gsR0FDdkNBLEVBQUltMkIsR0FBR2wyQixTQUNBRCxHQUVULElBQUtBLEVBQUksRUFBR0EsRUFBSW9mLEVBQUUwVyxVQUFVOXRCLE9BQVFoSSxJQUFLLENBQ3ZDcWYsRUFBSUQsRUFBRTBXLFVBQVU5MUIsR0FDaEIsSUFBSXlVLEVBQUk0Z0IsR0FBR2pXLEVBQUV3VyxhQUNiMzFCLEVBQUltZixFQUFFdVcsYUFDTixJQUFJblUsRUFBSXBDLEVBQUV3VyxZQUNOblYsRUFBSXJCLEVBQUU0VyxpQkFDVixJQUFNaDJCLElBQU15Z0IsR0FBSyxJQUVqQixJQUFLLElBQUlySyxFQUFJLEtBQU1ELEVBQUksRUFBR0EsRUFBSTRVLEVBQUcvaUIsT0FBUW1PLElBQUssQ0FDNUMsSUFBSXZXLEVBQUltckIsRUFBRzVVLEdBQ1h2VyxJQUFNQSxFQUFJQSxFQUFFb3JCLGNBQWMvcUIsRUFBR29mLEVBQUdtQyxFQUFHL00sRUFBR2dNLE1BQVFySyxFQUFJdWUsR0FBR3ZlLEVBQUd4VyxJQUcxRHcxQixHQUFHaGYsSUFJUCxTQUFTZ2dCLEdBQUdoWCxFQUFHQyxFQUFHcmYsR0FDaEIsSUFBS0EsRUFBRXEyQixJQUFJalgsR0FBSSxDQUNiLE9BQVFBLEdBQ04sSUFBSyxTQUNIa1gsR0FBR2pYLEVBQUcsVUFBVSxHQUNoQixNQUVGLElBQUssUUFDTCxJQUFLLE9BQ0hpWCxHQUFHalgsRUFBRyxTQUFTLEdBQ2ZpWCxHQUFHalgsRUFBRyxRQUFRLEdBQ2RyZixFQUFFc2lCLElBQUksT0FBUSxNQUNkdGlCLEVBQUVzaUIsSUFBSSxRQUFTLE1BQ2YsTUFFRixJQUFLLFNBQ0wsSUFBSyxRQUNIa1QsR0FBR3BXLElBQU1rWCxHQUFHalgsRUFBR0QsR0FBRyxHQUNsQixNQUVGLElBQUssVUFDTCxJQUFLLFNBQ0wsSUFBSyxRQUNILE1BRUYsU0FDRyxJQUFNdVUsR0FBR25tQixRQUFRNFIsSUFBTUksR0FBRUosRUFBR0MsR0FHakNyZixFQUFFc2lCLElBQUlsRCxFQUFHLE9BSWIsSUFBSW1YLEdBQ0FDLEdBQ0FDLEdBQ0FDLElBQUssRUFDTEMsR0FBSyxHQUNMQyxHQUFLLEtBQ0xDLEdBQUssS0FDTEMsR0FBSyxLQUNMQyxHQUFLLElBQUlqRCxJQUNUa0QsR0FBSyxJQUFJbEQsSUFDVG1ELEdBQUssR0FDTEMsR0FBSywwUUFBMFFyYyxNQUFNLEtBQ3JSc2MsR0FBSyxnSEFBZ0h0YyxNQUFNLEtBWS9ILFNBQVN1YyxHQUFHaFksRUFBR0MsRUFBR3JmLEVBQUdDLEVBQUd3VSxHQUN0QixNQUFPLENBQ0w0aUIsVUFBV2pZLEVBQ1h1VyxhQUFjdFcsRUFDZDJXLGlCQUFzQixHQUFKaDJCLEVBQ2xCNDFCLFlBQWFuaEIsRUFDYitJLFVBQVd2ZCxHQUlmLFNBQVNxM0IsR0FBR2xZLEVBQUdDLEdBQ2IsT0FBUUQsR0FDTixJQUFLLFFBQ0wsSUFBSyxPQUNId1gsR0FBSyxLQUNMLE1BRUYsSUFBSyxZQUNMLElBQUssWUFDSEMsR0FBSyxLQUNMLE1BRUYsSUFBSyxZQUNMLElBQUssV0FDSEMsR0FBSyxLQUNMLE1BRUYsSUFBSyxjQUNMLElBQUssYUFDSEMsR0FBR1EsT0FBT2xZLEVBQUVtWSxXQUNaLE1BRUYsSUFBSyxvQkFDTCxJQUFLLHFCQUNIUixHQUFHTyxPQUFPbFksRUFBRW1ZLFlBSWxCLFNBQVNDLEdBQUdyWSxFQUFHQyxFQUFHcmYsRUFBR0MsRUFBR3dVLEVBQUcrTSxHQUN6QixPQUFJLE9BQVNwQyxHQUFLQSxFQUFFd1csY0FBZ0JwVSxHQUFVcEMsRUFBSWdZLEdBQUcvWCxFQUFHcmYsRUFBR0MsRUFBR3dVLEVBQUcrTSxHQUFJLE9BQVNuQyxJQUFpQixRQUFYQSxFQUFJcVksR0FBR3JZLEtBQWtCbVgsR0FBR25YLElBQUtELElBQ3JIQSxFQUFFNFcsa0JBQW9CLzFCLEVBQ2ZtZixHQTBCVCxTQUFTdVksR0FBR3ZZLEdBQ1YsSUFBSUMsRUFBSThXLEdBQUcvVyxFQUFFdFgsUUFFYixHQUFJLE9BQVN1WCxFQUFHLENBQ2QsSUFBSXJmLEVBQUlnMEIsR0FBRzNVLEdBQ1gsR0FBSSxPQUFTcmYsRUFBRyxHQUFlLE1BQVhxZixFQUFJcmYsRUFBRWlKLE1BQ3hCLEdBQWUsUUFBWG9XLEVBQUk4VSxHQUFHbjBCLElBS1QsT0FKQW9mLEVBQUVpWSxVQUFZaFksT0FDZDVlLEVBQUVtM0IseUJBQXlCeFksRUFBRXlZLFVBQVUsV0FDckNwQixHQUFHejJCLFdBSUYsR0FBSSxJQUFNcWYsR0FBS3JmLEVBQUUrckIsVUFBVStMLFFBRWhDLFlBREExWSxFQUFFaVksVUFBWSxJQUFNcjNCLEVBQUVpSixJQUFNakosRUFBRStyQixVQUFVbUssY0FBZ0IsTUFLNUQ5VyxFQUFFaVksVUFBWSxLQUdoQixTQUFTVSxHQUFHM1ksR0FDVixHQUFJLE9BQVNBLEVBQUVpWSxVQUFXLE9BQU8sRUFDakMsSUFBSWhZLEVBQUkyWSxHQUFHNVksRUFBRXVXLGFBQWN2VyxFQUFFNFcsaUJBQWtCNVcsRUFBRTVCLFVBQVc0QixFQUFFd1csYUFFOUQsR0FBSSxPQUFTdlcsRUFBRyxDQUNkLElBQUlyZixFQUFJMDNCLEdBQUdyWSxHQUdYLE9BRkEsT0FBU3JmLEdBQUt3MkIsR0FBR3gyQixHQUNqQm9mLEVBQUVpWSxVQUFZaFksR0FDUCxFQUdULE9BQU8sRUFHVCxTQUFTNFksR0FBRzdZLEVBQUdDLEVBQUdyZixHQUNoQiszQixHQUFHM1ksSUFBTXBmLEVBQUV1M0IsT0FBT2xZLEdBR3BCLFNBQVM2WSxLQUNQLElBQUt4QixJQUFLLEVBQUksRUFBSUMsR0FBRzN1QixRQUFTLENBQzVCLElBQUlvWCxFQUFJdVgsR0FBRyxHQUVYLEdBQUksT0FBU3ZYLEVBQUVpWSxVQUFXLENBRXhCLFFBREFqWSxFQUFJc1ksR0FBR3RZLEVBQUVpWSxhQUNLZCxHQUFHblgsR0FDakIsTUFHRixJQUFJQyxFQUFJMlksR0FBRzVZLEVBQUV1VyxhQUFjdlcsRUFBRTRXLGlCQUFrQjVXLEVBQUU1QixVQUFXNEIsRUFBRXdXLGFBQzlELE9BQVN2VyxFQUFJRCxFQUFFaVksVUFBWWhZLEVBQUlzWCxHQUFHd0IsUUFHcEMsT0FBU3ZCLElBQU1tQixHQUFHbkIsTUFBUUEsR0FBSyxNQUMvQixPQUFTQyxJQUFNa0IsR0FBR2xCLE1BQVFBLEdBQUssTUFDL0IsT0FBU0MsSUFBTWlCLEdBQUdqQixNQUFRQSxHQUFLLE1BQy9CQyxHQUFHN3VCLFFBQVErdkIsSUFDWGpCLEdBQUc5dUIsUUFBUSt2QixJQUdiLFNBQVNHLEdBQUdoWixFQUFHQyxHQUNiRCxFQUFFaVksWUFBY2hZLElBQU1ELEVBQUVpWSxVQUFZLEtBQU1YLEtBQU9BLElBQUssRUFBSWoyQixFQUFFNDNCLDBCQUEwQjUzQixFQUFFNjNCLHdCQUF5QkosTUFHbkgsU0FBU0ssR0FBR25aLEdBQ1YsU0FBU0MsRUFBRUEsR0FDVCxPQUFPK1ksR0FBRy9ZLEVBQUdELEdBR2YsR0FBSSxFQUFJdVgsR0FBRzN1QixPQUFRLENBQ2pCb3dCLEdBQUd6QixHQUFHLEdBQUl2WCxHQUVWLElBQUssSUFBSXBmLEVBQUksRUFBR0EsRUFBSTIyQixHQUFHM3VCLE9BQVFoSSxJQUFLLENBQ2xDLElBQUlDLEVBQUkwMkIsR0FBRzMyQixHQUNYQyxFQUFFbzNCLFlBQWNqWSxJQUFNbmYsRUFBRW8zQixVQUFZLE9BVXhDLElBTkEsT0FBU1QsSUFBTXdCLEdBQUd4QixHQUFJeFgsR0FDdEIsT0FBU3lYLElBQU11QixHQUFHdkIsR0FBSXpYLEdBQ3RCLE9BQVMwWCxJQUFNc0IsR0FBR3RCLEdBQUkxWCxHQUN0QjJYLEdBQUc3dUIsUUFBUW1YLEdBQ1gyWCxHQUFHOXVCLFFBQVFtWCxHQUVOcmYsRUFBSSxFQUFHQSxFQUFJaTNCLEdBQUdqdkIsT0FBUWhJLEtBQ3pCQyxFQUFJZzNCLEdBQUdqM0IsSUFBTXEzQixZQUFjalksSUFBTW5mLEVBQUVvM0IsVUFBWSxNQUdqRCxLQUFPLEVBQUlKLEdBQUdqdkIsUUFBc0IsUUFBWGhJLEVBQUlpM0IsR0FBRyxJQUFlSSxXQUM3Q00sR0FBRzMzQixHQUFJLE9BQVNBLEVBQUVxM0IsV0FBYUosR0FBR2tCLFFBSXRDLElBQUlLLEdBQUssR0FDTEMsR0FBSyxJQUFJM0UsSUFDVDRFLEdBQUssSUFBSTVFLElBQ1Q2RSxHQUFLLENBQUMsUUFBUyxRQUFTcEYsR0FBSSxlQUFnQkMsR0FBSSxxQkFBc0JDLEdBQUksaUJBQWtCLFVBQVcsVUFBVyxpQkFBa0IsaUJBQWtCLGlCQUFrQixpQkFBa0IsVUFBVyxVQUFXLFlBQWEsWUFBYSxRQUFTLFFBQVMsUUFBUyxRQUFTLG9CQUFxQixvQkFBcUIsT0FBUSxPQUFRLGFBQWMsYUFBYyxpQkFBa0IsaUJBQWtCLFlBQWEsWUFBYSxxQkFBc0IscUJBQXNCLFVBQVcsVUFBVyxXQUFZLFdBQVksVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsYUFBYyxhQUFjQyxHQUFJLGdCQUFpQixVQUFXLFdBRTluQixTQUFTa0YsR0FBR3haLEVBQUdDLEdBQ2IsSUFBSyxJQUFJcmYsRUFBSSxFQUFHQSxFQUFJb2YsRUFBRXBYLE9BQVFoSSxHQUFLLEVBQUcsQ0FDcEMsSUFBSUMsRUFBSW1mLEVBQUVwZixHQUNOeVUsRUFBSTJLLEVBQUVwZixFQUFJLEdBQ1Z3aEIsRUFBSSxNQUFRL00sRUFBRSxHQUFHNlksY0FBZ0I3WSxFQUFFak0sTUFBTSxJQUM3Q2daLEVBQUksQ0FDRjJKLHdCQUF5QixDQUN2QjBOLFFBQVNyWCxFQUNUc1gsU0FBVXRYLEVBQUksV0FFaEJnSyxhQUFjLENBQUN2ckIsR0FDZjg0QixjQUFlMVosR0FFakJxWixHQUFHcFcsSUFBSXJpQixFQUFHb2YsR0FDVm9aLEdBQUduVyxJQUFJcmlCLEVBQUd1aEIsR0FDVmdYLEdBQUcvakIsR0FBSytNLEdBSVpvWCxHQUFHLDZpQkFBNmlCL2QsTUFBTSxLQUFNLEdBQzVqQitkLEdBQUcsb1JBQW9SL2QsTUFBTSxLQUFNLEdBQ25TK2QsR0FBR0QsR0FBSSxHQUVQLElBQUssSUFBSUssR0FBSyxxRkFBcUZuZSxNQUFNLEtBQU1vZSxHQUFLLEVBQUdBLEdBQUtELEdBQUdoeEIsT0FBUWl4QixLQUNySVAsR0FBR3BXLElBQUkwVyxHQUFHQyxJQUFLLEdBR2pCLElBQUlDLEdBQUt6NEIsRUFBRTA0Qiw4QkFDUEMsR0FBSzM0QixFQUFFbTNCLHlCQUNQeUIsSUFBSyxFQUVULFNBQVM3WixHQUFFSixFQUFHQyxHQUNaaVgsR0FBR2pYLEVBQUdELEdBQUcsR0FHWCxTQUFTa1gsR0FBR2xYLEVBQUdDLEVBQUdyZixHQUNoQixJQUFJQyxFQUFJeTRCLEdBQUdsNEIsSUFBSTZlLEdBRWYsWUFBUSxJQUFXcGYsRUFBSSxFQUFJQSxHQUN6QixLQUFLLEVBQ0hBLEVBQUlxNUIsR0FBR240QixLQUFLLEtBQU1rZSxFQUFHLEVBQUdELEdBQ3hCLE1BRUYsS0FBSyxFQUNIbmYsRUFBSXM1QixHQUFHcDRCLEtBQUssS0FBTWtlLEVBQUcsRUFBR0QsR0FDeEIsTUFFRixRQUNFbmYsRUFBSXFQLEdBQUduTyxLQUFLLEtBQU1rZSxFQUFHLEVBQUdELEdBRzVCcGYsRUFBSW9mLEVBQUVvYSxpQkFBaUJuYSxFQUFHcGYsR0FBRyxHQUFNbWYsRUFBRW9hLGlCQUFpQm5hLEVBQUdwZixHQUFHLEdBRzlELFNBQVNxNUIsR0FBR2xhLEVBQUdDLEVBQUdyZixFQUFHQyxHQUNuQnFzQixHQUFNRixJQUNOLElBQUkzWCxFQUFJbkYsR0FDSmtTLEVBQUk4SyxFQUNSQSxHQUFLLEVBRUwsSUFDRUgsRUFBRzFYLEVBQUcySyxFQUFHQyxFQUFHcmYsRUFBR0MsR0FDZixTQUNDcXNCLEVBQUs5SyxJQUFNZ0wsS0FJaEIsU0FBUytNLEdBQUduYSxFQUFHQyxFQUFHcmYsRUFBR0MsR0FDbkJtNUIsR0FBR0YsR0FBSTVwQixHQUFHbk8sS0FBSyxLQUFNaWUsRUFBR0MsRUFBR3JmLEVBQUdDLElBR2hDLFNBQVNxUCxHQUFHOFAsRUFBR0MsRUFBR3JmLEVBQUdDLEdBQ25CLEdBQUlvNUIsR0FBSSxHQUFJLEVBQUkxQyxHQUFHM3VCLFNBQVcsRUFBSWt2QixHQUFHMXBCLFFBQVE0UixHQUFJQSxFQUFJZ1ksR0FBRyxLQUFNaFksRUFBR0MsRUFBR3JmLEVBQUdDLEdBQUkwMkIsR0FBR2h2QixLQUFLeVgsT0FBUSxDQUN6RixJQUFJM0ssRUFBSXVqQixHQUFHNVksRUFBR0MsRUFBR3JmLEVBQUdDLEdBQ3BCLEdBQUksT0FBU3dVLEVBQUc2aUIsR0FBR2xZLEVBQUduZixRQUFRLElBQUssRUFBSWkzQixHQUFHMXBCLFFBQVE0UixHQUFJQSxFQUFJZ1ksR0FBRzNpQixFQUFHMkssRUFBR0MsRUFBR3JmLEVBQUdDLEdBQUkwMkIsR0FBR2h2QixLQUFLeVgsUUFBUSxJQXBNakcsU0FBWUEsRUFBR0MsRUFBR3JmLEVBQUdDLEVBQUd3VSxHQUN0QixPQUFRNEssR0FDTixJQUFLLFFBQ0gsT0FBT3VYLEdBQUthLEdBQUdiLEdBQUl4WCxFQUFHQyxFQUFHcmYsRUFBR0MsRUFBR3dVLElBQUksRUFFckMsSUFBSyxZQUNILE9BQU9vaUIsR0FBS1ksR0FBR1osR0FBSXpYLEVBQUdDLEVBQUdyZixFQUFHQyxFQUFHd1UsSUFBSSxFQUVyQyxJQUFLLFlBQ0gsT0FBT3FpQixHQUFLVyxHQUFHWCxHQUFJMVgsRUFBR0MsRUFBR3JmLEVBQUdDLEVBQUd3VSxJQUFJLEVBRXJDLElBQUssY0FDSCxJQUFJK00sRUFBSS9NLEVBQUUraUIsVUFFVixPQURBVCxHQUFHelUsSUFBSWQsRUFBR2lXLEdBQUdWLEdBQUd2MkIsSUFBSWdoQixJQUFNLEtBQU1wQyxFQUFHQyxFQUFHcmYsRUFBR0MsRUFBR3dVLEtBQ3JDLEVBRVQsSUFBSyxvQkFDSCxPQUFPK00sRUFBSS9NLEVBQUUraUIsVUFBV1IsR0FBRzFVLElBQUlkLEVBQUdpVyxHQUFHVCxHQUFHeDJCLElBQUlnaEIsSUFBTSxLQUFNcEMsRUFBR0MsRUFBR3JmLEVBQUdDLEVBQUd3VSxLQUFLLEVBRzdFLE9BQU8sRUFnTDZGZ2xCLENBQUdobEIsRUFBRzJLLEVBQUdDLEVBQUdyZixFQUFHQyxHQUFJLENBQ25IcTNCLEdBQUdsWSxFQUFHbmYsR0FDTm1mLEVBQUkyVyxHQUFHM1csRUFBR25mLEVBQUcsS0FBTW9mLEdBRW5CLElBQ0VvTixFQUFHd0osR0FBSTdXLEdBQ1AsUUFDQXNXLEdBQUd0VyxNQU1YLFNBQVM0WSxHQUFHNVksRUFBR0MsRUFBR3JmLEVBQUdDLEdBSW5CLEdBQUksUUFGSkQsRUFBSW0yQixHQURKbjJCLEVBQUlxMUIsR0FBR3AxQixLQUdTLENBQ2QsSUFBSXdVLEVBQUl1ZixHQUFHaDBCLEdBQ1gsR0FBSSxPQUFTeVUsRUFBR3pVLEVBQUksU0FBVSxDQUM1QixJQUFJd2hCLEVBQUkvTSxFQUFFeEwsSUFFVixHQUFJLEtBQU91WSxFQUFHLENBRVosR0FBSSxRQURKeGhCLEVBQUltMEIsR0FBRzFmLElBQ1MsT0FBT3pVLEVBQ3ZCQSxFQUFJLFVBQ0MsR0FBSSxJQUFNd2hCLEVBQUcsQ0FDbEIsR0FBSS9NLEVBQUVzWCxVQUFVK0wsUUFBUyxPQUFPLElBQU1yakIsRUFBRXhMLElBQU13TCxFQUFFc1gsVUFBVW1LLGNBQWdCLEtBQzFFbDJCLEVBQUksVUFDQ3lVLElBQU16VSxJQUFNQSxFQUFJLE9BSTNCb2YsRUFBSTJXLEdBQUczVyxFQUFHbmYsRUFBR0QsRUFBR3FmLEdBRWhCLElBQ0VvTixFQUFHd0osR0FBSTdXLEdBQ1AsUUFDQXNXLEdBQUd0VyxHQUdMLE9BQU8sS0FHVCxJQUFJc2EsR0FBSyxDQUNQcmpCLHlCQUF5QixFQUN6QkMsbUJBQW1CLEVBQ25CQyxrQkFBa0IsRUFDbEJDLGtCQUFrQixFQUNsQkMsU0FBUyxFQUNUQyxjQUFjLEVBQ2RDLGlCQUFpQixFQUNqQkMsYUFBYSxFQUNiQyxTQUFTLEVBQ1RDLE1BQU0sRUFDTkMsVUFBVSxFQUNWQyxjQUFjLEVBQ2RDLFlBQVksRUFDWkMsY0FBYyxFQUNkQyxXQUFXLEVBQ1h3aUIsVUFBVSxFQUNWdmlCLFNBQVMsRUFDVEMsWUFBWSxFQUNaQyxhQUFhLEVBQ2JDLGNBQWMsRUFDZEMsWUFBWSxFQUNaQyxlQUFlLEVBQ2ZDLGdCQUFnQixFQUNoQkMsaUJBQWlCLEVBQ2pCSyxZQUFZLEVBQ1o0aEIsV0FBVyxFQUNYM2hCLFlBQVksRUFDWkMsU0FBUyxFQUNUQyxPQUFPLEVBQ1BDLFNBQVMsRUFDVEMsU0FBUyxFQUNUQyxRQUFRLEVBQ1JDLFFBQVEsRUFDUkMsTUFBTSxFQUNORSxhQUFhLEVBQ2JDLGNBQWMsRUFDZEMsYUFBYSxFQUNiQyxpQkFBaUIsRUFDakJDLGtCQUFrQixFQUNsQkMsa0JBQWtCLEVBQ2xCQyxlQUFlLEVBQ2ZDLGFBQWEsR0FFWDRnQixHQUFLLENBQUMsU0FBVSxLQUFNLE1BQU8sS0FRakMsU0FBU0MsR0FBRzFhLEVBQUdDLEVBQUdyZixHQUNoQixPQUFPLE1BQVFxZixHQUFLLG1CQUFxQkEsR0FBSyxLQUFPQSxFQUFJLEdBQUtyZixHQUFLLGtCQUFvQnFmLEdBQUssSUFBTUEsR0FBS3FhLEdBQUdsNEIsZUFBZTRkLElBQU1zYSxHQUFHdGEsSUFBTSxHQUFLQyxHQUFHSCxPQUFTRyxFQUFJLEtBRy9KLFNBQVMwYSxHQUFHM2EsRUFBR0MsR0FHYixJQUFLLElBQUlyZixLQUZUb2YsRUFBSUEsRUFBRXhELE1BRVF5RCxFQUNaLEdBQUlBLEVBQUU3ZCxlQUFleEIsR0FBSSxDQUN2QixJQUFJQyxFQUFJLElBQU1ELEVBQUV3TixRQUFRLE1BQ3BCaUgsRUFBSXFsQixHQUFHOTVCLEVBQUdxZixFQUFFcmYsR0FBSUMsR0FDcEIsVUFBWUQsSUFBTUEsRUFBSSxZQUN0QkMsRUFBSW1mLEVBQUU0YSxZQUFZaDZCLEVBQUd5VSxHQUFLMkssRUFBRXBmLEdBQUt5VSxHQW5CdkNwVSxPQUFPZ0gsS0FBS3F5QixJQUFJeHhCLFNBQVEsU0FBVWtYLEdBQ2hDeWEsR0FBRzN4QixTQUFRLFNBQVVtWCxHQUNuQkEsRUFBSUEsRUFBSUQsRUFBRXNDLE9BQU8sR0FBRzRMLGNBQWdCbE8sRUFBRU0sVUFBVSxHQUNoRGdhLEdBQUdyYSxHQUFLcWEsR0FBR3RhLFNBcUJmLElBQUk2YSxHQUFLNzRCLEVBQUUsQ0FDVDg0QixVQUFVLEdBQ1QsQ0FDREMsTUFBTSxFQUNOQyxNQUFNLEVBQ05DLElBQUksRUFDSkMsS0FBSyxFQUNMQyxPQUFPLEVBQ1BDLElBQUksRUFDSkMsS0FBSyxFQUNMQyxPQUFPLEVBQ1BDLFFBQVEsRUFDUnB1QixNQUFNLEVBQ05xdUIsTUFBTSxFQUNOQyxPQUFPLEVBQ1A1eUIsUUFBUSxFQUNSNnlCLE9BQU8sRUFDUEMsS0FBSyxJQUdQLFNBQVNDLEdBQUc1YixFQUFHQyxHQUNiLEdBQUlBLEVBQUcsQ0FDTCxHQUFJNGEsR0FBRzdhLEtBQU8sTUFBUUMsRUFBRTRGLFVBQVksTUFBUTVGLEVBQUVtUyx5QkFBMEIsTUFBTXZLLE1BQU01RixFQUFFLElBQUtqQyxFQUFHLEtBRTlGLEdBQUksTUFBUUMsRUFBRW1TLHdCQUF5QixDQUNyQyxHQUFJLE1BQVFuUyxFQUFFNEYsU0FBVSxNQUFNZ0MsTUFBTTVGLEVBQUUsS0FDdEMsR0FBTSxrQkFBb0JoQyxFQUFFbVMsMkJBQTJCLFdBQVluUyxFQUFFbVMseUJBQTBCLE1BQU12SyxNQUFNNUYsRUFBRSxLQUcvRyxHQUFJLE1BQVFoQyxFQUFFekQsT0FBUyxrQkFBb0J5RCxFQUFFekQsTUFBTyxNQUFNcUwsTUFBTTVGLEVBQUUsR0FBSSxNQUkxRSxTQUFTNFosR0FBRzdiLEVBQUdDLEdBQ2IsSUFBSyxJQUFNRCxFQUFFNVIsUUFBUSxLQUFNLE1BQU8sa0JBQW9CNlIsRUFBRTZiLEdBRXhELE9BQVE5YixHQUNOLElBQUssaUJBQ0wsSUFBSyxnQkFDTCxJQUFLLFlBQ0wsSUFBSyxnQkFDTCxJQUFLLGdCQUNMLElBQUssbUJBQ0wsSUFBSyxpQkFDTCxJQUFLLGdCQUNILE9BQU8sRUFFVCxRQUNFLE9BQU8sR0FJYixJQUFJK2IsR0FBS3RKLEdBRVQsU0FBU3VKLEdBQUdoYyxFQUFHQyxHQUViLElBQUlyZixFQUFJK3pCLEdBRFIzVSxFQUFJLElBQU1BLEVBQUVzVCxVQUFZLEtBQU90VCxFQUFFc1QsU0FBV3RULEVBQUlBLEVBQUUyUixlQUVsRDFSLEVBQUlrTSxFQUFHbE0sR0FFUCxJQUFLLElBQUlwZixFQUFJLEVBQUdBLEVBQUlvZixFQUFFclgsT0FBUS9ILElBQzVCbTJCLEdBQUcvVyxFQUFFcGYsR0FBSW1mLEVBQUdwZixHQUloQixTQUFTcTdCLE1BRVQsU0FBU0MsR0FBR2xjLEdBRVYsR0FBSSxxQkFESkEsRUFBSUEsSUFBTSxxQkFBdUJ2QixTQUFXQSxjQUFXLElBQ3pCLE9BQU8sS0FFckMsSUFDRSxPQUFPdUIsRUFBRTRSLGVBQWlCNVIsRUFBRW1jLEtBQzVCLE1BQU9sYyxHQUNQLE9BQU9ELEVBQUVtYyxNQUliLFNBQVNDLEdBQUdwYyxHQUNWLEtBQU9BLEdBQUtBLEVBQUVtVCxZQUNablQsRUFBSUEsRUFBRW1ULFdBR1IsT0FBT25ULEVBR1QsU0FBU3FjLEdBQUdyYyxFQUFHQyxHQUNiLElBR1NwZixFQUhMRCxFQUFJdzdCLEdBQUdwYyxHQUdYLElBRkFBLEVBQUksRUFFUXBmLEdBQUksQ0FDZCxHQUFJLElBQU1BLEVBQUUweUIsU0FBVSxDQUVwQixHQURBenlCLEVBQUltZixFQUFJcGYsRUFBRTR4QixZQUFZNXBCLE9BQ2xCb1gsR0FBS0MsR0FBS3BmLEdBQUtvZixFQUFHLE1BQU8sQ0FDM0JvRSxLQUFNempCLEVBQ04wN0IsT0FBUXJjLEVBQUlELEdBRWRBLEVBQUluZixFQUdObWYsRUFBRyxDQUNELEtBQU9wZixHQUFJLENBQ1QsR0FBSUEsRUFBRW1lLFlBQWEsQ0FDakJuZSxFQUFJQSxFQUFFbWUsWUFDTixNQUFNaUIsRUFHUnBmLEVBQUlBLEVBQUU0ZSxXQUdSNWUsT0FBSSxFQUdOQSxFQUFJdzdCLEdBQUd4N0IsSUFRWCxTQUFTMjdCLEtBQ1AsSUFBSyxJQUFJdmMsRUFBSXROLE9BQVF1TixFQUFJaWMsS0FBTWpjLGFBQWFELEVBQUV3YyxtQkFBb0IsQ0FDaEUsSUFDRSxJQUFJNTdCLEVBQUksa0JBQW9CcWYsRUFBRXdjLGNBQWNDLFNBQVNDLEtBQ3JELE1BQU85N0IsR0FDUEQsR0FBSSxFQUdOLElBQUlBLEVBQTRCLE1BQ2hDcWYsRUFBSWljLElBREdsYyxFQUFJQyxFQUFFd2MsZUFDSmhlLFVBR1gsT0FBT3dCLEVBR1QsU0FBUzJjLEdBQUc1YyxHQUNWLElBQUlDLEVBQUlELEdBQUtBLEVBQUVzUSxVQUFZdFEsRUFBRXNRLFNBQVNuaUIsY0FDdEMsT0FBTzhSLElBQU0sVUFBWUEsSUFBTSxTQUFXRCxFQUFFbk8sTUFBUSxXQUFhbU8sRUFBRW5PLE1BQVEsUUFBVW1PLEVBQUVuTyxNQUFRLFFBQVVtTyxFQUFFbk8sTUFBUSxhQUFlbU8sRUFBRW5PLE9BQVMsYUFBZW9PLEdBQUssU0FBV0QsRUFBRTZjLGlCQUdoTCxJQUlJQyxHQUFLLEtBQ0xDLEdBQUssS0FFVCxTQUFTQyxHQUFHaGQsRUFBR0MsR0FDYixPQUFRRCxHQUNOLElBQUssU0FDTCxJQUFLLFFBQ0wsSUFBSyxTQUNMLElBQUssV0FDSCxRQUFTQyxFQUFFZ2QsVUFHZixPQUFPLEVBR1QsU0FBU0MsR0FBR2xkLEVBQUdDLEdBQ2IsTUFBTyxhQUFlRCxHQUFLLFdBQWFBLEdBQUssYUFBZUEsR0FBSyxrQkFBb0JDLEVBQUU0RixVQUFZLGtCQUFvQjVGLEVBQUU0RixVQUFZLGtCQUFvQjVGLEVBQUVtUyx5QkFBMkIsT0FBU25TLEVBQUVtUyx5QkFBMkIsTUFBUW5TLEVBQUVtUyx3QkFBd0IrSyxPQUdoUSxJQUFJQyxHQUFLLG9CQUFzQkMsV0FBYUEsZ0JBQWEsRUFDckRDLEdBQUssb0JBQXNCQyxhQUFlQSxrQkFBZSxFQUU3RCxTQUFTQyxHQUFHeGQsR0FDVixLQUFPLE1BQVFBLEVBQUdBLEVBQUlBLEVBQUVqQixZQUFhLENBQ25DLElBQUlrQixFQUFJRCxFQUFFc1QsU0FDVixHQUFJLElBQU1yVCxHQUFLLElBQU1BLEVBQUcsTUFHMUIsT0FBT0QsRUFHVCxTQUFTeWQsR0FBR3pkLEdBQ1ZBLEVBQUlBLEVBQUUwZCxnQkFFTixJQUFLLElBQUl6ZCxFQUFJLEVBQUdELEdBQUksQ0FDbEIsR0FBSSxJQUFNQSxFQUFFc1QsU0FBVSxDQUNwQixJQUFJMXlCLEVBQUlvZixFQUFFMmQsS0FFVixHQTFDRyxNQTBDQy84QixHQXZDRCxPQXVDYUEsR0F4Q2IsT0F3Q3lCQSxFQUFVLENBQ3BDLEdBQUksSUFBTXFmLEVBQUcsT0FBT0QsRUFDcEJDLFFBM0NDLE9BNENJcmYsR0FBWXFmLElBR3JCRCxFQUFJQSxFQUFFMGQsZ0JBR1IsT0FBTyxLQUdULElBQUlFLEdBQUtDLEtBQUtDLFNBQVMxb0IsU0FBUyxJQUFJaE0sTUFBTSxHQUN0QzIwQixHQUFLLDJCQUE2QkgsR0FDbENJLEdBQUssd0JBQTBCSixHQUMvQkssR0FBSyxxQkFBdUJMLEdBRWhDLFNBQVM3RyxHQUFHL1csR0FDVixJQUFJQyxFQUFJRCxFQUFFK2QsSUFDVixHQUFJOWQsRUFBRyxPQUFPQSxFQUVkLElBQUssSUFBSXJmLEVBQUlvZixFQUFFUixXQUFZNWUsR0FBSSxDQUM3QixHQUFJcWYsRUFBSXJmLEVBQUVxOUIsS0FBT3I5QixFQUFFbTlCLElBQUssQ0FFdEIsR0FEQW45QixFQUFJcWYsRUFBRTRVLFVBQ0YsT0FBUzVVLEVBQUVtVixPQUFTLE9BQVN4MEIsR0FBSyxPQUFTQSxFQUFFdzBCLE1BQU8sSUFBS3BWLEVBQUl5ZCxHQUFHemQsR0FBSSxPQUFTQSxHQUFJLENBQ25GLEdBQUlwZixFQUFJb2YsRUFBRStkLElBQUssT0FBT245QixFQUN0Qm9mLEVBQUl5ZCxHQUFHemQsR0FFVCxPQUFPQyxFQUlUcmYsR0FEQW9mLEVBQUlwZixHQUNFNGUsV0FHUixPQUFPLEtBR1QsU0FBUzhZLEdBQUd0WSxHQUVWLFFBREFBLEVBQUlBLEVBQUUrZCxLQUFPL2QsRUFBRWllLE1BQ0YsSUFBTWplLEVBQUVuVyxLQUFPLElBQU1tVyxFQUFFblcsS0FBTyxLQUFPbVcsRUFBRW5XLEtBQU8sSUFBTW1XLEVBQUVuVyxJQUFNLEtBQU9tVyxFQUdsRixTQUFTa2UsR0FBR2xlLEdBQ1YsR0FBSSxJQUFNQSxFQUFFblcsS0FBTyxJQUFNbVcsRUFBRW5XLElBQUssT0FBT21XLEVBQUUyTSxVQUN6QyxNQUFNOUUsTUFBTTVGLEVBQUUsS0FHaEIsU0FBU2tjLEdBQUduZSxHQUNWLE9BQU9BLEVBQUVnZSxLQUFPLEtBR2xCLFNBQVNJLEdBQUdwZSxHQUNWLEdBQ0VBLEVBQUlBLEVBQUVtUSxhQUNDblEsR0FBSyxJQUFNQSxFQUFFblcsS0FFdEIsT0FBT21XLEdBQVEsS0FHakIsU0FBU3FlLEdBQUdyZSxFQUFHQyxHQUNiLElBQUlyZixFQUFJb2YsRUFBRTJNLFVBQ1YsSUFBSy9yQixFQUFHLE9BQU8sS0FDZixJQUFJQyxFQUFJZ2dCLEVBQUdqZ0IsR0FDWCxJQUFLQyxFQUFHLE9BQU8sS0FDZkQsRUFBSUMsRUFBRW9mLEdBRU5ELEVBQUcsT0FBUUMsR0FDVCxJQUFLLFVBQ0wsSUFBSyxpQkFDTCxJQUFLLGdCQUNMLElBQUssdUJBQ0wsSUFBSyxjQUNMLElBQUsscUJBQ0wsSUFBSyxjQUNMLElBQUsscUJBQ0wsSUFBSyxZQUNMLElBQUssbUJBQ0wsSUFBSyxnQkFDRnBmLEdBQUtBLEVBQUVxeEIsWUFBMEJyeEIsSUFBTSxZQUFsQm1mLEVBQUlBLEVBQUVuTyxPQUE4QixVQUFZbU8sR0FBSyxXQUFhQSxHQUFLLGFBQWVBLElBQzVHQSxHQUFLbmYsRUFDTCxNQUFNbWYsRUFFUixRQUNFQSxHQUFJLEVBR1IsR0FBSUEsRUFBRyxPQUFPLEtBQ2QsR0FBSXBmLEdBQUssb0JBQXNCQSxFQUFHLE1BQU1pbkIsTUFBTTVGLEVBQUUsSUFBS2hDLFNBQVVyZixJQUMvRCxPQUFPQSxFQUdULFNBQVMwOUIsR0FBR3RlLEVBQUdDLEVBQUdyZixJQUNacWYsRUFBSW9lLEdBQUdyZSxFQUFHcGYsRUFBRTI5QixlQUFleFMsd0JBQXdCOUwsT0FBS3JmLEVBQUUrMEIsbUJBQXFCSixHQUFHMzBCLEVBQUUrMEIsbUJBQW9CMVYsR0FBSXJmLEVBQUVnMUIsbUJBQXFCTCxHQUFHMzBCLEVBQUVnMUIsbUJBQW9CNVYsSUFHbEssU0FBU3dlLEdBQUd4ZSxHQUNWLEdBQUlBLEdBQUtBLEVBQUV1ZSxlQUFleFMsd0JBQXlCLENBQ2pELElBQUssSUFBSTlMLEVBQUlELEVBQUV5ZSxZQUFhNzlCLEVBQUksR0FBSXFmLEdBQ2xDcmYsRUFBRTJILEtBQUswWCxHQUFJQSxFQUFJbWUsR0FBR25lLEdBR3BCLElBQUtBLEVBQUlyZixFQUFFZ0ksT0FBUSxFQUFJcVgsS0FDckJxZSxHQUFHMTlCLEVBQUVxZixHQUFJLFdBQVlELEdBR3ZCLElBQUtDLEVBQUksRUFBR0EsRUFBSXJmLEVBQUVnSSxPQUFRcVgsSUFDeEJxZSxHQUFHMTlCLEVBQUVxZixHQUFJLFVBQVdELElBSzFCLFNBQVMwZSxHQUFHMWUsRUFBR0MsRUFBR3JmLEdBQ2hCb2YsR0FBS3BmLEdBQUtBLEVBQUUyOUIsZUFBZXRTLG1CQUFxQmhNLEVBQUlvZSxHQUFHcmUsRUFBR3BmLEVBQUUyOUIsZUFBZXRTLHFCQUF1QnJyQixFQUFFKzBCLG1CQUFxQkosR0FBRzMwQixFQUFFKzBCLG1CQUFvQjFWLEdBQUlyZixFQUFFZzFCLG1CQUFxQkwsR0FBRzMwQixFQUFFZzFCLG1CQUFvQjVWLElBR3hNLFNBQVMyZSxHQUFHM2UsR0FDVkEsR0FBS0EsRUFBRXVlLGVBQWV0UyxrQkFBb0J5UyxHQUFHMWUsRUFBRXllLFlBQWEsS0FBTXplLEdBR3BFLFNBQVM0ZSxHQUFHNWUsR0FDVndWLEdBQUd4VixFQUFHd2UsSUFHUixJQUFJSyxHQUFLLEtBQ0xDLEdBQUssS0FDTEMsR0FBSyxLQUVULFNBQVNDLEtBQ1AsR0FBSUQsR0FBSSxPQUFPQSxHQUNmLElBQUkvZSxFQUdBbmYsRUFGQW9mLEVBQUk2ZSxHQUNKbCtCLEVBQUlxZixFQUFFclgsT0FFTnlNLEVBQUksVUFBV3dwQixHQUFLQSxHQUFHcjlCLE1BQVFxOUIsR0FBR3JNLFlBQ2xDcFEsRUFBSS9NLEVBQUV6TSxPQUVWLElBQUtvWCxFQUFJLEVBQUdBLEVBQUlwZixHQUFLcWYsRUFBRUQsS0FBTzNLLEVBQUUySyxHQUFJQSxLQUlwQyxJQUFJcUIsRUFBSXpnQixFQUFJb2YsRUFFWixJQUFLbmYsRUFBSSxFQUFHQSxHQUFLd2dCLEdBQUtwQixFQUFFcmYsRUFBSUMsS0FBT3dVLEVBQUUrTSxFQUFJdmhCLEdBQUlBLEtBSTdDLE9BQU9rK0IsR0FBSzFwQixFQUFFak0sTUFBTTRXLEVBQUcsRUFBSW5mLEVBQUksRUFBSUEsT0FBSSxHQUd6QyxTQUFTbytCLEtBQ1AsT0FBTyxFQUdULFNBQVNDLEtBQ1AsT0FBTyxFQUdULFNBQVN2ZSxHQUFFWCxFQUFHQyxFQUFHcmYsRUFBR0MsR0FNbEIsSUFBSyxJQUFJd1UsS0FMVFksS0FBS3NvQixlQUFpQnZlLEVBQ3RCL0osS0FBS3dvQixZQUFjeGUsRUFDbkJoSyxLQUFLdWdCLFlBQWM1MUIsRUFDbkJvZixFQUFJL0osS0FBS1QsWUFBWTJwQixVQUduQm5mLEVBQUU1ZCxlQUFlaVQsTUFBUTRLLEVBQUlELEVBQUUzSyxJQUFNWSxLQUFLWixHQUFLNEssRUFBRXJmLEdBQUssV0FBYXlVLEVBQUlZLEtBQUt2TixPQUFTN0gsRUFBSW9WLEtBQUtaLEdBQUt6VSxFQUFFeVUsSUFLdkcsT0FGQVksS0FBS21wQixvQkFBc0IsTUFBUXgrQixFQUFFeStCLGlCQUFtQnorQixFQUFFeStCLGtCQUFtQixJQUFPeitCLEVBQUUwK0IsYUFBZUwsR0FBS0MsR0FDMUdqcEIsS0FBSzRmLHFCQUF1QnFKLEdBQ3JCanBCLEtBbUVULFNBQVNzcEIsR0FBR3ZmLEVBQUdDLEVBQUdyZixFQUFHQyxHQUNuQixHQUFJb1YsS0FBS3VwQixVQUFVNTJCLE9BQVEsQ0FDekIsSUFBSXlNLEVBQUlZLEtBQUt1cEIsVUFBVXBYLE1BRXZCLE9BREFuUyxLQUFLdlYsS0FBSzJVLEVBQUcySyxFQUFHQyxFQUFHcmYsRUFBR0MsR0FDZndVLEVBR1QsT0FBTyxJQUFJWSxLQUFLK0osRUFBR0MsRUFBR3JmLEVBQUdDLEdBRzNCLFNBQVM0K0IsR0FBR3pmLEdBQ1YsS0FBTUEsYUFBYS9KLE1BQU8sTUFBTTRSLE1BQU01RixFQUFFLE1BQ3hDakMsRUFBRTBmLGFBQ0YsR0FBS3pwQixLQUFLdXBCLFVBQVU1MkIsUUFBVXFOLEtBQUt1cEIsVUFBVWozQixLQUFLeVgsR0FHcEQsU0FBUzNQLEdBQUcyUCxHQUNWQSxFQUFFd2YsVUFBWSxHQUNkeGYsRUFBRTJmLFVBQVlKLEdBQ2R2ZixFQUFFK1YsUUFBVTBKLEdBbkZkejlCLEVBQUUyZSxHQUFFeGUsVUFBVyxDQUNieTlCLGVBQWdCLFdBQ2QzcEIsS0FBS29wQixrQkFBbUIsRUFDeEIsSUFBSXJmLEVBQUkvSixLQUFLdWdCLFlBQ2J4VyxJQUFNQSxFQUFFNGYsZUFBaUI1ZixFQUFFNGYsaUJBQW1CLG1CQUFxQjVmLEVBQUVzZixjQUFnQnRmLEVBQUVzZixhQUFjLEdBQUtycEIsS0FBS21wQixtQkFBcUJILEtBRXRJWSxnQkFBaUIsV0FDZixJQUFJN2YsRUFBSS9KLEtBQUt1Z0IsWUFDYnhXLElBQU1BLEVBQUU2ZixnQkFBa0I3ZixFQUFFNmYsa0JBQW9CLG1CQUFxQjdmLEVBQUU4ZixlQUFpQjlmLEVBQUU4ZixjQUFlLEdBQUs3cEIsS0FBSzRmLHFCQUF1Qm9KLEtBRTVJYyxRQUFTLFdBQ1A5cEIsS0FBSzZmLGFBQWVtSixJQUV0Qm5KLGFBQWNvSixHQUNkUSxXQUFZLFdBQ1YsSUFDSXpmLEVBREFELEVBQUkvSixLQUFLVCxZQUFZMnBCLFVBR3pCLElBQUtsZixLQUFLRCxFQUNSL0osS0FBS2dLLEdBQUssS0FHWmhLLEtBQUt1Z0IsWUFBY3ZnQixLQUFLd29CLFlBQWN4b0IsS0FBS3NvQixlQUFpQixLQUM1RHRvQixLQUFLNGYscUJBQXVCNWYsS0FBS21wQixtQkFBcUJGLEdBQ3REanBCLEtBQUsyZixtQkFBcUIzZixLQUFLMGYsbUJBQXFCLFFBR3hEaFYsR0FBRXdlLFVBQVksQ0FDWnR0QixLQUFNLEtBQ05uSixPQUFRLEtBQ1I2aUIsY0FBZSxXQUNiLE9BQU8sTUFFVHlVLFdBQVksS0FDWkMsUUFBUyxLQUNUQyxXQUFZLEtBQ1pDLFVBQVcsU0FBbUJuZ0IsR0FDNUIsT0FBT0EsRUFBRW1nQixXQUFhaHJCLEtBQUtpckIsT0FFN0JmLGlCQUFrQixLQUNsQmdCLFVBQVcsTUFHYjFmLEdBQUUyZixPQUFTLFNBQVV0Z0IsR0FDbkIsU0FBU0MsS0FFVCxTQUFTcmYsSUFDUCxPQUFPQyxFQUFFMkgsTUFBTXlOLEtBQU10TixXQUd2QixJQUFJOUgsRUFBSW9WLEtBQ1JnSyxFQUFFOWQsVUFBWXRCLEVBQUVzQixVQUNoQixJQUFJa1QsRUFBSSxJQUFJNEssRUFPWixPQU5BamUsRUFBRXFULEVBQUd6VSxFQUFFdUIsV0FDUHZCLEVBQUV1QixVQUFZa1QsRUFDZHpVLEVBQUV1QixVQUFVcVQsWUFBYzVVLEVBQzFCQSxFQUFFdStCLFVBQVluOUIsRUFBRSxHQUFJbkIsRUFBRXMrQixVQUFXbmYsR0FDakNwZixFQUFFMC9CLE9BQVN6L0IsRUFBRXkvQixPQUNiandCLEdBQUd6UCxHQUNJQSxHQUdUeVAsR0FBR3NRLElBd0JILElBQUk0ZixHQUFLNWYsR0FBRTJmLE9BQU8sQ0FDaEIzQyxLQUFNLE9BRUo2QyxHQUFLN2YsR0FBRTJmLE9BQU8sQ0FDaEIzQyxLQUFNLE9BRUo4QyxHQUFLLENBQUMsRUFBRyxHQUFJLEdBQUksSUFDakJDLEdBQUtwVSxHQUFNLHFCQUFzQjVaLE9BQ2pDaXVCLEdBQUssS0FDVHJVLEdBQU0saUJBQWtCN04sV0FBYWtpQixHQUFLbGlCLFNBQVNtaUIsY0FDbkQsSUFBSUMsR0FBS3ZVLEdBQU0sY0FBZTVaLFNBQVdpdUIsR0FDckNHLEdBQUt4VSxLQUFRb1UsSUFBTUMsSUFBTSxFQUFJQSxJQUFNLElBQU1BLElBQ3pDSSxHQUFLbmEsT0FBT0csYUFBYSxJQUN6QmlhLEdBQUssQ0FDUEMsWUFBYSxDQUNYbFYsd0JBQXlCLENBQ3ZCME4sUUFBUyxnQkFDVEMsU0FBVSx3QkFFWnROLGFBQWMsQ0FBQyxpQkFBa0IsV0FBWSxZQUFhLFVBRTVEOFUsZUFBZ0IsQ0FDZG5WLHdCQUF5QixDQUN2QjBOLFFBQVMsbUJBQ1RDLFNBQVUsMkJBRVp0TixhQUFjLHVEQUF1RDNRLE1BQU0sTUFFN0UwbEIsaUJBQWtCLENBQ2hCcFYsd0JBQXlCLENBQ3ZCME4sUUFBUyxxQkFDVEMsU0FBVSw2QkFFWnROLGFBQWMseURBQXlEM1EsTUFBTSxNQUUvRTJsQixrQkFBbUIsQ0FDakJyVix3QkFBeUIsQ0FDdkIwTixRQUFTLHNCQUNUQyxTQUFVLDhCQUVadE4sYUFBYywwREFBMEQzUSxNQUFNLE9BRzlFNGxCLElBQUssRUFFVCxTQUFTQyxHQUFHdGhCLEVBQUdDLEdBQ2IsT0FBUUQsR0FDTixJQUFLLFFBQ0gsT0FBUSxJQUFNeWdCLEdBQUdyeUIsUUFBUTZSLEVBQUVzaEIsU0FFN0IsSUFBSyxVQUNILE9BQU8sTUFBUXRoQixFQUFFc2hCLFFBRW5CLElBQUssV0FDTCxJQUFLLFlBQ0wsSUFBSyxPQUNILE9BQU8sRUFFVCxRQUNFLE9BQU8sR0FJYixTQUFTQyxHQUFHeGhCLEdBRVYsTUFBTyxrQkFEUEEsRUFBSUEsRUFBRXloQixTQUMwQixTQUFVemhCLEVBQUlBLEVBQUUyZCxLQUFPLEtBR3pELElBQUkrRCxJQUFLLEVBMkNULElBQUlDLEdBQUssQ0FDUDlWLFdBQVltVixHQUNacFYsY0FBZSxTQUF1QjVMLEVBQUdDLEVBQUdyZixFQUFHQyxHQUM3QyxJQUFJd1UsRUFDSixHQUFJcXJCLEdBQUl6Z0IsRUFBRyxDQUNULE9BQVFELEdBQ04sSUFBSyxtQkFDSCxJQUFJb0MsRUFBSTRlLEdBQUdHLGlCQUNYLE1BQU1saEIsRUFFUixJQUFLLGlCQUNIbUMsRUFBSTRlLEdBQUdFLGVBQ1AsTUFBTWpoQixFQUVSLElBQUssb0JBQ0htQyxFQUFJNGUsR0FBR0ksa0JBQ1AsTUFBTW5oQixFQUdWbUMsT0FBSSxPQUNDc2YsR0FBS0osR0FBR3RoQixFQUFHcGYsS0FBT3doQixFQUFJNGUsR0FBR0UsZ0JBQWtCLFlBQWNsaEIsR0FBSyxNQUFRcGYsRUFBRTJnQyxVQUFZbmYsRUFBSTRlLEdBQUdHLGtCQUdsRyxPQUZBL2UsR0FBSzBlLElBQU0sT0FBU2xnQyxFQUFFZ2hDLFNBQVdGLElBQU10ZixJQUFNNGUsR0FBR0csaUJBQW1CL2UsSUFBTTRlLEdBQUdFLGdCQUFrQlEsS0FBT3JzQixFQUFJMnBCLE9BQWlCRixHQUFLLFVBQWJELEdBQUtoK0IsR0FBd0JnK0IsR0FBR3I5QixNQUFRcTlCLEdBQUdyTSxZQUFha1AsSUFBSyxJQUFNdGYsRUFBSW1lLEdBQUdaLFVBQVV2ZCxFQUFHbkMsRUFBR3JmLEVBQUdDLEdBQUl3VSxFQUFJK00sRUFBRXViLEtBQU90b0IsRUFBZ0IsUUFBWEEsRUFBSW1zQixHQUFHNWdDLE1BQW1Cd2hCLEVBQUV1YixLQUFPdG9CLEdBQUt1cEIsR0FBR3hjLEdBQUkvTSxFQUFJK00sR0FBSy9NLEVBQUksTUFDaFMySyxFQUFJNmdCLEdBL0RULFNBQVk3Z0IsRUFBR0MsR0FDYixPQUFRRCxHQUNOLElBQUssaUJBQ0gsT0FBT3doQixHQUFHdmhCLEdBRVosSUFBSyxXQUNILE9BQUksS0FBT0EsRUFBRTRoQixNQUFjLE1BQzNCUixJQUFLLEVBQ0VOLElBRVQsSUFBSyxZQUNILE9BQU8vZ0IsRUFBSUMsRUFBRTBkLFFBQVlvRCxJQUFNTSxHQUFLLEtBQU9yaEIsRUFFN0MsUUFDRSxPQUFPLE1BaURDOGhCLENBQUc5aEIsRUFBR3BmLEdBN0NwQixTQUFZb2YsRUFBR0MsR0FDYixHQUFJeWhCLEdBQUksTUFBTyxtQkFBcUIxaEIsSUFBTTBnQixJQUFNWSxHQUFHdGhCLEVBQUdDLElBQU1ELEVBQUlnZixLQUFNRCxHQUFLRCxHQUFLRCxHQUFLLEtBQU02QyxJQUFLLEVBQUkxaEIsR0FBSyxLQUV6RyxPQUFRQSxHQUNOLElBQUssUUFDSCxPQUFPLEtBRVQsSUFBSyxXQUNILEtBQU1DLEVBQUU4aEIsU0FBVzloQixFQUFFK2hCLFFBQVUvaEIsRUFBRWdpQixVQUFZaGlCLEVBQUU4aEIsU0FBVzloQixFQUFFK2hCLE9BQVEsQ0FDbEUsR0FBSS9oQixFQUFFaWlCLE1BQVEsRUFBSWppQixFQUFFaWlCLEtBQUt0NUIsT0FBUSxPQUFPcVgsRUFBRWlpQixLQUMxQyxHQUFJamlCLEVBQUU0aEIsTUFBTyxPQUFPamIsT0FBT0csYUFBYTlHLEVBQUU0aEIsT0FHNUMsT0FBTyxLQUVULElBQUssaUJBQ0gsT0FBT2YsSUFBTSxPQUFTN2dCLEVBQUUyaEIsT0FBUyxLQUFPM2hCLEVBQUUwZCxLQUU1QyxRQUNFLE9BQU8sTUEwQll3RSxDQUFHbmlCLEVBQUdwZixNQUFPcWYsRUFBSXVnQixHQUFHYixVQUFVcUIsR0FBR0MsWUFBYWhoQixFQUFHcmYsRUFBR0MsSUFBTTg4QixLQUFPM2QsRUFBRzRlLEdBQUczZSxJQUFNQSxFQUFJLEtBQy9GLE9BQVM1SyxFQUFJNEssRUFBSSxPQUFTQSxFQUFJNUssRUFBSSxDQUFDQSxFQUFHNEssS0FHN0NtaUIsR0FBSyxDQUNQQyxPQUFPLEVBQ1BDLE1BQU0sRUFDTkMsVUFBVSxFQUNWLGtCQUFrQixFQUNsQkMsT0FBTyxFQUNQQyxPQUFPLEVBQ1BDLFFBQVEsRUFDUkMsVUFBVSxFQUNWQyxPQUFPLEVBQ1BDLFFBQVEsRUFDUkMsS0FBSyxFQUNMQyxNQUFNLEVBQ05DLE1BQU0sRUFDTjkxQixLQUFLLEVBQ0wrMUIsTUFBTSxHQUdSLFNBQVNDLEdBQUdsakIsR0FDVixJQUFJQyxFQUFJRCxHQUFLQSxFQUFFc1EsVUFBWXRRLEVBQUVzUSxTQUFTbmlCLGNBQ3RDLE1BQU8sVUFBWThSLElBQU1taUIsR0FBR3BpQixFQUFFbk8sTUFBUSxhQUFlb08sRUFHdkQsSUFBSWtqQixHQUFLLENBQ1BDLE9BQVEsQ0FDTnJYLHdCQUF5QixDQUN2QjBOLFFBQVMsV0FDVEMsU0FBVSxtQkFFWnROLGFBQWMsOERBQThEM1EsTUFBTSxPQUl0RixTQUFTNG5CLEdBQUdyakIsRUFBR0MsRUFBR3JmLEdBS2hCLE9BSkFvZixFQUFJVyxHQUFFZ2YsVUFBVXdELEdBQUdDLE9BQVFwakIsRUFBR0MsRUFBR3JmLElBQy9CaVIsS0FBTyxTQUNUK2EsRUFBR2hzQixHQUNIZytCLEdBQUc1ZSxHQUNJQSxFQUdULElBQUlzakIsR0FBSyxLQUNMQyxHQUFLLEtBRVQsU0FBU0MsR0FBR3hqQixHQUNWZ1csR0FBR2hXLEdBR0wsU0FBU3lqQixHQUFHempCLEdBRVYsR0FBSTZRLEdBRElxTixHQUFHbGUsSUFDQSxPQUFPQSxFQUdwQixTQUFTMGpCLEdBQUcxakIsRUFBR0MsR0FDYixHQUFJLFdBQWFELEVBQUcsT0FBT0MsRUFHN0IsSUFBSTBqQixJQUFLLEVBR1QsU0FBU0MsS0FDUE4sS0FBT0EsR0FBR08sWUFBWSxtQkFBb0JDLElBQUtQLEdBQUtELEdBQUssTUFHM0QsU0FBU1EsR0FBRzlqQixHQUNWLEdBQUksVUFBWUEsRUFBRThOLGNBQWdCMlYsR0FBR0YsSUFBSyxHQUFJdmpCLEVBQUlxakIsR0FBR0UsR0FBSXZqQixFQUFHaVcsR0FBR2pXLElBQUtrTixFQUFJOEksR0FBR2hXLE9BQVEsQ0FDakZrTixHQUFLLEVBRUwsSUFDRUosRUFBRzBXLEdBQUl4akIsR0FDUCxRQUNBa04sR0FBSyxFQUFJRSxNQUtmLFNBQVMyVyxHQUFHL2pCLEVBQUdDLEVBQUdyZixHQUNoQixVQUFZb2YsR0FBSzRqQixLQUFjTCxHQUFLM2lDLEdBQWIwaUMsR0FBS3JqQixHQUFjK2pCLFlBQVksbUJBQW9CRixLQUFPLFNBQVc5akIsR0FBSzRqQixLQUduRyxTQUFTSyxHQUFHamtCLEdBQ1YsR0FBSSxvQkFBc0JBLEdBQUssVUFBWUEsR0FBSyxZQUFjQSxFQUFHLE9BQU95akIsR0FBR0YsSUFHN0UsU0FBU1csR0FBR2xrQixFQUFHQyxHQUNiLEdBQUksVUFBWUQsRUFBRyxPQUFPeWpCLEdBQUd4akIsR0FHL0IsU0FBU2trQixHQUFHbmtCLEVBQUdDLEdBQ2IsR0FBSSxVQUFZRCxHQUFLLFdBQWFBLEVBQUcsT0FBT3lqQixHQUFHeGpCLEdBL0JqRHFNLElBQU9xWCxHQUFLdk4sR0FBRyxZQUFjM1gsU0FBU21pQixjQUFnQixFQUFJbmlCLFNBQVNtaUIsZUFrQ25FLElBQUl3RCxHQUFLLENBQ1B2WSxXQUFZc1gsR0FDWmtCLHVCQUF3QlYsR0FDeEIvWCxjQUFlLFNBQXVCNUwsRUFBR0MsRUFBR3JmLEVBQUdDLEdBQzdDLElBQUl3VSxFQUFJNEssRUFBSWllLEdBQUdqZSxHQUFLdk4sT0FDaEIwUCxFQUFJL00sRUFBRWliLFVBQVlqYixFQUFFaWIsU0FBU25pQixjQUNqQyxHQUFJLFdBQWFpVSxHQUFLLFVBQVlBLEdBQUssU0FBVy9NLEVBQUV4RCxLQUFNLElBQUl3UCxFQUFJcWlCLFFBQVEsR0FBSVIsR0FBRzd0QixHQUMvRSxHQUFJc3VCLEdBQUl0aUIsRUFBSThpQixPQUFRLENBQ2xCOWlCLEVBQUk0aUIsR0FDSixJQUFJanRCLEVBQUkrc0IsUUFFSjNoQixFQUFJL00sRUFBRWliLFdBQWEsVUFBWWxPLEVBQUVqVSxnQkFBa0IsYUFBZWtILEVBQUV4RCxNQUFRLFVBQVl3RCxFQUFFeEQsUUFBVXdQLEVBQUk2aUIsSUFDaEgsR0FBSTdpQixJQUFNQSxFQUFJQSxFQUFFckIsRUFBR0MsSUFBSyxPQUFPb2pCLEdBQUdoaUIsRUFBR3pnQixFQUFHQyxHQUN4Q21XLEdBQUtBLEVBQUVnSixFQUFHM0ssRUFBRzRLLEdBQ2IsU0FBV0QsSUFBTUEsRUFBSTNLLEVBQUU2YixnQkFBa0JsUixFQUFFc1IsWUFBYyxXQUFhamMsRUFBRXhELE1BQVE0ZixHQUFHcGMsRUFBRyxTQUFVQSxFQUFFN1QsU0FHbEc4aUMsR0FBSzNqQixHQUFFMmYsT0FBTyxDQUNoQmlFLEtBQU0sS0FDTjlDLE9BQVEsT0FFTitDLEdBQUssQ0FDUEMsSUFBSyxTQUNMQyxRQUFTLFVBQ1RDLEtBQU0sVUFDTkMsTUFBTyxZQUdULFNBQVNDLEdBQUc3a0IsR0FDVixJQUFJQyxFQUFJaEssS0FBS3VnQixZQUNiLE9BQU92VyxFQUFFNmtCLGlCQUFtQjdrQixFQUFFNmtCLGlCQUFpQjlrQixNQUFNQSxFQUFJd2tCLEdBQUd4a0IsT0FBUUMsRUFBRUQsR0FHeEUsU0FBUytrQixLQUNQLE9BQU9GLEdBR1QsSUFBSUcsR0FBSyxFQUNMQyxHQUFLLEVBQ0xDLElBQUssRUFDTEMsSUFBSyxFQUNMQyxHQUFLZCxHQUFHaEUsT0FBTyxDQUNqQitFLFFBQVMsS0FDVEMsUUFBUyxLQUNUQyxRQUFTLEtBQ1RDLFFBQVMsS0FDVEMsTUFBTyxLQUNQQyxNQUFPLEtBQ1AzRCxRQUFTLEtBQ1Q0RCxTQUFVLEtBQ1YzRCxPQUFRLEtBQ1JDLFFBQVMsS0FDVDZDLGlCQUFrQkMsR0FDbEJhLE9BQVEsS0FDUkMsUUFBUyxLQUNUQyxjQUFlLFNBQXVCOWxCLEdBQ3BDLE9BQU9BLEVBQUU4bEIsZ0JBQWtCOWxCLEVBQUUrbEIsY0FBZ0IvbEIsRUFBRWtXLFdBQWFsVyxFQUFFZ21CLFVBQVlobUIsRUFBRStsQixjQUU5RUUsVUFBVyxTQUFtQmptQixHQUM1QixHQUFJLGNBQWVBLEVBQUcsT0FBT0EsRUFBRWltQixVQUMvQixJQUFJaG1CLEVBQUkra0IsR0FFUixPQURBQSxHQUFLaGxCLEVBQUVxbEIsUUFDQUgsR0FBSyxjQUFnQmxsQixFQUFFbk8sS0FBT21PLEVBQUVxbEIsUUFBVXBsQixFQUFJLEdBQUtpbEIsSUFBSyxFQUFJLElBRXJFZ0IsVUFBVyxTQUFtQmxtQixHQUM1QixHQUFJLGNBQWVBLEVBQUcsT0FBT0EsRUFBRWttQixVQUMvQixJQUFJam1CLEVBQUlnbEIsR0FFUixPQURBQSxHQUFLamxCLEVBQUVzbEIsUUFDQUgsR0FBSyxjQUFnQm5sQixFQUFFbk8sS0FBT21PLEVBQUVzbEIsUUFBVXJsQixFQUFJLEdBQUtrbEIsSUFBSyxFQUFJLE1BR25FZ0IsR0FBS2YsR0FBRzlFLE9BQU8sQ0FDakJsSSxVQUFXLEtBQ1h2cEIsTUFBTyxLQUNQQyxPQUFRLEtBQ1JzM0IsU0FBVSxLQUNWQyxtQkFBb0IsS0FDcEJDLE1BQU8sS0FDUEMsTUFBTyxLQUNQQyxNQUFPLEtBQ1BDLFlBQWEsS0FDYkMsVUFBVyxPQUVUQyxHQUFLLENBQ1BDLFdBQVksQ0FDVjNhLGlCQUFrQixlQUNsQkcsYUFBYyxDQUFDLFdBQVksY0FFN0J5YSxXQUFZLENBQ1Y1YSxpQkFBa0IsZUFDbEJHLGFBQWMsQ0FBQyxXQUFZLGNBRTdCMGEsYUFBYyxDQUNaN2EsaUJBQWtCLGlCQUNsQkcsYUFBYyxDQUFDLGFBQWMsZ0JBRS9CMmEsYUFBYyxDQUNaOWEsaUJBQWtCLGlCQUNsQkcsYUFBYyxDQUFDLGFBQWMsaUJBRzdCNGEsR0FBSyxDQUNQbmIsV0FBWThhLEdBQ1ovYSxjQUFlLFNBQXVCNUwsRUFBR0MsRUFBR3JmLEVBQUdDLEVBQUd3VSxHQUNoRCxJQUFJK00sRUFBSSxjQUFnQnBDLEdBQUssZ0JBQWtCQSxFQUMzQ3FCLEVBQUksYUFBZXJCLEdBQUssZUFBaUJBLEVBQzdDLEdBQUlvQyxHQUFLLEtBQVcsR0FBSi9NLEtBQVl6VSxFQUFFa2xDLGVBQWlCbGxDLEVBQUVtbEMsZUFBaUIxa0IsSUFBTWUsRUFBRyxPQUFPLE1BQ2xGQSxFQUFJdmhCLEVBQUU2UixTQUFXN1IsRUFBSUEsR0FBS3VoQixFQUFJdmhCLEVBQUU4d0IsZUFBaUJ2UCxFQUFFNmtCLGFBQWU3a0IsRUFBRThrQixhQUFleDBCLE9BRS9FMk8sSUFDRUEsRUFBSXBCLEVBQTRELFFBQXpEQSxHQUFLQSxFQUFJcmYsRUFBRWtsQyxlQUFpQmxsQyxFQUFFb2xDLFdBQWFqUCxHQUFHOVcsR0FBSyxRQUV4REEsSUFESTJVLEdBQUczVSxJQUNJLElBQU1BLEVBQUVwVyxLQUFPLElBQU1vVyxFQUFFcFcsT0FBS29XLEVBQUksT0FFNUNvQixFQUFJLEtBRVgsR0FBSUEsSUFBTXBCLEVBQUcsT0FBTyxLQUVwQixHQUFJLGFBQWVELEdBQUssY0FBZ0JBLEVBQ3RDLElBQUlqSixFQUFJcXVCLEdBQ0o1a0MsRUFBSW1tQyxHQUFHRSxXQUNQbG1DLEVBQUlnbUMsR0FBR0MsV0FDUHZrQyxFQUFJLFlBQ0MsZUFBaUIyZCxHQUFLLGdCQUFrQkEsSUFBR2pKLEVBQUlvdkIsR0FBSTNsQyxFQUFJbW1DLEdBQUdJLGFBQWNwbUMsRUFBSWdtQyxHQUFHRyxhQUFjemtDLEVBQUksV0FjNUcsR0FaQTJkLEVBQUksTUFBUXFCLEVBQUllLEVBQUk4YixHQUFHN2MsR0FDdkJlLEVBQUksTUFBUW5DLEVBQUltQyxFQUFJOGIsR0FBR2plLElBQ3ZCemYsRUFBSXVXLEVBQUU0b0IsVUFBVW4vQixFQUFHNmdCLEVBQUd6Z0IsRUFBR0MsSUFDdkJnUixLQUFPeFAsRUFBSSxRQUNiN0IsRUFBRWtJLE9BQVNzWCxFQUNYeGYsRUFBRXNsQyxjQUFnQjFqQixHQUNsQnhoQixFQUFJbVcsRUFBRTRvQixVQUFVaC9CLEVBQUdzZixFQUFHcmYsRUFBR0MsSUFDdkJnUixLQUFPeFAsRUFBSSxRQUNiekIsRUFBRThILE9BQVMwWixFQUNYeGhCLEVBQUVrbEMsY0FBZ0I5bEIsRUFFbEIzZCxFQUFJNGQsR0FESnBmLEVBQUl3Z0IsSUFFS2hmLEVBQUcyZCxFQUFHLENBS2IsSUFIQXJmLEVBQUkwQixFQUNKZ2YsRUFBSSxFQUVDckIsRUFKTGpKLEVBQUlsVyxFQUlRbWYsRUFBR0EsRUFBSW9lLEdBQUdwZSxHQUNwQnFCLElBS0YsSUFGQXJCLEVBQUksRUFFQ0MsRUFBSXRmLEVBQUdzZixFQUFHQSxFQUFJbWUsR0FBR25lLEdBQ3BCRCxJQUdGLEtBQU8sRUFBSXFCLEVBQUlyQixHQUNiakosRUFBSXFuQixHQUFHcm5CLEdBQUlzSyxJQUdiLEtBQU8sRUFBSXJCLEVBQUlxQixHQUNiMWdCLEVBQUl5OUIsR0FBR3o5QixHQUFJcWYsSUFHYixLQUFPcUIsS0FBTSxDQUNYLEdBQUl0SyxJQUFNcFcsR0FBS29XLElBQU1wVyxFQUFFazBCLFVBQVcsTUFBTTdVLEVBQ3hDakosRUFBSXFuQixHQUFHcm5CLEdBQ1BwVyxFQUFJeTlCLEdBQUd6OUIsR0FHVG9XLEVBQUksVUFDQ0EsRUFBSSxLQUdYLElBRkFwVyxFQUFJb1csRUFFQ0EsRUFBSSxHQUFJbFcsR0FBS0EsSUFBTUYsSUFFbEIsUUFESjBnQixFQUFJeGdCLEVBQUVnMEIsWUFDWXhULElBQU0xZ0IsSUFDeEJvVyxFQUFFeE8sS0FBSzFILEdBQ1BBLEVBQUl1OUIsR0FBR3Y5QixHQUdULElBQUtBLEVBQUksR0FBSXdCLEdBQUtBLElBQU0xQixJQUVsQixRQURKMGdCLEVBQUloZixFQUFFd3lCLFlBQ1l4VCxJQUFNMWdCLElBQ3hCRSxFQUFFMEgsS0FBS2xHLEdBQ1BBLEVBQUkrN0IsR0FBRy83QixHQUdULElBQUtBLEVBQUksRUFBR0EsRUFBSTBVLEVBQUVuTyxPQUFRdkcsSUFDeEJxOEIsR0FBRzNuQixFQUFFMVUsR0FBSSxVQUFXN0IsR0FHdEIsSUFBSzZCLEVBQUl4QixFQUFFK0gsT0FBUSxFQUFJdkcsS0FDckJxOEIsR0FBRzc5QixFQUFFd0IsR0FBSSxXQUFZekIsR0FHdkIsT0FBTyxLQUFXLEdBQUp5VSxHQUFVLENBQUM3VSxHQUFLLENBQUNBLEVBQUdJLEtBUXRDLElBQUl1bUMsR0FBSyxvQkFBc0JsbUMsT0FBTzY2QixHQUFLNzZCLE9BQU82NkIsR0FKbEQsU0FBWTliLEVBQUdDLEdBQ2IsT0FBT0QsSUFBTUMsSUFBTSxJQUFNRCxHQUFLLEVBQUlBLElBQU0sRUFBSUMsSUFBTUQsSUFBTUEsR0FBS0MsSUFBTUEsR0FJakVtbkIsR0FBS25tQyxPQUFPa0IsVUFBVUMsZUFFMUIsU0FBU2lsQyxHQUFHcm5CLEVBQUdDLEdBQ2IsR0FBSWtuQixHQUFHbm5CLEVBQUdDLEdBQUksT0FBTyxFQUNyQixHQUFJLGtCQUFvQkQsR0FBSyxPQUFTQSxHQUFLLGtCQUFvQkMsR0FBSyxPQUFTQSxFQUFHLE9BQU8sRUFDdkYsSUFBSXJmLEVBQUlLLE9BQU9nSCxLQUFLK1gsR0FDaEJuZixFQUFJSSxPQUFPZ0gsS0FBS2dZLEdBQ3BCLEdBQUlyZixFQUFFZ0ksU0FBVy9ILEVBQUUrSCxPQUFRLE9BQU8sRUFFbEMsSUFBSy9ILEVBQUksRUFBR0EsRUFBSUQsRUFBRWdJLE9BQVEvSCxJQUN4QixJQUFLdW1DLEdBQUcxbUMsS0FBS3VmLEVBQUdyZixFQUFFQyxNQUFRc21DLEdBQUdubkIsRUFBRXBmLEVBQUVDLElBQUtvZixFQUFFcmYsRUFBRUMsS0FBTSxPQUFPLEVBR3pELE9BQU8sRUFHVCxJQUFJeW1DLEdBQUtoYixHQUFNLGlCQUFrQjdOLFVBQVksSUFBTUEsU0FBU21pQixhQUN4RDJHLEdBQUssQ0FDUEMsT0FBUSxDQUNOemIsd0JBQXlCLENBQ3ZCME4sUUFBUyxXQUNUQyxTQUFVLG1CQUVadE4sYUFBYyxpRkFBaUYzUSxNQUFNLE9BR3JHZ3NCLEdBQUssS0FDTEMsR0FBSyxLQUNMQyxHQUFLLEtBQ0xDLElBQUssRUFFVCxTQUFTQyxHQUFHN25CLEVBQUdDLEdBQ2IsSUFBSXJmLEVBQUlxZixFQUFFdk4sU0FBV3VOLEVBQUlBLEVBQUV4QixTQUFXLElBQU13QixFQUFFcVQsU0FBV3JULEVBQUlBLEVBQUUwUixjQUMvRCxPQUFJaVcsSUFBTSxNQUFRSCxJQUFNQSxLQUFPdkwsR0FBR3Q3QixHQUFXLE1BRTdDLG1CQURBQSxFQUFJNm1DLEtBQ3FCN0ssR0FBR2g4QixHQUFLQSxFQUFJLENBQ25Da25DLE1BQU9sbkMsRUFBRW1uQyxlQUNUQyxJQUFLcG5DLEVBQUVxbkMsY0FDMkVybkMsRUFBSSxDQUN0RnNuQyxZQURHdG5DLEdBQUtBLEVBQUUrd0IsZUFBaUIvd0IsRUFBRSt3QixjQUFjc1YsYUFBZXYwQixRQUFReTFCLGdCQUNwREQsV0FDZEUsYUFBY3huQyxFQUFFd25DLGFBQ2hCQyxVQUFXem5DLEVBQUV5bkMsVUFDYkMsWUFBYTFuQyxFQUFFMG5DLGFBRVZYLElBQU1OLEdBQUdNLEdBQUkvbUMsR0FBSyxNQUFRK21DLEdBQUsvbUMsR0FBR29mLEVBQUlXLEdBQUVnZixVQUFVNEgsR0FBR0MsT0FBUUUsR0FBSTFuQixFQUFHQyxJQUFNcE8sS0FBTyxTQUFVbU8sRUFBRXRYLE9BQVMrK0IsR0FBSTdJLEdBQUc1ZSxHQUFJQSxJQUcxSCxJQUFJdW9CLEdBQUssQ0FDUDFjLFdBQVkwYixHQUNaM2IsY0FBZSxTQUF1QjVMLEVBQUdDLEVBQUdyZixFQUFHQyxFQUFHd1UsRUFBRytNLEdBR25ELEtBQU1BLElBRk4vTSxFQUFJK00sSUFBTXZoQixFQUFFNlIsU0FBVzdSLEVBQUlBLEVBQUU0ZCxTQUFXLElBQU01ZCxFQUFFeXlCLFNBQVd6eUIsRUFBSUEsRUFBRTh3QixpQkFFbEQsQ0FDYjNSLEVBQUcsQ0FDRDNLLEVBQUlzZixHQUFHdGYsR0FDUCtNLEVBQUkrSixFQUFHcWMsU0FFUCxJQUFLLElBQUlubkIsRUFBSSxFQUFHQSxFQUFJZSxFQUFFeFosT0FBUXlZLElBQzVCLElBQUtoTSxFQUFFNGhCLElBQUk3VSxFQUFFZixJQUFLLENBQ2hCaE0sR0FBSSxFQUNKLE1BQU0ySyxFQUlWM0ssR0FBSSxFQUdOK00sR0FBSy9NLEVBR1AsR0FBSStNLEVBQUcsT0FBTyxLQUdkLE9BRkEvTSxFQUFJNEssRUFBSWllLEdBQUdqZSxHQUFLdk4sT0FFUnNOLEdBQ04sSUFBSyxTQUNDa2pCLEdBQUc3dEIsSUFBTSxTQUFXQSxFQUFFd25CLG1CQUFpQjRLLEdBQUtweUIsRUFBR3F5QixHQUFLem5CLEVBQUcwbkIsR0FBSyxNQUNoRSxNQUVGLElBQUssT0FDSEEsR0FBS0QsR0FBS0QsR0FBSyxLQUNmLE1BRUYsSUFBSyxZQUNIRyxJQUFLLEVBQ0wsTUFFRixJQUFLLGNBQ0wsSUFBSyxVQUNMLElBQUssVUFDSCxPQUFPQSxJQUFLLEVBQUlDLEdBQUdqbkMsRUFBR0MsR0FFeEIsSUFBSyxrQkFDSCxHQUFJeW1DLEdBQUksTUFFVixJQUFLLFVBQ0wsSUFBSyxRQUNILE9BQU9PLEdBQUdqbkMsRUFBR0MsR0FHakIsT0FBTyxPQUdQNG5DLEdBQUs5bkIsR0FBRTJmLE9BQU8sQ0FDaEJvSSxjQUFlLEtBQ2ZDLFlBQWEsS0FDYkMsY0FBZSxPQUViQyxHQUFLbG9CLEdBQUUyZixPQUFPLENBQ2hCd0ksY0FBZSxTQUF1QjlvQixHQUNwQyxNQUFPLGtCQUFtQkEsRUFBSUEsRUFBRThvQixjQUFnQnAyQixPQUFPbzJCLGlCQUd2REMsR0FBS3pFLEdBQUdoRSxPQUFPLENBQ2pCd0YsY0FBZSxPQUdqQixTQUFTa0QsR0FBR2hwQixHQUNWLElBQUlDLEVBQUlELEVBQUV1aEIsUUFHVixNQUZBLGFBQWN2aEIsRUFBcUIsS0FBaEJBLEVBQUlBLEVBQUVpcEIsV0FBcUIsS0FBT2hwQixJQUFNRCxFQUFJLElBQU9BLEVBQUlDLEVBQzFFLEtBQU9ELElBQU1BLEVBQUksSUFDVixJQUFNQSxHQUFLLEtBQU9BLEVBQUlBLEVBQUksRUFHbkMsSUFBSWtwQixHQUFLLENBQ1BDLElBQUssU0FDTEMsU0FBVSxJQUNWQyxLQUFNLFlBQ05DLEdBQUksVUFDSkMsTUFBTyxhQUNQQyxLQUFNLFlBQ05DLElBQUssU0FDTEMsSUFBSyxLQUNMQyxLQUFNLGNBQ05DLEtBQU0sY0FDTkMsT0FBUSxhQUNSQyxnQkFBaUIsZ0JBRWZDLEdBQUssQ0FDUEMsRUFBRyxZQUNIQyxFQUFHLE1BQ0hDLEdBQUksUUFDSkMsR0FBSSxRQUNKQyxHQUFJLFFBQ0pDLEdBQUksVUFDSkMsR0FBSSxNQUNKQyxHQUFJLFFBQ0pDLEdBQUksV0FDSkMsR0FBSSxTQUNKQyxHQUFJLElBQ0pDLEdBQUksU0FDSkMsR0FBSSxXQUNKQyxHQUFJLE1BQ0pDLEdBQUksT0FDSkMsR0FBSSxZQUNKQyxHQUFJLFVBQ0pDLEdBQUksYUFDSkMsR0FBSSxZQUNKQyxHQUFJLFNBQ0pDLEdBQUksU0FDSkMsSUFBSyxLQUNMQyxJQUFLLEtBQ0xDLElBQUssS0FDTEMsSUFBSyxLQUNMQyxJQUFLLEtBQ0xDLElBQUssS0FDTEMsSUFBSyxLQUNMQyxJQUFLLEtBQ0xDLElBQUssS0FDTEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsSUFBSyxVQUNMQyxJQUFLLGFBQ0xDLElBQUssUUFFSEMsR0FBSzlILEdBQUdoRSxPQUFPLENBQ2pCeCtCLElBQUssU0FBYWtlLEdBQ2hCLEdBQUlBLEVBQUVsZSxJQUFLLENBQ1QsSUFBSW1lLEVBQUlpcEIsR0FBR2xwQixFQUFFbGUsTUFBUWtlLEVBQUVsZSxJQUN2QixHQUFJLGlCQUFtQm1lLEVBQUcsT0FBT0EsRUFHbkMsTUFBTyxhQUFlRCxFQUFFbk8sS0FBbUIsTUFBWG1PLEVBQUlncEIsR0FBR2hwQixJQUFlLFFBQVU0RyxPQUFPRyxhQUFhL0csR0FBTSxZQUFjQSxFQUFFbk8sTUFBUSxVQUFZbU8sRUFBRW5PLEtBQU9rNEIsR0FBRy9wQixFQUFFdWhCLFVBQVksZUFBaUIsSUFFM0s3RSxTQUFVLEtBQ1ZxRixRQUFTLEtBQ1Q0RCxTQUFVLEtBQ1YzRCxPQUFRLEtBQ1JDLFFBQVMsS0FDVG9LLE9BQVEsS0FDUnpLLE9BQVEsS0FDUmtELGlCQUFrQkMsR0FDbEJrRSxTQUFVLFNBQWtCanBCLEdBQzFCLE1BQU8sYUFBZUEsRUFBRW5PLEtBQU9tM0IsR0FBR2hwQixHQUFLLEdBRXpDdWhCLFFBQVMsU0FBaUJ2aEIsR0FDeEIsTUFBTyxZQUFjQSxFQUFFbk8sTUFBUSxVQUFZbU8sRUFBRW5PLEtBQU9tTyxFQUFFdWhCLFFBQVUsR0FFbEVNLE1BQU8sU0FBZTdoQixHQUNwQixNQUFPLGFBQWVBLEVBQUVuTyxLQUFPbTNCLEdBQUdocEIsR0FBSyxZQUFjQSxFQUFFbk8sTUFBUSxVQUFZbU8sRUFBRW5PLEtBQU9tTyxFQUFFdWhCLFFBQVUsS0FHaEcrSyxHQUFLbEgsR0FBRzlFLE9BQU8sQ0FDakJpTSxhQUFjLE9BRVpDLEdBQUtsSSxHQUFHaEUsT0FBTyxDQUNqQm1NLFFBQVMsS0FDVEMsY0FBZSxLQUNmQyxlQUFnQixLQUNoQjNLLE9BQVEsS0FDUkMsUUFBUyxLQUNURixRQUFTLEtBQ1Q0RCxTQUFVLEtBQ1ZiLGlCQUFrQkMsS0FFaEI2SCxHQUFLanNCLEdBQUUyZixPQUFPLENBQ2hCeFMsYUFBYyxLQUNkNmEsWUFBYSxLQUNiQyxjQUFlLE9BRWJpRSxHQUFLekgsR0FBRzlFLE9BQU8sQ0FDakJ3TSxPQUFRLFNBQWdCOXNCLEdBQ3RCLE1BQU8sV0FBWUEsRUFBSUEsRUFBRThzQixPQUFTLGdCQUFpQjlzQixHQUFLQSxFQUFFK3NCLFlBQWMsR0FFMUVDLE9BQVEsU0FBZ0JodEIsR0FDdEIsTUFBTyxXQUFZQSxFQUFJQSxFQUFFZ3RCLE9BQVMsZ0JBQWlCaHRCLEdBQUtBLEVBQUVpdEIsWUFBYyxlQUFnQmp0QixHQUFLQSxFQUFFa3RCLFdBQWEsR0FFOUdDLE9BQVEsS0FDUkMsVUFBVyxPQUVUQyxHQUFLLENBQ1B4aEIsV0FBWXVOLEdBQ1p4TixjQUFlLFNBQXVCNUwsRUFBR0MsRUFBR3JmLEVBQUdDLEdBQzdDLElBQUl3VSxFQUFJZ2tCLEdBQUdqNEIsSUFBSTRlLEdBQ2YsSUFBSzNLLEVBQUcsT0FBTyxLQUVmLE9BQVEySyxHQUNOLElBQUssV0FDSCxHQUFJLElBQU1ncEIsR0FBR3BvQyxHQUFJLE9BQU8sS0FFMUIsSUFBSyxVQUNMLElBQUssUUFDSG9mLEVBQUlvc0IsR0FDSixNQUVGLElBQUssT0FDTCxJQUFLLFFBQ0hwc0IsRUFBSStvQixHQUNKLE1BRUYsSUFBSyxRQUNILEdBQUksSUFBTW5vQyxFQUFFZ2xDLE9BQVEsT0FBTyxLQUU3QixJQUFLLFdBQ0wsSUFBSyxXQUNMLElBQUssWUFDTCxJQUFLLFlBQ0wsSUFBSyxVQUNMLElBQUssV0FDTCxJQUFLLFlBQ0wsSUFBSyxjQUNINWxCLEVBQUlvbEIsR0FDSixNQUVGLElBQUssT0FDTCxJQUFLLFVBQ0wsSUFBSyxZQUNMLElBQUssV0FDTCxJQUFLLFlBQ0wsSUFBSyxXQUNMLElBQUssWUFDTCxJQUFLLE9BQ0hwbEIsRUFBSXNzQixHQUNKLE1BRUYsSUFBSyxjQUNMLElBQUssV0FDTCxJQUFLLFlBQ0wsSUFBSyxhQUNIdHNCLEVBQUl3c0IsR0FDSixNQUVGLEtBQUtyWSxHQUNMLEtBQUtDLEdBQ0wsS0FBS0MsR0FDSHJVLEVBQUl5b0IsR0FDSixNQUVGLEtBQUtuVSxHQUNIdFUsRUFBSTRzQixHQUNKLE1BRUYsSUFBSyxTQUNINXNCLEVBQUlza0IsR0FDSixNQUVGLElBQUssUUFDSHRrQixFQUFJNnNCLEdBQ0osTUFFRixJQUFLLE9BQ0wsSUFBSyxNQUNMLElBQUssUUFDSDdzQixFQUFJNm9CLEdBQ0osTUFFRixJQUFLLG9CQUNMLElBQUsscUJBQ0wsSUFBSyxnQkFDTCxJQUFLLGNBQ0wsSUFBSyxjQUNMLElBQUssYUFDTCxJQUFLLGNBQ0wsSUFBSyxZQUNIN29CLEVBQUltbUIsR0FDSixNQUVGLFFBQ0VubUIsRUFBSVcsR0FLUixPQURBaWUsR0FEQTNlLEVBQUlELEVBQUUyZixVQUFVdHFCLEVBQUc0SyxFQUFHcmYsRUFBR0MsSUFFbEJvZixJQUdYLEdBQUl1TCxFQUFJLE1BQU0zRCxNQUFNNUYsRUFBRSxNQUN0QnVKLEVBQUtsWSxNQUFNblIsVUFBVWlILE1BQU0xSSxLQUFLLDBIQUEwSCthLE1BQU0sTUFDaEtpUSxJQUVBN0ssRUFBS3NkLEdBQ0xyZCxFQUZTd1gsR0FHVHRYLEVBQUtrZCxHQUNMN1IsRUFBRyxDQUNEaWhCLGtCQUFtQkQsR0FDbkJFLHNCQUF1QnZHLEdBQ3ZCd0csa0JBQW1CcEosR0FDbkJxSixrQkFBbUJsRixHQUNuQm1GLHVCQUF3Qi9MLEtBRTFCLElBQUlnTSxHQUFLLEdBQ0xDLElBQU0sRUFFVixTQUFTenNCLEdBQUVuQixHQUNULEVBQUk0dEIsS0FBTzV0QixFQUFFbEUsUUFBVTZ4QixHQUFHQyxJQUFLRCxHQUFHQyxJQUFNLEtBQU1BLE1BR2hELFNBQVMxckIsR0FBRWxDLEVBQUdDLEdBQ1oydEIsS0FDQUQsR0FBR0MsSUFBTTV0QixFQUFFbEUsUUFDWGtFLEVBQUVsRSxRQUFVbUUsRUFHZCxJQUFJNHRCLEdBQUssR0FDTDFyQixHQUFJLENBQ05yRyxRQUFTK3hCLElBRVA3ckIsR0FBSSxDQUNObEcsU0FBUyxHQUVQZ3lCLEdBQUtELEdBRVQsU0FBU0UsR0FBRy90QixFQUFHQyxHQUNiLElBQUlyZixFQUFJb2YsRUFBRW5PLEtBQUttOEIsYUFDZixJQUFLcHRDLEVBQUcsT0FBT2l0QyxHQUNmLElBQUlodEMsRUFBSW1mLEVBQUUyTSxVQUNWLEdBQUk5ckIsR0FBS0EsRUFBRW90Qyw4Q0FBZ0RodUIsRUFBRyxPQUFPcGYsRUFBRXF0QywwQ0FDdkUsSUFDSTlyQixFQURBL00sRUFBSSxHQUdSLElBQUsrTSxLQUFLeGhCLEVBQ1J5VSxFQUFFK00sR0FBS25DLEVBQUVtQyxHQUlYLE9BREF2aEIsS0FBTW1mLEVBQUlBLEVBQUUyTSxXQUFhc2hCLDRDQUE4Q2h1QixFQUFHRCxFQUFFa3VCLDBDQUE0Qzc0QixHQUNqSEEsRUFHVCxTQUFTbUwsR0FBRVIsR0FFVCxPQUFPLFFBRFBBLEVBQUlBLEVBQUVtdUIseUJBQ2UsSUFBV251QixFQUdsQyxTQUFTb3VCLEtBQ1BqdEIsR0FBRWEsSUFDRmIsR0FBRWdCLElBR0osU0FBU2tzQixHQUFHcnVCLEVBQUdDLEVBQUdyZixHQUNoQixHQUFJdWhCLEdBQUVyRyxVQUFZK3hCLEdBQUksTUFBTWhtQixNQUFNNUYsRUFBRSxNQUNwQ0MsR0FBRUMsR0FBR2xDLEdBQ0xpQyxHQUFFRixHQUFHcGhCLEdBR1AsU0FBUzB0QyxHQUFHdHVCLEVBQUdDLEVBQUdyZixHQUNoQixJQUFJQyxFQUFJbWYsRUFBRTJNLFVBRVYsR0FEQTNNLEVBQUlDLEVBQUVrdUIsa0JBQ0Ysb0JBQXNCdHRDLEVBQUUwdEMsZ0JBQWlCLE9BQU8zdEMsRUFHcEQsSUFBSyxJQUFJeVUsS0FGVHhVLEVBQUlBLEVBQUUwdEMsa0JBR0osS0FBTWw1QixLQUFLMkssR0FBSSxNQUFNNkgsTUFBTTVGLEVBQUUsSUFBSzROLEdBQUc1UCxJQUFNLFVBQVc1SyxJQUd4RCxPQUFPclQsRUFBRSxHQUFJcEIsRUFBRyxHQUFJQyxHQUd0QixTQUFTMnRDLEdBQUd4dUIsR0FLVixPQUpBQSxHQUFLQSxFQUFJQSxFQUFFMk0sWUFBYzNNLEVBQUV5dUIsMkNBQTZDWixHQUN4RUMsR0FBSzNyQixHQUFFckcsUUFDUG9HLEdBQUVDLEdBQUduQyxHQUNMa0MsR0FBRUYsR0FBR0EsR0FBRWxHLFVBQ0EsRUFHVCxTQUFTNHlCLEdBQUcxdUIsRUFBR0MsRUFBR3JmLEdBQ2hCLElBQUlDLEVBQUltZixFQUFFMk0sVUFDVixJQUFLOXJCLEVBQUcsTUFBTWduQixNQUFNNUYsRUFBRSxNQUN0QnJoQixHQUFLb2YsRUFBSXN1QixHQUFHdHVCLEVBQUdDLEVBQUc2dEIsSUFBS2p0QyxFQUFFNHRDLDBDQUE0Q3p1QixFQUFHbUIsR0FBRWEsSUFBSWIsR0FBRWdCLElBQUlELEdBQUVDLEdBQUduQyxJQUFNbUIsR0FBRWEsSUFDakdFLEdBQUVGLEdBQUdwaEIsR0FHUCxJQUFJK3RDLEdBQUt0dEMsRUFBRW0zQix5QkFDUG9XLEdBQUt2dEMsRUFBRTQzQiwwQkFDUDRWLEdBQUt4dEMsRUFBRXl0Qyx3QkFDUEMsR0FBSzF0QyxFQUFFMnRDLHNCQUNQQyxHQUFLNXRDLEVBQUU2dEMsYUFDUEMsR0FBSzl0QyxFQUFFK3RDLGlDQUNQQyxHQUFLaHVDLEVBQUVpdUMsMkJBQ1BDLEdBQUtsdUMsRUFBRTA0Qiw4QkFDUHlWLEdBQUtudUMsRUFBRTYzQix3QkFDUHVXLEdBQUtwdUMsRUFBRXF1QyxxQkFDUEMsR0FBS3R1QyxFQUFFdXVDLHNCQUNQQyxHQUFLLEdBQ0xDLEdBQUt6dUMsRUFBRTB1QyxxQkFDUEMsUUFBSyxJQUFXakIsR0FBS0EsR0FBSyxhQUMxQmtCLEdBQUssS0FDTEMsR0FBSyxLQUNMQyxJQUFLLEVBQ0xDLEdBQUtuQixLQUNMb0IsR0FBSyxJQUFNRCxHQUFLbkIsR0FBSyxXQUN2QixPQUFPQSxLQUFPbUIsSUFHaEIsU0FBU0UsS0FDUCxPQUFRbkIsTUFDTixLQUFLRSxHQUNILE9BQU8sR0FFVCxLQUFLRSxHQUNILE9BQU8sR0FFVCxLQUFLQyxHQUNILE9BQU8sR0FFVCxLQUFLQyxHQUNILE9BQU8sR0FFVCxLQUFLRSxHQUNILE9BQU8sR0FFVCxRQUNFLE1BQU05bkIsTUFBTTVGLEVBQUUsT0FJcEIsU0FBU3N1QixHQUFHdndCLEdBQ1YsT0FBUUEsR0FDTixLQUFLLEdBQ0gsT0FBT3F2QixHQUVULEtBQUssR0FDSCxPQUFPRSxHQUVULEtBQUssR0FDSCxPQUFPQyxHQUVULEtBQUssR0FDSCxPQUFPQyxHQUVULEtBQUssR0FDSCxPQUFPRSxHQUVULFFBQ0UsTUFBTTluQixNQUFNNUYsRUFBRSxPQUlwQixTQUFTdXVCLEdBQUd4d0IsRUFBR0MsR0FFYixPQURBRCxFQUFJdXdCLEdBQUd2d0IsR0FDQTJ1QixHQUFHM3VCLEVBQUdDLEdBR2YsU0FBU3d3QixHQUFHendCLEVBQUdDLEVBQUdyZixHQUVoQixPQURBb2YsRUFBSXV3QixHQUFHdndCLEdBQ0E0dUIsR0FBRzV1QixFQUFHQyxFQUFHcmYsR0FHbEIsU0FBUzh2QyxHQUFHMXdCLEdBRVYsT0FEQSxPQUFTaXdCLElBQU1BLEdBQUssQ0FBQ2p3QixHQUFJa3dCLEdBQUt0QixHQUFHUyxHQUFJc0IsS0FBT1YsR0FBRzFuQyxLQUFLeVgsR0FDN0M2dkIsR0FHVCxTQUFTZSxLQUNQLEdBQUksT0FBU1YsR0FBSSxDQUNmLElBQUlsd0IsRUFBSWt3QixHQUNSQSxHQUFLLEtBQ0xyQixHQUFHN3VCLEdBR0wyd0IsS0FHRixTQUFTQSxLQUNQLElBQUtSLElBQU0sT0FBU0YsR0FBSSxDQUN0QkUsSUFBSyxFQUNMLElBQUlud0IsRUFBSSxFQUVSLElBQ0UsSUFBSUMsRUFBSWd3QixHQUNSTyxHQUFHLElBQUksV0FDTCxLQUFPeHdCLEVBQUlDLEVBQUVyWCxPQUFRb1gsSUFBSyxDQUN4QixJQUFJcGYsRUFBSXFmLEVBQUVELEdBRVYsR0FDRXBmLEVBQUlBLEdBQUUsU0FDQyxPQUFTQSxPQUd0QnF2QyxHQUFLLEtBQ0wsTUFBT3J2QyxHQUNQLE1BQU0sT0FBU3F2QyxLQUFPQSxHQUFLQSxHQUFHN21DLE1BQU00VyxFQUFJLElBQUs0dUIsR0FBR1MsR0FBSXVCLElBQUtod0MsRUFDekQsUUFDQXV2QyxJQUFLLElBS1gsU0FBU1UsR0FBRzd3QixFQUFHQyxFQUFHcmYsR0FFaEIsT0FBTyxZQUFvRCxJQUFwQyxXQUFhb2YsRUFBSUMsRUFBSSxLQUQ1Q3JmLEdBQUssSUFDaUQsSUFBVUEsRUFHbEUsU0FBU2t3QyxHQUFHOXdCLEVBQUdDLEdBQ2IsR0FBSUQsR0FBS0EsRUFBRTFULGFBSVQsSUFBSyxJQUFJMUwsS0FIVHFmLEVBQUlqZSxFQUFFLEdBQUlpZSxHQUNWRCxFQUFJQSxFQUFFMVQsa0JBR0osSUFBVzJULEVBQUVyZixLQUFPcWYsRUFBRXJmLEdBQUtvZixFQUFFcGYsSUFJakMsT0FBT3FmLEVBR1QsSUFBSTh3QixHQUFLLENBQ1BqMUIsUUFBUyxNQUVQazFCLEdBQUssS0FDTEMsR0FBSyxLQUNMQyxHQUFLLEtBRVQsU0FBU0MsS0FDUEQsR0FBS0QsR0FBS0QsR0FBSyxLQUdqQixTQUFTSSxHQUFHcHhCLEdBQ1YsSUFBSUMsRUFBSTh3QixHQUFHajFCLFFBQ1hxRixHQUFFNHZCLElBQ0Yvd0IsRUFBRW5PLEtBQUtrWSxTQUFTSCxjQUFnQjNKLEVBR2xDLFNBQVNveEIsR0FBR3J4QixFQUFHQyxHQUNiLEtBQU8sT0FBU0QsR0FBSSxDQUNsQixJQUFJcGYsRUFBSW9mLEVBQUU2VSxVQUNWLEdBQUk3VSxFQUFFc3hCLG9CQUFzQnJ4QixFQUFHRCxFQUFFc3hCLG9CQUFzQnJ4QixFQUFHLE9BQVNyZixHQUFLQSxFQUFFMHdDLG9CQUFzQnJ4QixJQUFNcmYsRUFBRTB3QyxvQkFBc0JyeEIsT0FBUSxNQUFJLE9BQVNyZixHQUFLQSxFQUFFMHdDLG9CQUFzQnJ4QixHQUFrQyxNQUEvQnJmLEVBQUUwd0Msb0JBQXNCcnhCLEVBQzNNRCxFQUFJQSxFQUFFbVEsUUFJVixTQUFTb2hCLEdBQUd2eEIsRUFBR0MsR0FDYit3QixHQUFLaHhCLEVBQ0xreEIsR0FBS0QsR0FBSyxLQUVWLFFBREFqeEIsRUFBSUEsRUFBRW9NLGVBQ1EsT0FBU3BNLEVBQUV3eEIsZUFBaUJ4eEIsRUFBRXl4QixnQkFBa0J4eEIsSUFBTXl4QixJQUFLLEdBQUsxeEIsRUFBRXd4QixhQUFlLE1BR2pHLFNBQVNHLEdBQUczeEIsRUFBR0MsR0FDYixHQUFJaXhCLEtBQU9seEIsSUFBSyxJQUFPQyxHQUFLLElBQU1BLEVBUWhDLEdBUEksa0JBQW9CQSxHQUFLLGFBQWVBLElBQUdpeEIsR0FBS2x4QixFQUFHQyxFQUFJLFlBQzNEQSxFQUFJLENBQ0Y1VSxRQUFTMlUsRUFDVDR4QixhQUFjM3hCLEVBQ2QxRixLQUFNLE1BR0osT0FBUzAyQixHQUFJLENBQ2YsR0FBSSxPQUFTRCxHQUFJLE1BQU1ucEIsTUFBTTVGLEVBQUUsTUFDL0JndkIsR0FBS2h4QixFQUNMK3dCLEdBQUc1a0IsYUFBZSxDQUNoQnFsQixlQUFnQixFQUNoQkQsYUFBY3Z4QixFQUNkNHhCLFdBQVksV0FFVFosR0FBS0EsR0FBRzEyQixLQUFPMEYsRUFHeEIsT0FBT0QsRUFBRTRKLGNBR1gsSUFBSWtvQixJQUFLLEVBRVQsU0FBU0MsR0FBRy94QixHQUNWQSxFQUFFZ3lCLFlBQWMsQ0FDZEMsVUFBV2p5QixFQUFFZ1YsY0FDYmtkLFVBQVcsS0FDWEMsT0FBUSxDQUNOQyxRQUFTLE1BRVhDLFFBQVMsTUFJYixTQUFTQyxHQUFHdHlCLEVBQUdDLEdBQ2JELEVBQUlBLEVBQUVneUIsWUFDTi94QixFQUFFK3hCLGNBQWdCaHlCLElBQU1DLEVBQUUreEIsWUFBYyxDQUN0Q0MsVUFBV2p5QixFQUFFaXlCLFVBQ2JDLFVBQVdseUIsRUFBRWt5QixVQUNiQyxPQUFRbnlCLEVBQUVteUIsT0FDVkUsUUFBU3J5QixFQUFFcXlCLFVBSWYsU0FBU0UsR0FBR3Z5QixFQUFHQyxHQVNiLE9BUkFELEVBQUksQ0FDRnl4QixlQUFnQnp4QixFQUNoQnd5QixlQUFnQnZ5QixFQUNoQnBXLElBQUssRUFDTGlJLFFBQVMsS0FDVDJnQyxTQUFVLEtBQ1ZsNEIsS0FBTSxPQUVDQSxLQUFPeUYsRUFHbEIsU0FBUzB5QixHQUFHMXlCLEVBQUdDLEdBR2IsR0FBSSxRQUZKRCxFQUFJQSxFQUFFZ3lCLGFBRVUsQ0FFZCxJQUFJcHhDLEdBREpvZixFQUFJQSxFQUFFbXlCLFFBQ0lDLFFBQ1YsT0FBU3h4QyxFQUFJcWYsRUFBRTFGLEtBQU8wRixHQUFLQSxFQUFFMUYsS0FBTzNaLEVBQUUyWixLQUFNM1osRUFBRTJaLEtBQU8wRixHQUNyREQsRUFBRW95QixRQUFVbnlCLEdBSWhCLFNBQVMweUIsR0FBRzN5QixFQUFHQyxHQUNiLElBQUlyZixFQUFJb2YsRUFBRTZVLFVBQ1YsT0FBU2owQixHQUFLMHhDLEdBQUcxeEMsRUFBR29mLEdBR3BCLFFBREFwZixHQURBb2YsRUFBSUEsRUFBRWd5QixhQUNBRSxZQUNRbHlCLEVBQUVreUIsVUFBWWp5QixFQUFFMUYsS0FBTzBGLEVBQUdBLEVBQUUxRixLQUFPMEYsSUFBTUEsRUFBRTFGLEtBQU8zWixFQUFFMlosS0FBTTNaLEVBQUUyWixLQUFPMEYsR0FHbkYsU0FBUzJ5QixHQUFHNXlCLEVBQUdDLEVBQUdyZixFQUFHQyxHQUNuQixJQUFJd1UsRUFBSTJLLEVBQUVneUIsWUFDVkYsSUFBSyxFQUNMLElBQUkxdkIsRUFBSS9NLEVBQUU2OEIsVUFDTjd3QixFQUFJaE0sRUFBRTg4QixPQUFPQyxRQUVqQixHQUFJLE9BQVMvd0IsRUFBRyxDQUNkLEdBQUksT0FBU2UsRUFBRyxDQUNkLElBQUlwTCxFQUFJb0wsRUFBRTdILEtBQ1Y2SCxFQUFFN0gsS0FBTzhHLEVBQUU5RyxLQUNYOEcsRUFBRTlHLEtBQU92RCxFQUdYb0wsRUFBSWYsRUFDSmhNLEVBQUU4OEIsT0FBT0MsUUFBVSxLQUVuQixRQURBcDdCLEVBQUlnSixFQUFFNlUsYUFDNEIsUUFBbkI3ZCxFQUFJQSxFQUFFZzdCLGVBQTRCaDdCLEVBQUVrN0IsVUFBWTd3QixJQUdqRSxHQUFJLE9BQVNlLEVBQUcsQ0FDZHBMLEVBQUlvTCxFQUFFN0gsS0FDTixJQUFJeEQsRUFBSTFCLEVBQUU0OEIsVUFDTnp4QyxFQUFJLEVBQ0pHLEVBQUksS0FDSjBCLEVBQUksS0FDSm9VLEVBQUksS0FFUixHQUFJLE9BQVNPLEVBR1gsSUFGQSxJQUFJNEssRUFBSTVLLElBRUwsQ0FHRCxJQUZBcUssRUFBSU8sRUFBRTZ2QixnQkFFRTV3QyxFQUFHLENBQ1QsSUFBSTBoQixFQUFLLENBQ1BrdkIsZUFBZ0I3dkIsRUFBRTZ2QixlQUNsQmUsZUFBZ0I1d0IsRUFBRTR3QixlQUNsQjNvQyxJQUFLK1gsRUFBRS9YLElBQ1BpSSxRQUFTOFAsRUFBRTlQLFFBQ1gyZ0MsU0FBVTd3QixFQUFFNndCLFNBQ1psNEIsS0FBTSxNQUVSLE9BQVM5RCxHQUFLcFUsRUFBSW9VLEVBQUk4TCxFQUFJNWhCLEVBQUlvVyxHQUFLTixFQUFJQSxFQUFFOEQsS0FBT2dJLEVBQ2hEbEIsRUFBSTdnQixJQUFNQSxFQUFJNmdCLE9BQ1QsQ0FDTCxPQUFTNUssSUFBTUEsRUFBSUEsRUFBRThELEtBQU8sQ0FDMUJrM0IsZUFBZ0IsV0FDaEJlLGVBQWdCNXdCLEVBQUU0d0IsZUFDbEIzb0MsSUFBSytYLEVBQUUvWCxJQUNQaUksUUFBUzhQLEVBQUU5UCxRQUNYMmdDLFNBQVU3d0IsRUFBRTZ3QixTQUNabDRCLEtBQU0sT0FFUnM0QixHQUFHeHhCLEVBQUdPLEVBQUU0d0IsZ0JBRVJ4eUIsRUFBRyxDQUNELElBQUkyQixFQUFJM0IsRUFDSnZlLEVBQUltZ0IsRUFJUixPQUhBUCxFQUFJcEIsRUFDSnNDLEVBQUszaEIsRUFFR2EsRUFBRW9JLEtBQ1IsS0FBSyxFQUdILEdBQUksb0JBRko4WCxFQUFJbGdCLEVBQUVxUSxTQUV1QixDQUMzQmlGLEVBQUk0SyxFQUFFamhCLEtBQUs2aEIsRUFBSXhMLEVBQUdzSyxHQUNsQixNQUFNckIsRUFHUmpKLEVBQUk0SyxFQUNKLE1BQU0zQixFQUVSLEtBQUssRUFDSDJCLEVBQUVtVCxXQUEyQixLQUFmblQsRUFBRW1ULFVBQW9CLEdBRXRDLEtBQUssRUFHSCxHQUFJLFFBREp6VCxFQUFJLG9CQURKTSxFQUFJbGdCLEVBQUVxUSxTQUN3QjZQLEVBQUVqaEIsS0FBSzZoQixFQUFJeEwsRUFBR3NLLEdBQUtNLFNBQy9CLElBQVdOLEVBQUcsTUFBTXJCLEVBQ3RDakosRUFBSS9VLEVBQUUsR0FBSStVLEVBQUdzSyxHQUNiLE1BQU1yQixFQUVSLEtBQUssRUFDSDh4QixJQUFLLEdBSVgsT0FBU2x3QixFQUFFNndCLFdBQWF6eUIsRUFBRThVLFdBQWEsR0FBbUIsUUFBZnpULEVBQUloTSxFQUFFZzlCLFNBQXNCaDlCLEVBQUVnOUIsUUFBVSxDQUFDendCLEdBQUtQLEVBQUU5WSxLQUFLcVosSUFJbEcsR0FBSSxRQURKQSxFQUFJQSxFQUFFckgsT0FDWXFILElBQU01SyxFQUFHLElBQTBCLFFBQXRCcUssRUFBSWhNLEVBQUU4OEIsT0FBT0MsU0FBcUIsTUFBV3h3QixFQUFJUSxFQUFFN0gsS0FBTzhHLEVBQUU5RyxLQUFNOEcsRUFBRTlHLEtBQU92RCxFQUFHM0IsRUFBRTY4QixVQUFZOXZCLEVBQUlmLEVBQUdoTSxFQUFFODhCLE9BQU9DLFFBQVUsTUFJekosT0FBUzM3QixFQUFJOVYsRUFBSW9XLEVBQUlOLEVBQUU4RCxLQUFPbFksRUFDOUJnVCxFQUFFNDhCLFVBQVl0eEMsRUFDZDBVLEVBQUU2OEIsVUFBWXo3QixFQUNkcThCLEdBQUd0eUMsR0FDSHdmLEVBQUV5eEIsZUFBaUJqeEMsRUFDbkJ3ZixFQUFFZ1YsY0FBZ0JqZSxHQUl0QixTQUFTZzhCLEdBQUcveUIsRUFBR0MsRUFBR3JmLEdBR2hCLEdBRkFvZixFQUFJQyxFQUFFb3lCLFFBQ05weUIsRUFBRW95QixRQUFVLEtBQ1IsT0FBU3J5QixFQUFHLElBQUtDLEVBQUksRUFBR0EsRUFBSUQsRUFBRXBYLE9BQVFxWCxJQUFLLENBQzdDLElBQUlwZixFQUFJbWYsRUFBRUMsR0FDTjVLLEVBQUl4VSxFQUFFNHhDLFNBRVYsR0FBSSxPQUFTcDlCLEVBQUcsQ0FJZCxHQUhBeFUsRUFBRTR4QyxTQUFXLEtBQ2I1eEMsRUFBSXdVLEVBQ0pBLEVBQUl6VSxFQUNBLG9CQUFzQkMsRUFBRyxNQUFNZ25CLE1BQU01RixFQUFFLElBQUtwaEIsSUFDaERBLEVBQUVILEtBQUsyVSxLQUtiLElBQUkyOUIsR0FBSzVrQixFQUFHekYsd0JBQ1JzcUIsSUFBSyxJQUFJdnlCLEVBQUd3SSxXQUFZekIsS0FFNUIsU0FBU3lyQixHQUFHbHpCLEVBQUdDLEVBQUdyZixFQUFHQyxHQUduQkQsRUFBSSxRQURKQSxFQUFJQSxFQUFFQyxFQUROb2YsRUFBSUQsRUFBRWdWLHNCQUVZLElBQVdwMEIsRUFBSXFmLEVBQUlqZSxFQUFFLEdBQUlpZSxFQUFHcmYsR0FDOUNvZixFQUFFZ1YsY0FBZ0JwMEIsRUFDbEIsSUFBTW9mLEVBQUV5eEIsaUJBQW1CenhCLEVBQUVneUIsWUFBWUMsVUFBWXJ4QyxHQUd2RCxJQUFJdXlDLEdBQUssQ0FDUDlyQixVQUFXLFNBQW1CckgsR0FDNUIsU0FBUUEsRUFBSUEsRUFBRW96QixzQkFBdUJ4ZSxHQUFHNVUsS0FBT0EsR0FFakR3SCxnQkFBaUIsU0FBeUJ4SCxFQUFHQyxFQUFHcmYsR0FDOUNvZixFQUFJQSxFQUFFb3pCLG9CQUNOLElBQUl2eUMsRUFBSXd5QyxLQUNKaCtCLEVBQUkyOUIsR0FBR3BxQixVQUVYdlQsRUFBSWs5QixHQURKMXhDLEVBQUl5eUMsR0FBR3p5QyxFQUFHbWYsRUFBRzNLLEdBQ0hBLElBQ1J2RCxRQUFVbU8sT0FDWixJQUFXcmYsR0FBSyxPQUFTQSxJQUFNeVUsRUFBRW85QixTQUFXN3hDLEdBQzVDOHhDLEdBQUcxeUIsRUFBRzNLLEdBQ05rK0IsR0FBR3Z6QixFQUFHbmYsSUFFUjBtQixvQkFBcUIsU0FBNkJ2SCxFQUFHQyxFQUFHcmYsR0FDdERvZixFQUFJQSxFQUFFb3pCLG9CQUNOLElBQUl2eUMsRUFBSXd5QyxLQUNKaCtCLEVBQUkyOUIsR0FBR3BxQixVQUVYdlQsRUFBSWs5QixHQURKMXhDLEVBQUl5eUMsR0FBR3p5QyxFQUFHbWYsRUFBRzNLLEdBQ0hBLElBQ1J4TCxJQUFNLEVBQ1J3TCxFQUFFdkQsUUFBVW1PLE9BQ1osSUFBV3JmLEdBQUssT0FBU0EsSUFBTXlVLEVBQUVvOUIsU0FBVzd4QyxHQUM1Qzh4QyxHQUFHMXlCLEVBQUczSyxHQUNOaytCLEdBQUd2ekIsRUFBR25mLElBRVJ5bUIsbUJBQW9CLFNBQTRCdEgsRUFBR0MsR0FDakRELEVBQUlBLEVBQUVvekIsb0JBQ04sSUFBSXh5QyxFQUFJeXlDLEtBQ0p4eUMsRUFBSW15QyxHQUFHcHFCLFVBRVgvbkIsRUFBSTB4QyxHQURKM3hDLEVBQUkweUMsR0FBRzF5QyxFQUFHb2YsRUFBR25mLEdBQ0hBLElBQ1JnSixJQUFNLE9BQ1IsSUFBV29XLEdBQUssT0FBU0EsSUFBTXBmLEVBQUU0eEMsU0FBV3h5QixHQUM1Q3l5QixHQUFHMXlCLEVBQUduZixHQUNOMHlDLEdBQUd2ekIsRUFBR3BmLEtBSVYsU0FBUzR5QyxHQUFHeHpCLEVBQUdDLEVBQUdyZixFQUFHQyxFQUFHd1UsRUFBRytNLEVBQUdmLEdBRTVCLE1BQU8sb0JBRFByQixFQUFJQSxFQUFFMk0sV0FDeUI4bUIsc0JBQXdCenpCLEVBQUV5ekIsc0JBQXNCNXlDLEVBQUd1aEIsRUFBR2YsSUFBS3BCLEVBQUU5ZCxZQUFhOGQsRUFBRTlkLFVBQVU0bEIsd0JBQXdCc2YsR0FBR3ptQyxFQUFHQyxLQUFPd21DLEdBQUdoeUIsRUFBRytNLElBR2xLLFNBQVNzeEIsR0FBRzF6QixFQUFHQyxFQUFHcmYsR0FDaEIsSUFBSUMsR0FBSSxFQUNKd1UsRUFBSXc0QixHQUNKenJCLEVBQUluQyxFQUFFMHpCLFlBUVYsTUFQQSxrQkFBb0J2eEIsR0FBSyxPQUFTQSxFQUFJQSxFQUFJdXZCLEdBQUd2dkIsSUFBTS9NLEVBQUltTCxHQUFFUCxHQUFLNnRCLEdBQUszckIsR0FBRXJHLFFBQTZCc0csR0FBS3ZoQixFQUFJLFFBQTdCQSxFQUFJb2YsRUFBRSt0QixvQkFBcUMsSUFBV250QyxHQUFLa3RDLEdBQUcvdEIsRUFBRzNLLEdBQUt3NEIsSUFDcEo1dEIsRUFBSSxJQUFJQSxFQUFFcmYsRUFBR3doQixHQUNicEMsRUFBRWdWLGNBQWdCLE9BQVMvVSxFQUFFMnpCLFlBQVMsSUFBVzN6QixFQUFFMnpCLE1BQVEzekIsRUFBRTJ6QixNQUFRLEtBQ3JFM3pCLEVBQUV5SCxRQUFVeXJCLEdBQ1puekIsRUFBRTJNLFVBQVkxTSxFQUNkQSxFQUFFbXpCLG9CQUFzQnB6QixFQUN4Qm5mLEtBQU1tZixFQUFJQSxFQUFFMk0sV0FBYXNoQiw0Q0FBOEM1NEIsRUFBRzJLLEVBQUVrdUIsMENBQTRDOXJCLEdBQ2pIbkMsRUFHVCxTQUFTNHpCLEdBQUc3ekIsRUFBR0MsRUFBR3JmLEVBQUdDLEdBQ25CbWYsRUFBSUMsRUFBRTJ6QixNQUNOLG9CQUFzQjN6QixFQUFFNnpCLDJCQUE2Qjd6QixFQUFFNnpCLDBCQUEwQmx6QyxFQUFHQyxHQUNwRixvQkFBc0JvZixFQUFFOHpCLGtDQUFvQzl6QixFQUFFOHpCLGlDQUFpQ256QyxFQUFHQyxHQUNsR29mLEVBQUUyekIsUUFBVTV6QixHQUFLbXpCLEdBQUc1ckIsb0JBQW9CdEgsRUFBR0EsRUFBRTJ6QixNQUFPLE1BR3RELFNBQVNJLEdBQUdoMEIsRUFBR0MsRUFBR3JmLEVBQUdDLEdBQ25CLElBQUl3VSxFQUFJMkssRUFBRTJNLFVBQ1Z0WCxFQUFFakssTUFBUXhLLEVBQ1Z5VSxFQUFFdStCLE1BQVE1ekIsRUFBRWdWLGNBQ1ozZixFQUFFb1MsS0FBT3dyQixHQUNUbEIsR0FBRy94QixHQUNILElBQUlvQyxFQUFJbkMsRUFBRTB6QixZQUNWLGtCQUFvQnZ4QixHQUFLLE9BQVNBLEVBQUkvTSxFQUFFaEssUUFBVXNtQyxHQUFHdnZCLElBQU1BLEVBQUk1QixHQUFFUCxHQUFLNnRCLEdBQUszckIsR0FBRXJHLFFBQVN6RyxFQUFFaEssUUFBVTBpQyxHQUFHL3RCLEVBQUdvQyxJQUN4R3d3QixHQUFHNXlCLEVBQUdwZixFQUFHeVUsRUFBR3hVLEdBQ1p3VSxFQUFFdStCLE1BQVE1ekIsRUFBRWdWLGNBRVosb0JBREE1UyxFQUFJbkMsRUFBRWcwQiw0QkFDc0JmLEdBQUdsekIsRUFBR0MsRUFBR21DLEVBQUd4aEIsR0FBSXlVLEVBQUV1K0IsTUFBUTV6QixFQUFFZ1YsZUFDeEQsb0JBQXNCL1UsRUFBRWcwQiwwQkFBNEIsb0JBQXNCNStCLEVBQUU2K0IseUJBQTJCLG9CQUFzQjcrQixFQUFFOCtCLDJCQUE2QixvQkFBc0I5K0IsRUFBRSsrQixxQkFBdUJuMEIsRUFBSTVLLEVBQUV1K0IsTUFBTyxvQkFBc0J2K0IsRUFBRSsrQixvQkFBc0IvK0IsRUFBRSsrQixxQkFBc0Isb0JBQXNCLytCLEVBQUU4K0IsMkJBQTZCOStCLEVBQUU4K0IsNEJBQTZCbDBCLElBQU01SyxFQUFFdStCLE9BQVNULEdBQUc1ckIsb0JBQW9CbFMsRUFBR0EsRUFBRXUrQixNQUFPLE1BQU9oQixHQUFHNXlCLEVBQUdwZixFQUFHeVUsRUFBR3hVLEdBQUl3VSxFQUFFdStCLE1BQVE1ekIsRUFBRWdWLGVBQ3pjLG9CQUFzQjNmLEVBQUVnL0Isb0JBQXNCcjBCLEVBQUU4VSxXQUFhLEdBRy9ELElBQUl3ZixHQUFLaGhDLE1BQU1DLFFBRWYsU0FBU2doQyxHQUFHdjBCLEVBQUdDLEVBQUdyZixHQUdoQixHQUFJLFFBRkpvZixFQUFJcGYsRUFBRTBLLE1BRVksb0JBQXNCMFUsR0FBSyxrQkFBb0JBLEVBQUcsQ0FDbEUsR0FBSXBmLEVBQUV1bkIsT0FBUSxDQUdaLEdBRkF2bkIsRUFBSUEsRUFBRXVuQixPQUVDLENBQ0wsR0FBSSxJQUFNdm5CLEVBQUVpSixJQUFLLE1BQU1nZSxNQUFNNUYsRUFBRSxNQUMvQixJQUFJcGhCLEVBQUlELEVBQUUrckIsVUFHWixJQUFLOXJCLEVBQUcsTUFBTWduQixNQUFNNUYsRUFBRSxJQUFLakMsSUFDM0IsSUFBSTNLLEVBQUksR0FBSzJLLEVBQ2IsT0FBSSxPQUFTQyxHQUFLLE9BQVNBLEVBQUUzVSxLQUFPLG9CQUFzQjJVLEVBQUUzVSxLQUFPMlUsRUFBRTNVLElBQUlrcEMsYUFBZW4vQixFQUFVNEssRUFBRTNVLE1BRXBHMlUsRUFBSSxTQUFXRCxHQUNiLElBQUlDLEVBQUlwZixFQUFFNG1CLEtBQ1Z4SCxJQUFNZ3pCLEtBQU9oekIsRUFBSXBmLEVBQUU0bUIsS0FBTyxJQUMxQixPQUFTekgsU0FBV0MsRUFBRTVLLEdBQUs0SyxFQUFFNUssR0FBSzJLLElBR2xDdzBCLFdBQWFuL0IsRUFDUjRLLEdBR1QsR0FBSSxrQkFBb0JELEVBQUcsTUFBTTZILE1BQU01RixFQUFFLE1BQ3pDLElBQUtyaEIsRUFBRXVuQixPQUFRLE1BQU1OLE1BQU01RixFQUFFLElBQUtqQyxJQUdwQyxPQUFPQSxFQUdULFNBQVN5MEIsR0FBR3owQixFQUFHQyxHQUNiLEdBQUksYUFBZUQsRUFBRW5PLEtBQU0sTUFBTWdXLE1BQU01RixFQUFFLEdBQUksb0JBQXNCaGhCLE9BQU9rQixVQUFVaVQsU0FBUzFVLEtBQUt1ZixHQUFLLHFCQUF1QmhmLE9BQU9nSCxLQUFLZ1ksR0FBR3dDLEtBQUssTUFBUSxJQUFNeEMsRUFBRyxLQUdySyxTQUFTeTBCLEdBQUcxMEIsR0FDVixTQUFTQyxFQUFFQSxFQUFHcmYsR0FDWixHQUFJb2YsRUFBRyxDQUNMLElBQUluZixFQUFJb2YsRUFBRTAwQixXQUNWLE9BQVM5ekMsR0FBS0EsRUFBRSt6QyxXQUFhaDBDLEVBQUdxZixFQUFFMDBCLFdBQWEvekMsR0FBS3FmLEVBQUU0MEIsWUFBYzUwQixFQUFFMDBCLFdBQWEvekMsRUFDbkZBLEVBQUVnMEMsV0FBYSxLQUNmaDBDLEVBQUVrMEIsVUFBWSxHQUlsQixTQUFTbDBCLEVBQUVBLEVBQUdDLEdBQ1osSUFBS21mLEVBQUcsT0FBTyxLQUVmLEtBQU8sT0FBU25mLEdBQ2RvZixFQUFFcmYsRUFBR0MsR0FBSUEsRUFBSUEsRUFBRXcwQixRQUdqQixPQUFPLEtBR1QsU0FBU3gwQixFQUFFbWYsRUFBR0MsR0FDWixJQUFLRCxFQUFJLElBQUkwVSxJQUFPLE9BQVN6VSxHQUMzQixPQUFTQSxFQUFFbmUsSUFBTWtlLEVBQUVrRCxJQUFJakQsRUFBRW5lLElBQUttZSxHQUFLRCxFQUFFa0QsSUFBSWpELEVBQUU2MEIsTUFBTzcwQixHQUFJQSxFQUFJQSxFQUFFb1YsUUFHOUQsT0FBT3JWLEVBR1QsU0FBUzNLLEVBQUUySyxFQUFHQyxHQUlaLE9BSEFELEVBQUkrMEIsR0FBRy8wQixFQUFHQyxJQUNSNjBCLE1BQVEsRUFDVjkwQixFQUFFcVYsUUFBVSxLQUNMclYsRUFHVCxTQUFTb0MsRUFBRW5DLEVBQUdyZixFQUFHQyxHQUVmLE9BREFvZixFQUFFNjBCLE1BQVFqMEMsRUFDTG1mLEVBRUQsUUFESm5mLEVBQUlvZixFQUFFNFUsWUFDaUJoMEIsRUFBSUEsRUFBRWkwQyxPQUFXbDBDLEdBQUtxZixFQUFFNlUsVUFBWSxFQUFHbDBCLEdBQUtDLEdBQ25Fb2YsRUFBRTZVLFVBQVksRUFDUGwwQixHQUpRQSxFQU9qQixTQUFTeWdCLEVBQUVwQixHQUVULE9BREFELEdBQUssT0FBU0MsRUFBRTRVLFlBQWM1VSxFQUFFNlUsVUFBWSxHQUNyQzdVLEVBR1QsU0FBU2pKLEVBQUVnSixFQUFHQyxFQUFHcmYsRUFBR0MsR0FDbEIsT0FBSSxPQUFTb2YsR0FBSyxJQUFNQSxFQUFFcFcsTUFBWW9XLEVBQUkrMEIsR0FBR3AwQyxFQUFHb2YsRUFBRXRlLEtBQU1iLElBQU1zdkIsT0FBU25RLEVBQUdDLEtBQzFFQSxFQUFJNUssRUFBRTRLLEVBQUdyZixJQUNQdXZCLE9BQVNuUSxFQUNKQyxHQUdULFNBQVNsSixFQUFFaUosRUFBR0MsRUFBR3JmLEVBQUdDLEdBQ2xCLE9BQUksT0FBU29mLEdBQUtBLEVBQUVnMUIsY0FBZ0JyMEMsRUFBRWlSLE9BQWFoUixFQUFJd1UsRUFBRTRLLEVBQUdyZixFQUFFd0ssUUFBVUUsSUFBTWlwQyxHQUFHdjBCLEVBQUdDLEVBQUdyZixHQUFJQyxFQUFFc3ZCLE9BQVNuUSxFQUFHbmYsS0FDekdBLEVBQUlxMEMsR0FBR3QwQyxFQUFFaVIsS0FBTWpSLEVBQUVrQixJQUFLbEIsRUFBRXdLLE1BQU8sS0FBTTRVLEVBQUV0ZSxLQUFNYixJQUMzQ3lLLElBQU1pcEMsR0FBR3YwQixFQUFHQyxFQUFHcmYsR0FDakJDLEVBQUVzdkIsT0FBU25RLEVBQ0puZixHQUdULFNBQVNMLEVBQUV3ZixFQUFHQyxFQUFHcmYsRUFBR0MsR0FDbEIsT0FBSSxPQUFTb2YsR0FBSyxJQUFNQSxFQUFFcFcsS0FBT29XLEVBQUUwTSxVQUFVbUssZ0JBQWtCbDJCLEVBQUVrMkIsZUFBaUI3VyxFQUFFME0sVUFBVXdvQixpQkFBbUJ2MEMsRUFBRXUwQyxpQkFBdUJsMUIsRUFBSW0xQixHQUFHeDBDLEVBQUdvZixFQUFFdGUsS0FBTWIsSUFBTXN2QixPQUFTblEsRUFBR0MsS0FDOUtBLEVBQUk1SyxFQUFFNEssRUFBR3JmLEVBQUVpbEIsVUFBWSxLQUNyQnNLLE9BQVNuUSxFQUNKQyxHQUdULFNBQVN0ZixFQUFFcWYsRUFBR0MsRUFBR3JmLEVBQUdDLEVBQUd1aEIsR0FDckIsT0FBSSxPQUFTbkMsR0FBSyxJQUFNQSxFQUFFcFcsTUFBWW9XLEVBQUlvMUIsR0FBR3owQyxFQUFHb2YsRUFBRXRlLEtBQU1iLEVBQUd1aEIsSUFBTStOLE9BQVNuUSxFQUFHQyxLQUM3RUEsRUFBSTVLLEVBQUU0SyxFQUFHcmYsSUFDUHV2QixPQUFTblEsRUFDSkMsR0FHVCxTQUFTNWQsRUFBRTJkLEVBQUdDLEVBQUdyZixHQUNmLEdBQUksa0JBQW9CcWYsR0FBSyxrQkFBb0JBLEVBQUcsT0FBT0EsRUFBSSswQixHQUFHLEdBQUsvMEIsRUFBR0QsRUFBRXRlLEtBQU1kLElBQU11dkIsT0FBU25RLEVBQUdDLEVBRXBHLEdBQUksa0JBQW9CQSxHQUFLLE9BQVNBLEVBQUcsQ0FDdkMsT0FBUUEsRUFBRWlJLFVBQ1IsS0FBSzJHLEdBQ0gsT0FBT2p1QixFQUFJczBDLEdBQUdqMUIsRUFBRXBPLEtBQU1vTyxFQUFFbmUsSUFBS21lLEVBQUU3VSxNQUFPLEtBQU00VSxFQUFFdGUsS0FBTWQsSUFBTTBLLElBQU1pcEMsR0FBR3YwQixFQUFHLEtBQU1DLEdBQUlyZixFQUFFdXZCLE9BQVNuUSxFQUFHcGYsRUFFaEcsS0FBS2t1QixHQUNILE9BQU83TyxFQUFJbTFCLEdBQUduMUIsRUFBR0QsRUFBRXRlLEtBQU1kLElBQU11dkIsT0FBU25RLEVBQUdDLEVBRy9DLEdBQUlxMEIsR0FBR3IwQixJQUFNMlAsR0FBRzNQLEdBQUksT0FBT0EsRUFBSW8xQixHQUFHcDFCLEVBQUdELEVBQUV0ZSxLQUFNZCxFQUFHLE9BQVN1dkIsT0FBU25RLEVBQUdDLEVBQ3JFdzBCLEdBQUd6MEIsRUFBR0MsR0FHUixPQUFPLEtBR1QsU0FBU3hKLEVBQUV1SixFQUFHQyxFQUFHcmYsRUFBR0MsR0FDbEIsSUFBSXdVLEVBQUksT0FBUzRLLEVBQUlBLEVBQUVuZSxJQUFNLEtBQzdCLEdBQUksa0JBQW9CbEIsR0FBSyxrQkFBb0JBLEVBQUcsT0FBTyxPQUFTeVUsRUFBSSxLQUFPMkIsRUFBRWdKLEVBQUdDLEVBQUcsR0FBS3JmLEVBQUdDLEdBRS9GLEdBQUksa0JBQW9CRCxHQUFLLE9BQVNBLEVBQUcsQ0FDdkMsT0FBUUEsRUFBRXNuQixVQUNSLEtBQUsyRyxHQUNILE9BQU9qdUIsRUFBRWtCLE1BQVF1VCxFQUFJelUsRUFBRWlSLE9BQVNrZCxHQUFLcHVCLEVBQUVxZixFQUFHQyxFQUFHcmYsRUFBRXdLLE1BQU15YSxTQUFVaGxCLEVBQUd3VSxHQUFLMEIsRUFBRWlKLEVBQUdDLEVBQUdyZixFQUFHQyxHQUFLLEtBRXpGLEtBQUtpdUIsR0FDSCxPQUFPbHVCLEVBQUVrQixNQUFRdVQsRUFBSTdVLEVBQUV3ZixFQUFHQyxFQUFHcmYsRUFBR0MsR0FBSyxLQUd6QyxHQUFJeXpDLEdBQUcxekMsSUFBTWd2QixHQUFHaHZCLEdBQUksT0FBTyxPQUFTeVUsRUFBSSxLQUFPMVUsRUFBRXFmLEVBQUdDLEVBQUdyZixFQUFHQyxFQUFHLE1BQzdENHpDLEdBQUd6MEIsRUFBR3BmLEdBR1IsT0FBTyxLQUdULFNBQVNnaEIsRUFBRTVCLEVBQUdDLEVBQUdyZixFQUFHQyxFQUFHd1UsR0FDckIsR0FBSSxrQkFBb0J4VSxHQUFLLGtCQUFvQkEsRUFBRyxPQUE2Qm1XLEVBQUVpSixFQUF4QkQsRUFBSUEsRUFBRTVlLElBQUlSLElBQU0sS0FBYyxHQUFLQyxFQUFHd1UsR0FFakcsR0FBSSxrQkFBb0J4VSxHQUFLLE9BQVNBLEVBQUcsQ0FDdkMsT0FBUUEsRUFBRXFuQixVQUNSLEtBQUsyRyxHQUNILE9BQU83TyxFQUFJQSxFQUFFNWUsSUFBSSxPQUFTUCxFQUFFaUIsSUFBTWxCLEVBQUlDLEVBQUVpQixNQUFRLEtBQU1qQixFQUFFZ1IsT0FBU2tkLEdBQUtwdUIsRUFBRXNmLEVBQUdELEVBQUduZixFQUFFdUssTUFBTXlhLFNBQVV4USxFQUFHeFUsRUFBRWlCLEtBQU9pVixFQUFFa0osRUFBR0QsRUFBR25mLEVBQUd3VSxHQUV6SCxLQUFLeVosR0FDSCxPQUFzRHR1QixFQUFFeWYsRUFBakRELEVBQUlBLEVBQUU1ZSxJQUFJLE9BQVNQLEVBQUVpQixJQUFNbEIsRUFBSUMsRUFBRWlCLE1BQVEsS0FBY2pCLEVBQUd3VSxHQUdyRSxHQUFJaS9CLEdBQUd6ekMsSUFBTSt1QixHQUFHL3VCLEdBQUksT0FBNkJGLEVBQUVzZixFQUF4QkQsRUFBSUEsRUFBRTVlLElBQUlSLElBQU0sS0FBY0MsRUFBR3dVLEVBQUcsTUFDL0RvL0IsR0FBR3gwQixFQUFHcGYsR0FHUixPQUFPLEtBR1QsU0FBUzBoQixFQUFHbE4sRUFBR2dNLEVBQUdySyxFQUFHRCxHQUNuQixJQUFLLElBQUl2VyxFQUFJLEtBQU1pQixFQUFJLEtBQU1kLEVBQUkwZ0IsRUFBR1MsRUFBSVQsRUFBSSxFQUFHQyxFQUFJLEtBQU0sT0FBUzNnQixHQUFLbWhCLEVBQUk5SyxFQUFFcE8sT0FBUWtaLElBQUssQ0FDeEZuaEIsRUFBRW0wQyxNQUFRaHpCLEdBQUtSLEVBQUkzZ0IsRUFBR0EsRUFBSSxNQUFRMmdCLEVBQUkzZ0IsRUFBRTAwQixRQUN4QyxJQUFJalUsRUFBSTNLLEVBQUVwQixFQUFHMVUsRUFBR3FXLEVBQUU4SyxHQUFJL0ssR0FFdEIsR0FBSSxPQUFTcUssRUFBRyxDQUNkLE9BQVN6Z0IsSUFBTUEsRUFBSTJnQixHQUNuQixNQUdGdEIsR0FBS3JmLEdBQUssT0FBU3lnQixFQUFFeVQsV0FBYTVVLEVBQUU1SyxFQUFHMVUsR0FDdkMwZ0IsRUFBSWUsRUFBRWhCLEVBQUdDLEVBQUdTLEdBQ1osT0FBU3JnQixFQUFJakIsRUFBSTRnQixFQUFJM2YsRUFBRTR6QixRQUFValUsRUFDakMzZixFQUFJMmYsRUFDSnpnQixFQUFJMmdCLEVBR04sR0FBSVEsSUFBTTlLLEVBQUVwTyxPQUFRLE9BQU9oSSxFQUFFeVUsRUFBRzFVLEdBQUlILEVBRXBDLEdBQUksT0FBU0csRUFBRyxDQUNkLEtBQU9taEIsRUFBSTlLLEVBQUVwTyxPQUFRa1osSUFDQSxRQUFuQm5oQixFQUFJMEIsRUFBRWdULEVBQUcyQixFQUFFOEssR0FBSS9LLE1BQW1Cc0ssRUFBSWUsRUFBRXpoQixFQUFHMGdCLEVBQUdTLEdBQUksT0FBU3JnQixFQUFJakIsRUFBSUcsRUFBSWMsRUFBRTR6QixRQUFVMTBCLEVBQUdjLEVBQUlkLEdBRzVGLE9BQU9ILEVBR1QsSUFBS0csRUFBSUUsRUFBRXdVLEVBQUcxVSxHQUFJbWhCLEVBQUk5SyxFQUFFcE8sT0FBUWtaLElBQ0wsUUFBekJSLEVBQUlNLEVBQUVqaEIsRUFBRzBVLEVBQUd5TSxFQUFHOUssRUFBRThLLEdBQUkvSyxNQUFtQmlKLEdBQUssT0FBU3NCLEVBQUV1VCxXQUFhbDBCLEVBQUV3M0IsT0FBTyxPQUFTN1csRUFBRXhmLElBQU1nZ0IsRUFBSVIsRUFBRXhmLEtBQU11ZixFQUFJZSxFQUFFZCxFQUFHRCxFQUFHUyxHQUFJLE9BQVNyZ0IsRUFBSWpCLEVBQUk4Z0IsRUFBSTdmLEVBQUU0ekIsUUFBVS9ULEVBQUc3ZixFQUFJNmYsR0FNckssT0FIQXRCLEdBQUtyZixFQUFFbUksU0FBUSxTQUFVa1gsR0FDdkIsT0FBT0MsRUFBRTVLLEVBQUcySyxNQUVQeGYsRUFHVCxTQUFTbWhCLEVBQUV0TSxFQUFHZ00sRUFBR3JLLEVBQUd4VyxHQUNsQixJQUFJdVcsRUFBSTZZLEdBQUc1WSxHQUNYLEdBQUksb0JBQXNCRCxFQUFHLE1BQU04USxNQUFNNUYsRUFBRSxNQUUzQyxHQUFJLE9BREpqTCxFQUFJRCxFQUFFclcsS0FBS3NXLElBQ0ksTUFBTTZRLE1BQU01RixFQUFFLE1BRTdCLElBQUssSUFBSXRoQixFQUFJb1csRUFBSSxLQUFNdFYsRUFBSTRmLEVBQUdTLEVBQUlULEVBQUksRUFBR0MsRUFBSSxLQUFNRixFQUFJcEssRUFBRXVELE9BQVEsT0FBUzlZLElBQU0yZixFQUFFb0gsS0FBTTFHLElBQUtWLEVBQUlwSyxFQUFFdUQsT0FBUSxDQUN6RzlZLEVBQUVxekMsTUFBUWh6QixHQUFLUixFQUFJN2YsRUFBR0EsRUFBSSxNQUFRNmYsRUFBSTdmLEVBQUU0ekIsUUFDeEMsSUFBSTFULEVBQUlsTCxFQUFFcEIsRUFBRzVULEVBQUcyZixFQUFFNWYsTUFBT2hCLEdBRXpCLEdBQUksT0FBU21oQixFQUFHLENBQ2QsT0FBU2xnQixJQUFNQSxFQUFJNmYsR0FDbkIsTUFHRnRCLEdBQUt2ZSxHQUFLLE9BQVNrZ0IsRUFBRWtULFdBQWE1VSxFQUFFNUssRUFBRzVULEdBQ3ZDNGYsRUFBSWUsRUFBRVQsRUFBR04sRUFBR1MsR0FDWixPQUFTbmhCLEVBQUlvVyxFQUFJNEssRUFBSWhoQixFQUFFMDBCLFFBQVUxVCxFQUNqQ2hoQixFQUFJZ2hCLEVBQ0psZ0IsRUFBSTZmLEVBR04sR0FBSUYsRUFBRW9ILEtBQU0sT0FBTzVuQixFQUFFeVUsRUFBRzVULEdBQUlzVixFQUU1QixHQUFJLE9BQVN0VixFQUFHLENBQ2QsTUFBUTJmLEVBQUVvSCxLQUFNMUcsSUFBS1YsRUFBSXBLLEVBQUV1RCxPQUNILFFBQXRCNkcsRUFBSS9lLEVBQUVnVCxFQUFHK0wsRUFBRTVmLE1BQU9oQixNQUFtQjZnQixFQUFJZSxFQUFFaEIsRUFBR0MsRUFBR1MsR0FBSSxPQUFTbmhCLEVBQUlvVyxFQUFJcUssRUFBSXpnQixFQUFFMDBCLFFBQVVqVSxFQUFHemdCLEVBQUl5Z0IsR0FHL0YsT0FBT3JLLEVBR1QsSUFBS3RWLEVBQUlaLEVBQUV3VSxFQUFHNVQsSUFBSzJmLEVBQUVvSCxLQUFNMUcsSUFBS1YsRUFBSXBLLEVBQUV1RCxPQUNSLFFBQTVCNkcsRUFBSVEsRUFBRW5nQixFQUFHNFQsRUFBR3lNLEVBQUdWLEVBQUU1ZixNQUFPaEIsTUFBbUJ3ZixHQUFLLE9BQVNvQixFQUFFeVQsV0FBYXB6QixFQUFFMDJCLE9BQU8sT0FBUy9XLEVBQUV0ZixJQUFNZ2dCLEVBQUlWLEVBQUV0ZixLQUFNdWYsRUFBSWUsRUFBRWhCLEVBQUdDLEVBQUdTLEdBQUksT0FBU25oQixFQUFJb1csRUFBSXFLLEVBQUl6Z0IsRUFBRTAwQixRQUFValUsRUFBR3pnQixFQUFJeWdCLEdBTXhLLE9BSEFwQixHQUFLdmUsRUFBRXFILFNBQVEsU0FBVWtYLEdBQ3ZCLE9BQU9DLEVBQUU1SyxFQUFHMkssTUFFUGpKLEVBR1QsT0FBTyxTQUFVaUosRUFBR25mLEVBQUd1aEIsRUFBR3BMLEdBQ3hCLElBQUlELEVBQUksa0JBQW9CcUwsR0FBSyxPQUFTQSxHQUFLQSxFQUFFdlEsT0FBU2tkLElBQU0sT0FBUzNNLEVBQUV0Z0IsSUFDM0VpVixJQUFNcUwsRUFBSUEsRUFBRWhYLE1BQU15YSxVQUNsQixJQUFJcmxCLEVBQUksa0JBQW9CNGhCLEdBQUssT0FBU0EsRUFDMUMsR0FBSTVoQixFQUFHLE9BQVE0aEIsRUFBRThGLFVBQ2YsS0FBSzJHLEdBQ0g3TyxFQUFHLENBR0QsSUFGQXhmLEVBQUk0aEIsRUFBRXRnQixJQUVEaVYsRUFBSWxXLEVBQUcsT0FBU2tXLEdBQUksQ0FDdkIsR0FBSUEsRUFBRWpWLE1BQVF0QixFQUFHLENBQ2YsT0FBUXVXLEVBQUVsTixLQUNSLEtBQUssRUFDSCxHQUFJdVksRUFBRXZRLE9BQVNrZCxHQUFJLENBQ2pCbnVCLEVBQUVvZixFQUFHakosRUFBRXNlLFVBQ1B4MEIsRUFBSXdVLEVBQUUwQixFQUFHcUwsRUFBRWhYLE1BQU15YSxXQUNmc0ssT0FBU25RLEVBQ1hBLEVBQUluZixFQUNKLE1BQU1tZixFQUdSLE1BRUYsUUFDRSxHQUFJakosRUFBRWsrQixjQUFnQjd5QixFQUFFdlEsS0FBTSxDQUM1QmpSLEVBQUVvZixFQUFHakosRUFBRXNlLFVBQ1B4MEIsRUFBSXdVLEVBQUUwQixFQUFHcUwsRUFBRWhYLFFBQ1RFLElBQU1pcEMsR0FBR3YwQixFQUFHakosRUFBR3FMLEdBQ2pCdmhCLEVBQUVzdkIsT0FBU25RLEVBQ1hBLEVBQUluZixFQUNKLE1BQU1tZixHQUtacGYsRUFBRW9mLEVBQUdqSixHQUNMLE1BQ0trSixFQUFFRCxFQUFHakosR0FFWkEsRUFBSUEsRUFBRXNlLFFBR1JqVCxFQUFFdlEsT0FBU2tkLEtBQU1sdUIsRUFBSXcwQyxHQUFHanpCLEVBQUVoWCxNQUFNeWEsU0FBVTdGLEVBQUV0ZSxLQUFNc1YsRUFBR29MLEVBQUV0Z0IsTUFBUXF1QixPQUFTblEsRUFBR0EsRUFBSW5mLEtBQU1tVyxFQUFJaytCLEdBQUc5eUIsRUFBRXZRLEtBQU11USxFQUFFdGdCLElBQUtzZ0IsRUFBRWhYLE1BQU8sS0FBTTRVLEVBQUV0ZSxLQUFNc1YsSUFBTTFMLElBQU1pcEMsR0FBR3YwQixFQUFHbmYsRUFBR3VoQixHQUFJcEwsRUFBRW1aLE9BQVNuUSxFQUFHQSxFQUFJaEosR0FHL0ssT0FBT3FLLEVBQUVyQixHQUVYLEtBQUs4TyxHQUNIOU8sRUFBRyxDQUNELElBQUtqSixFQUFJcUwsRUFBRXRnQixJQUFLLE9BQVNqQixHQUFJLENBQzNCLEdBQUlBLEVBQUVpQixNQUFRaVYsRUFBRyxDQUNmLEdBQUksSUFBTWxXLEVBQUVnSixLQUFPaEosRUFBRThyQixVQUFVbUssZ0JBQWtCMVUsRUFBRTBVLGVBQWlCajJCLEVBQUU4ckIsVUFBVXdvQixpQkFBbUIveUIsRUFBRSt5QixlQUFnQixDQUNuSHYwQyxFQUFFb2YsRUFBR25mLEVBQUV3MEIsVUFDUHgwQixFQUFJd1UsRUFBRXhVLEVBQUd1aEIsRUFBRXlELFVBQVksS0FDckJzSyxPQUFTblEsRUFDWEEsRUFBSW5mLEVBQ0osTUFBTW1mLEVBRU5wZixFQUFFb2YsRUFBR25mLEdBQ0wsTUFFR29mLEVBQUVELEVBQUduZixHQUNaQSxFQUFJQSxFQUFFdzBCLFNBR1J4MEIsRUFBSXUwQyxHQUFHaHpCLEVBQUdwQyxFQUFFdGUsS0FBTXNWLElBQ2hCbVosT0FBU25RLEVBQ1hBLEVBQUluZixFQUdOLE9BQU93Z0IsRUFBRXJCLEdBRWIsR0FBSSxrQkFBb0JvQyxHQUFLLGtCQUFvQkEsRUFBRyxPQUFPQSxFQUFJLEdBQUtBLEVBQUcsT0FBU3ZoQixHQUFLLElBQU1BLEVBQUVnSixLQUFPakosRUFBRW9mLEVBQUduZixFQUFFdzBCLFVBQVV4MEIsRUFBSXdVLEVBQUV4VSxFQUFHdWhCLElBQU0rTixPQUFTblEsRUFBR0EsRUFBSW5mLElBQU1ELEVBQUVvZixFQUFHbmYsSUFBSUEsRUFBSW0wQyxHQUFHNXlCLEVBQUdwQyxFQUFFdGUsS0FBTXNWLElBQU1tWixPQUFTblEsRUFBR0EsRUFBSW5mLEdBQUl3Z0IsRUFBRXJCLEdBQ2pOLEdBQUlzMEIsR0FBR2x5QixHQUFJLE9BQU9HLEVBQUd2QyxFQUFHbmYsRUFBR3VoQixFQUFHcEwsR0FDOUIsR0FBSTRZLEdBQUd4TixHQUFJLE9BQU9ULEVBQUUzQixFQUFHbmYsRUFBR3VoQixFQUFHcEwsR0FFN0IsR0FEQXhXLEdBQUtpMEMsR0FBR3owQixFQUFHb0MsR0FDUCxxQkFBdUJBLElBQU1yTCxFQUFHLE9BQVFpSixFQUFFblcsS0FDNUMsS0FBSyxFQUNMLEtBQUssRUFDSCxNQUFNbVcsRUFBSUEsRUFBRW5PLEtBQU1nVyxNQUFNNUYsRUFBRSxJQUFLakMsRUFBRTNULGFBQWUyVCxFQUFFbGYsTUFBUSxjQUU5RCxPQUFPRixFQUFFb2YsRUFBR25mLElBSWhCLElBQUl5MEMsR0FBS1osSUFBRyxHQUNSYSxHQUFLYixJQUFHLEdBQ1JjLEdBQUssR0FDTEMsR0FBSyxDQUNQMzVCLFFBQVMwNUIsSUFFUEUsR0FBSyxDQUNQNTVCLFFBQVMwNUIsSUFFUEcsR0FBSyxDQUNQNzVCLFFBQVMwNUIsSUFHWCxTQUFTSSxHQUFHNTFCLEdBQ1YsR0FBSUEsSUFBTXcxQixHQUFJLE1BQU0zdEIsTUFBTTVGLEVBQUUsTUFDNUIsT0FBT2pDLEVBR1QsU0FBUzYxQixHQUFHNzFCLEVBQUdDLEdBTWIsT0FMQWlDLEdBQUV5ekIsR0FBSTExQixHQUNOaUMsR0FBRXd6QixHQUFJMTFCLEdBQ05rQyxHQUFFdXpCLEdBQUlELElBQ054MUIsRUFBSUMsRUFBRXFULFVBR0osS0FBSyxFQUNMLEtBQUssR0FDSHJULEdBQUtBLEVBQUlBLEVBQUU2MUIsaUJBQW1CNzFCLEVBQUUrUyxhQUFlTCxHQUFHLEtBQU0sSUFDeEQsTUFFRixRQUM2RTFTLEVBQUkwUyxHQUEvQzFTLEdBQWhDRCxFQUFJLElBQU1BLEVBQUlDLEVBQUVULFdBQWFTLEdBQVMrUyxjQUFnQixLQUFNaFQsRUFBSUEsRUFBRXRULFNBR3RFeVUsR0FBRXMwQixJQUNGdnpCLEdBQUV1ekIsR0FBSXgxQixHQUdSLFNBQVM4MUIsS0FDUDUwQixHQUFFczBCLElBQ0Z0MEIsR0FBRXUwQixJQUNGdjBCLEdBQUV3MEIsSUFHSixTQUFTSyxHQUFHaDJCLEdBQ1Y0MUIsR0FBR0QsR0FBRzc1QixTQUNOLElBQUltRSxFQUFJMjFCLEdBQUdILEdBQUczNUIsU0FDVmxiLEVBQUkreEIsR0FBRzFTLEVBQUdELEVBQUVuTyxNQUNoQm9PLElBQU1yZixJQUFNc2hCLEdBQUV3ekIsR0FBSTExQixHQUFJa0MsR0FBRXV6QixHQUFJNzBDLElBRzlCLFNBQVNxMUMsR0FBR2oyQixHQUNWMDFCLEdBQUc1NUIsVUFBWWtFLElBQU1tQixHQUFFczBCLElBQUt0MEIsR0FBRXUwQixLQUdoQyxJQUFJN3pCLEdBQUksQ0FDTi9GLFFBQVMsR0FHWCxTQUFTbzZCLEdBQUdsMkIsR0FDVixJQUFLLElBQUlDLEVBQUlELEVBQUcsT0FBU0MsR0FBSSxDQUMzQixHQUFJLEtBQU9BLEVBQUVwVyxJQUFLLENBQ2hCLElBQUlqSixFQUFJcWYsRUFBRStVLGNBQ1YsR0FBSSxPQUFTcDBCLElBQXdCLFFBQWxCQSxFQUFJQSxFQUFFcTBCLGFBMzlEdEIsT0EyOURnRHIwQixFQUFFKzhCLE1BMTlEbEQsT0EwOURpRS84QixFQUFFKzhCLE1BQWMsT0FBTzFkLE9BQ3RGLEdBQUksS0FBT0EsRUFBRXBXLFVBQU8sSUFBV29XLEVBQUVrMkIsY0FBY0MsYUFDcEQsR0FBSSxLQUFxQixHQUFkbjJCLEVBQUU2VSxXQUFpQixPQUFPN1UsT0FDaEMsR0FBSSxPQUFTQSxFQUFFbVYsTUFBTyxDQUMzQm5WLEVBQUVtVixNQUFNakYsT0FBU2xRLEVBQ2pCQSxFQUFJQSxFQUFFbVYsTUFDTixTQUdGLEdBQUluVixJQUFNRCxFQUFHLE1BRWIsS0FBTyxPQUFTQyxFQUFFb1YsU0FBVSxDQUMxQixHQUFJLE9BQVNwVixFQUFFa1EsUUFBVWxRLEVBQUVrUSxTQUFXblEsRUFBRyxPQUFPLEtBQ2hEQyxFQUFJQSxFQUFFa1EsT0FHUmxRLEVBQUVvVixRQUFRbEYsT0FBU2xRLEVBQUVrUSxPQUNyQmxRLEVBQUlBLEVBQUVvVixRQUdSLE9BQU8sS0FHVCxTQUFTZ2hCLEdBQUdyMkIsRUFBR0MsR0FDYixNQUFPLENBQ0xxMkIsVUFBV3QyQixFQUNYNVUsTUFBTzZVLEdBSVgsSUFBSXMyQixHQUFLbm9CLEVBQUcxRix1QkFDUjh0QixHQUFLcG9CLEVBQUd6Rix3QkFDUjh0QixHQUFLLEVBQ0xwMEIsR0FBSSxLQUNKRyxHQUFJLEtBQ0puQyxHQUFJLEtBQ0pxMkIsSUFBSyxFQUVULFNBQVMzekIsS0FDUCxNQUFNOEUsTUFBTTVGLEVBQUUsTUFHaEIsU0FBUzAwQixHQUFHMzJCLEVBQUdDLEdBQ2IsR0FBSSxPQUFTQSxFQUFHLE9BQU8sRUFFdkIsSUFBSyxJQUFJcmYsRUFBSSxFQUFHQSxFQUFJcWYsRUFBRXJYLFFBQVVoSSxFQUFJb2YsRUFBRXBYLE9BQVFoSSxJQUM1QyxJQUFLdW1DLEdBQUdubkIsRUFBRXBmLEdBQUlxZixFQUFFcmYsSUFBSyxPQUFPLEVBRzlCLE9BQU8sRUFHVCxTQUFTZzJDLEdBQUc1MkIsRUFBR0MsRUFBR3JmLEVBQUdDLEVBQUd3VSxFQUFHK00sR0FTekIsR0FSQXEwQixHQUFLcjBCLEVBQ0xDLEdBQUlwQyxFQUNKQSxFQUFFK1UsY0FBZ0IsS0FDbEIvVSxFQUFFK3hCLFlBQWMsS0FDaEIveEIsRUFBRXd4QixlQUFpQixFQUNuQjhFLEdBQUd6NkIsUUFBVSxPQUFTa0UsR0FBSyxPQUFTQSxFQUFFZ1YsY0FBZ0I2aEIsR0FBS0MsR0FDM0Q5MkIsRUFBSXBmLEVBQUVDLEVBQUd3VSxHQUVMNEssRUFBRXd4QixpQkFBbUJnRixHQUFJLENBQzNCcjBCLEVBQUksRUFFSixFQUFHLENBRUQsR0FEQW5DLEVBQUV3eEIsZUFBaUIsSUFDYixHQUFLcnZCLEdBQUksTUFBTXlGLE1BQU01RixFQUFFLE1BQzdCRyxHQUFLLEVBQ0wvQixHQUFJbUMsR0FBSSxLQUNSdkMsRUFBRSt4QixZQUFjLEtBQ2hCdUUsR0FBR3o2QixRQUFVaTdCLEdBQ2IvMkIsRUFBSXBmLEVBQUVDLEVBQUd3VSxTQUNGNEssRUFBRXd4QixpQkFBbUJnRixJQVFoQyxHQUxBRixHQUFHejZCLFFBQVVrN0IsR0FDYi8yQixFQUFJLE9BQVN1QyxJQUFLLE9BQVNBLEdBQUVqSSxLQUM3Qms4QixHQUFLLEVBQ0xwMkIsR0FBSW1DLEdBQUlILEdBQUksS0FDWnEwQixJQUFLLEVBQ0R6MkIsRUFBRyxNQUFNNEgsTUFBTTVGLEVBQUUsTUFDckIsT0FBT2pDLEVBR1QsU0FBU2kzQixLQUNQLElBQUlqM0IsRUFBSSxDQUNOZ1YsY0FBZSxLQUNmaWQsVUFBVyxLQUNYQyxVQUFXLEtBQ1hnRixNQUFPLEtBQ1AzOEIsS0FBTSxNQUdSLE9BREEsT0FBUzhGLEdBQUlnQyxHQUFFMlMsY0FBZ0IzVSxHQUFJTCxFQUFJSyxHQUFJQSxHQUFFOUYsS0FBT3lGLEVBQzdDSyxHQUdULFNBQVM4MkIsS0FDUCxHQUFJLE9BQVMzMEIsR0FBRyxDQUNkLElBQUl4QyxFQUFJcUMsR0FBRXdTLFVBQ1Y3VSxFQUFJLE9BQVNBLEVBQUlBLEVBQUVnVixjQUFnQixVQUM5QmhWLEVBQUl3QyxHQUFFakksS0FFYixJQUFJMEYsRUFBSSxPQUFTSSxHQUFJZ0MsR0FBRTJTLGNBQWdCM1UsR0FBRTlGLEtBQ3pDLEdBQUksT0FBUzBGLEVBQUdJLEdBQUlKLEVBQUd1QyxHQUFJeEMsTUFBTyxDQUNoQyxHQUFJLE9BQVNBLEVBQUcsTUFBTTZILE1BQU01RixFQUFFLE1BRTlCakMsRUFBSSxDQUNGZ1YsZUFGRnhTLEdBQUl4QyxHQUVlZ1YsY0FDakJpZCxVQUFXenZCLEdBQUV5dkIsVUFDYkMsVUFBVzF2QixHQUFFMHZCLFVBQ2JnRixNQUFPMTBCLEdBQUUwMEIsTUFDVDM4QixLQUFNLE1BRVIsT0FBUzhGLEdBQUlnQyxHQUFFMlMsY0FBZ0IzVSxHQUFJTCxFQUFJSyxHQUFJQSxHQUFFOUYsS0FBT3lGLEVBRXRELE9BQU9LLEdBR1QsU0FBUysyQixHQUFHcDNCLEVBQUdDLEdBQ2IsTUFBTyxvQkFBc0JBLEVBQUlBLEVBQUVELEdBQUtDLEVBRzFDLFNBQVNvM0IsR0FBR3IzQixHQUNWLElBQUlDLEVBQUlrM0IsS0FDSnYyQyxFQUFJcWYsRUFBRWkzQixNQUNWLEdBQUksT0FBU3QyQyxFQUFHLE1BQU1pbkIsTUFBTTVGLEVBQUUsTUFDOUJyaEIsRUFBRTAyQyxvQkFBc0J0M0IsRUFDeEIsSUFBSW5mLEVBQUkyaEIsR0FDSm5OLEVBQUl4VSxFQUFFcXhDLFVBQ045dkIsRUFBSXhoQixFQUFFd3hDLFFBRVYsR0FBSSxPQUFTaHdCLEVBQUcsQ0FDZCxHQUFJLE9BQVMvTSxFQUFHLENBQ2QsSUFBSWdNLEVBQUloTSxFQUFFa0YsS0FDVmxGLEVBQUVrRixLQUFPNkgsRUFBRTdILEtBQ1g2SCxFQUFFN0gsS0FBTzhHLEVBR1h4Z0IsRUFBRXF4QyxVQUFZNzhCLEVBQUkrTSxFQUNsQnhoQixFQUFFd3hDLFFBQVUsS0FHZCxHQUFJLE9BQVMvOEIsRUFBRyxDQUNkQSxFQUFJQSxFQUFFa0YsS0FDTjFaLEVBQUlBLEVBQUVveEMsVUFDTixJQUFJajdCLEVBQUlxSyxFQUFJZSxFQUFJLEtBQ1pyTCxFQUFJMUIsRUFFUixFQUFHLENBQ0QsSUFBSTdVLEVBQUl1VyxFQUFFMDZCLGVBRVYsR0FBSWp4QyxFQUFJaTJDLEdBQUksQ0FDVixJQUFJOTFDLEVBQUksQ0FDTjh3QyxlQUFnQjE2QixFQUFFMDZCLGVBQ2xCZSxlQUFnQno3QixFQUFFeTdCLGVBQ2xCK0UsT0FBUXhnQyxFQUFFd2dDLE9BQ1ZDLGFBQWN6Z0MsRUFBRXlnQyxhQUNoQkMsV0FBWTFnQyxFQUFFMGdDLFdBQ2RsOUIsS0FBTSxNQUVSLE9BQVN2RCxHQUFLcUssRUFBSXJLLEVBQUlyVyxFQUFHeWhCLEVBQUl2aEIsR0FBS21XLEVBQUlBLEVBQUV1RCxLQUFPNVosRUFDL0NILEVBQUk2aEIsR0FBRW92QixpQkFBbUJwdkIsR0FBRW92QixlQUFpQmp4QyxFQUFHc3lDLEdBQUd0eUMsU0FDN0MsT0FBU3dXLElBQU1BLEVBQUlBLEVBQUV1RCxLQUFPLENBQ2pDazNCLGVBQWdCLFdBQ2hCZSxlQUFnQno3QixFQUFFeTdCLGVBQ2xCK0UsT0FBUXhnQyxFQUFFd2dDLE9BQ1ZDLGFBQWN6Z0MsRUFBRXlnQyxhQUNoQkMsV0FBWTFnQyxFQUFFMGdDLFdBQ2RsOUIsS0FBTSxPQUNKczRCLEdBQUdyeUMsRUFBR3VXLEVBQUV5N0IsZ0JBQWlCM3hDLEVBQUlrVyxFQUFFeWdDLGVBQWlCeDNCLEVBQUlqSixFQUFFMGdDLFdBQWF6M0IsRUFBRW5mLEVBQUdrVyxFQUFFd2dDLFFBRTlFeGdDLEVBQUlBLEVBQUV3RCxXQUNDLE9BQVN4RCxHQUFLQSxJQUFNMUIsR0FFN0IsT0FBUzJCLEVBQUlvTCxFQUFJdmhCLEVBQUltVyxFQUFFdUQsS0FBTzhHLEVBQzlCOGxCLEdBQUd0bUMsRUFBR29mLEVBQUUrVSxpQkFBbUIwYyxJQUFLLEdBQ2hDenhCLEVBQUUrVSxjQUFnQm4wQixFQUNsQm9mLEVBQUVneUIsVUFBWTd2QixFQUNkbkMsRUFBRWl5QixVQUFZbDdCLEVBQ2RwVyxFQUFFODJDLGtCQUFvQjcyQyxFQUd4QixNQUFPLENBQUNvZixFQUFFK1UsY0FBZXAwQixFQUFFKzJDLFVBRzdCLFNBQVNDLEdBQUc1M0IsR0FDVixJQUFJQyxFQUFJazNCLEtBQ0p2MkMsRUFBSXFmLEVBQUVpM0IsTUFDVixHQUFJLE9BQVN0MkMsRUFBRyxNQUFNaW5CLE1BQU01RixFQUFFLE1BQzlCcmhCLEVBQUUwMkMsb0JBQXNCdDNCLEVBQ3hCLElBQUluZixFQUFJRCxFQUFFKzJDLFNBQ050aUMsRUFBSXpVLEVBQUV3eEMsUUFDTmh3QixFQUFJbkMsRUFBRStVLGNBRVYsR0FBSSxPQUFTM2YsRUFBRyxDQUNkelUsRUFBRXd4QyxRQUFVLEtBQ1osSUFBSS93QixFQUFJaE0sRUFBSUEsRUFBRWtGLEtBRWQsR0FDRTZILEVBQUlwQyxFQUFFb0MsRUFBR2YsRUFBRWsyQixRQUFTbDJCLEVBQUlBLEVBQUU5RyxXQUNuQjhHLElBQU1oTSxHQUVmOHhCLEdBQUcva0IsRUFBR25DLEVBQUUrVSxpQkFBbUIwYyxJQUFLLEdBQ2hDenhCLEVBQUUrVSxjQUFnQjVTLEVBQ2xCLE9BQVNuQyxFQUFFaXlCLFlBQWNqeUIsRUFBRWd5QixVQUFZN3ZCLEdBQ3ZDeGhCLEVBQUU4MkMsa0JBQW9CdDFCLEVBR3hCLE1BQU8sQ0FBQ0EsRUFBR3ZoQixHQUdiLFNBQVNnM0MsR0FBRzczQixHQUNWLElBQUlDLEVBQUlnM0IsS0FVUixNQVRBLG9CQUFzQmozQixJQUFNQSxFQUFJQSxLQUNoQ0MsRUFBRStVLGNBQWdCL1UsRUFBRWd5QixVQUFZanlCLEVBT2hDQSxHQU5BQSxFQUFJQyxFQUFFaTNCLE1BQVEsQ0FDWjlFLFFBQVMsS0FDVHVGLFNBQVUsS0FDVkwsb0JBQXFCRixHQUNyQk0sa0JBQW1CMTNCLElBRWYyM0IsU0FBV0csR0FBRy8xQyxLQUFLLEtBQU1zZ0IsR0FBR3JDLEdBQzNCLENBQUNDLEVBQUUrVSxjQUFlaFYsR0FHM0IsU0FBUyszQixHQUFHLzNCLEVBQUdDLEVBQUdyZixFQUFHQyxHQVluQixPQVhBbWYsRUFBSSxDQUNGblcsSUFBS21XLEVBQ0xuZSxPQUFRb2UsRUFDUiszQixRQUFTcDNDLEVBQ1RxM0MsS0FBTXAzQyxFQUNOMFosS0FBTSxNQUdSLFFBREEwRixFQUFJb0MsR0FBRTJ2QixjQUNRL3hCLEVBQUksQ0FDaEIwMEIsV0FBWSxNQUNYdHlCLEdBQUUydkIsWUFBYy94QixFQUFHQSxFQUFFMDBCLFdBQWEzMEIsRUFBRXpGLEtBQU95RixHQUF3QixRQUFsQnBmLEVBQUlxZixFQUFFMDBCLFlBQXlCMTBCLEVBQUUwMEIsV0FBYTMwQixFQUFFekYsS0FBT3lGLEdBQUtuZixFQUFJRCxFQUFFMlosS0FBTTNaLEVBQUUyWixLQUFPeUYsRUFBR0EsRUFBRXpGLEtBQU8xWixFQUFHb2YsRUFBRTAwQixXQUFhMzBCLEdBQzVKQSxFQUdULFNBQVNrNEIsS0FDUCxPQUFPZixLQUFLbmlCLGNBR2QsU0FBU21qQixHQUFHbjRCLEVBQUdDLEVBQUdyZixFQUFHQyxHQUNuQixJQUFJd1UsRUFBSTRoQyxLQUNSNTBCLEdBQUV5UyxXQUFhOVUsRUFDZjNLLEVBQUUyZixjQUFnQitpQixHQUFHLEVBQUk5M0IsRUFBR3JmLE9BQUcsT0FBUSxJQUFXQyxFQUFJLEtBQU9BLEdBRy9ELFNBQVN1M0MsR0FBR3A0QixFQUFHQyxFQUFHcmYsRUFBR0MsR0FDbkIsSUFBSXdVLEVBQUk4aEMsS0FDUnQyQyxPQUFJLElBQVdBLEVBQUksS0FBT0EsRUFDMUIsSUFBSXVoQixPQUFJLEVBRVIsR0FBSSxPQUFTSSxHQUFHLENBQ2QsSUFBSW5CLEVBQUltQixHQUFFd1MsY0FHVixHQUZBNVMsRUFBSWYsRUFBRTIyQixRQUVGLE9BQVNuM0MsR0FBSzgxQyxHQUFHOTFDLEVBQUd3Z0IsRUFBRTQyQixNQUV4QixZQURBRixHQUFHOTNCLEVBQUdyZixFQUFHd2hCLEVBQUd2aEIsR0FLaEJ3aEIsR0FBRXlTLFdBQWE5VSxFQUNmM0ssRUFBRTJmLGNBQWdCK2lCLEdBQUcsRUFBSTkzQixFQUFHcmYsRUFBR3doQixFQUFHdmhCLEdBR3BDLFNBQVN3M0MsR0FBR3I0QixFQUFHQyxHQUNiLE9BQU9rNEIsR0FBRyxJQUFLLEVBQUduNEIsRUFBR0MsR0FHdkIsU0FBU3E0QixHQUFHdDRCLEVBQUdDLEdBQ2IsT0FBT200QixHQUFHLElBQUssRUFBR3A0QixFQUFHQyxHQUd2QixTQUFTczRCLEdBQUd2NEIsRUFBR0MsR0FDYixPQUFPbTRCLEdBQUcsRUFBRyxFQUFHcDRCLEVBQUdDLEdBR3JCLFNBQVN1NEIsR0FBR3g0QixFQUFHQyxHQUNiLE1BQUksb0JBQXNCQSxHQUFVRCxFQUFJQSxJQUFLQyxFQUFFRCxHQUFJLFdBQ2pEQyxFQUFFLFFBRUEsT0FBU0EsUUFBSyxJQUFXQSxHQUFVRCxFQUFJQSxJQUFLQyxFQUFFbkUsUUFBVWtFLEVBQUcsV0FDN0RDLEVBQUVuRSxRQUFVLFlBRGQsRUFLRixTQUFTMjhCLEdBQUd6NEIsRUFBR0MsRUFBR3JmLEdBRWhCLE9BREFBLEVBQUksT0FBU0EsUUFBSyxJQUFXQSxFQUFJQSxFQUFFb0wsT0FBTyxDQUFDZ1UsSUFBTSxLQUMxQ280QixHQUFHLEVBQUcsRUFBR0ksR0FBR3oyQyxLQUFLLEtBQU1rZSxFQUFHRCxHQUFJcGYsR0FHdkMsU0FBUzgzQyxNQUVULFNBQVNDLEdBQUczNEIsRUFBR0MsR0FFYixPQURBZzNCLEtBQUtqaUIsY0FBZ0IsQ0FBQ2hWLE9BQUcsSUFBV0MsRUFBSSxLQUFPQSxHQUN4Q0QsRUFHVCxTQUFTNDRCLEdBQUc1NEIsRUFBR0MsR0FDYixJQUFJcmYsRUFBSXUyQyxLQUNSbDNCLE9BQUksSUFBV0EsRUFBSSxLQUFPQSxFQUMxQixJQUFJcGYsRUFBSUQsRUFBRW8wQixjQUNWLE9BQUksT0FBU24wQixHQUFLLE9BQVNvZixHQUFLMDJCLEdBQUcxMkIsRUFBR3BmLEVBQUUsSUFBWUEsRUFBRSxJQUN0REQsRUFBRW8wQixjQUFnQixDQUFDaFYsRUFBR0MsR0FDZkQsR0FHVCxTQUFTNjRCLEdBQUc3NEIsRUFBR0MsR0FDYixJQUFJcmYsRUFBSXUyQyxLQUNSbDNCLE9BQUksSUFBV0EsRUFBSSxLQUFPQSxFQUMxQixJQUFJcGYsRUFBSUQsRUFBRW8wQixjQUNWLE9BQUksT0FBU24wQixHQUFLLE9BQVNvZixHQUFLMDJCLEdBQUcxMkIsRUFBR3BmLEVBQUUsSUFBWUEsRUFBRSxJQUN0RG1mLEVBQUlBLElBQ0pwZixFQUFFbzBCLGNBQWdCLENBQUNoVixFQUFHQyxHQUNmRCxHQUdULFNBQVM4NEIsR0FBRzk0QixFQUFHQyxFQUFHcmYsR0FDaEIsSUFBSUMsRUFBSXl2QyxLQUNSRSxHQUFHLEdBQUszdkMsRUFBSSxHQUFLQSxHQUFHLFdBQ2xCbWYsR0FBRSxNQUVKd3dCLEdBQUcsR0FBSzN2QyxFQUFJLEdBQUtBLEdBQUcsV0FDbEIsSUFBSUEsRUFBSTIxQyxHQUFHNXRCLFNBQ1g0dEIsR0FBRzV0QixjQUFXLElBQVczSSxFQUFJLEtBQU9BLEVBRXBDLElBQ0VELEdBQUUsR0FBS3BmLElBQ1AsUUFDQTQxQyxHQUFHNXRCLFNBQVcvbkIsTUFLcEIsU0FBU2kzQyxHQUFHOTNCLEVBQUdDLEVBQUdyZixHQUNoQixJQUFJQyxFQUFJd3lDLEtBQ0poK0IsRUFBSTI5QixHQUFHcHFCLFNBRVh2VCxFQUFJLENBQ0ZvOEIsZUFGRjV3QyxFQUFJeXlDLEdBQUd6eUMsRUFBR21mLEVBQUczSyxHQUdYbTlCLGVBQWdCbjlCLEVBQ2hCa2lDLE9BQVEzMkMsRUFDUjQyQyxhQUFjLEtBQ2RDLFdBQVksS0FDWmw5QixLQUFNLE1BRVIsSUFBSTZILEVBQUluQyxFQUFFbXlCLFFBSVYsR0FIQSxPQUFTaHdCLEVBQUkvTSxFQUFFa0YsS0FBT2xGLEdBQUtBLEVBQUVrRixLQUFPNkgsRUFBRTdILEtBQU02SCxFQUFFN0gsS0FBT2xGLEdBQ3JENEssRUFBRW15QixRQUFVLzhCLEVBQ1orTSxFQUFJcEMsRUFBRTZVLFVBQ0Y3VSxJQUFNcUMsSUFBSyxPQUFTRCxHQUFLQSxJQUFNQyxHQUFHcTBCLElBQUssRUFBSXJoQyxFQUFFbzhCLGVBQWlCZ0YsR0FBSXAwQixHQUFFb3ZCLGVBQWlCZ0YsT0FBUSxDQUMvRixHQUFJLElBQU16MkIsRUFBRXl4QixpQkFBbUIsT0FBU3J2QixHQUFLLElBQU1BLEVBQUVxdkIsaUJBQStDLFFBQTNCcnZCLEVBQUluQyxFQUFFcTNCLHFCQUFrQyxJQUMvRyxJQUFJajJCLEVBQUlwQixFQUFFeTNCLGtCQUNOMWdDLEVBQUlvTCxFQUFFZixFQUFHemdCLEdBR2IsR0FGQXlVLEVBQUVtaUMsYUFBZXAxQixFQUNqQi9NLEVBQUVvaUMsV0FBYXpnQyxFQUNYbXdCLEdBQUdud0IsRUFBR3FLLEdBQUksT0FDZCxNQUFPdEssSUFDVHc4QixHQUFHdnpCLEVBQUduZixJQUlWLElBQUltMkMsR0FBSyxDQUNQK0IsWUFBYXBILEdBQ2JobkIsWUFBYTVILEdBQ2I2SCxXQUFZN0gsR0FDWitILFVBQVcvSCxHQUNYZ0ksb0JBQXFCaEksR0FDckJpSSxnQkFBaUJqSSxHQUNqQmtJLFFBQVNsSSxHQUNUbUksV0FBWW5JLEdBQ1pvSSxPQUFRcEksR0FDUnFJLFNBQVVySSxHQUNWOEgsY0FBZTlILEdBQ2ZpMkIsYUFBY2oyQixHQUNkazJCLGlCQUFrQmwyQixHQUNsQm0yQixjQUFlbjJCLElBRWI4ekIsR0FBSyxDQUNQa0MsWUFBYXBILEdBQ2JobkIsWUFBYWd1QixHQUNiL3RCLFdBQVkrbUIsR0FDWjdtQixVQUFXdXRCLEdBQ1h0dEIsb0JBQXFCLFNBQTZCL0ssRUFBR0MsRUFBR3JmLEdBRXRELE9BREFBLEVBQUksT0FBU0EsUUFBSyxJQUFXQSxFQUFJQSxFQUFFb0wsT0FBTyxDQUFDZ1UsSUFBTSxLQUMxQ200QixHQUFHLEVBQUcsRUFBR0ssR0FBR3oyQyxLQUFLLEtBQU1rZSxFQUFHRCxHQUFJcGYsSUFFdkNvcUIsZ0JBQWlCLFNBQXlCaEwsRUFBR0MsR0FDM0MsT0FBT2s0QixHQUFHLEVBQUcsRUFBR240QixFQUFHQyxJQUVyQmdMLFFBQVMsU0FBaUJqTCxFQUFHQyxHQUMzQixJQUFJcmYsRUFBSXEyQyxLQUlSLE9BSEFoM0IsT0FBSSxJQUFXQSxFQUFJLEtBQU9BLEVBQzFCRCxFQUFJQSxJQUNKcGYsRUFBRW8wQixjQUFnQixDQUFDaFYsRUFBR0MsR0FDZkQsR0FFVGtMLFdBQVksU0FBb0JsTCxFQUFHQyxFQUFHcmYsR0FDcEMsSUFBSUMsRUFBSW8yQyxLQVVSLE9BVEFoM0IsT0FBSSxJQUFXcmYsRUFBSUEsRUFBRXFmLEdBQUtBLEVBQzFCcGYsRUFBRW0wQixjQUFnQm4wQixFQUFFb3hDLFVBQVloeUIsRUFPaENELEdBTkFBLEVBQUluZixFQUFFcTJDLE1BQVEsQ0FDWjlFLFFBQVMsS0FDVHVGLFNBQVUsS0FDVkwsb0JBQXFCdDNCLEVBQ3JCMDNCLGtCQUFtQnozQixJQUVmMDNCLFNBQVdHLEdBQUcvMUMsS0FBSyxLQUFNc2dCLEdBQUdyQyxHQUMzQixDQUFDbmYsRUFBRW0wQixjQUFlaFYsSUFFM0JtTCxPQUFRLFNBQWdCbkwsR0FLdEIsT0FIQUEsRUFBSSxDQUNGbEUsUUFBU2tFLEdBRkhpM0IsS0FJQ2ppQixjQUFnQmhWLEdBRTNCb0wsU0FBVXlzQixHQUNWaHRCLGNBQWU2dEIsR0FDZk0sYUFBYzNDLEdBQ2Q0QyxpQkFBa0IsU0FBMEJqNUIsRUFBR0MsR0FDN0MsSUFBSXJmLEVBQUlpM0MsR0FBRzczQixHQUNQbmYsRUFBSUQsRUFBRSxHQUNOeVUsRUFBSXpVLEVBQUUsR0FXVixPQVZBeTNDLElBQUcsV0FDRCxJQUFJejNDLEVBQUk0MUMsR0FBRzV0QixTQUNYNHRCLEdBQUc1dEIsY0FBVyxJQUFXM0ksRUFBSSxLQUFPQSxFQUVwQyxJQUNFNUssRUFBRTJLLEdBQ0YsUUFDQXcyQixHQUFHNXRCLFNBQVdob0IsS0FFZixDQUFDb2YsRUFBR0MsSUFDQXBmLEdBRVRxNEMsY0FBZSxTQUF1Qmw1QixHQUNwQyxJQUFJQyxFQUFJNDNCLElBQUcsR0FDUGozQyxFQUFJcWYsRUFBRSxHQUVWLE9BREFBLEVBQUlBLEVBQUUsR0FDQyxDQUFDMDRCLEdBQUdHLEdBQUcvMkMsS0FBSyxLQUFNa2UsRUFBR0QsR0FBSSxDQUFDQyxFQUFHRCxJQUFLcGYsS0FHekNrMkMsR0FBSyxDQUNQaUMsWUFBYXBILEdBQ2JobkIsWUFBYWl1QixHQUNiaHVCLFdBQVkrbUIsR0FDWjdtQixVQUFXd3RCLEdBQ1h2dEIsb0JBQXFCMHRCLEdBQ3JCenRCLGdCQUFpQnV0QixHQUNqQnR0QixRQUFTNHRCLEdBQ1QzdEIsV0FBWW1zQixHQUNabHNCLE9BQVErc0IsR0FDUjlzQixTQUFVLFdBQ1IsT0FBT2lzQixHQUFHRCxLQUVadnNCLGNBQWU2dEIsR0FDZk0sYUFBYzNDLEdBQ2Q0QyxpQkFBa0IsU0FBMEJqNUIsRUFBR0MsR0FDN0MsSUFBSXJmLEVBQUl5MkMsR0FBR0QsSUFDUHYyQyxFQUFJRCxFQUFFLEdBQ055VSxFQUFJelUsRUFBRSxHQVdWLE9BVkEwM0MsSUFBRyxXQUNELElBQUkxM0MsRUFBSTQxQyxHQUFHNXRCLFNBQ1g0dEIsR0FBRzV0QixjQUFXLElBQVczSSxFQUFJLEtBQU9BLEVBRXBDLElBQ0U1SyxFQUFFMkssR0FDRixRQUNBdzJCLEdBQUc1dEIsU0FBV2hvQixLQUVmLENBQUNvZixFQUFHQyxJQUNBcGYsR0FFVHE0QyxjQUFlLFNBQXVCbDVCLEdBQ3BDLElBQUlDLEVBQUlvM0IsR0FBR0QsSUFDUHgyQyxFQUFJcWYsRUFBRSxHQUVWLE9BREFBLEVBQUlBLEVBQUUsR0FDQyxDQUFDMjRCLEdBQUdFLEdBQUcvMkMsS0FBSyxLQUFNa2UsRUFBR0QsR0FBSSxDQUFDQyxFQUFHRCxJQUFLcGYsS0FHekNtMkMsR0FBSyxDQUNQZ0MsWUFBYXBILEdBQ2JobkIsWUFBYWl1QixHQUNiaHVCLFdBQVkrbUIsR0FDWjdtQixVQUFXd3RCLEdBQ1h2dEIsb0JBQXFCMHRCLEdBQ3JCenRCLGdCQUFpQnV0QixHQUNqQnR0QixRQUFTNHRCLEdBQ1QzdEIsV0FBWTBzQixHQUNaenNCLE9BQVErc0IsR0FDUjlzQixTQUFVLFdBQ1IsT0FBT3dzQixHQUFHUixLQUVadnNCLGNBQWU2dEIsR0FDZk0sYUFBYzNDLEdBQ2Q0QyxpQkFBa0IsU0FBMEJqNUIsRUFBR0MsR0FDN0MsSUFBSXJmLEVBQUlnM0MsR0FBR1IsSUFDUHYyQyxFQUFJRCxFQUFFLEdBQ055VSxFQUFJelUsRUFBRSxHQVdWLE9BVkEwM0MsSUFBRyxXQUNELElBQUkxM0MsRUFBSTQxQyxHQUFHNXRCLFNBQ1g0dEIsR0FBRzV0QixjQUFXLElBQVczSSxFQUFJLEtBQU9BLEVBRXBDLElBQ0U1SyxFQUFFMkssR0FDRixRQUNBdzJCLEdBQUc1dEIsU0FBV2hvQixLQUVmLENBQUNvZixFQUFHQyxJQUNBcGYsR0FFVHE0QyxjQUFlLFNBQXVCbDVCLEdBQ3BDLElBQUlDLEVBQUkyM0IsR0FBR1IsSUFDUHgyQyxFQUFJcWYsRUFBRSxHQUVWLE9BREFBLEVBQUlBLEVBQUUsR0FDQyxDQUFDMjRCLEdBQUdFLEdBQUcvMkMsS0FBSyxLQUFNa2UsRUFBR0QsR0FBSSxDQUFDQyxFQUFHRCxJQUFLcGYsS0FHekN1NEMsR0FBSyxLQUNMQyxHQUFLLEtBQ0xDLElBQUssRUFFVCxTQUFTQyxHQUFHdDVCLEVBQUdDLEdBQ2IsSUFBSXJmLEVBQUkyNEMsR0FBRyxFQUFHLEtBQU0sS0FBTSxHQUMxQjM0QyxFQUFFcTBDLFlBQWMsVUFDaEJyMEMsRUFBRWlSLEtBQU8sVUFDVGpSLEVBQUUrckIsVUFBWTFNLEVBQ2RyZixFQUFFdXZCLE9BQVNuUSxFQUNYcGYsRUFBRWswQixVQUFZLEVBQ2QsT0FBUzlVLEVBQUUyMEIsWUFBYzMwQixFQUFFMjBCLFdBQVdDLFdBQWFoMEMsRUFBR29mLEVBQUUyMEIsV0FBYS96QyxHQUFLb2YsRUFBRTYwQixZQUFjNzBCLEVBQUUyMEIsV0FBYS96QyxFQUczRyxTQUFTNDRDLEdBQUd4NUIsRUFBR0MsR0FDYixPQUFRRCxFQUFFblcsS0FDUixLQUFLLEVBQ0gsSUFBSWpKLEVBQUlvZixFQUFFbk8sS0FFVixPQUFPLFFBRFBvTyxFQUFJLElBQU1BLEVBQUVxVCxVQUFZMXlCLEVBQUV1TixnQkFBa0I4UixFQUFFcVEsU0FBU25pQixjQUFnQixLQUFPOFIsS0FDekRELEVBQUUyTSxVQUFZMU0sR0FBRyxHQUV4QyxLQUFLLEVBQ0gsT0FBaUUsUUFBMURBLEVBQUksS0FBT0QsRUFBRXk1QixjQUFnQixJQUFNeDVCLEVBQUVxVCxTQUFXLEtBQU9yVCxLQUFpQkQsRUFBRTJNLFVBQVkxTSxHQUFHLEdBRWxHLEtBQUssR0FHTCxRQUNFLE9BQU8sR0FJYixTQUFTeTVCLEdBQUcxNUIsR0FDVixHQUFJcTVCLEdBQUksQ0FDTixJQUFJcDVCLEVBQUltNUIsR0FFUixHQUFJbjVCLEVBQUcsQ0FDTCxJQUFJcmYsRUFBSXFmLEVBRVIsSUFBS3U1QixHQUFHeDVCLEVBQUdDLEdBQUksQ0FHYixLQUZBQSxFQUFJdWQsR0FBRzU4QixFQUFFbWUsZ0JBRUV5NkIsR0FBR3g1QixFQUFHQyxHQUlmLE9BSEFELEVBQUU4VSxXQUEyQixLQUFmOVUsRUFBRThVLFVBQW9CLEVBQ3BDdWtCLElBQUssT0FDTEYsR0FBS241QixHQUlQczVCLEdBQUdILEdBQUl2NEMsR0FHVHU0QyxHQUFLbjVCLEVBQ0xvNUIsR0FBSzViLEdBQUd2ZCxFQUFFa1QsaUJBQ0xuVCxFQUFFOFUsV0FBMkIsS0FBZjlVLEVBQUU4VSxVQUFvQixFQUFHdWtCLElBQUssRUFBSUYsR0FBS241QixHQUloRSxTQUFTMjVCLEdBQUczNUIsR0FDVixJQUFLQSxFQUFJQSxFQUFFbVEsT0FBUSxPQUFTblEsR0FBSyxJQUFNQSxFQUFFblcsS0FBTyxJQUFNbVcsRUFBRW5XLEtBQU8sS0FBT21XLEVBQUVuVyxLQUN0RW1XLEVBQUlBLEVBQUVtUSxPQUdSZ3BCLEdBQUtuNUIsRUFHUCxTQUFTNDVCLEdBQUc1NUIsR0FDVixHQUFJQSxJQUFNbTVCLEdBQUksT0FBTyxFQUNyQixJQUFLRSxHQUFJLE9BQU9NLEdBQUczNUIsR0FBSXE1QixJQUFLLEdBQUksRUFDaEMsSUFBSXA1QixFQUFJRCxFQUFFbk8sS0FDVixHQUFJLElBQU1tTyxFQUFFblcsS0FBTyxTQUFXb1csR0FBSyxTQUFXQSxJQUFNaWQsR0FBR2pkLEVBQUdELEVBQUVtMkIsZUFBZ0IsSUFBS2wyQixFQUFJbTVCLEdBQUluNUIsR0FDdkZxNUIsR0FBR3Q1QixFQUFHQyxHQUFJQSxFQUFJdWQsR0FBR3ZkLEVBQUVsQixhQUlyQixHQUZBNDZCLEdBQUczNUIsR0FFQyxLQUFPQSxFQUFFblcsSUFBSyxDQUdoQixLQURBbVcsRUFBSSxRQURKQSxFQUFJQSxFQUFFZ1YsZUFDV2hWLEVBQUVpVixXQUFhLE1BQ3hCLE1BQU1wTixNQUFNNUYsRUFBRSxNQUV0QmpDLEVBQUcsQ0FHRCxJQUZBQSxFQUFJQSxFQUFFakIsWUFFRGtCLEVBQUksRUFBR0QsR0FBSSxDQUNkLEdBQUksSUFBTUEsRUFBRXNULFNBQVUsQ0FDcEIsSUFBSTF5QixFQUFJb2YsRUFBRTJkLEtBRVYsR0E5akZELE9BOGpGSy84QixFQUFVLENBQ1osR0FBSSxJQUFNcWYsRUFBRyxDQUNYbTVCLEdBQUs1YixHQUFHeGQsRUFBRWpCLGFBQ1YsTUFBTWlCLEVBR1JDLFFBcmtGSCxNQXNrRlFyZixHQW5rRlIsT0Fta0ZvQkEsR0Fwa0ZwQixPQW9rRmdDQSxHQUFZcWYsSUFHN0NELEVBQUlBLEVBQUVqQixZQUdScTZCLEdBQUssV0FFRkEsR0FBS0QsR0FBSzNiLEdBQUd4ZCxFQUFFMk0sVUFBVTVOLGFBQWUsS0FFL0MsT0FBTyxFQUdULFNBQVM4NkIsS0FDUFQsR0FBS0QsR0FBSyxLQUNWRSxJQUFLLEVBR1AsSUFBSVMsR0FBSzFyQixFQUFHdkYsa0JBQ1I2b0IsSUFBSyxFQUVULFNBQVMzd0IsR0FBRWYsRUFBR0MsRUFBR3JmLEVBQUdDLEdBQ2xCb2YsRUFBRW1WLE1BQVEsT0FBU3BWLEVBQUl1MUIsR0FBR3QxQixFQUFHLEtBQU1yZixFQUFHQyxHQUFLeTBDLEdBQUdyMUIsRUFBR0QsRUFBRW9WLE1BQU94MEIsRUFBR0MsR0FHL0QsU0FBU2s1QyxHQUFHLzVCLEVBQUdDLEVBQUdyZixFQUFHQyxFQUFHd1UsR0FDdEJ6VSxFQUFJQSxFQUFFdXBCLE9BQ04sSUFBSS9ILEVBQUluQyxFQUFFM1UsSUFHVixPQUZBaW1DLEdBQUd0eEIsRUFBRzVLLEdBQ054VSxFQUFJKzFDLEdBQUc1MkIsRUFBR0MsRUFBR3JmLEVBQUdDLEVBQUd1aEIsRUFBRy9NLEdBQ2xCLE9BQVMySyxHQUFNMHhCLElBQ25CenhCLEVBQUU2VSxXQUFhLEVBQ2YvVCxHQUFFZixFQUFHQyxFQUFHcGYsRUFBR3dVLEdBQ0o0SyxFQUFFbVYsUUFIcUJuVixFQUFFK3hCLFlBQWNoeUIsRUFBRWd5QixZQUFhL3hCLEVBQUU2VSxZQUFjLElBQUs5VSxFQUFFeXhCLGdCQUFrQnA4QixJQUFNMkssRUFBRXl4QixlQUFpQixHQUFJdUksR0FBR2g2QixFQUFHQyxFQUFHNUssSUFNOUksU0FBUzRrQyxHQUFHajZCLEVBQUdDLEVBQUdyZixFQUFHQyxFQUFHd1UsRUFBRytNLEdBQ3pCLEdBQUksT0FBU3BDLEVBQUcsQ0FDZCxJQUFJcUIsRUFBSXpnQixFQUFFaVIsS0FDVixNQUFJLG9CQUFzQndQLEdBQU02NEIsR0FBRzc0QixTQUFNLElBQVdBLEVBQUUvVSxjQUFnQixPQUFTMUwsRUFBRThwQixjQUFXLElBQVc5cEIsRUFBRTBMLGVBQ3pHMFQsRUFBSWsxQixHQUFHdDBDLEVBQUVpUixLQUFNLEtBQU1oUixFQUFHLEtBQU1vZixFQUFFdmUsS0FBTTBnQixJQUNwQzlXLElBQU0yVSxFQUFFM1UsSUFDVjBVLEVBQUVtUSxPQUFTbFEsRUFDSkEsRUFBRW1WLE1BQVFwVixJQUo2R0MsRUFBRXBXLElBQU0sR0FBSW9XLEVBQUVwTyxLQUFPd1AsRUFBRzg0QixHQUFHbjZCLEVBQUdDLEVBQUdvQixFQUFHeGdCLEVBQUd3VSxFQUFHK00sSUFRMUssT0FEQWYsRUFBSXJCLEVBQUVvVixNQUNGL2YsRUFBSStNLElBQU0vTSxFQUFJZ00sRUFBRTgwQixlQUE4QnYxQyxFQUFJLFFBQW5CQSxFQUFJQSxFQUFFOHBCLFNBQTBCOXBCLEVBQUl5bUMsSUFBTWh5QixFQUFHeFUsSUFBTW1mLEVBQUUxVSxNQUFRMlUsRUFBRTNVLEtBQWEwdUMsR0FBR2g2QixFQUFHQyxFQUFHbUMsSUFDeEhuQyxFQUFFNlUsV0FBYSxHQUNmOVUsRUFBSSswQixHQUFHMXpCLEVBQUd4Z0IsSUFDUnlLLElBQU0yVSxFQUFFM1UsSUFDVjBVLEVBQUVtUSxPQUFTbFEsRUFDSkEsRUFBRW1WLE1BQVFwVixHQUduQixTQUFTbTZCLEdBQUduNkIsRUFBR0MsRUFBR3JmLEVBQUdDLEVBQUd3VSxFQUFHK00sR0FDekIsT0FBTyxPQUFTcEMsR0FBS3FuQixHQUFHcm5CLEVBQUVtMkIsY0FBZXQxQyxJQUFNbWYsRUFBRTFVLE1BQVEyVSxFQUFFM1UsTUFBUW9tQyxJQUFLLEVBQUlyOEIsRUFBSStNLElBQU1uQyxFQUFFd3hCLGVBQWlCenhCLEVBQUV5eEIsZUFBZ0J1SSxHQUFHaDZCLEVBQUdDLEVBQUdtQyxJQUFNZzRCLEdBQUdwNkIsRUFBR0MsRUFBR3JmLEVBQUdDLEVBQUd1aEIsR0FHM0osU0FBU2k0QixHQUFHcjZCLEVBQUdDLEdBQ2IsSUFBSXJmLEVBQUlxZixFQUFFM1UsS0FDTixPQUFTMFUsR0FBSyxPQUFTcGYsR0FBSyxPQUFTb2YsR0FBS0EsRUFBRTFVLE1BQVExSyxLQUFHcWYsRUFBRTZVLFdBQWEsS0FHNUUsU0FBU3NsQixHQUFHcDZCLEVBQUdDLEVBQUdyZixFQUFHQyxFQUFHd1UsR0FDdEIsSUFBSStNLEVBQUk1QixHQUFFNWYsR0FBS2t0QyxHQUFLM3JCLEdBQUVyRyxRQUl0QixPQUhBc0csRUFBSTJyQixHQUFHOXRCLEVBQUdtQyxHQUNWbXZCLEdBQUd0eEIsRUFBRzVLLEdBQ056VSxFQUFJZzJDLEdBQUc1MkIsRUFBR0MsRUFBR3JmLEVBQUdDLEVBQUd1aEIsRUFBRy9NLEdBQ2xCLE9BQVMySyxHQUFNMHhCLElBQ25CenhCLEVBQUU2VSxXQUFhLEVBQ2YvVCxHQUFFZixFQUFHQyxFQUFHcmYsRUFBR3lVLEdBQ0o0SyxFQUFFbVYsUUFIcUJuVixFQUFFK3hCLFlBQWNoeUIsRUFBRWd5QixZQUFhL3hCLEVBQUU2VSxZQUFjLElBQUs5VSxFQUFFeXhCLGdCQUFrQnA4QixJQUFNMkssRUFBRXl4QixlQUFpQixHQUFJdUksR0FBR2g2QixFQUFHQyxFQUFHNUssSUFNOUksU0FBU2lsQyxHQUFHdDZCLEVBQUdDLEVBQUdyZixFQUFHQyxFQUFHd1UsR0FDdEIsR0FBSW1MLEdBQUU1ZixHQUFJLENBQ1IsSUFBSXdoQixHQUFJLEVBQ1Jvc0IsR0FBR3Z1QixRQUNFbUMsR0FBSSxFQUdYLEdBREFtdkIsR0FBR3R4QixFQUFHNUssR0FDRixPQUFTNEssRUFBRTBNLFVBQVcsT0FBUzNNLElBQU1BLEVBQUU2VSxVQUFZLEtBQU01VSxFQUFFNFUsVUFBWSxLQUFNNVUsRUFBRTZVLFdBQWEsR0FBSTRlLEdBQUd6ekIsRUFBR3JmLEVBQUdDLEdBQUltekMsR0FBRy96QixFQUFHcmYsRUFBR0MsRUFBR3dVLEdBQUl4VSxHQUFJLE9BQVEsR0FBSSxPQUFTbWYsRUFBRyxDQUMzSixJQUFJcUIsRUFBSXBCLEVBQUUwTSxVQUNOM1YsRUFBSWlKLEVBQUVrMkIsY0FDVjkwQixFQUFFalcsTUFBUTRMLEVBQ1YsSUFBSUQsRUFBSXNLLEVBQUVoVyxRQUNON0ssRUFBSUksRUFBRSt5QyxZQUNWLGtCQUFvQm56QyxHQUFLLE9BQVNBLEVBQUlBLEVBQUlteEMsR0FBR254QyxHQUFpQ0EsRUFBSXV0QyxHQUFHOXRCLEVBQWxDemYsRUFBSWdnQixHQUFFNWYsR0FBS2t0QyxHQUFLM3JCLEdBQUVyRyxTQUNyRSxJQUFJbmIsRUFBSUMsRUFBRXF6Qyx5QkFDTjV4QyxFQUFJLG9CQUFzQjFCLEdBQUssb0JBQXNCMGdCLEVBQUU2eUIsd0JBQzNEN3hDLEdBQUssb0JBQXNCZ2YsRUFBRTB5QixrQ0FBb0Msb0JBQXNCMXlCLEVBQUV5eUIsNEJBQThCOThCLElBQU1uVyxHQUFLa1csSUFBTXZXLElBQU1xekMsR0FBRzV6QixFQUFHb0IsRUFBR3hnQixFQUFHTCxHQUMxSnN4QyxJQUFLLEVBQ0wsSUFBSXI3QixFQUFJd0osRUFBRStVLGNBQ1YzVCxFQUFFdXlCLE1BQVFuOUIsRUFDVm04QixHQUFHM3lCLEVBQUdwZixFQUFHd2dCLEVBQUdoTSxHQUNaMEIsRUFBSWtKLEVBQUUrVSxjQUNOaGUsSUFBTW5XLEdBQUs0VixJQUFNTSxHQUFLaUwsR0FBRWxHLFNBQVdnMkIsSUFBTSxvQkFBc0JueEMsSUFBTXV5QyxHQUFHanpCLEVBQUdyZixFQUFHRCxFQUFHRSxHQUFJa1csRUFBSWtKLEVBQUUrVSxnQkFBaUJoZSxFQUFJODZCLElBQU0wQixHQUFHdnpCLEVBQUdyZixFQUFHb1csRUFBR25XLEVBQUc0VixFQUFHTSxFQUFHdlcsS0FBTzZCLEdBQUssb0JBQXNCZ2YsRUFBRTh5QiwyQkFBNkIsb0JBQXNCOXlCLEVBQUUreUIscUJBQXVCLG9CQUFzQi95QixFQUFFK3lCLG9CQUFzQi95QixFQUFFK3lCLHFCQUFzQixvQkFBc0IveUIsRUFBRTh5QiwyQkFBNkI5eUIsRUFBRTh5Qiw2QkFBOEIsb0JBQXNCOXlCLEVBQUVnekIsb0JBQXNCcDBCLEVBQUU2VSxXQUFhLEtBQU8sb0JBQXNCelQsRUFBRWd6QixvQkFBc0JwMEIsRUFBRTZVLFdBQWEsR0FBSTdVLEVBQUVrMkIsY0FBZ0J0MUMsRUFBR29mLEVBQUUrVSxjQUFnQmplLEdBQUlzSyxFQUFFalcsTUFBUXZLLEVBQUd3Z0IsRUFBRXV5QixNQUFRNzhCLEVBQUdzSyxFQUFFaFcsUUFBVTdLLEVBQUdLLEVBQUltVyxJQUFNLG9CQUFzQnFLLEVBQUVnekIsb0JBQXNCcDBCLEVBQUU2VSxXQUFhLEdBQUlqMEIsR0FBSSxRQUN6ckJ3Z0IsRUFBSXBCLEVBQUUwTSxVQUFXMmxCLEdBQUd0eUIsRUFBR0MsR0FBSWpKLEVBQUlpSixFQUFFazJCLGNBQWU5MEIsRUFBRWpXLE1BQVE2VSxFQUFFcE8sT0FBU29PLEVBQUVnMUIsWUFBY2orQixFQUFJODVCLEdBQUc3d0IsRUFBRXBPLEtBQU1tRixHQUFJRCxFQUFJc0ssRUFBRWhXLFFBQTRCLGtCQUFuQjdLLEVBQUlJLEVBQUUreUMsY0FBc0MsT0FBU256QyxFQUFJQSxFQUFJbXhDLEdBQUdueEMsR0FBaUNBLEVBQUl1dEMsR0FBRzl0QixFQUFsQ3pmLEVBQUlnZ0IsR0FBRTVmLEdBQUtrdEMsR0FBSzNyQixHQUFFckcsVUFBeUR6WixFQUFJLG9CQUFyQzFCLEVBQUlDLEVBQUVxekMsMkJBQTBELG9CQUFzQjV5QixFQUFFNnlCLDBCQUE0QixvQkFBc0I3eUIsRUFBRTB5QixrQ0FBb0Msb0JBQXNCMXlCLEVBQUV5eUIsNEJBQThCOThCLElBQU1uVyxHQUFLa1csSUFBTXZXLElBQU1xekMsR0FBRzV6QixFQUFHb0IsRUFBR3hnQixFQUFHTCxHQUFJc3hDLElBQUssRUFBSS82QixFQUFJa0osRUFBRStVLGNBQWUzVCxFQUFFdXlCLE1BQVE3OEIsRUFBRzY3QixHQUFHM3lCLEVBQUdwZixFQUFHd2dCLEVBQUdoTSxHQUFJb0IsRUFBSXdKLEVBQUUrVSxjQUFlaGUsSUFBTW5XLEdBQUtrVyxJQUFNTixHQUFLdUwsR0FBRWxHLFNBQVdnMkIsSUFBTSxvQkFBc0JueEMsSUFBTXV5QyxHQUFHanpCLEVBQUdyZixFQUFHRCxFQUFHRSxHQUFJNFYsRUFBSXdKLEVBQUUrVSxnQkFBaUJyMEIsRUFBSW14QyxJQUFNMEIsR0FBR3Z6QixFQUFHcmYsRUFBR29XLEVBQUduVyxFQUFHa1csRUFBR04sRUFBR2pXLEtBQU82QixHQUFLLG9CQUFzQmdmLEVBQUVrNUIsNEJBQThCLG9CQUFzQmw1QixFQUFFbTVCLHNCQUF3QixvQkFBc0JuNUIsRUFBRW01QixxQkFBdUJuNUIsRUFBRW01QixvQkFBb0IzNUMsRUFBRzRWLEVBQUdqVyxHQUFJLG9CQUFzQjZnQixFQUFFazVCLDRCQUE4Qmw1QixFQUFFazVCLDJCQUEyQjE1QyxFQUFHNFYsRUFBR2pXLElBQUssb0JBQXNCNmdCLEVBQUVvNUIscUJBQXVCeDZCLEVBQUU2VSxXQUFhLEdBQUksb0JBQXNCelQsRUFBRTZ5QiwwQkFBNEJqMEIsRUFBRTZVLFdBQWEsT0FBUyxvQkFBc0J6VCxFQUFFbzVCLG9CQUFzQnpqQyxJQUFNZ0osRUFBRW0yQixlQUFpQnAvQixJQUFNaUosRUFBRWdWLGdCQUFrQi9VLEVBQUU2VSxXQUFhLEdBQUksb0JBQXNCelQsRUFBRTZ5Qix5QkFBMkJsOUIsSUFBTWdKLEVBQUVtMkIsZUFBaUJwL0IsSUFBTWlKLEVBQUVnVixnQkFBa0IvVSxFQUFFNlUsV0FBYSxLQUFNN1UsRUFBRWsyQixjQUFnQnQxQyxFQUFHb2YsRUFBRStVLGNBQWdCdmUsR0FBSTRLLEVBQUVqVyxNQUFRdkssRUFBR3dnQixFQUFFdXlCLE1BQVFuOUIsRUFBRzRLLEVBQUVoVyxRQUFVN0ssRUFBR0ssRUFBSUYsSUFBTSxvQkFBc0IwZ0IsRUFBRW81QixvQkFBc0J6akMsSUFBTWdKLEVBQUVtMkIsZUFBaUJwL0IsSUFBTWlKLEVBQUVnVixnQkFBa0IvVSxFQUFFNlUsV0FBYSxHQUFJLG9CQUFzQnpULEVBQUU2eUIseUJBQTJCbDlCLElBQU1nSixFQUFFbTJCLGVBQWlCcC9CLElBQU1pSixFQUFFZ1YsZ0JBQWtCL1UsRUFBRTZVLFdBQWEsS0FBTWowQixHQUFJLEdBQ25zRCxPQUFPNjVDLEdBQUcxNkIsRUFBR0MsRUFBR3JmLEVBQUdDLEVBQUd1aEIsRUFBRy9NLEdBRzNCLFNBQVNxbEMsR0FBRzE2QixFQUFHQyxFQUFHcmYsRUFBR0MsRUFBR3dVLEVBQUcrTSxHQUN6Qmk0QixHQUFHcjZCLEVBQUdDLEdBQ04sSUFBSW9CLEVBQUksS0FBcUIsR0FBZHBCLEVBQUU2VSxXQUNqQixJQUFLajBCLElBQU13Z0IsRUFBRyxPQUFPaE0sR0FBS3E1QixHQUFHenVCLEVBQUdyZixHQUFHLEdBQUtvNUMsR0FBR2g2QixFQUFHQyxFQUFHbUMsR0FDakR2aEIsRUFBSW9mLEVBQUUwTSxVQUNObXRCLEdBQUdoK0IsUUFBVW1FLEVBQ2IsSUFBSWpKLEVBQUlxSyxHQUFLLG9CQUFzQnpnQixFQUFFKzVDLHlCQUEyQixLQUFPOTVDLEVBQUVzcEIsU0FLekUsT0FKQWxLLEVBQUU2VSxXQUFhLEVBQ2YsT0FBUzlVLEdBQUtxQixHQUFLcEIsRUFBRW1WLE1BQVFrZ0IsR0FBR3IxQixFQUFHRCxFQUFFb1YsTUFBTyxLQUFNaFQsR0FBSW5DLEVBQUVtVixNQUFRa2dCLEdBQUdyMUIsRUFBRyxLQUFNakosRUFBR29MLElBQU1yQixHQUFFZixFQUFHQyxFQUFHakosRUFBR29MLEdBQ2hHbkMsRUFBRStVLGNBQWdCbjBCLEVBQUUreUMsTUFDcEJ2K0IsR0FBS3E1QixHQUFHenVCLEVBQUdyZixHQUFHLEdBQ1BxZixFQUFFbVYsTUFHWCxTQUFTd2xCLEdBQUc1NkIsR0FDVixJQUFJQyxFQUFJRCxFQUFFMk0sVUFDVjFNLEVBQUU0NkIsZUFBaUJ4TSxHQUFHcnVCLEVBQUdDLEVBQUU0NkIsZUFBZ0I1NkIsRUFBRTQ2QixpQkFBbUI1NkIsRUFBRTVVLFNBQVc0VSxFQUFFNVUsU0FBV2dqQyxHQUFHcnVCLEVBQUdDLEVBQUU1VSxTQUFTLEdBQzNHd3FDLEdBQUc3MUIsRUFBR0MsRUFBRTZXLGVBR1YsSUF5TUlna0IsR0FBUUMsR0FBSUMsR0F6TVpDLEdBQUssQ0FDUGhtQixXQUFZLEtBQ1ppbUIsVUFBVyxHQUdiLFNBQVNDLEdBQUduN0IsRUFBR0MsRUFBR3JmLEdBQ2hCLElBSUlvVyxFQUpBblcsRUFBSW9mLEVBQUV2ZSxLQUNOMlQsRUFBSTRLLEVBQUV3NUIsYUFDTnIzQixFQUFJUCxHQUFFL0YsUUFDTnVGLEdBQUksRUFNUixJQUpDckssRUFBSSxLQUFxQixHQUFkaUosRUFBRTZVLGNBQXFCOWQsRUFBSSxLQUFXLEVBQUpvTCxLQUFXLE9BQVNwQyxHQUFLLE9BQVNBLEVBQUVnVixnQkFDbEZoZSxHQUFLcUssR0FBSSxFQUFJcEIsRUFBRTZVLFlBQWMsSUFBTSxPQUFTOVUsR0FBSyxPQUFTQSxFQUFFZ1Ysb0JBQWlCLElBQVczZixFQUFFK2xDLFdBQVksSUFBTy9sQyxFQUFFZ21DLDZCQUErQmo1QixHQUFLLEdBQ25KRixHQUFFTCxHQUFPLEVBQUpPLEdBRUQsT0FBU3BDLEVBQUcsQ0FHZCxRQUZBLElBQVczSyxFQUFFK2xDLFVBQVkxQixHQUFHejVCLEdBRXhCb0IsRUFBRyxDQUlMLEdBSEFBLEVBQUloTSxFQUFFK2xDLFVBQ04vbEMsRUFBSWdnQyxHQUFHLEtBQU14MEMsRUFBRyxFQUFHLE9BQ2pCc3ZCLE9BQVNsUSxFQUNQLEtBQWdCLEVBQVRBLEVBQUV2ZSxNQUFXLElBQUtzZSxFQUFJLE9BQVNDLEVBQUUrVSxjQUFnQi9VLEVBQUVtVixNQUFNQSxNQUFRblYsRUFBRW1WLE1BQU8vZixFQUFFK2YsTUFBUXBWLEVBQUcsT0FBU0EsR0FDekdBLEVBQUVtUSxPQUFTOWEsRUFBRzJLLEVBQUlBLEVBQUVxVixRQU90QixPQUxBejBCLEVBQUl5MEMsR0FBR2gwQixFQUFHeGdCLEVBQUdELEVBQUcsT0FDZHV2QixPQUFTbFEsRUFDWDVLLEVBQUVnZ0IsUUFBVXowQixFQUNacWYsRUFBRStVLGNBQWdCaW1CLEdBQ2xCaDdCLEVBQUVtVixNQUFRL2YsRUFDSHpVLEVBS1QsT0FGQUMsRUFBSXdVLEVBQUV3USxTQUNONUYsRUFBRStVLGNBQWdCLEtBQ1gvVSxFQUFFbVYsTUFBUW1nQixHQUFHdDFCLEVBQUcsS0FBTXBmLEVBQUdELEdBR2xDLEdBQUksT0FBU29mLEVBQUVnVixjQUFlLENBSTVCLEdBRkFuMEIsR0FEQW1mLEVBQUlBLEVBQUVvVixPQUNBQyxRQUVGaFUsRUFBRyxDQUlMLEdBSEFoTSxFQUFJQSxFQUFFK2xDLFVBQ054NkMsRUFBSW0wQyxHQUFHLzBCLEVBQUdBLEVBQUV5NUIsZUFDVnRwQixPQUFTbFEsRUFDUCxLQUFnQixFQUFUQSxFQUFFdmUsUUFBYzJmLEVBQUksT0FBU3BCLEVBQUUrVSxjQUFnQi9VLEVBQUVtVixNQUFNQSxNQUFRblYsRUFBRW1WLFNBQWFwVixFQUFFb1YsTUFBUSxJQUFLeDBCLEVBQUV3MEIsTUFBUS9ULEVBQUcsT0FBU0EsR0FDNUhBLEVBQUU4TyxPQUFTdnZCLEVBQUd5Z0IsRUFBSUEsRUFBRWdVLFFBUXRCLE9BTkF4MEIsRUFBSWswQyxHQUFHbDBDLEVBQUd3VSxJQUNSOGEsT0FBU2xRLEVBQ1hyZixFQUFFeTBCLFFBQVV4MEIsRUFDWkQsRUFBRTB3QyxvQkFBc0IsRUFDeEJyeEIsRUFBRStVLGNBQWdCaW1CLEdBQ2xCaDdCLEVBQUVtVixNQUFReDBCLEVBQ0hDLEVBS1QsT0FGQUQsRUFBSTAwQyxHQUFHcjFCLEVBQUdELEVBQUVvVixNQUFPL2YsRUFBRXdRLFNBQVVqbEIsR0FDL0JxZixFQUFFK1UsY0FBZ0IsS0FDWC9VLEVBQUVtVixNQUFReDBCLEVBS25CLEdBRkFvZixFQUFJQSxFQUFFb1YsTUFFRi9ULEVBQUcsQ0FNTCxHQUxBQSxFQUFJaE0sRUFBRStsQyxVQUNOL2xDLEVBQUlnZ0MsR0FBRyxLQUFNeDBDLEVBQUcsRUFBRyxPQUNqQnN2QixPQUFTbFEsRUFDWDVLLEVBQUUrZixNQUFRcFYsRUFDVixPQUFTQSxJQUFNQSxFQUFFbVEsT0FBUzlhLEdBQ3RCLEtBQWdCLEVBQVQ0SyxFQUFFdmUsTUFBVyxJQUFLc2UsRUFBSSxPQUFTQyxFQUFFK1UsY0FBZ0IvVSxFQUFFbVYsTUFBTUEsTUFBUW5WLEVBQUVtVixNQUFPL2YsRUFBRStmLE1BQVFwVixFQUFHLE9BQVNBLEdBQ3pHQSxFQUFFbVEsT0FBUzlhLEVBQUcySyxFQUFJQSxFQUFFcVYsUUFTdEIsT0FQQXowQixFQUFJeTBDLEdBQUdoMEIsRUFBR3hnQixFQUFHRCxFQUFHLE9BQ2R1dkIsT0FBU2xRLEVBQ1g1SyxFQUFFZ2dCLFFBQVV6MEIsRUFDWkEsRUFBRWswQixXQUFhLEVBQ2Z6ZixFQUFFaThCLG9CQUFzQixFQUN4QnJ4QixFQUFFK1UsY0FBZ0JpbUIsR0FDbEJoN0IsRUFBRW1WLE1BQVEvZixFQUNIelUsRUFJVCxPQURBcWYsRUFBRStVLGNBQWdCLEtBQ1gvVSxFQUFFbVYsTUFBUWtnQixHQUFHcjFCLEVBQUdELEVBQUczSyxFQUFFd1EsU0FBVWpsQixHQUd4QyxTQUFTMDZDLEdBQUd0N0IsRUFBR0MsR0FDYkQsRUFBRXl4QixlQUFpQnh4QixJQUFNRCxFQUFFeXhCLGVBQWlCeHhCLEdBQzVDLElBQUlyZixFQUFJb2YsRUFBRTZVLFVBQ1YsT0FBU2owQixHQUFLQSxFQUFFNndDLGVBQWlCeHhCLElBQU1yZixFQUFFNndDLGVBQWlCeHhCLEdBQzFEb3hCLEdBQUdyeEIsRUFBRW1RLE9BQVFsUSxHQUdmLFNBQVNzN0IsR0FBR3Y3QixFQUFHQyxFQUFHcmYsRUFBR0MsRUFBR3dVLEVBQUcrTSxHQUN6QixJQUFJZixFQUFJckIsRUFBRWdWLGNBQ1YsT0FBUzNULEVBQUlyQixFQUFFZ1YsY0FBZ0IsQ0FDN0J3bUIsWUFBYXY3QixFQUNidzdCLFVBQVcsS0FDWEMsbUJBQW9CLEVBQ3BCQyxLQUFNOTZDLEVBQ04rNkMsS0FBTWg3QyxFQUNOaTdDLGVBQWdCLEVBQ2hCQyxTQUFVem1DLEVBQ1ZzL0IsV0FBWXZ5QixJQUNUZixFQUFFbTZCLFlBQWN2N0IsRUFBR29CLEVBQUVvNkIsVUFBWSxLQUFNcDZCLEVBQUVxNkIsbUJBQXFCLEVBQUdyNkIsRUFBRXM2QixLQUFPOTZDLEVBQUd3Z0IsRUFBRXU2QixLQUFPaDdDLEVBQUd5Z0IsRUFBRXc2QixlQUFpQixFQUFHeDZCLEVBQUV5NkIsU0FBV3ptQyxFQUFHZ00sRUFBRXN6QixXQUFhdnlCLEdBR3JKLFNBQVMyNUIsR0FBRy83QixFQUFHQyxFQUFHcmYsR0FDaEIsSUFBSUMsRUFBSW9mLEVBQUV3NUIsYUFDTnBrQyxFQUFJeFUsRUFBRXUxQyxZQUNOaDBCLEVBQUl2aEIsRUFBRSs2QyxLQUdWLEdBRkE3NkIsR0FBRWYsRUFBR0MsRUFBR3BmLEVBQUVnbEIsU0FBVWpsQixHQUVoQixLQUFXLEdBRGZDLEVBQUlnaEIsR0FBRS9GLFVBQ2FqYixFQUFRLEVBQUpBLEVBQVEsRUFBR29mLEVBQUU2VSxXQUFhLE9BQVEsQ0FDdkQsR0FBSSxPQUFTOVUsR0FBSyxLQUFxQixHQUFkQSxFQUFFOFUsV0FBaUI5VSxFQUFHLElBQUtBLEVBQUlDLEVBQUVtVixNQUFPLE9BQVNwVixHQUFJLENBQzVFLEdBQUksS0FBT0EsRUFBRW5XLElBQUssT0FBU21XLEVBQUVnVixlQUFpQnNtQixHQUFHdDdCLEVBQUdwZixRQUFRLEdBQUksS0FBT29mLEVBQUVuVyxJQUFLeXhDLEdBQUd0N0IsRUFBR3BmLFFBQVEsR0FBSSxPQUFTb2YsRUFBRW9WLE1BQU8sQ0FDaEhwVixFQUFFb1YsTUFBTWpGLE9BQVNuUSxFQUNqQkEsRUFBSUEsRUFBRW9WLE1BQ04sU0FFRixHQUFJcFYsSUFBTUMsRUFBRyxNQUFNRCxFQUVuQixLQUFPLE9BQVNBLEVBQUVxVixTQUFVLENBQzFCLEdBQUksT0FBU3JWLEVBQUVtUSxRQUFVblEsRUFBRW1RLFNBQVdsUSxFQUFHLE1BQU1ELEVBQy9DQSxFQUFJQSxFQUFFbVEsT0FHUm5RLEVBQUVxVixRQUFRbEYsT0FBU25RLEVBQUVtUSxPQUNyQm5RLEVBQUlBLEVBQUVxVixRQUVSeDBCLEdBQUssRUFHUCxHQURBcWhCLEdBQUVMLEdBQUdoaEIsR0FDRCxLQUFnQixFQUFUb2YsRUFBRXZlLE1BQVd1ZSxFQUFFK1UsY0FBZ0IsVUFBVSxPQUFRM2YsR0FDMUQsSUFBSyxXQUdILElBRkF6VSxFQUFJcWYsRUFBRW1WLE1BRUQvZixFQUFJLEtBQU0sT0FBU3pVLEdBQ0wsUUFBakJvZixFQUFJcGYsRUFBRWkwQixZQUF5QixPQUFTcWhCLEdBQUdsMkIsS0FBTzNLLEVBQUl6VSxHQUFJQSxFQUFJQSxFQUFFeTBCLFFBSWxFLFFBREF6MEIsRUFBSXlVLElBQ1VBLEVBQUk0SyxFQUFFbVYsTUFBT25WLEVBQUVtVixNQUFRLE9BQVMvZixFQUFJelUsRUFBRXkwQixRQUFTejBCLEVBQUV5MEIsUUFBVSxNQUN6RWttQixHQUFHdDdCLEdBQUcsRUFBSTVLLEVBQUd6VSxFQUFHd2hCLEVBQUduQyxFQUFFMDBCLFlBQ3JCLE1BRUYsSUFBSyxZQUlILElBSEEvekMsRUFBSSxLQUNKeVUsRUFBSTRLLEVBQUVtVixNQUVEblYsRUFBRW1WLE1BQVEsS0FBTSxPQUFTL2YsR0FBSSxDQUdoQyxHQUFJLFFBRkoySyxFQUFJM0ssRUFBRXdmLFlBRVksT0FBU3FoQixHQUFHbDJCLEdBQUksQ0FDaENDLEVBQUVtVixNQUFRL2YsRUFDVixNQUdGMkssRUFBSTNLLEVBQUVnZ0IsUUFDTmhnQixFQUFFZ2dCLFFBQVV6MEIsRUFDWkEsRUFBSXlVLEVBQ0pBLEVBQUkySyxFQUdOdTdCLEdBQUd0N0IsR0FBRyxFQUFJcmYsRUFBRyxLQUFNd2hCLEVBQUduQyxFQUFFMDBCLFlBQ3hCLE1BRUYsSUFBSyxXQUNINEcsR0FBR3Q3QixHQUFHLEVBQUksS0FBTSxVQUFNLEVBQVFBLEVBQUUwMEIsWUFDaEMsTUFFRixRQUNFMTBCLEVBQUUrVSxjQUFnQixLQUV0QixPQUFPL1UsRUFBRW1WLE1BR1gsU0FBUzRrQixHQUFHaDZCLEVBQUdDLEVBQUdyZixHQUNoQixPQUFTb2YsSUFBTUMsRUFBRW1NLGFBQWVwTSxFQUFFb00sY0FDbEMsSUFBSXZyQixFQUFJb2YsRUFBRXd4QixlQUVWLEdBREEsSUFBTTV3QyxHQUFLaXlDLEdBQUdqeUMsR0FDVm9mLEVBQUVxeEIsb0JBQXNCMXdDLEVBQUcsT0FBTyxLQUN0QyxHQUFJLE9BQVNvZixHQUFLQyxFQUFFbVYsUUFBVXBWLEVBQUVvVixNQUFPLE1BQU12TixNQUFNNUYsRUFBRSxNQUVyRCxHQUFJLE9BQVNoQyxFQUFFbVYsTUFBTyxDQUtwQixJQUhBeDBCLEVBQUltMEMsR0FESi8wQixFQUFJQyxFQUFFbVYsTUFDSXBWLEVBQUV5NUIsY0FDWng1QixFQUFFbVYsTUFBUXgwQixFQUVMQSxFQUFFdXZCLE9BQVNsUSxFQUFHLE9BQVNELEVBQUVxVixTQUM1QnJWLEVBQUlBLEVBQUVxVixTQUFTejBCLEVBQUlBLEVBQUV5MEIsUUFBVTBmLEdBQUcvMEIsRUFBR0EsRUFBRXk1QixlQUFpQnRwQixPQUFTbFEsRUFHbkVyZixFQUFFeTBCLFFBQVUsS0FHZCxPQUFPcFYsRUFBRW1WLE1BdUdYLFNBQVM0bUIsR0FBR2g4QixFQUFHQyxHQUNiLE9BQVFELEVBQUU4N0IsVUFDUixJQUFLLFNBQ0g3N0IsRUFBSUQsRUFBRTQ3QixLQUVOLElBQUssSUFBSWg3QyxFQUFJLEtBQU0sT0FBU3FmLEdBQzFCLE9BQVNBLEVBQUU0VSxZQUFjajBCLEVBQUlxZixHQUFJQSxFQUFJQSxFQUFFb1YsUUFHekMsT0FBU3owQixFQUFJb2YsRUFBRTQ3QixLQUFPLEtBQU9oN0MsRUFBRXkwQixRQUFVLEtBQ3pDLE1BRUYsSUFBSyxZQUNIejBCLEVBQUlvZixFQUFFNDdCLEtBRU4sSUFBSyxJQUFJLzZDLEVBQUksS0FBTSxPQUFTRCxHQUMxQixPQUFTQSxFQUFFaTBCLFlBQWNoMEIsRUFBSUQsR0FBSUEsRUFBSUEsRUFBRXkwQixRQUd6QyxPQUFTeDBCLEVBQUlvZixHQUFLLE9BQVNELEVBQUU0N0IsS0FBTzU3QixFQUFFNDdCLEtBQU8sS0FBTzU3QixFQUFFNDdCLEtBQUt2bUIsUUFBVSxLQUFPeDBCLEVBQUV3MEIsUUFBVSxNQUk5RixTQUFTNG1CLEdBQUdqOEIsRUFBR0MsRUFBR3JmLEdBQ2hCLElBQUlDLEVBQUlvZixFQUFFdzVCLGFBRVYsT0FBUXg1QixFQUFFcFcsS0FDUixLQUFLLEVBQ0wsS0FBSyxHQUNMLEtBQUssR0FDTCxLQUFLLEVBQ0wsS0FBSyxHQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxHQUNMLEtBQUssRUFDTCxLQUFLLEdBQ0gsT0FBTyxLQUVULEtBQUssRUFDSCxPQUFPMlcsR0FBRVAsRUFBRXBPLE9BQVN1OEIsS0FBTSxLQUU1QixLQUFLLEVBQ0gsT0FBTzJILEtBQU01MEIsR0FBRWEsSUFBSWIsR0FBRWdCLEtBQUl2aEIsRUFBSXFmLEVBQUUwTSxXQUFha3VCLGlCQUFtQmo2QyxFQUFFeUssUUFBVXpLLEVBQUVpNkMsZUFBZ0JqNkMsRUFBRWk2QyxlQUFpQixNQUFPLE9BQVM3NkIsR0FBSyxPQUFTQSxFQUFFb1YsUUFBVXdrQixHQUFHMzVCLEtBQU9BLEVBQUU2VSxXQUFhLEdBQVcsS0FFaE0sS0FBSyxFQUNIbWhCLEdBQUdoMkIsR0FDSHJmLEVBQUlnMUMsR0FBR0QsR0FBRzc1QixTQUNWLElBQUl6RyxFQUFJNEssRUFBRXBPLEtBQ1YsR0FBSSxPQUFTbU8sR0FBSyxNQUFRQyxFQUFFME0sVUFBV291QixHQUFHLzZCLEVBQUdDLEVBQUc1SyxFQUFHeFUsRUFBR0QsR0FBSW9mLEVBQUUxVSxNQUFRMlUsRUFBRTNVLE1BQVEyVSxFQUFFNlUsV0FBYSxTQUFVLENBQ3JHLElBQUtqMEIsRUFBRyxDQUNOLEdBQUksT0FBU29mLEVBQUUwTSxVQUFXLE1BQU05RSxNQUFNNUYsRUFBRSxNQUN4QyxPQUFPLEtBS1QsR0FGQWpDLEVBQUk0MUIsR0FBR0gsR0FBRzM1QixTQUVOODlCLEdBQUczNUIsR0FBSSxDQUNUcGYsRUFBSW9mLEVBQUUwTSxVQUNOdFgsRUFBSTRLLEVBQUVwTyxLQUNOLElBQUl1USxFQUFJbkMsRUFBRWsyQixjQUlWLE9BSEF0MUMsRUFBRWs5QixJQUFNOWQsRUFDUnBmLEVBQUVtOUIsSUFBTTViLEVBRUEvTSxHQUNOLElBQUssU0FDTCxJQUFLLFNBQ0wsSUFBSyxRQUNIK0ssR0FBRSxPQUFRdmYsR0FDVixNQUVGLElBQUssUUFDTCxJQUFLLFFBQ0gsSUFBS21mLEVBQUksRUFBR0EsRUFBSXVVLEdBQUczckIsT0FBUW9YLElBQ3pCSSxHQUFFbVUsR0FBR3ZVLEdBQUluZixHQUdYLE1BRUYsSUFBSyxTQUNIdWYsR0FBRSxRQUFTdmYsR0FDWCxNQUVGLElBQUssTUFDTCxJQUFLLFFBQ0wsSUFBSyxPQUNIdWYsR0FBRSxRQUFTdmYsR0FDWHVmLEdBQUUsT0FBUXZmLEdBQ1YsTUFFRixJQUFLLE9BQ0h1ZixHQUFFLFFBQVN2ZixHQUNYdWYsR0FBRSxTQUFVdmYsR0FDWixNQUVGLElBQUssVUFDSHVmLEdBQUUsU0FBVXZmLEdBQ1osTUFFRixJQUFLLFFBQ0h1d0IsR0FBR3Z3QixFQUFHdWhCLEdBQ05oQyxHQUFFLFVBQVd2ZixHQUNibTdCLEdBQUdwN0IsRUFBRyxZQUNOLE1BRUYsSUFBSyxTQUNIQyxFQUFFcXdCLGNBQWdCLENBQ2hCZ3JCLGNBQWU5NUIsRUFBRSs1QixVQUVuQi83QixHQUFFLFVBQVd2ZixHQUNibTdCLEdBQUdwN0IsRUFBRyxZQUNOLE1BRUYsSUFBSyxXQUNIeXhCLEdBQUd4eEIsRUFBR3VoQixHQUFJaEMsR0FBRSxVQUFXdmYsR0FBSW03QixHQUFHcDdCLEVBQUcsWUFNckMsSUFBSyxJQUFJeWdCLEtBSFR1YSxHQUFHdm1CLEVBQUcrTSxHQUNOcEMsRUFBSSxLQUVVb0MsRUFDWixHQUFJQSxFQUFFaGdCLGVBQWVpZixHQUFJLENBQ3ZCLElBQUlySyxFQUFJb0wsRUFBRWYsR0FDVixhQUFlQSxFQUFJLGtCQUFvQnJLLEVBQUluVyxFQUFFMnhCLGNBQWdCeGIsSUFBTWdKLEVBQUksQ0FBQyxXQUFZaEosSUFBTSxrQkFBb0JBLEdBQUtuVyxFQUFFMnhCLGNBQWdCLEdBQUt4YixJQUFNZ0osRUFBSSxDQUFDLFdBQVksR0FBS2hKLElBQU1rVixFQUFHOXBCLGVBQWVpZixJQUFNLE1BQVFySyxHQUFLZ2xCLEdBQUdwN0IsRUFBR3lnQixHQUkzTixPQUFRaE0sR0FDTixJQUFLLFFBQ0hrYixHQUFHMXZCLEdBQ0g2d0IsR0FBRzd3QixFQUFHdWhCLEdBQUcsR0FDVCxNQUVGLElBQUssV0FDSG1PLEdBQUcxdkIsR0FDSDB4QixHQUFHMXhCLEdBQ0gsTUFFRixJQUFLLFNBQ0wsSUFBSyxTQUNILE1BRUYsUUFDRSxvQkFBc0J1aEIsRUFBRWc2QixVQUFZdjdDLEVBQUV3N0MsUUFBVXBnQixJQUdwRHI3QixFQUFJb2YsRUFDSkMsRUFBRSt4QixZQUFjcHhDLEVBQ2hCLE9BQVNBLElBQU1xZixFQUFFNlUsV0FBYSxPQUN6QixDQVlMLE9BWEF6VCxFQUFJLElBQU16Z0IsRUFBRTB5QixTQUFXMXlCLEVBQUlBLEVBQUUrd0IsY0FDN0IzUixJQUFNK2IsS0FBTy9iLEVBQUkwUyxHQUFHcmQsSUFDcEIySyxJQUFNK2IsR0FBSyxXQUFhMW1CLElBQUsySyxFQUFJcUIsRUFBRTNDLGNBQWMsUUFBVXVVLFVBQVkscUJBQXdCalQsRUFBSUEsRUFBRVAsWUFBWU8sRUFBRW1ULGFBQWUsa0JBQW9CdHlCLEVBQUVpN0IsR0FBSzliLEVBQUlxQixFQUFFM0MsY0FBY3JKLEVBQUcsQ0FDbEx5bUIsR0FBSWo3QixFQUFFaTdCLE1BQ0Y5YixFQUFJcUIsRUFBRTNDLGNBQWNySixHQUFJLFdBQWFBLElBQU1nTSxFQUFJckIsRUFBR25mLEVBQUVzN0MsU0FBVzk2QixFQUFFODZCLFVBQVcsRUFBS3Q3QyxFQUFFeTdDLE9BQVNqN0IsRUFBRWk3QixLQUFPejdDLEVBQUV5N0MsUUFBVXQ4QixFQUFJcUIsRUFBRWs3QixnQkFBZ0J2OEIsRUFBRzNLLEdBQ2hKMkssRUFBRStkLElBQU05ZCxFQUNSRCxFQUFFZ2UsSUFBTW45QixFQUNSaTZDLEdBQUc5NkIsRUFBR0MsR0FDTkEsRUFBRTBNLFVBQVkzTSxFQUNkcUIsRUFBSXdhLEdBQUd4bUIsRUFBR3hVLEdBRUZ3VSxHQUNOLElBQUssU0FDTCxJQUFLLFNBQ0wsSUFBSyxRQUNIK0ssR0FBRSxPQUFRSixHQUNWaEosRUFBSW5XLEVBQ0osTUFFRixJQUFLLFFBQ0wsSUFBSyxRQUNILElBQUttVyxFQUFJLEVBQUdBLEVBQUl1ZCxHQUFHM3JCLE9BQVFvTyxJQUN6Qm9KLEdBQUVtVSxHQUFHdmQsR0FBSWdKLEdBR1hoSixFQUFJblcsRUFDSixNQUVGLElBQUssU0FDSHVmLEdBQUUsUUFBU0osR0FDWGhKLEVBQUluVyxFQUNKLE1BRUYsSUFBSyxNQUNMLElBQUssUUFDTCxJQUFLLE9BQ0h1ZixHQUFFLFFBQVNKLEdBQ1hJLEdBQUUsT0FBUUosR0FDVmhKLEVBQUluVyxFQUNKLE1BRUYsSUFBSyxPQUNIdWYsR0FBRSxRQUFTSixHQUNYSSxHQUFFLFNBQVVKLEdBQ1poSixFQUFJblcsRUFDSixNQUVGLElBQUssVUFDSHVmLEdBQUUsU0FBVUosR0FDWmhKLEVBQUluVyxFQUNKLE1BRUYsSUFBSyxRQUNIdXdCLEdBQUdwUixFQUFHbmYsR0FDTm1XLEVBQUkrWixHQUFHL1EsRUFBR25mLEdBQ1Z1ZixHQUFFLFVBQVdKLEdBQ2JnYyxHQUFHcDdCLEVBQUcsWUFDTixNQUVGLElBQUssU0FDSG9XLEVBQUk2YSxHQUFHN1IsRUFBR25mLEdBQ1YsTUFFRixJQUFLLFNBQ0htZixFQUFFa1IsY0FBZ0IsQ0FDaEJnckIsY0FBZXI3QyxFQUFFczdDLFVBRW5CbmxDLEVBQUloVixFQUFFLEdBQUluQixFQUFHLENBQ1hXLFdBQU8sSUFFVDRlLEdBQUUsVUFBV0osR0FDYmdjLEdBQUdwN0IsRUFBRyxZQUNOLE1BRUYsSUFBSyxXQUNIeXhCLEdBQUdyUyxFQUFHbmYsR0FDTm1XLEVBQUltYixHQUFHblMsRUFBR25mLEdBQ1Z1ZixHQUFFLFVBQVdKLEdBQ2JnYyxHQUFHcDdCLEVBQUcsWUFDTixNQUVGLFFBQ0VvVyxFQUFJblcsRUFHUis2QixHQUFHdm1CLEVBQUcyQixHQUNOLElBQUlELEVBQUlDLEVBRVIsSUFBS29MLEtBQUtyTCxFQUNSLEdBQUlBLEVBQUUzVSxlQUFlZ2dCLEdBQUksQ0FDdkIsSUFBSTVoQixFQUFJdVcsRUFBRXFMLEdBQ1YsVUFBWUEsRUFBSXVZLEdBQUczYSxFQUFHeGYsR0FBSyw0QkFBOEI0aEIsRUFBZ0MsT0FBM0I1aEIsRUFBSUEsRUFBSUEsRUFBRTI4QixZQUFTLElBQXFCdEssR0FBRzdTLEVBQUd4ZixHQUFNLGFBQWU0aEIsRUFBSSxrQkFBb0I1aEIsR0FBSyxhQUFlNlUsR0FBSyxLQUFPN1UsSUFBTTR5QixHQUFHcFQsRUFBR3hmLEdBQUssa0JBQW9CQSxHQUFLNHlCLEdBQUdwVCxFQUFHLEdBQUt4ZixHQUFLLG1DQUFxQzRoQixHQUFLLDZCQUErQkEsR0FBSyxjQUFnQkEsSUFBTThKLEVBQUc5cEIsZUFBZWdnQixHQUFLLE1BQVE1aEIsR0FBS3c3QixHQUFHcDdCLEVBQUd3aEIsR0FBSyxNQUFRNWhCLEdBQUs2dEIsRUFBR3JPLEVBQUdvQyxFQUFHNWhCLEVBQUc2Z0IsSUFJbmEsT0FBUWhNLEdBQ04sSUFBSyxRQUNIa2IsR0FBR3ZRLEdBQ0gwUixHQUFHMVIsRUFBR25mLEdBQUcsR0FDVCxNQUVGLElBQUssV0FDSDB2QixHQUFHdlEsR0FDSHVTLEdBQUd2UyxHQUNILE1BRUYsSUFBSyxTQUNILE1BQVFuZixFQUFFVyxPQUFTd2UsRUFBRXJCLGFBQWEsUUFBUyxHQUFLeVIsR0FBR3Z2QixFQUFFVyxRQUNyRCxNQUVGLElBQUssU0FDSHdlLEVBQUVtOEIsV0FBYXQ3QyxFQUFFczdDLFNBRWpCLE9BREF2N0MsRUFBSUMsRUFBRVcsT0FDTXV3QixHQUFHL1IsSUFBS25mLEVBQUVzN0MsU0FBVXY3QyxHQUFHLEdBQU0sTUFBUUMsRUFBRW93QixjQUFnQmMsR0FBRy9SLElBQUtuZixFQUFFczdDLFNBQVV0N0MsRUFBRW93QixjQUFjLEdBQ3ZHLE1BRUYsUUFDRSxvQkFBc0JqYSxFQUFFb2xDLFVBQVlwOEIsRUFBRXE4QixRQUFVcGdCLElBR3BEZSxHQUFHM25CLEVBQUd4VSxLQUFPb2YsRUFBRTZVLFdBQWEsR0FHOUIsT0FBUzdVLEVBQUUzVSxNQUFRMlUsRUFBRTZVLFdBQWEsS0FFcEMsT0FBTyxLQUVULEtBQUssRUFDSCxHQUFJOVUsR0FBSyxNQUFRQyxFQUFFME0sVUFBV3F1QixHQUFHaDdCLEVBQUdDLEVBQUdELEVBQUVtMkIsY0FBZXQxQyxPQUFRLENBQzlELEdBQUksa0JBQW9CQSxHQUFLLE9BQVNvZixFQUFFME0sVUFBVyxNQUFNOUUsTUFBTTVGLEVBQUUsTUFDakVyaEIsRUFBSWcxQyxHQUFHRCxHQUFHNzVCLFNBQ1Y4NUIsR0FBR0gsR0FBRzM1QixTQUNOODlCLEdBQUczNUIsSUFBTXJmLEVBQUlxZixFQUFFME0sVUFBVzlyQixFQUFJb2YsRUFBRWsyQixjQUFldjFDLEVBQUVtOUIsSUFBTTlkLEVBQUdyZixFQUFFMnlCLFlBQWMxeUIsSUFBTW9mLEVBQUU2VSxXQUFhLE1BQU9sMEIsR0FBSyxJQUFNQSxFQUFFMHlCLFNBQVcxeUIsRUFBSUEsRUFBRSt3QixlQUFlOVMsZUFBZWhlLElBQU1rOUIsSUFBTTlkLEVBQUdBLEVBQUUwTSxVQUFZL3JCLEdBRWpNLE9BQU8sS0FFVCxLQUFLLEdBR0gsT0FGQXVnQixHQUFFVSxJQUNGaGhCLEVBQUlvZixFQUFFK1UsY0FDRixLQUFxQixHQUFkL1UsRUFBRTZVLFlBQXdCN1UsRUFBRXd4QixlQUFpQjd3QyxFQUFHcWYsSUFDM0RyZixFQUFJLE9BQVNDLEVBQ2JBLEdBQUksRUFDSixPQUFTbWYsT0FBSSxJQUFXQyxFQUFFazJCLGNBQWNpRixVQUFZeEIsR0FBRzM1QixJQUEyQnBmLEVBQUksUUFBekJ3VSxFQUFJMkssRUFBRWdWLGVBQStCcDBCLEdBQUssT0FBU3lVLEdBQTJCLFFBQXJCQSxFQUFJMkssRUFBRW9WLE1BQU1DLFdBQTJDLFFBQW5CalQsRUFBSW5DLEVBQUU0MEIsY0FBMkI1MEIsRUFBRTQwQixZQUFjeC9CLEVBQUdBLEVBQUV1L0IsV0FBYXh5QixJQUFNbkMsRUFBRTQwQixZQUFjNTBCLEVBQUUwMEIsV0FBYXQvQixFQUFHQSxFQUFFdS9CLFdBQWEsTUFBT3YvQixFQUFFeWYsVUFBWSxJQUNyU2wwQixJQUFNQyxHQUFLLEtBQWdCLEVBQVRvZixFQUFFdmUsUUFBZSxPQUFTc2UsSUFBSyxJQUFPQyxFQUFFazJCLGNBQWNrRiw0QkFBOEIsS0FBbUIsRUFBWng1QixHQUFFL0YsU0FBY3lGLEtBQU1pN0IsS0FBT2o3QixHQUFJazdCLEtBQzVJbDdCLEtBQU1pN0IsSUFBTWo3QixLQUFNazdCLEtBQUlsN0IsR0FBSW03QixJQUM5QixJQUFNQyxJQUFNLE9BQVMxNUIsS0FBTTI1QixHQUFHMzVCLEdBQUd4QixJQUFJbzdCLEdBQUc1NUIsR0FBRzA1QixRQUV6Qy83QyxHQUFLQyxLQUFHb2YsRUFBRTZVLFdBQWEsR0FDcEIsTUFFVCxLQUFLLEVBQ0gsT0FBT2loQixLQUFhLEtBRXRCLEtBQUssR0FDSCxPQUFPM0UsR0FBR254QixHQUFJLEtBRWhCLEtBQUssR0FDSCxPQUFPTyxHQUFFUCxFQUFFcE8sT0FBU3U4QixLQUFNLEtBRTVCLEtBQUssR0FHSCxHQUZBanRCLEdBQUVVLElBRUUsUUFESmhoQixFQUFJb2YsRUFBRStVLGVBQ1UsT0FBTyxLQUd2QixHQUZBM2YsRUFBSSxLQUFxQixHQUFkNEssRUFBRTZVLFdBRVQsUUFESjFTLEVBQUl2aEIsRUFBRTQ2QyxZQUVKLEdBQUlwbUMsRUFBRzJtQyxHQUFHbjdDLEdBQUcsUUFDWCxHQUFJMGdCLEtBQU1pN0IsSUFBTSxPQUFTeDhCLEdBQUssS0FBcUIsR0FBZEEsRUFBRThVLFdBQWlCLElBQUsxUyxFQUFJbkMsRUFBRW1WLE1BQU8sT0FBU2hULEdBQUksQ0FHckYsR0FBSSxRQUZKcEMsRUFBSWsyQixHQUFHOXpCLElBRVMsQ0FRZCxJQVBBbkMsRUFBRTZVLFdBQWEsR0FDZmtuQixHQUFHbjdDLEdBQUcsR0FFTixRQURBd1UsRUFBSTJLLEVBQUVneUIsZUFDUy94QixFQUFFK3hCLFlBQWMzOEIsRUFBRzRLLEVBQUU2VSxXQUFhLEdBQ2pELE9BQVNqMEIsRUFBRTh6QyxhQUFlMTBCLEVBQUU0MEIsWUFBYyxNQUMxQzUwQixFQUFFMDBCLFdBQWE5ekMsRUFBRTh6QyxXQUVaOXpDLEVBQUlvZixFQUFFbVYsTUFBTyxPQUFTdjBCLEdBQ2xCdWhCLEVBQUl4aEIsR0FBWHlVLEVBQUl4VSxHQUFZaTBCLFdBQWEsRUFBR3pmLEVBQUV1L0IsV0FBYSxLQUFNdi9CLEVBQUV3L0IsWUFBYyxLQUFNeC9CLEVBQUVzL0IsV0FBYSxLQUF1QixRQUFqQjMwQixFQUFJM0ssRUFBRXdmLFlBQXlCeGYsRUFBRWk4QixvQkFBc0IsRUFBR2o4QixFQUFFbzhCLGVBQWlCcnZCLEVBQUcvTSxFQUFFK2YsTUFBUSxLQUFNL2YsRUFBRThnQyxjQUFnQixLQUFNOWdDLEVBQUUyZixjQUFnQixLQUFNM2YsRUFBRTI4QixZQUFjLEtBQU0zOEIsRUFBRStXLGFBQWUsT0FBUy9XLEVBQUVpOEIsb0JBQXNCdHhCLEVBQUVzeEIsb0JBQXFCajhCLEVBQUVvOEIsZUFBaUJ6eEIsRUFBRXl4QixlQUFnQnA4QixFQUFFK2YsTUFBUXBWLEVBQUVvVixNQUFPL2YsRUFBRThnQyxjQUFnQm4yQixFQUFFbTJCLGNBQWU5Z0MsRUFBRTJmLGNBQWdCaFYsRUFBRWdWLGNBQWUzZixFQUFFMjhCLFlBQWNoeUIsRUFBRWd5QixZQUFhNXZCLEVBQUlwQyxFQUFFb00sYUFBYy9XLEVBQUUrVyxhQUFlLE9BQVNoSyxFQUFJLEtBQU8sQ0FDbmlCcXZCLGVBQWdCcnZCLEVBQUVxdkIsZUFDbEJELGFBQWNwdkIsRUFBRW92QixhQUNoQkssV0FBWXp2QixFQUFFeXZCLGFBQ1poeEMsRUFBSUEsRUFBRXcwQixRQUlaLE9BREFuVCxHQUFFTCxHQUFlLEVBQVpBLEdBQUUvRixRQUFjLEdBQ2RtRSxFQUFFbVYsTUFHWGhULEVBQUlBLEVBQUVpVCxhQUdMLENBQ0wsSUFBS2hnQixFQUFHLEdBQWUsUUFBWDJLLEVBQUlrMkIsR0FBRzl6QixLQUNqQixHQUFJbkMsRUFBRTZVLFdBQWEsR0FBSXpmLEdBQUksRUFBdUIsUUFBbkJ6VSxFQUFJb2YsRUFBRWd5QixlQUE0Qi94QixFQUFFK3hCLFlBQWNweEMsRUFBR3FmLEVBQUU2VSxXQUFhLEdBQUlrbkIsR0FBR243QyxHQUFHLEdBQUssT0FBU0EsRUFBRSs2QyxNQUFRLFdBQWEvNkMsRUFBRWk3QyxXQUFhMTVCLEVBQUV5UyxVQUFXLE9BQXdDLFFBQWpDNVUsRUFBSUEsRUFBRTAwQixXQUFhOXpDLEVBQUU4ekMsY0FBMkIxMEIsRUFBRTIwQixXQUFhLE1BQU8sVUFDdFAsRUFBSXZFLEtBQU94dkMsRUFBRTY2QyxtQkFBcUI3NkMsRUFBRWc3QyxnQkFBa0IsRUFBSWo3QyxJQUFNcWYsRUFBRTZVLFdBQWEsR0FBSXpmLEdBQUksRUFBSTJtQyxHQUFHbjdDLEdBQUcsR0FBS29mLEVBQUV3eEIsZUFBaUJ4eEIsRUFBRXF4QixvQkFBc0Ixd0MsRUFBSSxHQUM1SkMsRUFBRTI2QyxhQUFlcDVCLEVBQUVpVCxRQUFVcFYsRUFBRW1WLE1BQU9uVixFQUFFbVYsTUFBUWhULElBQWtCLFFBQVp4aEIsRUFBSUMsRUFBRTg2QyxNQUFtQi82QyxFQUFFeTBCLFFBQVVqVCxFQUFJbkMsRUFBRW1WLE1BQVFoVCxFQUFHdmhCLEVBQUU4NkMsS0FBT3Y1QixHQUV2SCxPQUFPLE9BQVN2aEIsRUFBRSs2QyxNQUFRLElBQU0vNkMsRUFBRWc3QyxpQkFBbUJoN0MsRUFBRWc3QyxlQUFpQnhMLEtBQU8sS0FBTXp2QyxFQUFJQyxFQUFFKzZDLEtBQU0vNkMsRUFBRTQ2QyxVQUFZNzZDLEVBQUdDLEVBQUUrNkMsS0FBT2g3QyxFQUFFeTBCLFFBQVN4MEIsRUFBRTh6QyxXQUFhMTBCLEVBQUUwMEIsV0FBWTl6QyxFQUFFNjZDLG1CQUFxQnJMLEtBQU16dkMsRUFBRXkwQixRQUFVLEtBQU1wVixFQUFJNEIsR0FBRS9GLFFBQVNvRyxHQUFFTCxHQUFHeE0sRUFBUSxFQUFKNEssRUFBUSxFQUFRLEVBQUpBLEdBQVFyZixHQUFLLEtBR3ZRLE1BQU1pbkIsTUFBTTVGLEVBQUUsSUFBS2hDLEVBQUVwVyxNQUd2QixTQUFTaXpDLEdBQUc5OEIsR0FDVixPQUFRQSxFQUFFblcsS0FDUixLQUFLLEVBQ0gyVyxHQUFFUixFQUFFbk8sT0FBU3U4QixLQUNiLElBQUludUIsRUFBSUQsRUFBRThVLFVBQ1YsT0FBVyxLQUFKN1UsR0FBWUQsRUFBRThVLFdBQWlCLEtBQUw3VSxFQUFZLEdBQUlELEdBQUssS0FFeEQsS0FBSyxFQUtILEdBSkErMUIsS0FDQTUwQixHQUFFYSxJQUNGYixHQUFFZ0IsSUFFRSxLQUFXLElBRGZsQyxFQUFJRCxFQUFFOFUsWUFDYyxNQUFNak4sTUFBTTVGLEVBQUUsTUFFbEMsT0FEQWpDLEVBQUU4VSxXQUFpQixLQUFMN1UsRUFBWSxHQUNuQkQsRUFFVCxLQUFLLEVBQ0gsT0FBT2kyQixHQUFHajJCLEdBQUksS0FFaEIsS0FBSyxHQUNILE9BQU9tQixHQUFFVSxJQUF5QixNQUFyQjVCLEVBQUlELEVBQUU4VSxZQUF1QjlVLEVBQUU4VSxXQUFpQixLQUFMN1UsRUFBWSxHQUFJRCxHQUFLLEtBRS9FLEtBQUssR0FDSCxPQUFPbUIsR0FBRVUsSUFBSSxLQUVmLEtBQUssRUFDSCxPQUFPazBCLEtBQU0sS0FFZixLQUFLLEdBQ0gsT0FBTzNFLEdBQUdweEIsR0FBSSxLQUVoQixRQUNFLE9BQU8sTUFJYixTQUFTKzhCLEdBQUcvOEIsRUFBR0MsR0FDYixNQUFPLENBQ0x6ZSxNQUFPd2UsRUFDUG5YLE9BQVFvWCxFQUNSKzhCLE1BQU9sdEIsR0FBRzdQLElBN2VkNjZCLEdBQUssU0FBWTk2QixFQUFHQyxHQUNsQixJQUFLLElBQUlyZixFQUFJcWYsRUFBRW1WLE1BQU8sT0FBU3gwQixHQUFJLENBQ2pDLEdBQUksSUFBTUEsRUFBRWlKLEtBQU8sSUFBTWpKLEVBQUVpSixJQUFLbVcsRUFBRXBCLFlBQVloZSxFQUFFK3JCLGdCQUFnQixHQUFJLElBQU0vckIsRUFBRWlKLEtBQU8sT0FBU2pKLEVBQUV3MEIsTUFBTyxDQUNuR3gwQixFQUFFdzBCLE1BQU1qRixPQUFTdnZCLEVBQ2pCQSxFQUFJQSxFQUFFdzBCLE1BQ04sU0FFRixHQUFJeDBCLElBQU1xZixFQUFHLE1BRWIsS0FBTyxPQUFTcmYsRUFBRXkwQixTQUFVLENBQzFCLEdBQUksT0FBU3owQixFQUFFdXZCLFFBQVV2dkIsRUFBRXV2QixTQUFXbFEsRUFBRyxPQUN6Q3JmLEVBQUlBLEVBQUV1dkIsT0FHUnZ2QixFQUFFeTBCLFFBQVFsRixPQUFTdnZCLEVBQUV1dkIsT0FDckJ2dkIsRUFBSUEsRUFBRXkwQixVQU1WMGxCLEdBQUssU0FBWS82QixFQUFHQyxFQUFHcmYsRUFBR0MsRUFBR3dVLEdBQzNCLElBQUkrTSxFQUFJcEMsRUFBRW0yQixjQUVWLEdBQUkvekIsSUFBTXZoQixFQUFHLENBQ1gsSUFzQ0ltVyxFQUFHRCxFQXRDSHNLLEVBQUlwQixFQUFFME0sVUFJVixPQUhBaXBCLEdBQUdILEdBQUczNUIsU0FDTmtFLEVBQUksS0FFSXBmLEdBQ04sSUFBSyxRQUNId2hCLEVBQUkyTyxHQUFHMVAsRUFBR2UsR0FDVnZoQixFQUFJa3dCLEdBQUcxUCxFQUFHeGdCLEdBQ1ZtZixFQUFJLEdBQ0osTUFFRixJQUFLLFNBQ0hvQyxFQUFJeVAsR0FBR3hRLEVBQUdlLEdBQ1Z2aEIsRUFBSWd4QixHQUFHeFEsRUFBR3hnQixHQUNWbWYsRUFBSSxHQUNKLE1BRUYsSUFBSyxTQUNIb0MsRUFBSXBnQixFQUFFLEdBQUlvZ0IsRUFBRyxDQUNYNWdCLFdBQU8sSUFFVFgsRUFBSW1CLEVBQUUsR0FBSW5CLEVBQUcsQ0FDWFcsV0FBTyxJQUVUd2UsRUFBSSxHQUNKLE1BRUYsSUFBSyxXQUNIb0MsRUFBSStQLEdBQUc5USxFQUFHZSxHQUNWdmhCLEVBQUlzeEIsR0FBRzlRLEVBQUd4Z0IsR0FDVm1mLEVBQUksR0FDSixNQUVGLFFBQ0Usb0JBQXNCb0MsRUFBRWc2QixTQUFXLG9CQUFzQnY3QyxFQUFFdTdDLFVBQVkvNkIsRUFBRWc3QixRQUFVcGdCLElBT3ZGLElBQUtqbEIsS0FKTDRrQixHQUFHaDdCLEVBQUdDLEdBRU5ELEVBQUksS0FFTXdoQixFQUNSLElBQUt2aEIsRUFBRXVCLGVBQWU0VSxJQUFNb0wsRUFBRWhnQixlQUFlNFUsSUFBTSxNQUFRb0wsRUFBRXBMLEdBQUksR0FBSSxVQUFZQSxFQUFHLElBQUtELEtBQUtzSyxFQUFJZSxFQUFFcEwsR0FDbEdxSyxFQUFFamYsZUFBZTJVLEtBQU9uVyxJQUFNQSxFQUFJLElBQUtBLEVBQUVtVyxHQUFLLFFBQ3pDLDRCQUE4QkMsR0FBSyxhQUFlQSxHQUFLLG1DQUFxQ0EsR0FBSyw2QkFBK0JBLEdBQUssY0FBZ0JBLElBQU1rVixFQUFHOXBCLGVBQWU0VSxHQUFLZ0osSUFBTUEsRUFBSSxLQUFPQSxFQUFJQSxHQUFLLElBQUl6WCxLQUFLeU8sRUFBRyxPQUdqTyxJQUFLQSxLQUFLblcsRUFBRyxDQUNYLElBQUlMLEVBQUlLLEVBQUVtVyxHQUVWLEdBREFxSyxFQUFJLE1BQVFlLEVBQUlBLEVBQUVwTCxRQUFLLEVBQ25CblcsRUFBRXVCLGVBQWU0VSxJQUFNeFcsSUFBTTZnQixJQUFNLE1BQVE3Z0IsR0FBSyxNQUFRNmdCLEdBQUksR0FBSSxVQUFZckssRUFDOUUsR0FBSXFLLEVBQUcsQ0FDTCxJQUFLdEssS0FBS3NLLEdBQ1BBLEVBQUVqZixlQUFlMlUsSUFBTXZXLEdBQUtBLEVBQUU0QixlQUFlMlUsS0FBT25XLElBQU1BLEVBQUksSUFBS0EsRUFBRW1XLEdBQUssSUFHN0UsSUFBS0EsS0FBS3ZXLEVBQ1JBLEVBQUU0QixlQUFlMlUsSUFBTXNLLEVBQUV0SyxLQUFPdlcsRUFBRXVXLEtBQU9uVyxJQUFNQSxFQUFJLElBQUtBLEVBQUVtVyxHQUFLdlcsRUFBRXVXLFNBRTlEblcsSUFBTW9mLElBQU1BLEVBQUksSUFBS0EsRUFBRXpYLEtBQUt5TyxFQUFHcFcsSUFBS0EsRUFBSUosTUFDMUMsNEJBQThCd1csR0FBS3hXLEVBQUlBLEVBQUlBLEVBQUUyOEIsWUFBUyxFQUFROWIsRUFBSUEsRUFBSUEsRUFBRThiLFlBQVMsRUFBUSxNQUFRMzhCLEdBQUs2Z0IsSUFBTTdnQixJQUFNd2YsRUFBSUEsR0FBSyxJQUFJelgsS0FBS3lPLEVBQUd4VyxJQUFNLGFBQWV3VyxFQUFJcUssSUFBTTdnQixHQUFLLGtCQUFvQkEsR0FBSyxrQkFBb0JBLElBQU13ZixFQUFJQSxHQUFLLElBQUl6WCxLQUFLeU8sRUFBRyxHQUFLeFcsR0FBSyxtQ0FBcUN3VyxHQUFLLDZCQUErQkEsSUFBTWtWLEVBQUc5cEIsZUFBZTRVLElBQU0sTUFBUXhXLEdBQUt3N0IsR0FBRzNtQixFQUFHMkIsR0FBSWdKLEdBQUtxQixJQUFNN2dCLElBQU13ZixFQUFJLE1BQVFBLEVBQUlBLEdBQUssSUFBSXpYLEtBQUt5TyxFQUFHeFcsSUFHdGJJLElBQU1vZixFQUFJQSxHQUFLLElBQUl6WCxLQUFLLFFBQVMzSCxHQUNqQ3lVLEVBQUkySyxHQUNBQyxFQUFFK3hCLFlBQWMzOEIsS0FBRzRLLEVBQUU2VSxXQUFhLEtBSTFDa21CLEdBQUssU0FBWWg3QixFQUFHQyxFQUFHcmYsRUFBR0MsR0FDeEJELElBQU1DLElBQU1vZixFQUFFNlUsV0FBYSxJQWtaN0IsSUFBSW1vQixHQUFLLG9CQUFzQkMsUUFBVUEsUUFBVUMsSUFFbkQsU0FBU0MsR0FBR3A5QixFQUFHQyxHQUNiLElBQUlyZixFQUFJcWYsRUFBRXBYLE9BQ05oSSxFQUFJb2YsRUFBRSs4QixNQUNWLE9BQVNuOEMsR0FBSyxPQUFTRCxJQUFNQyxFQUFJaXZCLEdBQUdsdkIsSUFDcEMsT0FBU0EsR0FBS2l2QixHQUFHanZCLEVBQUVpUixNQUNuQm9PLEVBQUlBLEVBQUV6ZSxNQUNOLE9BQVN3ZSxHQUFLLElBQU1BLEVBQUVuVyxLQUFPZ21CLEdBQUc3UCxFQUFFbk8sTUFFbEMsSUFDRXVVLFFBQVFDLE1BQU1wRyxHQUNkLE1BQU81SyxHQUNQZ29CLFlBQVcsV0FDVCxNQUFNaG9CLE1BYVosU0FBU2dvQyxHQUFHcjlCLEdBQ1YsSUFBSUMsRUFBSUQsRUFBRTFVLElBQ1YsR0FBSSxPQUFTMlUsRUFBRyxHQUFJLG9CQUFzQkEsRUFBRyxJQUMzQ0EsRUFBRSxNQUNGLE1BQU9yZixHQUNQMDhDLEdBQUd0OUIsRUFBR3BmLFFBQ0RxZixFQUFFbkUsUUFBVSxLQUdyQixTQUFTeWhDLEdBQUd2OUIsRUFBR0MsR0FDYixPQUFRQSxFQUFFcFcsS0FDUixLQUFLLEVBQ0wsS0FBSyxHQUNMLEtBQUssR0FDTCxLQUFLLEdBQ0gsT0FFRixLQUFLLEVBQ0gsR0FBa0IsSUFBZG9XLEVBQUU2VSxXQUFtQixPQUFTOVUsRUFBRyxDQUNuQyxJQUFJcGYsRUFBSW9mLEVBQUVtMkIsY0FDTnQxQyxFQUFJbWYsRUFBRWdWLGNBRVYvVSxHQURBRCxFQUFJQyxFQUFFME0sV0FDQXVuQix3QkFBd0JqMEIsRUFBRWcxQixjQUFnQmgxQixFQUFFcE8sS0FBT2pSLEVBQUlrd0MsR0FBRzd3QixFQUFFcE8sS0FBTWpSLEdBQUlDLEdBQzVFbWYsRUFBRXc5QixvQ0FBc0N2OUIsRUFHMUMsT0FFRixLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxHQUNILE9BR0osTUFBTTRILE1BQU01RixFQUFFLE1BR2hCLFNBQVN3N0IsR0FBR3o5QixFQUFHQyxHQUliLEdBQUksUUFGSkEsRUFBSSxRQURKQSxFQUFJQSxFQUFFK3hCLGFBQ1cveEIsRUFBRTAwQixXQUFhLE1BRWhCLENBQ2QsSUFBSS96QyxFQUFJcWYsRUFBSUEsRUFBRTFGLEtBRWQsRUFBRyxDQUNELElBQUszWixFQUFFaUosSUFBTW1XLEtBQU9BLEVBQUcsQ0FDckIsSUFBSW5mLEVBQUlELEVBQUVvM0MsUUFDVnAzQyxFQUFFbzNDLGFBQVUsT0FDWixJQUFXbjNDLEdBQUtBLElBR2xCRCxFQUFJQSxFQUFFMlosV0FDQzNaLElBQU1xZixJQUluQixTQUFTeTlCLEdBQUcxOUIsRUFBR0MsR0FJYixHQUFJLFFBRkpBLEVBQUksUUFESkEsRUFBSUEsRUFBRSt4QixhQUNXL3hCLEVBQUUwMEIsV0FBYSxNQUVoQixDQUNkLElBQUkvekMsRUFBSXFmLEVBQUlBLEVBQUUxRixLQUVkLEVBQUcsQ0FDRCxJQUFLM1osRUFBRWlKLElBQU1tVyxLQUFPQSxFQUFHLENBQ3JCLElBQUluZixFQUFJRCxFQUFFaUIsT0FDVmpCLEVBQUVvM0MsUUFBVW4zQyxJQUdkRCxFQUFJQSxFQUFFMlosV0FDQzNaLElBQU1xZixJQUluQixTQUFTMDlCLEdBQUczOUIsRUFBR0MsRUFBR3JmLEdBQ2hCLE9BQVFBLEVBQUVpSixLQUNSLEtBQUssRUFDTCxLQUFLLEdBQ0wsS0FBSyxHQUNMLEtBQUssR0FFSCxZQURBNnpDLEdBQUcsRUFBRzk4QyxHQUdSLEtBQUssRUFFSCxHQURBb2YsRUFBSXBmLEVBQUUrckIsVUFDWSxFQUFkL3JCLEVBQUVrMEIsVUFBZSxHQUFJLE9BQVM3VSxFQUFHRCxFQUFFcTBCLHdCQUF5QixDQUM5RCxJQUFJeHpDLEVBQUlELEVBQUVxMEMsY0FBZ0JyMEMsRUFBRWlSLEtBQU9vTyxFQUFFazJCLGNBQWdCckYsR0FBR2x3QyxFQUFFaVIsS0FBTW9PLEVBQUVrMkIsZUFDbEVuMkIsRUFBRXk2QixtQkFBbUI1NUMsRUFBR29mLEVBQUUrVSxjQUFlaFYsRUFBRXc5QixxQ0FJN0MsWUFEQSxRQURBdjlCLEVBQUlyZixFQUFFb3hDLGNBQ1FlLEdBQUdueUMsRUFBR3FmLEVBQUdELElBR3pCLEtBQUssRUFHSCxHQUFJLFFBRkpDLEVBQUlyZixFQUFFb3hDLGFBRVUsQ0FFZCxHQURBaHlCLEVBQUksS0FDQSxPQUFTcGYsRUFBRXcwQixNQUFPLE9BQVF4MEIsRUFBRXcwQixNQUFNdnJCLEtBQ3BDLEtBQUssRUFDSG1XLEVBQUlwZixFQUFFdzBCLE1BQU16SSxVQUNaLE1BRUYsS0FBSyxFQUNIM00sRUFBSXBmLEVBQUV3MEIsTUFBTXpJLFVBRWhCb21CLEdBQUdueUMsRUFBR3FmLEVBQUdELEdBR1gsT0FFRixLQUFLLEVBR0gsT0FGQUEsRUFBSXBmLEVBQUUrckIsZUFDTixPQUFTMU0sR0FBbUIsRUFBZHJmLEVBQUVrMEIsV0FBaUJrSSxHQUFHcDhCLEVBQUVpUixLQUFNalIsRUFBRXUxQyxnQkFBa0JuMkIsRUFBRTQ5QixTQUdwRSxLQUFLLEVBR0wsS0FBSyxFQUdMLEtBQUssR0FDSCxPQUVGLEtBQUssR0FFSCxZQURBLE9BQVNoOUMsRUFBRW8wQixnQkFBa0JwMEIsRUFBSUEsRUFBRWkwQixVQUFXLE9BQVNqMEIsSUFBTUEsRUFBSUEsRUFBRW8wQixjQUFlLE9BQVNwMEIsSUFBTUEsRUFBSUEsRUFBRXEwQixXQUFZLE9BQVNyMEIsR0FBS3U0QixHQUFHdjRCLE9BR3RJLEtBQUssR0FDTCxLQUFLLEdBQ0wsS0FBSyxHQUNMLEtBQUssR0FDSCxPQUdKLE1BQU1pbkIsTUFBTTVGLEVBQUUsTUFHaEIsU0FBUzQ3QixHQUFHNzlCLEVBQUdDLEVBQUdyZixHQUdoQixPQUZBLG9CQUFzQms5QyxJQUFNQSxHQUFHNzlCLEdBRXZCQSxFQUFFcFcsS0FDUixLQUFLLEVBQ0wsS0FBSyxHQUNMLEtBQUssR0FDTCxLQUFLLEdBQ0wsS0FBSyxHQUdILEdBQUksUUFGSm1XLEVBQUlDLEVBQUUreEIsY0FFK0IsUUFBbEJoeUIsRUFBSUEsRUFBRTIwQixZQUF5QixDQUNoRCxJQUFJOXpDLEVBQUltZixFQUFFekYsS0FDVmkyQixHQUFHLEdBQUs1dkMsRUFBSSxHQUFLQSxHQUFHLFdBQ2xCLElBQUlvZixFQUFJbmYsRUFFUixFQUFHLENBQ0QsSUFBSUQsRUFBSW9mLEVBQUVnNEIsUUFFVixRQUFJLElBQVdwM0MsRUFBRyxDQUNoQixJQUFJeWdCLEVBQUlwQixFQUVSLElBQ0VyZixJQUNBLE1BQU9vVyxHQUNQc21DLEdBQUdqOEIsRUFBR3JLLElBSVZnSixFQUFJQSxFQUFFekYsV0FDQ3lGLElBQU1uZixNQUluQixNQUVGLEtBQUssRUFDSHc4QyxHQUFHcDlCLEdBRUgsb0JBREFyZixFQUFJcWYsRUFBRTBNLFdBQ2tCb3hCLHNCQTVMOUIsU0FBWS85QixFQUFHQyxHQUNiLElBQ0VBLEVBQUU3VSxNQUFRNFUsRUFBRW0yQixjQUFlbDJCLEVBQUUyekIsTUFBUTV6QixFQUFFZ1YsY0FBZS9VLEVBQUU4OUIsdUJBQ3hELE1BQU9uOUMsR0FDUDA4QyxHQUFHdDlCLEVBQUdwZixJQXdMNENvOUMsQ0FBRy85QixFQUFHcmYsR0FDdEQsTUFFRixLQUFLLEVBQ0h5OEMsR0FBR3A5QixHQUNILE1BRUYsS0FBSyxFQUNIZytCLEdBQUdqK0IsRUFBR0MsRUFBR3JmLElBSWYsU0FBU3M5QyxHQUFHbCtCLEdBQ1YsSUFBSUMsRUFBSUQsRUFBRTZVLFVBQ1Y3VSxFQUFFbVEsT0FBUyxLQUNYblEsRUFBRW9WLE1BQVEsS0FDVnBWLEVBQUVnVixjQUFnQixLQUNsQmhWLEVBQUVneUIsWUFBYyxLQUNoQmh5QixFQUFFb00sYUFBZSxLQUNqQnBNLEVBQUU2VSxVQUFZLEtBQ2Q3VSxFQUFFNjBCLFlBQWMsS0FDaEI3MEIsRUFBRTIwQixXQUFhLEtBQ2YzMEIsRUFBRXk1QixhQUFlLEtBQ2pCejVCLEVBQUVtMkIsY0FBZ0IsS0FDbEJuMkIsRUFBRTJNLFVBQVksS0FDZCxPQUFTMU0sR0FBS2krQixHQUFHaitCLEdBR25CLFNBQVNrK0IsR0FBR24rQixHQUNWLE9BQU8sSUFBTUEsRUFBRW5XLEtBQU8sSUFBTW1XLEVBQUVuVyxLQUFPLElBQU1tVyxFQUFFblcsSUFHL0MsU0FBU3UwQyxHQUFHcCtCLEdBQ1ZBLEVBQUcsQ0FDRCxJQUFLLElBQUlDLEVBQUlELEVBQUVtUSxPQUFRLE9BQVNsUSxHQUFJLENBQ2xDLEdBQUlrK0IsR0FBR2wrQixHQUFJLENBQ1QsSUFBSXJmLEVBQUlxZixFQUNSLE1BQU1ELEVBR1JDLEVBQUlBLEVBQUVrUSxPQUdSLE1BQU10SSxNQUFNNUYsRUFBRSxNQUtoQixPQUZBaEMsRUFBSXJmLEVBQUUrckIsVUFFRS9yQixFQUFFaUosS0FDUixLQUFLLEVBQ0gsSUFBSWhKLEdBQUksRUFDUixNQUVGLEtBQUssRUFLTCxLQUFLLEVBQ0hvZixFQUFJQSxFQUFFNlcsY0FDTmoyQixHQUFJLEVBQ0osTUFFRixRQUNFLE1BQU1nbkIsTUFBTTVGLEVBQUUsTUFHSixHQUFkcmhCLEVBQUVrMEIsWUFBbUIxQixHQUFHblQsRUFBRyxJQUFLcmYsRUFBRWswQixZQUFjLElBRWhEOVUsRUFBR0MsRUFBRyxJQUFLcmYsRUFBSW9mLElBQUssQ0FDbEIsS0FBTyxPQUFTcGYsRUFBRXkwQixTQUFVLENBQzFCLEdBQUksT0FBU3owQixFQUFFdXZCLFFBQVVndUIsR0FBR3Y5QyxFQUFFdXZCLFFBQVMsQ0FDckN2dkIsRUFBSSxLQUNKLE1BQU1vZixFQUdScGYsRUFBSUEsRUFBRXV2QixPQUtSLElBRkF2dkIsRUFBRXkwQixRQUFRbEYsT0FBU3Z2QixFQUFFdXZCLE9BRWhCdnZCLEVBQUlBLEVBQUV5MEIsUUFBUyxJQUFNejBCLEVBQUVpSixLQUFPLElBQU1qSixFQUFFaUosS0FBTyxLQUFPakosRUFBRWlKLEtBQU0sQ0FDL0QsR0FBa0IsRUFBZGpKLEVBQUVrMEIsVUFBZSxTQUFTN1UsRUFDOUIsR0FBSSxPQUFTcmYsRUFBRXcwQixPQUFTLElBQU14MEIsRUFBRWlKLElBQUssU0FBU29XLEVBQU9yZixFQUFFdzBCLE1BQU1qRixPQUFTdnZCLEVBQUdBLEVBQUlBLEVBQUV3MEIsTUFHakYsS0FBb0IsRUFBZHgwQixFQUFFazBCLFdBQWdCLENBQ3RCbDBCLEVBQUlBLEVBQUUrckIsVUFDTixNQUFNM00sR0FJVm5mLEVBR0YsU0FBU3c5QyxFQUFHcitCLEVBQUdDLEVBQUdyZixHQUNoQixJQUFJQyxFQUFJbWYsRUFBRW5XLElBQ053TCxFQUFJLElBQU14VSxHQUFLLElBQU1BLEVBQ3pCLEdBQUl3VSxFQUFHMkssRUFBSTNLLEVBQUkySyxFQUFFMk0sVUFBWTNNLEVBQUUyTSxVQUFVMVksU0FBVWdNLEVBQUksSUFBTXJmLEVBQUUweUIsU0FBVzF5QixFQUFFNGUsV0FBV1IsYUFBYWdCLEVBQUdDLEdBQUtyZixFQUFFb2UsYUFBYWdCLEVBQUdDLElBQU0sSUFBTXJmLEVBQUUweUIsVUFBWXJULEVBQUlyZixFQUFFNGUsWUFBY1IsYUFBYWdCLEVBQUdwZixJQUFPcWYsRUFBSXJmLEdBQUtnZSxZQUFZb0IsR0FBZ0MsUUFBM0JwZixFQUFJQSxFQUFFMDlDLDJCQUFtQyxJQUFXMTlDLEdBQUssT0FBU3FmLEVBQUVvOEIsVUFBWXA4QixFQUFFbzhCLFFBQVVwZ0IsVUFBVSxHQUFJLElBQU1wN0IsR0FBbUIsUUFBYm1mLEVBQUlBLEVBQUVvVixPQUFvQixJQUFLaXBCLEVBQUdyK0IsRUFBR0MsRUFBR3JmLEdBQUlvZixFQUFJQSxFQUFFcVYsUUFBUyxPQUFTclYsR0FDclpxK0IsRUFBR3IrQixFQUFHQyxFQUFHcmYsR0FBSW9mLEVBQUlBLEVBQUVxVixRQVBqQmdwQixDQUFHcitCLEVBQUdwZixFQUFHcWYsR0FXZixTQUFTcytCLEVBQUd2K0IsRUFBR0MsRUFBR3JmLEdBQ2hCLElBQUlDLEVBQUltZixFQUFFblcsSUFDTndMLEVBQUksSUFBTXhVLEdBQUssSUFBTUEsRUFDekIsR0FBSXdVLEVBQUcySyxFQUFJM0ssRUFBSTJLLEVBQUUyTSxVQUFZM00sRUFBRTJNLFVBQVUxWSxTQUFVZ00sRUFBSXJmLEVBQUVvZSxhQUFhZ0IsRUFBR0MsR0FBS3JmLEVBQUVnZSxZQUFZb0IsUUFBUSxHQUFJLElBQU1uZixHQUFtQixRQUFibWYsRUFBSUEsRUFBRW9WLE9BQW9CLElBQUttcEIsRUFBR3YrQixFQUFHQyxFQUFHcmYsR0FBSW9mLEVBQUlBLEVBQUVxVixRQUFTLE9BQVNyVixHQUN0THUrQixFQUFHditCLEVBQUdDLEVBQUdyZixHQUFJb2YsRUFBSUEsRUFBRXFWLFFBZkhrcEIsQ0FBR3YrQixFQUFHcGYsRUFBR3FmLEdBbUI3QixTQUFTZytCLEdBQUdqK0IsRUFBR0MsRUFBR3JmLEdBQ2hCLElBQUssSUFBbUJ3aEIsRUFBR2YsRUFBbEJ4Z0IsRUFBSW9mLEVBQUc1SyxHQUFJLElBQVksQ0FDOUIsSUFBS0EsRUFBRyxDQUNOQSxFQUFJeFUsRUFBRXN2QixPQUVOblEsRUFBRyxPQUFTLENBQ1YsR0FBSSxPQUFTM0ssRUFBRyxNQUFNd1MsTUFBTTVGLEVBQUUsTUFHOUIsT0FGQUcsRUFBSS9NLEVBQUVzWCxVQUVFdFgsRUFBRXhMLEtBQ1IsS0FBSyxFQUNId1gsR0FBSSxFQUNKLE1BQU1yQixFQUVSLEtBQUssRUFLTCxLQUFLLEVBQ0hvQyxFQUFJQSxFQUFFMFUsY0FDTnpWLEdBQUksRUFDSixNQUFNckIsRUFHVjNLLEVBQUlBLEVBQUU4YSxPQUdSOWEsR0FBSSxFQUdOLEdBQUksSUFBTXhVLEVBQUVnSixLQUFPLElBQU1oSixFQUFFZ0osSUFBSyxDQUM5Qm1XLEVBQUcsSUFBSyxJQUFJaEosRUFBSWdKLEVBQUdqSixFQUFJbFcsRUFBR0wsRUFBSUksRUFBR0QsRUFBSW9XLElBQ25DLEdBQUk4bUMsR0FBRzdtQyxFQUFHclcsRUFBR0gsR0FBSSxPQUFTRyxFQUFFeTBCLE9BQVMsSUFBTXowQixFQUFFa0osSUFBS2xKLEVBQUV5MEIsTUFBTWpGLE9BQVN4dkIsRUFBR0EsRUFBSUEsRUFBRXkwQixVQUFXLENBQ3JGLEdBQUl6MEIsSUFBTW9XLEVBQUcsTUFBTWlKLEVBRW5CLEtBQU8sT0FBU3JmLEVBQUUwMEIsU0FBVSxDQUMxQixHQUFJLE9BQVMxMEIsRUFBRXd2QixRQUFVeHZCLEVBQUV3dkIsU0FBV3BaLEVBQUcsTUFBTWlKLEVBQy9DcmYsRUFBSUEsRUFBRXd2QixPQUdSeHZCLEVBQUUwMEIsUUFBUWxGLE9BQVN4dkIsRUFBRXd2QixPQUNyQnh2QixFQUFJQSxFQUFFMDBCLFFBSVZoVSxHQUFLckssRUFBSW9MLEVBQUdyTCxFQUFJbFcsRUFBRThyQixVQUFXLElBQU0zVixFQUFFc2MsU0FBV3RjLEVBQUV3SSxXQUFXQyxZQUFZMUksR0FBS0MsRUFBRXlJLFlBQVkxSSxJQUFNcUwsRUFBRTNDLFlBQVk1ZSxFQUFFOHJCLGdCQUM3RyxHQUFJLElBQU05ckIsRUFBRWdKLEtBQ2pCLEdBQUksT0FBU2hKLEVBQUV1MEIsTUFBTyxDQUNwQmhULEVBQUl2aEIsRUFBRThyQixVQUFVbUssY0FDaEJ6VixHQUFJLEVBQ0p4Z0IsRUFBRXUwQixNQUFNakYsT0FBU3R2QixFQUNqQkEsRUFBSUEsRUFBRXUwQixNQUNOLGVBRUcsR0FBSXlvQixHQUFHNzlCLEVBQUduZixFQUFHRCxHQUFJLE9BQVNDLEVBQUV1MEIsTUFBTyxDQUN4Q3YwQixFQUFFdTBCLE1BQU1qRixPQUFTdHZCLEVBQ2pCQSxFQUFJQSxFQUFFdTBCLE1BQ04sU0FHRixHQUFJdjBCLElBQU1vZixFQUFHLE1BRWIsS0FBTyxPQUFTcGYsRUFBRXcwQixTQUFVLENBQzFCLEdBQUksT0FBU3gwQixFQUFFc3ZCLFFBQVV0dkIsRUFBRXN2QixTQUFXbFEsRUFBRyxPQUV6QyxLQURBcGYsRUFBSUEsRUFBRXN2QixRQUNFdG1CLE1BQVF3TCxHQUFJLEdBR3RCeFUsRUFBRXcwQixRQUFRbEYsT0FBU3R2QixFQUFFc3ZCLE9BQ3JCdHZCLEVBQUlBLEVBQUV3MEIsU0FJVixTQUFTbXBCLEdBQUd4K0IsRUFBR0MsR0FDYixPQUFRQSxFQUFFcFcsS0FDUixLQUFLLEVBQ0wsS0FBSyxHQUNMLEtBQUssR0FDTCxLQUFLLEdBQ0wsS0FBSyxHQUVILFlBREE0ekMsR0FBRyxFQUFHeDlCLEdBR1IsS0FBSyxFQUNILE9BRUYsS0FBSyxFQUNILElBQUlyZixFQUFJcWYsRUFBRTBNLFVBRVYsR0FBSSxNQUFRL3JCLEVBQUcsQ0FDYixJQUFJQyxFQUFJb2YsRUFBRWsyQixjQUNOOWdDLEVBQUksT0FBUzJLLEVBQUlBLEVBQUVtMkIsY0FBZ0J0MUMsRUFDdkNtZixFQUFJQyxFQUFFcE8sS0FDTixJQUFJdVEsRUFBSW5DLEVBQUUreEIsWUFHVixHQUZBL3hCLEVBQUUreEIsWUFBYyxLQUVaLE9BQVM1dkIsRUFBRyxDQU1kLElBTEF4aEIsRUFBRW85QixJQUFNbjlCLEVBQ1IsVUFBWW1mLEdBQUssVUFBWW5mLEVBQUVnUixNQUFRLE1BQVFoUixFQUFFQyxNQUFReXdCLEdBQUczd0IsRUFBR0MsR0FDL0RnN0IsR0FBRzdiLEVBQUczSyxHQUNONEssRUFBSTRiLEdBQUc3YixFQUFHbmYsR0FFTHdVLEVBQUksRUFBR0EsRUFBSStNLEVBQUV4WixPQUFReU0sR0FBSyxFQUFHLENBQ2hDLElBQUlnTSxFQUFJZSxFQUFFL00sR0FDTjJCLEVBQUlvTCxFQUFFL00sRUFBSSxHQUNkLFVBQVlnTSxFQUFJc1osR0FBRy81QixFQUFHb1csR0FBSyw0QkFBOEJxSyxFQUFJd1IsR0FBR2p5QixFQUFHb1csR0FBSyxhQUFlcUssRUFBSStSLEdBQUd4eUIsRUFBR29XLEdBQUtxWCxFQUFHenRCLEVBQUd5Z0IsRUFBR3JLLEVBQUdpSixHQUdwSCxPQUFRRCxHQUNOLElBQUssUUFDSHdSLEdBQUc1d0IsRUFBR0MsR0FDTixNQUVGLElBQUssV0FDSHl4QixHQUFHMXhCLEVBQUdDLEdBQ04sTUFFRixJQUFLLFNBQ0hvZixFQUFJcmYsRUFBRXN3QixjQUFjZ3JCLFlBQWF0N0MsRUFBRXN3QixjQUFjZ3JCLGNBQWdCcjdDLEVBQUVzN0MsU0FBdUIsT0FBYm44QixFQUFJbmYsRUFBRVcsT0FBbUJ1d0IsR0FBR254QixJQUFLQyxFQUFFczdDLFNBQVVuOEIsR0FBRyxHQUFNQyxNQUFRcGYsRUFBRXM3QyxXQUFhLE1BQVF0N0MsRUFBRW93QixhQUFlYyxHQUFHbnhCLElBQUtDLEVBQUVzN0MsU0FBVXQ3QyxFQUFFb3dCLGNBQWMsR0FBTWMsR0FBR254QixJQUFLQyxFQUFFczdDLFNBQVV0N0MsRUFBRXM3QyxTQUFXLEdBQUssSUFBSSxNQUsvUSxPQUVGLEtBQUssRUFDSCxHQUFJLE9BQVNsOEIsRUFBRTBNLFVBQVcsTUFBTTlFLE1BQU01RixFQUFFLE1BRXhDLFlBREFoQyxFQUFFME0sVUFBVTRHLFVBQVl0VCxFQUFFazJCLGVBRzVCLEtBQUssRUFHSCxhQUZBbDJCLEVBQUlBLEVBQUUwTSxXQUNKK0wsVUFBWXpZLEVBQUV5WSxTQUFVLEVBQUlTLEdBQUdsWixFQUFFNlcsaUJBR3JDLEtBQUssR0FDSCxPQUVGLEtBQUssR0FHSCxHQUZBbDJCLEVBQUlxZixFQUNKLE9BQVNBLEVBQUUrVSxjQUFnQm4wQixHQUFJLEdBQU1BLEdBQUksRUFBSUQsRUFBSXFmLEVBQUVtVixNQUFPcXBCLEdBQUtwTyxNQUMzRCxPQUFTenZDLEVBQUdvZixFQUFHLElBQUtBLEVBQUlwZixJQUFLLENBQy9CLEdBQUksSUFBTW9mLEVBQUVuVyxJQUFLdVksRUFBSXBDLEVBQUUyTSxVQUFXOXJCLEVBQWtCLG9CQUFidWhCLEVBQUlBLEVBQUU1RixPQUErQm9lLFlBQWN4WSxFQUFFd1ksWUFBWSxVQUFXLE9BQVEsYUFBZXhZLEVBQUVqRyxRQUFVLFFBQVdpRyxFQUFJcEMsRUFBRTJNLFVBQXNDdFgsT0FBSSxLQUEvQkEsRUFBSTJLLEVBQUVtMkIsY0FBYzM1QixRQUEyQixPQUFTbkgsR0FBS0EsRUFBRWpULGVBQWUsV0FBYWlULEVBQUU4RyxRQUFVLEtBQU1pRyxFQUFFNUYsTUFBTUwsUUFBVXVlLEdBQUcsVUFBV3JsQixTQUFTLEdBQUksSUFBTTJLLEVBQUVuVyxJQUFLbVcsRUFBRTJNLFVBQVU0RyxVQUFZMXlCLEVBQUksR0FBS21mLEVBQUVtMkIsa0JBQW1CLElBQUksS0FBT24yQixFQUFFblcsS0FBTyxPQUFTbVcsRUFBRWdWLGVBQWlCLE9BQVNoVixFQUFFZ1YsY0FBY0MsV0FBWSxFQUNsZTdTLEVBQUlwQyxFQUFFb1YsTUFBTUMsU0FDVmxGLE9BQVNuUSxFQUNYQSxFQUFJb0MsRUFDSixTQUNLLEdBQUksT0FBU3BDLEVBQUVvVixNQUFPLENBQzNCcFYsRUFBRW9WLE1BQU1qRixPQUFTblEsRUFDakJBLEVBQUlBLEVBQUVvVixNQUNOLFVBRUYsR0FBSXBWLElBQU1wZixFQUFHLE1BRWIsS0FBTyxPQUFTb2YsRUFBRXFWLFNBQVUsQ0FDMUIsR0FBSSxPQUFTclYsRUFBRW1RLFFBQVVuUSxFQUFFbVEsU0FBV3Z2QixFQUFHLE1BQU1vZixFQUMvQ0EsRUFBSUEsRUFBRW1RLE9BR1JuUSxFQUFFcVYsUUFBUWxGLE9BQVNuUSxFQUFFbVEsT0FDckJuUSxFQUFJQSxFQUFFcVYsUUFHUixZQURBcXBCLEdBQUd6K0IsR0FHTCxLQUFLLEdBRUgsWUFEQXkrQixHQUFHeitCLEdBR0wsS0FBSyxHQUNILE9BR0osTUFBTTRILE1BQU01RixFQUFFLE1BR2hCLFNBQVN5OEIsR0FBRzErQixHQUNWLElBQUlDLEVBQUlELEVBQUVneUIsWUFFVixHQUFJLE9BQVMveEIsRUFBRyxDQUNkRCxFQUFFZ3lCLFlBQWMsS0FDaEIsSUFBSXB4QyxFQUFJb2YsRUFBRTJNLFVBQ1YsT0FBUy9yQixJQUFNQSxFQUFJb2YsRUFBRTJNLFVBQVksSUFBSXN3QixJQUNyQ2g5QixFQUFFblgsU0FBUSxTQUFVbVgsR0FDbEIsSUFBSXBmLEVBQUk4OUMsR0FBRzU4QyxLQUFLLEtBQU1pZSxFQUFHQyxHQUN6QnJmLEVBQUVxMkIsSUFBSWhYLEtBQU9yZixFQUFFZytDLElBQUkzK0IsR0FBSUEsRUFBRTQrQixLQUFLaCtDLEVBQUdBLFFBS3ZDLElBQUlpK0MsR0FBSyxvQkFBc0JycUIsUUFBVUEsUUFBVUMsSUFFbkQsU0FBU3FxQixHQUFHLytCLEVBQUdDLEVBQUdyZixJQUNoQkEsRUFBSTJ4QyxHQUFHM3hDLEVBQUcsT0FDUmlKLElBQU0sRUFDUmpKLEVBQUVrUixRQUFVLENBQ1ZrdEMsUUFBUyxNQUVYLElBQUluK0MsRUFBSW9mLEVBQUV6ZSxNQU9WLE9BTEFaLEVBQUU2eEMsU0FBVyxXQUNYd00sS0FBT0EsSUFBSyxFQUFJQyxHQUFLcitDLEdBQ3JCdThDLEdBQUdwOUIsRUFBR0MsSUFHRHJmLEVBR1QsU0FBU3UrQyxHQUFHbi9CLEVBQUdDLEVBQUdyZixJQUNoQkEsRUFBSTJ4QyxHQUFHM3hDLEVBQUcsT0FDUmlKLElBQU0sRUFDUixJQUFJaEosRUFBSW1mLEVBQUVuTyxLQUFLOG9DLHlCQUVmLEdBQUksb0JBQXNCOTVDLEVBQUcsQ0FDM0IsSUFBSXdVLEVBQUk0SyxFQUFFemUsTUFFVlosRUFBRWtSLFFBQVUsV0FFVixPQURBc3JDLEdBQUdwOUIsRUFBR0MsR0FDQ3BmLEVBQUV3VSxJQUliLElBQUkrTSxFQUFJcEMsRUFBRTJNLFVBUVYsT0FQQSxPQUFTdkssR0FBSyxvQkFBc0JBLEVBQUVnOUIsb0JBQXNCeCtDLEVBQUU2eEMsU0FBVyxXQUN2RSxvQkFBc0I1eEMsSUFBTSxPQUFTdytDLEdBQUtBLEdBQUssSUFBSWxDLElBQUksQ0FBQ2xuQyxPQUFTb3BDLEdBQUdULElBQUkzb0MsTUFBT21uQyxHQUFHcDlCLEVBQUdDLElBQ3JGLElBQUlyZixFQUFJcWYsRUFBRSs4QixNQUNWL21DLEtBQUttcEMsa0JBQWtCbi9CLEVBQUV6ZSxNQUFPLENBQzlCODlDLGVBQWdCLE9BQVMxK0MsRUFBSUEsRUFBSSxPQUc5QkEsRUFHVCxJQTY3QkkyK0MsR0E3N0JBQyxHQUFLM2hCLEtBQUs0aEIsS0FDVkMsR0FBS3R4QixFQUFHMUYsdUJBQ1JpM0IsR0FBS3Z4QixFQUFHdkYsa0JBS1IyekIsR0FBSyxFQUdMQyxHQUFLLEVBQ0xDLEdBQUssRUFFTDk4QixHQVZJLEVBV0pxRCxHQUFJLEtBQ0pwRCxHQUFJLEtBQ0o0QixHQUFJLEVBQ0pGLEdBQUlpN0IsR0FDSm9ELEdBQUssS0FDTEMsR0FBSyxXQUNMQyxHQUFLLFdBQ0xDLEdBQUssS0FDTHBELEdBQUssRUFDTHFELElBQUssRUFDTHZCLEdBQUssRUFFTDc3QixHQUFJLEtBQ0pxOEIsSUFBSyxFQUNMQyxHQUFLLEtBQ0xHLEdBQUssS0FDTFksSUFBSyxFQUNMQyxHQUFLLEtBQ0xDLEdBQUssR0FDTEMsR0FBSyxLQUNMQyxHQUFLLEVBQ0xDLEdBQUssS0FDTEMsR0FBSyxFQUVULFNBQVNsTixLQUNQLE9BcENNLEtBb0NNLEdBQUp6ekIsSUFBdUIsWUFBY3l3QixLQUFPLEdBQUssR0FBSyxJQUFNa1EsR0FBS0EsR0FBS0EsR0FBSyxZQUFjbFEsS0FBTyxHQUFLLEdBRy9HLFNBQVNpRCxHQUFHdHpCLEVBQUdDLEVBQUdyZixHQUVoQixHQUFJLEtBQVcsR0FEZnFmLEVBQUlBLEVBQUV2ZSxPQUNhLE9BQU8sV0FDMUIsSUFBSWIsRUFBSXl2QyxLQUNSLEdBQUksS0FBVyxFQUFKcndCLEdBQVEsT0FBTyxLQUFPcGYsRUFBSSxXQUFhLFdBQ2xELEdBNUNNLEtBRUMsR0EwQ0YrZSxJQUFlLE9BQU82QixHQUMzQixHQUFJLE9BQVM3Z0IsRUFBR29mLEVBQUk2d0IsR0FBRzd3QixFQUFpQixFQUFkcGYsRUFBRTQvQyxXQUFpQixJQUFLLFVBQVUsT0FBUTMvQyxHQUNsRSxLQUFLLEdBQ0htZixFQUFJLFdBQ0osTUFFRixLQUFLLEdBQ0hBLEVBQUk2d0IsR0FBRzd3QixFQUFHLElBQUssS0FDZixNQUVGLEtBQUssR0FDTCxLQUFLLEdBQ0hBLEVBQUk2d0IsR0FBRzd3QixFQUFHLElBQUssS0FDZixNQUVGLEtBQUssR0FDSEEsRUFBSSxFQUNKLE1BRUYsUUFDRSxNQUFNNkgsTUFBTTVGLEVBQUUsTUFHbEIsT0FEQSxPQUFTZ0IsSUFBS2pELElBQU15QixNQUFPekIsRUFDcEJBLEVBR1QsU0FBU3V6QixHQUFHdnpCLEVBQUdDLEdBQ2IsR0FBSSxHQUFLb2dDLEdBQUksTUFBTUEsR0FBSyxFQUFHQyxHQUFLLEtBQU16NEIsTUFBTTVGLEVBQUUsTUFHOUMsR0FBSSxRQUZKakMsRUFBSXlnQyxHQUFHemdDLEVBQUdDLElBRU0sQ0FDZCxJQUFJcmYsRUFBSTB2QyxLQUNSLGFBQWVyd0IsRUE1RVgsS0FDQyxFQTJFZUwsS0E1RWhCLEtBNEVzQyxHQUFKQSxJQUF1QjhnQyxHQUFHMWdDLElBQU1FLEdBQUVGLEdBNUVwRSxJQTRFd0VKLElBQVdneEIsTUFBUTF3QixHQUFFRixHQTVFN0YsS0E2RUMsRUFBSkosS0FBZ0IsS0FBT2hmLEdBQUssS0FBT0EsSUFBTSxPQUFTdy9DLEdBQUtBLEdBQUssSUFBSTFyQixJQUFJLENBQUMsQ0FBQzFVLEVBQUdDLFdBQXdCLEtBQWhCcmYsRUFBSXcvQyxHQUFHaC9DLElBQUk0ZSxLQUFxQnBmLEVBQUlxZixJQUFNbWdDLEdBQUdsOUIsSUFBSWxELEVBQUdDLEtBSTFJLFNBQVN3Z0MsR0FBR3pnQyxFQUFHQyxHQUNiRCxFQUFFeXhCLGVBQWlCeHhCLElBQU1ELEVBQUV5eEIsZUFBaUJ4eEIsR0FDNUMsSUFBSXJmLEVBQUlvZixFQUFFNlUsVUFDVixPQUFTajBCLEdBQUtBLEVBQUU2d0MsZUFBaUJ4eEIsSUFBTXJmLEVBQUU2d0MsZUFBaUJ4eEIsR0FDMUQsSUFBSXBmLEVBQUltZixFQUFFbVEsT0FDTjlhLEVBQUksS0FDUixHQUFJLE9BQVN4VSxHQUFLLElBQU1tZixFQUFFblcsSUFBS3dMLEVBQUkySyxFQUFFMk0sZUFBZSxLQUFPLE9BQVM5ckIsR0FBSSxDQUt0RSxHQUpBRCxFQUFJQyxFQUFFZzBCLFVBQ05oMEIsRUFBRXl3QyxvQkFBc0JyeEIsSUFBTXBmLEVBQUV5d0Msb0JBQXNCcnhCLEdBQ3RELE9BQVNyZixHQUFLQSxFQUFFMHdDLG9CQUFzQnJ4QixJQUFNcmYsRUFBRTB3QyxvQkFBc0JyeEIsR0FFaEUsT0FBU3BmLEVBQUVzdkIsUUFBVSxJQUFNdHZCLEVBQUVnSixJQUFLLENBQ3BDd0wsRUFBSXhVLEVBQUU4ckIsVUFDTixNQUdGOXJCLEVBQUlBLEVBQUVzdkIsT0FHUixPQURBLE9BQVM5YSxJQUFNNE4sS0FBTTVOLElBQU15OUIsR0FBRzd5QixHQUFJc0IsS0FBTW03QixJQUFNRSxHQUFHdm5DLEVBQUdvTSxLQUFLbzdCLEdBQUd4bkMsRUFBRzRLLElBQ3hENUssRUFHVCxTQUFTc3JDLEdBQUczZ0MsR0FDVixJQUFJQyxFQUFJRCxFQUFFNGdDLGdCQUNWLEdBQUksSUFBTTNnQyxFQUFHLE9BQU9BLEVBRXBCLElBQUs0Z0MsR0FBRzdnQyxFQURSQyxFQUFJRCxFQUFFOGdDLGtCQUNTLE9BQU83Z0MsRUFDdEIsSUFBSXJmLEVBQUlvZixFQUFFK2dDLGVBR1YsT0FBTyxJQURQL2dDLEVBQUlwZixHQURKb2YsRUFBSUEsRUFBRWdoQyx1QkFDTXBnRCxFQUFJb2YsSUFDQ0MsSUFBTUQsRUFBSSxFQUFJQSxFQUdqQyxTQUFTRSxHQUFFRixHQUNULEdBQUksSUFBTUEsRUFBRTRnQyxnQkFBaUI1Z0MsRUFBRWloQyx1QkFBeUIsV0FBWWpoQyxFQUFFa2hDLGlCQUFtQixHQUFJbGhDLEVBQUVtaEMsYUFBZXpRLEdBQUdnUSxHQUFHMytDLEtBQUssS0FBTWllLFFBQVMsQ0FDdEksSUFBSUMsRUFBSTBnQyxHQUFHM2dDLEdBQ1BwZixFQUFJb2YsRUFBRW1oQyxhQUNWLEdBQUksSUFBTWxoQyxFQUFHLE9BQVNyZixJQUFNb2YsRUFBRW1oQyxhQUFlLEtBQU1uaEMsRUFBRWloQyx1QkFBeUIsRUFBR2poQyxFQUFFa2hDLGlCQUFtQixRQUFTLENBQzdHLElBQUlyZ0QsRUFBSXd5QyxLQUdSLEdBRkEsYUFBZXB6QixFQUFJcGYsRUFBSSxHQUFLLElBQU1vZixHQUFLLElBQU1BLEVBQUlwZixFQUFJLEdBQXlEQSxFQUFJLElBQXZEQSxFQUFJLElBQU0sV0FBYW9mLEdBQUssSUFBTSxXQUFhcGYsSUFBaUIsR0FBSyxLQUFPQSxFQUFJLEdBQUssTUFBUUEsRUFBSSxHQUFLLEdBRTdKLE9BQVNELEVBQUcsQ0FDZCxJQUFJeVUsRUFBSTJLLEVBQUVraEMsaUJBQ1YsR0FBSWxoQyxFQUFFaWhDLHlCQUEyQmhoQyxHQUFLNUssR0FBS3hVLEVBQUcsT0FDOUNELElBQU1pdkMsSUFBTWhCLEdBQUdqdUMsR0FHakJvZixFQUFFaWhDLHVCQUF5QmhoQyxFQUMzQkQsRUFBRWtoQyxpQkFBbUJyZ0QsRUFDckJvZixFQUFJLGFBQWVBLEVBQUl5d0IsR0FBR2dRLEdBQUczK0MsS0FBSyxLQUFNaWUsSUFBTXl3QixHQUFHNXZDLEVBQUd1Z0QsR0FBR3IvQyxLQUFLLEtBQU1pZSxHQUFJLENBQ3BFcWhDLFFBQVMsSUFBTSxXQUFhcGhDLEdBQUtvd0IsT0FFbkNyd0IsRUFBRW1oQyxhQUFlbGhDLElBS3ZCLFNBQVNtaEMsR0FBR3BoQyxFQUFHQyxHQUViLEdBREFzZ0MsR0FBSyxFQUNEdGdDLEVBQUcsT0FBaUJxaEMsR0FBR3RoQyxFQUFiQyxFQUFJb3pCLE1BQWdCbnpCLEdBQUVGLEdBQUksS0FDeEMsSUFBSXBmLEVBQUkrL0MsR0FBRzNnQyxHQUVYLEdBQUksSUFBTXBmLEVBQUcsQ0FFWCxHQURBcWYsRUFBSUQsRUFBRW1oQyxhQWhKRixLQWlKSyxHQUFKdmhDLElBQXNCLE1BQU1pSSxNQUFNNUYsRUFBRSxNQUl6QyxHQUhBcy9CLEtBQ0F2aEMsSUFBTWlELElBQUtyaUIsSUFBTTZnQixJQUFLKy9CLEdBQUd4aEMsRUFBR3BmLEdBRXhCLE9BQVNpZixHQUFHLENBQ2QsSUFBSWhmLEVBQUkrZSxHQUNSQSxJQXJKRyxHQXdKSCxJQUZBLElBQUl2SyxFQUFJb3NDLE9BR04sSUFDRUMsS0FDQSxNQUNBLE1BQU8xcUMsR0FDUDJxQyxHQUFHM2hDLEVBQUdoSixHQU9WLEdBSEFtNkIsS0FDQXZ4QixHQUFJL2UsRUFDSjYrQyxHQUFHNWpDLFFBQVV6RyxFQWhLVixJQWlLQ2tNLEdBQVUsTUFBTXRCLEVBQUkyL0IsR0FBSTRCLEdBQUd4aEMsRUFBR3BmLEdBQUlnOEMsR0FBRzU4QixFQUFHcGYsR0FBSXNmLEdBQUVGLEdBQUlDLEVBQ3RELEdBQUksT0FBU0osR0FBRyxPQUFReEssRUFBSTJLLEVBQUU0aEMsYUFBZTVoQyxFQUFFbEUsUUFBUStZLFVBQVc3VSxFQUFFNmhDLHVCQUF5QmpoRCxFQUFHQyxFQUFJMGdCLEdBQUcwQixHQUFJLEtBQU1waUIsR0FDL0csS0FBSzI3QyxHQUNMLEtBcEtDLEVBcUtDLE1BQU0zMEIsTUFBTTVGLEVBQUUsTUFFaEIsS0F0S0MsRUF1S0NxL0IsR0FBR3RoQyxFQUFHLEVBQUlwZixFQUFJLEVBQUlBLEdBQ2xCLE1BRUYsS0FBSzY3QyxHQUtILEdBSkFHLEdBQUc1OEIsRUFBR3BmLEdBRU5BLEtBREFDLEVBQUltZixFQUFFOGhDLHFCQUNNOWhDLEVBQUVnaEMsc0JBQXdCZSxHQUFHMXNDLElBRXJDLGFBQWV3cUMsSUFBMkIsSUFBcEJ4cUMsRUFBSW9wQyxHQS9KL0IsSUErSnlDcE8sTUFBZSxDQUNyRCxHQUFJMlAsR0FBSSxDQUNOLElBQUk1OUIsRUFBSXBDLEVBQUUrZ0MsZUFFVixHQUFJLElBQU0zK0IsR0FBS0EsR0FBS3hoQixFQUFHLENBQ3JCb2YsRUFBRStnQyxlQUFpQm5nRCxFQUNuQjRnRCxHQUFHeGhDLEVBQUdwZixHQUNOLE9BS0osR0FBSSxLQURKd2hCLEVBQUl1K0IsR0FBRzNnQyxLQUNRb0MsSUFBTXhoQixFQUFHLE1BRXhCLEdBQUksSUFBTUMsR0FBS0EsSUFBTUQsRUFBRyxDQUN0Qm9mLEVBQUUrZ0MsZUFBaUJsZ0QsRUFDbkIsTUFHRm1mLEVBQUVnaUMsY0FBZ0I1a0IsR0FBRzZrQixHQUFHbGdELEtBQUssS0FBTWllLEdBQUkzSyxHQUN2QyxNQUdGNHNDLEdBQUdqaUMsR0FDSCxNQUVGLEtBQUswOEIsR0FLSCxHQUpBRSxHQUFHNThCLEVBQUdwZixHQUVOQSxLQURBQyxFQUFJbWYsRUFBRThoQyxxQkFDTTloQyxFQUFFZ2hDLHNCQUF3QmUsR0FBRzFzQyxJQUVyQzJxQyxLQUE2QixLQUF0QjNxQyxFQUFJMkssRUFBRStnQyxpQkFBMkIxckMsR0FBS3pVLEdBQUksQ0FDbkRvZixFQUFFK2dDLGVBQWlCbmdELEVBQ25CNGdELEdBQUd4aEMsRUFBR3BmLEdBQ04sTUFJRixHQUFJLEtBREp5VSxFQUFJc3JDLEdBQUczZ0MsS0FDUTNLLElBQU16VSxFQUFHLE1BRXhCLEdBQUksSUFBTUMsR0FBS0EsSUFBTUQsRUFBRyxDQUN0Qm9mLEVBQUUrZ0MsZUFBaUJsZ0QsRUFDbkIsTUFLRixHQUZBLGFBQWVpL0MsR0FBS2ovQyxFQUFJLElBQU0sV0FBYWkvQyxJQUFNelAsS0FBTyxhQUFld1AsR0FBS2gvQyxFQUFJLEdBQUtBLEVBQUksSUFBTSxXQUFhZy9DLElBQU0sSUFBeUQsR0FBWGgvQyxHQUF6Q3dVLEVBQUlnN0IsTUFBNkN4dkMsS0FBYUEsRUFBSSxJQUF4REQsRUFBSSxJQUFNLFdBQWFBLEdBQUt5VSxJQUFnQ3hVLEdBQUssSUFBTUEsRUFBSSxJQUFNLElBQU1BLEVBQUksSUFBTSxLQUFPQSxFQUFJLEtBQU8sS0FBT0EsRUFBSSxLQUFPLElBQU1BLEVBQUksSUFBTSxLQUFPQSxFQUFJLEtBQU8sS0FBTzIrQyxHQUFHMytDLEVBQUksT0FBU0EsS0FBYUEsRUFBSUQsSUFFNVUsR0FBS0MsRUFBRyxDQUNWbWYsRUFBRWdpQyxjQUFnQjVrQixHQUFHNmtCLEdBQUdsZ0QsS0FBSyxLQUFNaWUsR0FBSW5mLEdBQ3ZDLE1BR0ZvaEQsR0FBR2ppQyxHQUNILE1BRUYsS0FuT0MsRUFvT0MsR0FBSSxhQUFlNi9CLElBQU0sT0FBU0UsR0FBSSxDQUNwQzM5QixFQUFJeTlCLEdBQ0osSUFBSXgrQixFQUFJMCtCLEdBSVIsR0FGQSxJQURBbC9DLEVBQTBCLEVBQXRCd2dCLEVBQUU2Z0MsbUJBQ0dyaEQsRUFBSSxHQUFLd1UsRUFBb0IsRUFBaEJnTSxFQUFFOGdDLFlBQWdGdGhELEdBQS9EdWhCLEVBQUlpdUIsTUFBUSxJQUFNLFdBQWFqdUIsSUFBb0IsRUFBZGYsRUFBRW0vQixXQUFpQixRQUFnQm5yQyxFQUFJLEVBQUlBLEVBQUl4VSxFQUFJdWhCLEdBRTdILEdBQUt2aEIsRUFBRyxDQUNWKzdDLEdBQUc1OEIsRUFBR3BmLEdBQ05vZixFQUFFZ2lDLGNBQWdCNWtCLEdBQUc2a0IsR0FBR2xnRCxLQUFLLEtBQU1pZSxHQUFJbmYsR0FDdkMsT0FJSm9oRCxHQUFHamlDLEdBQ0gsTUFFRixRQUNFLE1BQU02SCxNQUFNNUYsRUFBRSxNQUdsQixHQURBL0IsR0FBRUYsR0FDRUEsRUFBRW1oQyxlQUFpQmxoQyxFQUFHLE9BQU9taEMsR0FBR3IvQyxLQUFLLEtBQU1pZSxJQUluRCxPQUFPLEtBR1QsU0FBUzBnQyxHQUFHMWdDLEdBQ1YsSUFBSUMsRUFBSUQsRUFBRTRnQyxnQkFFVixHQURBM2dDLEVBQUksSUFBTUEsRUFBSUEsRUFBSSxXQTFRWixLQTJRRyxHQUFKTCxJQUFzQixNQUFNaUksTUFBTTVGLEVBQUUsTUFJekMsR0FIQXMvQixLQUNBdmhDLElBQU1pRCxJQUFLaEQsSUFBTXdCLElBQUsrL0IsR0FBR3hoQyxFQUFHQyxHQUV4QixPQUFTSixHQUFHLENBQ2QsSUFBSWpmLEVBQUlnZixHQUNSQSxJQS9RSyxHQWtSTCxJQUZBLElBQUkvZSxFQUFJNGdELE9BR04sSUFDRVcsS0FDQSxNQUNBLE1BQU8vc0MsR0FDUHNzQyxHQUFHM2hDLEVBQUczSyxHQU9WLEdBSEE4N0IsS0FDQXZ4QixHQUFJaGYsRUFDSjgrQyxHQUFHNWpDLFFBQVVqYixFQTFSUixJQTJSRDBnQixHQUFVLE1BQU0zZ0IsRUFBSWcvQyxHQUFJNEIsR0FBR3hoQyxFQUFHQyxHQUFJMjhCLEdBQUc1OEIsRUFBR0MsR0FBSUMsR0FBRUYsR0FBSXBmLEVBQ3RELEdBQUksT0FBU2lmLEdBQUcsTUFBTWdJLE1BQU01RixFQUFFLE1BQzlCakMsRUFBRTRoQyxhQUFlNWhDLEVBQUVsRSxRQUFRK1ksVUFDM0I3VSxFQUFFNmhDLHVCQUF5QjVoQyxFQUMzQmdELEdBQUksS0FDSmcvQixHQUFHamlDLEdBQ0hFLEdBQUVGLEdBR0osT0FBTyxLQWVULFNBQVNxaUMsR0FBR3JpQyxFQUFHQyxHQUNiLElBQUlyZixFQUFJZ2YsR0FDUkEsSUFBSyxFQUVMLElBQ0UsT0FBT0ksRUFBRUMsR0FDVCxRQTlUSSxLQStUSkwsR0FBSWhmLElBQWNnd0MsTUFJdEIsU0FBUzBSLEdBQUd0aUMsRUFBR0MsR0FDYixJQUFJcmYsRUFBSWdmLEdBQ1JBLEtBQU0sRUFDTkEsSUFyVU8sRUF1VVAsSUFDRSxPQUFPSSxFQUFFQyxHQUNULFFBMVVJLEtBMlVKTCxHQUFJaGYsSUFBY2d3QyxNQUl0QixTQUFTNFEsR0FBR3hoQyxFQUFHQyxHQUNiRCxFQUFFNGhDLGFBQWUsS0FDakI1aEMsRUFBRTZoQyx1QkFBeUIsRUFDM0IsSUFBSWpoRCxFQUFJb2YsRUFBRWdpQyxjQUVWLElBREMsSUFBTXBoRCxJQUFNb2YsRUFBRWdpQyxlQUFpQixFQUFHMWtCLEdBQUcxOEIsSUFDbEMsT0FBU2lmLEdBQUcsSUFBS2pmLEVBQUlpZixHQUFFc1EsT0FBUSxPQUFTdnZCLEdBQUksQ0FDOUMsSUFBSUMsRUFBSUQsRUFFUixPQUFRQyxFQUFFZ0osS0FDUixLQUFLLEVBRUgsUUFEQWhKLEVBQUlBLEVBQUVnUixLQUFLczhCLHlCQUNHLElBQVd0dEMsR0FBS3V0QyxLQUM5QixNQUVGLEtBQUssRUFDSDJILEtBQ0E1MEIsR0FBRWEsSUFDRmIsR0FBRWdCLElBQ0YsTUFFRixLQUFLLEVBQ0g4ekIsR0FBR3AxQyxHQUNILE1BRUYsS0FBSyxFQUNIazFDLEtBQ0EsTUFFRixLQUFLLEdBSUwsS0FBSyxHQUNINTBCLEdBQUVVLElBQ0YsTUFFRixLQUFLLEdBQ0h1dkIsR0FBR3Z3QyxHQUdQRCxFQUFJQSxFQUFFdXZCLE9BRVJsTixHQUFJakQsRUFDSkgsR0FBSWsxQixHQUFHLzBCLEVBQUVsRSxRQUFTLE1BQ2xCMkYsR0FBSXhCLEVBQ0pzQixHQUFJaTdCLEdBQ0pvRCxHQUFLLEtBQ0xFLEdBQUtELEdBQUssV0FDVkUsR0FBSyxLQUNMcEQsR0FBSyxFQUNMcUQsSUFBSyxFQUdQLFNBQVMyQixHQUFHM2hDLEVBQUdDLEdBQ2IsT0FBRyxDQUNELElBR0UsR0FGQWt4QixLQUNBb0YsR0FBR3o2QixRQUFVazdCLEdBQ1ROLEdBQUksSUFBSyxJQUFJOTFDLEVBQUl5aEIsR0FBRTJTLGNBQWUsT0FBU3AwQixHQUFJLENBQ2pELElBQUlDLEVBQUlELEVBQUVzMkMsTUFDVixPQUFTcjJDLElBQU1BLEVBQUV1eEMsUUFBVSxNQUMzQnh4QyxFQUFJQSxFQUFFMlosS0FLUixHQUhBazhCLEdBQUssRUFDTHAyQixHQUFJbUMsR0FBSUgsR0FBSSxLQUNacTBCLElBQUssRUFDRCxPQUFTNzJCLElBQUssT0FBU0EsR0FBRXNRLE9BQVEsT0FBTzVPLEdBNVl6QyxFQTRZaURxK0IsR0FBSzMvQixFQUFHSixHQUFJLEtBRWhFRyxFQUFHLENBQ0QsSUFBSTNLLEVBQUkySyxFQUNKb0MsRUFBSXZDLEdBQUVzUSxPQUNOOU8sRUFBSXhCLEdBQ0o3SSxFQUFJaUosRUFLUixHQUpBQSxFQUFJd0IsR0FDSkosRUFBRXlULFdBQWEsS0FDZnpULEVBQUV3ekIsWUFBY3h6QixFQUFFc3pCLFdBQWEsS0FFM0IsT0FBUzM5QixHQUFLLGtCQUFvQkEsR0FBSyxvQkFBc0JBLEVBQUU2bkMsS0FBTSxDQUN2RSxJQUFJOW5DLEVBQUlDLEVBRVIsR0FBSSxLQUFnQixFQUFUcUssRUFBRTNmLE1BQVcsQ0FDdEIsSUFBSWxCLEVBQUk2Z0IsRUFBRXdULFVBQ1ZyMEIsR0FBSzZnQixFQUFFMndCLFlBQWN4eEMsRUFBRXd4QyxZQUFhM3dCLEVBQUUyVCxjQUFnQngwQixFQUFFdzBCLGNBQWUzVCxFQUFFb3dCLGVBQWlCanhDLEVBQUVpeEMsaUJBQW1CcHdCLEVBQUUyd0IsWUFBYyxLQUFNM3dCLEVBQUUyVCxjQUFnQixNQUd6SixJQUFJcjBCLEVBQUksS0FBbUIsRUFBWmtoQixHQUFFL0YsU0FDYnpaLEVBQUkrZixFQUVSLEVBQUcsQ0FDRCxJQUFJM0wsRUFFSixHQUFJQSxFQUFJLEtBQU9wVSxFQUFFd0gsSUFBSyxDQUNwQixJQUFJK1gsRUFBSXZmLEVBQUUyeUIsY0FDVixHQUFJLE9BQVNwVCxFQUFHbkwsRUFBSSxPQUFTbUwsRUFBRXFULGVBQTBCLENBQ3ZELElBQUkxUyxFQUFLbGdCLEVBQUU4ekMsY0FDWDEvQixPQUFJLElBQVc4TCxFQUFHNjRCLFlBQWdCLElBQU83NEIsRUFBRzg0Qiw2QkFBa0MxNkMsSUFJbEYsR0FBSThWLEVBQUcsQ0FDTCxJQUFJa0wsRUFBSXRmLEVBQUUydkMsWUFFVixHQUFJLE9BQVNyd0IsRUFBRyxDQUNkLElBQUlsZ0IsRUFBSSxJQUFJMDdDLElBQ1oxN0MsRUFBRW05QyxJQUFJN25DLEdBQ04xVSxFQUFFMnZDLFlBQWN2d0MsT0FDWGtnQixFQUFFaTlCLElBQUk3bkMsR0FFYixHQUFJLEtBQWdCLEVBQVQxVSxFQUFFWCxNQUFXLENBR3RCLEdBRkFXLEVBQUV5eUIsV0FBYSxHQUNmelQsRUFBRXlULFlBQWMsS0FDWixJQUFNelQsRUFBRXhYLElBQUssR0FBSSxPQUFTd1gsRUFBRXdULFVBQVd4VCxFQUFFeFgsSUFBTSxPQUFRLENBQ3pELElBQUlpWSxFQUFJeXdCLEdBQUcsV0FBWSxNQUN2Qnp3QixFQUFFalksSUFBTSxFQUNSNm9DLEdBQUdyeEIsRUFBR1MsR0FFUlQsRUFBRW93QixlQUFpQixXQUNuQixNQUFNenhCLEVBR1JoSixPQUFJLEVBQ0pxSyxFQUFJcEIsRUFDSixJQUFJcUIsRUFBSWpNLEVBQUVrdEMsVUFHVixHQUZBLE9BQVNqaEMsR0FBS0EsRUFBSWpNLEVBQUVrdEMsVUFBWSxJQUFJekQsR0FBTTluQyxFQUFJLElBQUltbUMsSUFBTzc3QixFQUFFNEIsSUFBSW5NLEVBQUdDLFNBQXFCLEtBQWRBLEVBQUlzSyxFQUFFbGdCLElBQUkyVixNQUFxQkMsRUFBSSxJQUFJbW1DLElBQU83N0IsRUFBRTRCLElBQUluTSxFQUFHQyxLQUUzSEEsRUFBRWlnQixJQUFJNVYsR0FBSSxDQUNickssRUFBRTRuQyxJQUFJdjlCLEdBQ04sSUFBSUQsRUFBSW9oQyxHQUFHemdELEtBQUssS0FBTXNULEVBQUcwQixFQUFHc0ssR0FDNUJ0SyxFQUFFOG5DLEtBQUt6OUIsRUFBR0EsR0FHWi9lLEVBQUV5eUIsV0FBYSxLQUNmenlCLEVBQUVvdkMsZUFBaUJ4eEIsRUFDbkIsTUFBTUQsRUFHUjNkLEVBQUlBLEVBQUU4dEIsYUFDQyxPQUFTOXRCLEdBRWxCMlUsRUFBSTZRLE9BQU9nSSxHQUFHeE8sRUFBRXhQLE9BQVMscUJBQXVCLHdMQUEwTGllLEdBQUd6TyxJQWpkOU8sSUFvZERFLEtBQWFBLEdBdmRaLEdBd2REdkssRUFBSStsQyxHQUFHL2xDLEVBQUdxSyxHQUNWaGYsRUFBSStmLEVBRUosRUFBRyxDQUNELE9BQVEvZixFQUFFd0gsS0FDUixLQUFLLEVBQ0hrTixFQUFJQyxFQUNKM1UsRUFBRXl5QixXQUFhLEtBQ2Z6eUIsRUFBRW92QyxlQUFpQnh4QixFQUVuQjB5QixHQUFHdHdDLEVBREswOEMsR0FBRzE4QyxFQUFHMFUsRUFBR2tKLElBRWpCLE1BQU1ELEVBRVIsS0FBSyxFQUNIakosRUFBSUMsRUFDSixJQUFJdUosRUFBSWxlLEVBQUV3UCxLQUNONHdDLEVBQUtwZ0QsRUFBRXNxQixVQUVYLEdBQUksS0FBcUIsR0FBZHRxQixFQUFFeXlCLGFBQW9CLG9CQUFzQnZVLEVBQUVvNkIsMEJBQTRCLE9BQVM4SCxHQUFNLG9CQUFzQkEsRUFBR3JELG9CQUFzQixPQUFTQyxLQUFPQSxHQUFHcG9CLElBQUl3ckIsS0FBTyxDQUMvS3BnRCxFQUFFeXlCLFdBQWEsS0FDZnp5QixFQUFFb3ZDLGVBQWlCeHhCLEVBRW5CMHlCLEdBQUd0d0MsRUFETTg4QyxHQUFHOThDLEVBQUcwVSxFQUFHa0osSUFFbEIsTUFBTUQsR0FLWjNkLEVBQUlBLEVBQUU4dEIsYUFDQyxPQUFTOXRCLEdBR3BCd2QsR0FBSTZpQyxHQUFHN2lDLElBQ1AsTUFBTzhpQyxHQUNQMWlDLEVBQUkwaUMsRUFDSixTQUdGLE9BSUosU0FBU2xCLEtBQ1AsSUFBSXpoQyxFQUFJMC9CLEdBQUc1akMsUUFFWCxPQURBNGpDLEdBQUc1akMsUUFBVWs3QixHQUNOLE9BQVNoM0IsRUFBSWczQixHQUFLaDNCLEVBRzNCLFNBQVM2eUIsR0FBRzd5QixFQUFHQyxHQUNiRCxFQUFJNi9CLElBQU0sRUFBSTcvQixJQUFNNi9CLEdBQUs3L0IsR0FDekIsT0FBU0MsR0FBS0QsRUFBSTgvQixJQUFNLEVBQUk5L0IsSUFBTTgvQixHQUFLOS9CLEVBQUcrL0IsR0FBSzkvQixHQUdqRCxTQUFTNnlCLEdBQUc5eUIsR0FDVkEsRUFBSTI4QixLQUFPQSxHQUFLMzhCLEdBR2xCLFNBQVNvaUMsS0FDUCxLQUFPLE9BQVN2aUMsSUFDZEEsR0FBSStpQyxHQUFHL2lDLElBSVgsU0FBUzZoQyxLQUNQLEtBQU8sT0FBUzdoQyxLQUFNaXdCLE1BQ3BCandCLEdBQUkraUMsR0FBRy9pQyxJQUlYLFNBQVMraUMsR0FBRzVpQyxHQUNWLElBQUlDLEVBQUlzL0IsR0FBR3YvQixFQUFFNlUsVUFBVzdVLEVBQUd5QixJQUkzQixPQUhBekIsRUFBRW0yQixjQUFnQm4yQixFQUFFeTVCLGFBQ3BCLE9BQVN4NUIsSUFBTUEsRUFBSXlpQyxHQUFHMWlDLElBQ3RCMi9CLEdBQUc3akMsUUFBVSxLQUNObUUsRUFHVCxTQUFTeWlDLEdBQUcxaUMsR0FDVkgsR0FBSUcsRUFFSixFQUFHLENBQ0QsSUFBSUMsRUFBSUosR0FBRWdWLFVBR1YsR0FGQTdVLEVBQUlILEdBQUVzUSxPQUVGLEtBQXFCLEtBQWR0USxHQUFFaVYsV0FBbUIsQ0FHOUIsR0FGQTdVLEVBQUlnOEIsR0FBR2g4QixFQUFHSixHQUFHNEIsSUFFVCxJQUFNQSxJQUFLLElBQU01QixHQUFFeXhCLG9CQUFxQixDQUMxQyxJQUFLLElBQUkxd0MsRUFBSSxFQUFHQyxFQUFJZ2YsR0FBRXVWLE1BQU8sT0FBU3YwQixHQUFJLENBQ3hDLElBQUl3VSxFQUFJeFUsRUFBRTR3QyxlQUNOcnZCLEVBQUl2aEIsRUFBRXl3QyxvQkFDVmo4QixFQUFJelUsSUFBTUEsRUFBSXlVLEdBQ2QrTSxFQUFJeGhCLElBQU1BLEVBQUl3aEIsR0FDZHZoQixFQUFJQSxFQUFFdzBCLFFBR1J4VixHQUFFeXhCLG9CQUFzQjF3QyxFQUcxQixHQUFJLE9BQVNxZixFQUFHLE9BQU9BLEVBQ3ZCLE9BQVNELEdBQUssS0FBcUIsS0FBZEEsRUFBRThVLGFBQXNCLE9BQVM5VSxFQUFFNjBCLGNBQWdCNzBCLEVBQUU2MEIsWUFBY2gxQixHQUFFZzFCLGFBQWMsT0FBU2gxQixHQUFFODBCLGFBQWUsT0FBUzMwQixFQUFFMjBCLGFBQWUzMEIsRUFBRTIwQixXQUFXQyxXQUFhLzBCLEdBQUVnMUIsYUFBYzcwQixFQUFFMjBCLFdBQWE5MEIsR0FBRTgwQixZQUFhLEVBQUk5MEIsR0FBRWlWLFlBQWMsT0FBUzlVLEVBQUUyMEIsV0FBYTMwQixFQUFFMjBCLFdBQVdDLFdBQWEvMEIsR0FBSUcsRUFBRTYwQixZQUFjaDFCLEdBQUdHLEVBQUUyMEIsV0FBYTkwQixTQUMzVSxDQUVMLEdBQUksUUFESkksRUFBSTY4QixHQUFHajlCLEtBQ1MsT0FBT0ksRUFBRTZVLFdBQWEsS0FBTTdVLEVBQzVDLE9BQVNELElBQU1BLEVBQUU2MEIsWUFBYzcwQixFQUFFMjBCLFdBQWEsS0FBTTMwQixFQUFFOFUsV0FBYSxNQUlyRSxHQUFJLFFBREo3VSxFQUFJSixHQUFFd1YsU0FDVSxPQUFPcFYsRUFDdkJKLEdBQUlHLFFBQ0csT0FBU0gsSUFHbEIsT0FEQTBCLEtBQU1pN0IsS0FBT2o3QixHQXJrQk4sR0Fza0JBLEtBR1QsU0FBU3dnQyxHQUFHL2hDLEdBQ1YsSUFBSUMsRUFBSUQsRUFBRXl4QixlQUVWLE9BQU94eEIsR0FEUEQsRUFBSUEsRUFBRXN4QixxQkFDU3J4QixFQUFJRCxFQUdyQixTQUFTaWlDLEdBQUdqaUMsR0FDVixJQUFJQyxFQUFJcXdCLEtBRVIsT0FEQUUsR0FBRyxHQUFJcVMsR0FBRzlnRCxLQUFLLEtBQU1pZSxFQUFHQyxJQUNqQixLQUdULFNBQVM0aUMsR0FBRzdpQyxFQUFHQyxHQUNiLEdBQ0VzaEMsV0FDTyxPQUFTckIsSUFFbEIsR0FubUJNLEtBbW1CRyxHQUFKdGdDLElBQXNCLE1BQU1pSSxNQUFNNUYsRUFBRSxNQUN6QyxJQUFJcmhCLEVBQUlvZixFQUFFNGhDLGFBQ04vZ0QsRUFBSW1mLEVBQUU2aEMsdUJBQ1YsR0FBSSxPQUFTamhELEVBQUcsT0FBTyxLQUd2QixHQUZBb2YsRUFBRTRoQyxhQUFlLEtBQ2pCNWhDLEVBQUU2aEMsdUJBQXlCLEVBQ3ZCamhELElBQU1vZixFQUFFbEUsUUFBUyxNQUFNK0wsTUFBTTVGLEVBQUUsTUFDbkNqQyxFQUFFbWhDLGFBQWUsS0FDakJuaEMsRUFBRWloQyx1QkFBeUIsRUFDM0JqaEMsRUFBRWtoQyxpQkFBbUIsR0FDckJsaEMsRUFBRWdoQyxzQkFBd0IsRUFDMUIsSUFBSTNyQyxFQUFJMHNDLEdBQUduaEQsR0FRWCxHQVBBb2YsRUFBRThnQyxpQkFBbUJ6ckMsRUFDckJ4VSxHQUFLbWYsRUFBRThoQyxrQkFBb0I5aEMsRUFBRThpQyxtQkFBcUI5aUMsRUFBRThoQyxrQkFBb0I5aEMsRUFBRWdoQyxzQkFBd0IsRUFBSW5nRCxHQUFLbWYsRUFBRThpQyxxQkFBdUI5aUMsRUFBRThpQyxtQkFBcUJqaUQsRUFBSSxHQUMvSkEsR0FBS21mLEVBQUUrZ0MsaUJBQW1CL2dDLEVBQUUrZ0MsZUFBaUIsR0FDN0NsZ0QsR0FBS21mLEVBQUU0Z0Msa0JBQW9CNWdDLEVBQUU0Z0MsZ0JBQWtCLEdBQy9DNWdDLElBQU1pRCxLQUFNcEQsR0FBSW9ELEdBQUksS0FBTXhCLEdBQUksR0FDOUIsRUFBSTdnQixFQUFFazBCLFVBQVksT0FBU2wwQixFQUFFK3pDLFlBQWMvekMsRUFBRSt6QyxXQUFXQyxXQUFhaDBDLEVBQUd5VSxFQUFJelUsRUFBRWkwQyxhQUFleC9CLEVBQUl6VSxFQUFJeVUsRUFBSXpVLEVBQUVpMEMsWUFFdkcsT0FBU3gvQixFQUFHLENBQ2QsSUFBSStNLEVBQUl4QyxHQUNSQSxJQXJuQkssR0FzbkJMKy9CLEdBQUc3akMsUUFBVSxLQUNiZ2hCLEdBQUs3QyxHQUNMLElBQUk1WSxFQUFJa2IsS0FFUixHQUFJSyxHQUFHdmIsR0FBSSxDQUNULEdBQUksbUJBQW9CQSxFQUFHLElBQUlySyxFQUFJLENBQ2pDOHdCLE1BQU96bUIsRUFBRTBtQixlQUNUQyxJQUFLM21CLEVBQUU0bUIsbUJBQ0Zqb0IsRUFBRyxDQUVSLElBQUlqSixHQURKQyxHQUFLQSxFQUFJcUssRUFBRXNRLGdCQUFrQjNhLEVBQUVpd0IsYUFBZXYwQixRQUNwQ3kxQixjQUFnQm54QixFQUFFbXhCLGVBRTVCLEdBQUlweEIsR0FBSyxJQUFNQSxFQUFFZ3NDLFdBQVksQ0FDM0IvckMsRUFBSUQsRUFBRW14QixXQUNOLElBQUkxbkMsRUFBSXVXLEVBQUVxeEIsYUFDTnpuQyxFQUFJb1csRUFBRXN4QixVQUNWdHhCLEVBQUlBLEVBQUV1eEIsWUFFTixJQUNFdHhCLEVBQUVzYyxTQUFVM3lCLEVBQUUyeUIsU0FDZCxNQUFPMHZCLEdBQ1Boc0MsRUFBSSxLQUNKLE1BQU1nSixFQUdSLElBQUkzZCxFQUFJLEVBQ0pvVSxHQUFLLEVBQ0xtTCxHQUFLLEVBQ0xXLEVBQUssRUFDTFosRUFBSSxFQUNKbGdCLEVBQUk0ZixFQUNKUyxFQUFJLEtBRVI3QixFQUFHLE9BQVMsQ0FDVixJQUFLLElBQUlxQixFQUNQN2YsSUFBTXVWLEdBQUssSUFBTXhXLEdBQUssSUFBTWlCLEVBQUU2eEIsV0FBYTdjLEVBQUlwVSxFQUFJN0IsR0FDbkRpQixJQUFNZCxHQUFLLElBQU1vVyxHQUFLLElBQU10VixFQUFFNnhCLFdBQWExUixFQUFJdmYsRUFBSTBVLEdBQ25ELElBQU10VixFQUFFNnhCLFdBQWFqeEIsR0FBS1osRUFBRTh4QixVQUFVM3FCLFFBQ2xDLFFBQVUwWSxFQUFJN2YsRUFBRTB4QixhQUNwQnJSLEVBQUlyZ0IsRUFDSkEsRUFBSTZmLEVBR04sT0FBUyxDQUNQLEdBQUk3ZixJQUFNNGYsRUFBRyxNQUFNcEIsRUFHbkIsR0FGQTZCLElBQU05SyxLQUFPdUwsSUFBTy9oQixJQUFNaVcsRUFBSXBVLEdBQzlCeWYsSUFBTW5oQixLQUFPZ2hCLElBQU01SyxJQUFNNkssRUFBSXZmLEdBQ3pCLFFBQVVpZixFQUFJN2YsRUFBRXNkLGFBQWMsTUFFbEMrQyxHQURBcmdCLEVBQUlxZ0IsR0FDRXRDLFdBR1IvZCxFQUFJNmYsRUFHTnRLLEdBQUssSUFBTVAsSUFBTSxJQUFNbUwsRUFBSSxLQUFPLENBQ2hDa21CLE1BQU9yeEIsRUFDUHV4QixJQUFLcG1CLFFBRUY1SyxFQUFJLEtBRWJBLEVBQUlBLEdBQUssQ0FDUDh3QixNQUFPLEVBQ1BFLElBQUssUUFFRmh4QixFQUFJLEtBRVgrbEIsR0FBSyxDQUNIa21CLHNCQUF1QixLQUN2QkMsWUFBYTdoQyxFQUNiOGhDLGVBQWdCbnNDLEdBRWxCaWpCLElBQUssRUFDTHJYLEdBQUl2TixFQUVKLEdBQ0UsSUFDRSt0QyxLQUNBLE1BQU9KLEdBQ1AsR0FBSSxPQUFTcGdDLEdBQUcsTUFBTWlGLE1BQU01RixFQUFFLE1BQzlCcTdCLEdBQUcxNkIsR0FBR29nQyxHQUNOcGdDLEdBQUlBLEdBQUVneUIsa0JBRUQsT0FBU2h5QixJQUVsQkEsR0FBSXZOLEVBRUosR0FDRSxJQUNFLElBQUtnTSxFQUFJckIsRUFBR2hKLEVBQUlpSixFQUFHLE9BQVMyQyxJQUFJLENBQzlCLElBQUl4QixFQUFJd0IsR0FBRWtTLFVBR1YsR0FGSSxHQUFKMVQsR0FBVWdTLEdBQUd4USxHQUFFK0osVUFBVyxJQUVsQixJQUFKdkwsRUFBUyxDQUNYLElBQUlJLEVBQUlvQixHQUFFaVMsVUFFVixHQUFJLE9BQVNyVCxFQUFHLENBQ2QsSUFBSWpCLEVBQUlpQixFQUFFbFcsSUFDVixPQUFTaVYsSUFBTSxvQkFBc0JBLEVBQUlBLEVBQUUsTUFBUUEsRUFBRXpFLFFBQVUsT0FJbkUsT0FBWSxLQUFKc0YsR0FDTixLQUFLLEVBQ0hnOUIsR0FBR3g3QixJQUNIQSxHQUFFa1MsWUFBYyxFQUNoQixNQUVGLEtBQUssRUFDSHNwQixHQUFHeDdCLElBQ0hBLEdBQUVrUyxZQUFjLEVBQ2hCMHBCLEdBQUc1N0IsR0FBRWlTLFVBQVdqUyxJQUNoQixNQUVGLEtBQUssS0FDSEEsR0FBRWtTLFlBQWMsS0FDaEIsTUFFRixLQUFLLEtBQ0hsUyxHQUFFa1MsWUFBYyxLQUNoQjBwQixHQUFHNTdCLEdBQUVpUyxVQUFXalMsSUFDaEIsTUFFRixLQUFLLEVBQ0g0N0IsR0FBRzU3QixHQUFFaVMsVUFBV2pTLElBQ2hCLE1BRUYsS0FBSyxFQUNJcTdCLEdBQUc1OEIsRUFBVjdnQixFQUFJb2lCLEdBQVk1TCxHQUFJa25DLEdBQUcxOUMsR0FHM0JvaUIsR0FBSUEsR0FBRWd5QixZQUVSLE1BQU9vTyxHQUNQLEdBQUksT0FBU3BnQyxHQUFHLE1BQU1pRixNQUFNNUYsRUFBRSxNQUM5QnE3QixHQUFHMTZCLEdBQUdvZ0MsR0FDTnBnQyxHQUFJQSxHQUFFZ3lCLGtCQUVELE9BQVNoeUIsSUFPbEIsR0FMQXJDLEVBQUl3YyxHQUNKdmIsRUFBSSthLEtBQ0puYixFQUFJYixFQUFFMmlDLFlBQ05sc0MsRUFBSXVKLEVBQUU0aUMsZUFFRjNoQyxJQUFNSixHQUFLQSxHQUFLQSxFQUFFdVEsZUF6c0oxQixTQUFTMHhCLEVBQUdyakMsRUFBR0MsR0FDYixTQUFPRCxJQUFLQyxLQUFJRCxJQUFNQyxLQUFTRCxHQUFLLElBQU1BLEVBQUVzVCxZQUFnQnJULEdBQUssSUFBTUEsRUFBRXFULFNBQVcrdkIsRUFBR3JqQyxFQUFHQyxFQUFFVCxZQUFjLGFBQWNRLEVBQUlBLEVBQUVzakMsU0FBU3JqQyxLQUFLRCxFQUFFdWpDLDRCQUE0RCxHQUEvQnZqQyxFQUFFdWpDLHdCQUF3QnRqQyxNQXdzSjVKb2pDLENBQUdqaUMsRUFBRXVRLGNBQWNta0IsZ0JBQWlCMTBCLEdBQUksQ0FDN0UsT0FBU3BLLEdBQUs0bEIsR0FBR3hiLEtBQU9JLEVBQUl4SyxFQUFFOHdCLFdBQWtCLEtBQVh2bkIsRUFBSXZKLEVBQUVneEIsT0FBc0J6bkIsRUFBSWlCLEdBQUksbUJBQW9CSixHQUFLQSxFQUFFMm1CLGVBQWlCdm1CLEVBQUdKLEVBQUU2bUIsYUFBZXBLLEtBQUsybEIsSUFBSWpqQyxFQUFHYSxFQUFFNWYsTUFBTW9ILFVBQVkyWCxHQUFLaUIsRUFBSUosRUFBRXVRLGVBQWlCbFQsV0FBYStDLEVBQUV5bEIsYUFBZXYwQixRQUFVeTFCLGVBQWlCNW5CLEVBQUlBLEVBQUU0bkIsZUFBZ0IzbkMsRUFBSTRnQixFQUFFb1IsWUFBWTVwQixPQUFReVksRUFBSXdjLEtBQUsybEIsSUFBSXhzQyxFQUFFOHdCLE1BQU90bkMsR0FBSXdXLE9BQUksSUFBV0EsRUFBRWd4QixJQUFNM21CLEVBQUl3YyxLQUFLMmxCLElBQUl4c0MsRUFBRWd4QixJQUFLeG5DLElBQUsrZixFQUFFK2YsUUFBVWpmLEVBQUlySyxJQUFNeFcsRUFBSXdXLEVBQUdBLEVBQUlxSyxFQUFHQSxFQUFJN2dCLEdBQUlBLEVBQUk2N0IsR0FBR2piLEVBQUdDLEdBQUkxZ0IsRUFBSTA3QixHQUFHamIsRUFBR3BLLEdBQUl4VyxHQUFLRyxJQUFNLElBQU00ZixFQUFFd2lDLFlBQWN4aUMsRUFBRTJuQixhQUFlMW5DLEVBQUU2akIsTUFBUTlELEVBQUU2bkIsZUFBaUI1bkMsRUFBRTg3QixRQUFVL2IsRUFBRThuQixZQUFjMW5DLEVBQUUwakIsTUFBUTlELEVBQUUrbkIsY0FBZ0IzbkMsRUFBRTI3QixXQUFZOWEsRUFBSUEsRUFBRWlpQyxlQUFpQkMsU0FBU2xqRCxFQUFFNmpCLEtBQU03akIsRUFBRTg3QixRQUFTL2IsRUFBRW9qQyxrQkFBbUJ0aUMsRUFBSXJLLEdBQUt1SixFQUFFcWpDLFNBQVNwaUMsR0FBSWpCLEVBQUUrZixPQUFPMy9CLEVBQUUwakIsS0FBTTFqQixFQUFFMjdCLFVBQVk5YSxFQUFFcWlDLE9BQU9sakQsRUFBRTBqQixLQUFNMWpCLEVBQUUyN0IsUUFBUy9iLEVBQUVxakMsU0FBU3BpQyxPQUMzdkJBLEVBQUksR0FFSixJQUFLakIsRUFBSWEsRUFBR2IsRUFBSUEsRUFBRWYsWUFDaEIsSUFBTWUsRUFBRStTLFVBQVk5UixFQUFFalosS0FBSyxDQUN6QnkyQyxRQUFTeitCLEVBQ1R1akMsS0FBTXZqQyxFQUFFd2pDLFdBQ1JDLElBQUt6akMsRUFBRTBqQyxZQU1YLElBRkEsb0JBQXNCN2lDLEVBQUV3OEIsT0FBU3g4QixFQUFFdzhCLFFBRTlCeDhCLEVBQUksRUFBR0EsRUFBSUksRUFBRTVZLE9BQVF3WSxLQUN4QmIsRUFBSWlCLEVBQUVKLElBQU00OUIsUUFBUStFLFdBQWF4akMsRUFBRXVqQyxLQUFNdmpDLEVBQUV5K0IsUUFBUWlGLFVBQVkxakMsRUFBRXlqQyxJQUlyRS9wQixLQUFPNkMsR0FDUEMsR0FBS0QsR0FBSyxLQUNWOWMsRUFBRWxFLFFBQVVsYixFQUNaZ2lCLEdBQUl2TixFQUVKLEdBQ0UsSUFDRSxJQUFLK0wsRUFBSXBCLEVBQUcsT0FBUzRDLElBQUksQ0FDdkIsSUFBSTYvQixFQUFLNy9CLEdBQUVrUyxVQUdYLEdBRkssR0FBTDJ0QixHQUFXOUUsR0FBR3Y4QixFQUFHd0IsR0FBRWlTLFVBQVdqUyxJQUVyQixJQUFMNi9CLEVBQVUsQ0FDWmpoQyxPQUFJLEVBQ0osSUFBSTBpQyxFQUFLdGhDLEdBQUV0WCxJQUVYLEdBQUksT0FBUzQ0QyxFQUFJLENBQ2YsSUFBSXZCLEVBQUsvL0IsR0FBRStKLFVBRVgsT0FBUS9KLEdBQUUvWSxLQUNSLEtBQUssRUFDSDJYLEVBQUltaEMsRUFDSixNQUVGLFFBQ0VuaEMsRUFBSW1oQyxFQUdSLG9CQUFzQnVCLEVBQUtBLEVBQUcxaUMsR0FBSzBpQyxFQUFHcG9DLFFBQVUwRixHQUlwRG9CLEdBQUlBLEdBQUVneUIsWUFFUixNQUFPb08sR0FDUCxHQUFJLE9BQVNwZ0MsR0FBRyxNQUFNaUYsTUFBTTVGLEVBQUUsTUFDOUJxN0IsR0FBRzE2QixHQUFHb2dDLEdBQ05wZ0MsR0FBSUEsR0FBRWd5QixrQkFFRCxPQUFTaHlCLElBRWxCQSxHQUFJLEtBQ0pvdEIsS0FDQXB3QixHQUFJd0MsT0FDQ3BDLEVBQUVsRSxRQUFVbGIsRUFFbkIsR0FBSXEvQyxHQUFJQSxJQUFLLEVBQUlDLEdBQUtsZ0MsRUFBR21nQyxHQUFLbGdDLE9BQU8sSUFBSzJDLEdBQUl2TixFQUFHLE9BQVN1TixJQUN4RDNDLEVBQUkyQyxHQUFFZ3lCLFdBQVloeUIsR0FBRWd5QixXQUFhLEtBQU1oeUIsR0FBSTNDLEVBTzdDLEdBSkEsS0FEQUEsRUFBSUQsRUFBRThnQyxvQkFDTXpCLEdBQUssTUFDakIsYUFBZXAvQixFQUFJRCxJQUFNc2dDLEdBQUtELE1BQVFBLEdBQUssRUFBR0MsR0FBS3RnQyxHQUFLcWdDLEdBQUssRUFDN0Qsb0JBQXNCOEQsSUFBTUEsR0FBR3ZqRCxFQUFFK3JCLFVBQVc5ckIsR0FDNUNxZixHQUFFRixHQUNFaS9CLEdBQUksTUFBTUEsSUFBSyxFQUFJai9CLEVBQUlrL0IsR0FBSUEsR0FBSyxLQUFNbC9CLEVBQzFDLE9BbjFCTSxLQUNDLEVBazFCRkosS0FDTGd4QixLQUQyQixLQUs3QixTQUFTd1MsS0FDUCxLQUFPLE9BQVN4Z0MsSUFBSSxDQUNsQixJQUFJNUMsRUFBSTRDLEdBQUVrUyxVQUNWLEtBQVcsSUFBSjlVLElBQVl1OUIsR0FBRzM2QixHQUFFaVMsVUFBV2pTLElBQ25DLEtBQVcsSUFBSjVDLElBQVlpZ0MsS0FBT0EsSUFBSyxFQUFJeFAsR0FBRyxJQUFJLFdBRXhDLE9BREE4USxLQUNPLFNBRVQzK0IsR0FBSUEsR0FBRWd5QixZQUlWLFNBQVMyTSxLQUNQLEdBQUksS0FBT3BCLEdBQUksQ0FDYixJQUFJbmdDLEVBQUksR0FBS21nQyxHQUFLLEdBQUtBLEdBRXZCLE9BREFBLEdBQUssR0FDRTNQLEdBQUd4d0IsRUFBR29rQyxLQUlqQixTQUFTQSxLQUNQLEdBQUksT0FBU2xFLEdBQUksT0FBTyxFQUN4QixJQUFJbGdDLEVBQUlrZ0MsR0FFUixHQURBQSxHQUFLLEtBLzJCQyxLQWczQkcsR0FBSnRnQyxJQUFzQixNQUFNaUksTUFBTTVGLEVBQUUsTUFDekMsSUFBSWhDLEVBQUlMLEdBR1IsSUFGQUEsSUEvMkJPLEdBaTNCRkksRUFBSUEsRUFBRWxFLFFBQVErNEIsWUFBYSxPQUFTNzBCLEdBQUksQ0FDM0MsSUFDRSxJQUFJcGYsRUFBSW9mLEVBQ1IsR0FBSSxLQUFxQixJQUFkcGYsRUFBRWswQixXQUFrQixPQUFRbDBCLEVBQUVpSixLQUN2QyxLQUFLLEVBQ0wsS0FBSyxHQUNMLEtBQUssR0FDTCxLQUFLLEdBQ0g0ekMsR0FBRyxFQUFHNzhDLEdBQUk4OEMsR0FBRyxFQUFHOThDLElBRXBCLE1BQU9DLEdBQ1AsR0FBSSxPQUFTbWYsRUFBRyxNQUFNNkgsTUFBTTVGLEVBQUUsTUFDOUJxN0IsR0FBR3Q5QixFQUFHbmYsR0FHUkQsRUFBSW9mLEVBQUU0MEIsV0FDTjUwQixFQUFFNDBCLFdBQWEsS0FDZjUwQixFQUFJcGYsRUFLTixPQUZBZ2YsR0FBSUssRUFDSjJ3QixNQUNPLEVBR1QsU0FBU3lULEdBQUdya0MsRUFBR0MsRUFBR3JmLEdBR2hCOHhDLEdBQUcxeUIsRUFESEMsRUFBSTgrQixHQUFHLytCLEVBRFBDLEVBQUk4OEIsR0FBR244QyxFQUFHcWYsR0FDRyxhQUdiLFFBREFELEVBQUl5Z0MsR0FBR3pnQyxFQUFHLGNBQ0lFLEdBQUVGLEdBR2xCLFNBQVNzOUIsR0FBR3Q5QixFQUFHQyxHQUNiLEdBQUksSUFBTUQsRUFBRW5XLElBQUt3NkMsR0FBR3JrQyxFQUFHQSxFQUFHQyxRQUFRLElBQUssSUFBSXJmLEVBQUlvZixFQUFFbVEsT0FBUSxPQUFTdnZCLEdBQUksQ0FDcEUsR0FBSSxJQUFNQSxFQUFFaUosSUFBSyxDQUNmdzZDLEdBQUd6akQsRUFBR29mLEVBQUdDLEdBQ1QsTUFDSyxHQUFJLElBQU1yZixFQUFFaUosSUFBSyxDQUN0QixJQUFJaEosRUFBSUQsRUFBRStyQixVQUVWLEdBQUksb0JBQXNCL3JCLEVBQUVpUixLQUFLOG9DLDBCQUE0QixvQkFBc0I5NUMsRUFBRXUrQyxvQkFBc0IsT0FBU0MsS0FBT0EsR0FBR3BvQixJQUFJcDJCLElBQUssQ0FHckk2eEMsR0FBRzl4QyxFQURIb2YsRUFBSW0vQixHQUFHditDLEVBRFBvZixFQUFJKzhCLEdBQUc5OEIsRUFBR0QsR0FDRyxhQUdiLFFBREFwZixFQUFJNi9DLEdBQUc3L0MsRUFBRyxjQUNJc2YsR0FBRXRmLEdBQ2hCLE9BSUpBLEVBQUlBLEVBQUV1dkIsUUFJVixTQUFTcXlCLEdBQUd4aUMsRUFBR0MsRUFBR3JmLEdBQ2hCLElBQUlDLEVBQUltZixFQUFFdWlDLFVBQ1YsT0FBUzFoRCxHQUFLQSxFQUFFczNCLE9BQU9sWSxHQUN2QmdELEtBQU1qRCxHQUFLeUIsS0FBTTdnQixFQUFJMmdCLEtBQU1tN0IsSUFBTW43QixLQUFNazdCLElBQU0sYUFBZW9ELElBQU14UCxLQUFPb08sR0F4NUJsRSxJQXc1QjRFK0MsR0FBR3hoQyxFQUFHeUIsSUFBS3UrQixJQUFLLEVBQUthLEdBQUc3Z0MsRUFBR3BmLEtBQTZCLEtBQXRCcWYsRUFBSUQsRUFBRStnQyxpQkFBMkI5Z0MsRUFBSXJmLElBQU1vZixFQUFFK2dDLGVBQWlCbmdELEVBQUdzZixHQUFFRixLQUcxTCxTQUFTMitCLEdBQUczK0IsRUFBR0MsR0FDYixJQUFJcmYsRUFBSW9mLEVBQUUyTSxVQUNWLE9BQVMvckIsR0FBS0EsRUFBRXUzQixPQUFPbFksR0FFdkIsS0FEQUEsRUFBSSxLQUNrQkEsRUFBSXF6QixHQUFkcnpCLEVBQUlvekIsS0FBZ0JyekIsRUFBRyxPQUVuQyxRQURBQSxFQUFJeWdDLEdBQUd6Z0MsRUFBR0MsS0FDSUMsR0FBRUYsR0FLbEJ1L0IsR0FBSyxTQUFZdi9CLEVBQUdDLEVBQUdyZixHQUNyQixJQUFJQyxFQUFJb2YsRUFBRXd4QixlQUVWLEdBQUksT0FBU3p4QixFQUFHLENBQ2QsSUFBSTNLLEVBQUk0SyxFQUFFdzVCLGFBQ1YsR0FBSXo1QixFQUFFbTJCLGdCQUFrQjlnQyxHQUFLMk0sR0FBRWxHLFFBQVM0MUIsSUFBSyxNQUFRLENBQ25ELEdBQUk3d0MsRUFBSUQsRUFBRyxDQUdULE9BRkE4d0MsSUFBSyxFQUVHenhCLEVBQUVwVyxLQUNSLEtBQUssRUFDSCt3QyxHQUFHMzZCLEdBQ0g0NUIsS0FDQSxNQUVGLEtBQUssRUFFSCxHQURBN0QsR0FBRy8xQixHQUNVLEVBQVRBLEVBQUV2ZSxNQUFZLElBQU1kLEdBQUt5VSxFQUFFaXZDLE9BQVEsT0FBT3JrQyxFQUFFd3hCLGVBQWlCeHhCLEVBQUVxeEIsb0JBQXNCLEVBQUcsS0FDNUYsTUFFRixLQUFLLEVBQ0g5d0IsR0FBRVAsRUFBRXBPLE9BQVMyOEIsR0FBR3Z1QixHQUNoQixNQUVGLEtBQUssRUFDSDQxQixHQUFHNTFCLEVBQUdBLEVBQUUwTSxVQUFVbUssZUFDbEIsTUFFRixLQUFLLEdBQ0hqMkIsRUFBSW9mLEVBQUVrMkIsY0FBYzMwQyxNQUNwQjZULEVBQUk0SyxFQUFFcE8sS0FBS2tZLFNBQ1g3SCxHQUFFNnVCLEdBQUkxN0IsRUFBRXVVLGVBQ1J2VSxFQUFFdVUsY0FBZ0Ivb0IsRUFDbEIsTUFFRixLQUFLLEdBQ0gsR0FBSSxPQUFTb2YsRUFBRStVLGNBRWIsT0FBSSxLQURKbjBCLEVBQUlvZixFQUFFbVYsTUFBTWtjLHNCQUNHendDLEdBQUtELEVBQVV1NkMsR0FBR243QixFQUFHQyxFQUFHcmYsSUFDdkNzaEIsR0FBRUwsR0FBZSxFQUFaQSxHQUFFL0YsU0FFQSxRQURQbUUsRUFBSSs1QixHQUFHaDZCLEVBQUdDLEVBQUdyZixJQUNPcWYsRUFBRW9WLFFBQVUsTUFHbENuVCxHQUFFTCxHQUFlLEVBQVpBLEdBQUUvRixTQUNQLE1BRUYsS0FBSyxHQUdILEdBRkFqYixFQUFJb2YsRUFBRXF4QixxQkFBdUIxd0MsRUFFekIsS0FBcUIsR0FBZG9mLEVBQUU4VSxXQUFpQixDQUM1QixHQUFJajBCLEVBQUcsT0FBT2s3QyxHQUFHLzdCLEVBQUdDLEVBQUdyZixHQUN2QnFmLEVBQUU2VSxXQUFhLEdBTWpCLEdBRkEsUUFEQXpmLEVBQUk0SyxFQUFFK1UsaUJBQ1MzZixFQUFFb21DLFVBQVksS0FBTXBtQyxFQUFFdW1DLEtBQU8sTUFDNUMxNUIsR0FBRUwsR0FBR0EsR0FBRS9GLFVBQ0ZqYixFQUFHLE9BQU8sS0FHbkIsT0FBT201QyxHQUFHaDZCLEVBQUdDLEVBQUdyZixHQUdsQjh3QyxJQUFLLFFBRUZBLElBQUssRUFJWixPQUZBenhCLEVBQUV3eEIsZUFBaUIsRUFFWHh4QixFQUFFcFcsS0FDUixLQUFLLEVBU0gsR0FSQWhKLEVBQUlvZixFQUFFcE8sS0FDTixPQUFTbU8sSUFBTUEsRUFBRTZVLFVBQVksS0FBTTVVLEVBQUU0VSxVQUFZLEtBQU01VSxFQUFFNlUsV0FBYSxHQUN0RTlVLEVBQUlDLEVBQUV3NUIsYUFDTnBrQyxFQUFJMDRCLEdBQUc5dEIsRUFBR2tDLEdBQUVyRyxTQUNaeTFCLEdBQUd0eEIsRUFBR3JmLEdBQ055VSxFQUFJdWhDLEdBQUcsS0FBTTMyQixFQUFHcGYsRUFBR21mLEVBQUczSyxFQUFHelUsR0FDekJxZixFQUFFNlUsV0FBYSxFQUVYLGtCQUFvQnpmLEdBQUssT0FBU0EsR0FBSyxvQkFBc0JBLEVBQUU4VSxhQUFVLElBQVc5VSxFQUFFNlMsU0FBVSxDQUtsRyxHQUpBakksRUFBRXBXLElBQU0sRUFDUm9XLEVBQUUrVSxjQUFnQixLQUNsQi9VLEVBQUUreEIsWUFBYyxLQUVaeHhCLEdBQUUzZixHQUFJLENBQ1IsSUFBSXVoQixHQUFJLEVBQ1Jvc0IsR0FBR3Z1QixRQUNFbUMsR0FBSSxFQUVYbkMsRUFBRStVLGNBQWdCLE9BQVMzZixFQUFFdStCLFlBQVMsSUFBV3YrQixFQUFFdStCLE1BQVF2K0IsRUFBRXUrQixNQUFRLEtBQ3JFN0IsR0FBRzl4QixHQUNILElBQUlvQixFQUFJeGdCLEVBQUVvekMseUJBQ1Ysb0JBQXNCNXlCLEdBQUs2eEIsR0FBR2p6QixFQUFHcGYsRUFBR3dnQixFQUFHckIsR0FDdkMzSyxFQUFFcVMsUUFBVXlyQixHQUNabHpCLEVBQUUwTSxVQUFZdFgsRUFDZEEsRUFBRSs5QixvQkFBc0JuekIsRUFDeEIrekIsR0FBRy96QixFQUFHcGYsRUFBR21mLEVBQUdwZixHQUNacWYsRUFBSXk2QixHQUFHLEtBQU16NkIsRUFBR3BmLEdBQUcsRUFBSXVoQixFQUFHeGhCLFFBQ3JCcWYsRUFBRXBXLElBQU0sRUFBR2tYLEdBQUUsS0FBTWQsRUFBRzVLLEVBQUd6VSxHQUFJcWYsRUFBSUEsRUFBRW1WLE1BRTFDLE9BQU9uVixFQUVULEtBQUssR0FDSEQsRUFBRyxDQUtELEdBSkEzSyxFQUFJNEssRUFBRWcxQixZQUNOLE9BQVNqMUIsSUFBTUEsRUFBRTZVLFVBQVksS0FBTTVVLEVBQUU0VSxVQUFZLEtBQU01VSxFQUFFNlUsV0FBYSxHQUN0RTlVLEVBQUlDLEVBQUV3NUIsYUFscU1kLFNBQVl6NUIsR0FDVixJQUFLLElBQU1BLEVBQUV1SyxRQUFTLENBQ3BCdkssRUFBRXVLLFFBQVUsRUFDWixJQUFJdEssRUFBSUQsRUFBRXNLLE1BQ1ZySyxFQUFJQSxJQUNKRCxFQUFFd0ssUUFBVXZLLEVBQ1pBLEVBQUU0K0IsTUFBSyxTQUFVNStCLEdBQ2YsSUFBTUQsRUFBRXVLLFVBQVl0SyxFQUFJQSxFQUFFc2tDLFFBQVN2a0MsRUFBRXVLLFFBQVUsRUFBR3ZLLEVBQUV3SyxRQUFVdkssTUFDN0QsU0FBVUEsR0FDWCxJQUFNRCxFQUFFdUssVUFBWXZLLEVBQUV1SyxRQUFVLEVBQUd2SyxFQUFFd0ssUUFBVXZLLE9BMHBNN0N1a0MsQ0FBR252QyxHQUNDLElBQU1BLEVBQUVrVixRQUFTLE1BQU1sVixFQUFFbVYsUUFNN0IsT0FMQW5WLEVBQUlBLEVBQUVtVixRQUNOdkssRUFBRXBPLEtBQU93RCxFQUNUK00sRUFBSW5DLEVBQUVwVyxJQTRNZCxTQUFZbVcsR0FDVixHQUFJLG9CQUFzQkEsRUFBRyxPQUFPazZCLEdBQUdsNkIsR0FBSyxFQUFJLEVBRWhELFFBQUksSUFBV0EsR0FBSyxPQUFTQSxFQUFHLENBRTlCLElBREFBLEVBQUlBLEVBQUVrSSxZQUNJbUgsR0FBSSxPQUFPLEdBQ3JCLEdBQUlyUCxJQUFNd1AsR0FBSSxPQUFPLEdBR3ZCLE9BQU8sRUFyTldpMUIsQ0FBR3B2QyxHQUNmMkssRUFBSTh3QixHQUFHejdCLEVBQUcySyxHQUVGb0MsR0FDTixLQUFLLEVBQ0huQyxFQUFJbTZCLEdBQUcsS0FBTW42QixFQUFHNUssRUFBRzJLLEVBQUdwZixHQUN0QixNQUFNb2YsRUFFUixLQUFLLEVBQ0hDLEVBQUlxNkIsR0FBRyxLQUFNcjZCLEVBQUc1SyxFQUFHMkssRUFBR3BmLEdBQ3RCLE1BQU1vZixFQUVSLEtBQUssR0FDSEMsRUFBSTg1QixHQUFHLEtBQU05NUIsRUFBRzVLLEVBQUcySyxFQUFHcGYsR0FDdEIsTUFBTW9mLEVBRVIsS0FBSyxHQUNIQyxFQUFJZzZCLEdBQUcsS0FBTWg2QixFQUFHNUssRUFBR3k3QixHQUFHejdCLEVBQUV4RCxLQUFNbU8sR0FBSW5mLEVBQUdELEdBQ3JDLE1BQU1vZixFQUdWLE1BQU02SCxNQUFNNUYsRUFBRSxJQUFLNU0sRUFBRyxLQUd4QixPQUFPNEssRUFFVCxLQUFLLEVBQ0gsT0FBT3BmLEVBQUlvZixFQUFFcE8sS0FBTXdELEVBQUk0SyxFQUFFdzVCLGFBQXNEVyxHQUFHcDZCLEVBQUdDLEVBQUdwZixFQUFqRHdVLEVBQUk0SyxFQUFFZzFCLGNBQWdCcDBDLEVBQUl3VSxFQUFJeTdCLEdBQUdqd0MsRUFBR3dVLEdBQW1CelUsR0FFaEcsS0FBSyxFQUNILE9BQU9DLEVBQUlvZixFQUFFcE8sS0FBTXdELEVBQUk0SyxFQUFFdzVCLGFBQXNEYSxHQUFHdDZCLEVBQUdDLEVBQUdwZixFQUFqRHdVLEVBQUk0SyxFQUFFZzFCLGNBQWdCcDBDLEVBQUl3VSxFQUFJeTdCLEdBQUdqd0MsRUFBR3dVLEdBQW1CelUsR0FFaEcsS0FBSyxFQUdILEdBRkFnNkMsR0FBRzM2QixHQUNIcGYsRUFBSW9mLEVBQUUreEIsWUFDRixPQUFTaHlCLEdBQUssT0FBU25mLEVBQUcsTUFBTWduQixNQUFNNUYsRUFBRSxNQU81QyxHQU5BcGhCLEVBQUlvZixFQUFFdzVCLGFBRU5wa0MsRUFBSSxRQURKQSxFQUFJNEssRUFBRStVLGVBQ1czZixFQUFFMnBDLFFBQVUsS0FDN0IxTSxHQUFHdHlCLEVBQUdDLEdBQ04yeUIsR0FBRzN5QixFQUFHcGYsRUFBRyxLQUFNRCxJQUNmQyxFQUFJb2YsRUFBRStVLGNBQWNncUIsV0FDVjNwQyxFQUFHd2tDLEtBQU01NUIsRUFBSSs1QixHQUFHaDZCLEVBQUdDLEVBQUdyZixPQUFRLENBRXRDLElBREl5VSxFQUFJNEssRUFBRTBNLFVBQVUrTCxXQUFTMGdCLEdBQUs1YixHQUFHdmQsRUFBRTBNLFVBQVVtSyxjQUFjM0QsWUFBYWdtQixHQUFLbDVCLEVBQUc1SyxFQUFJZ2tDLElBQUssR0FDekZoa0MsRUFBRyxJQUFLelUsRUFBSTIwQyxHQUFHdDFCLEVBQUcsS0FBTXBmLEVBQUdELEdBQUlxZixFQUFFbVYsTUFBUXgwQixFQUFHQSxHQUM5Q0EsRUFBRWswQixXQUEyQixFQUFmbDBCLEVBQUVrMEIsVUFBaUIsS0FBTWwwQixFQUFJQSxFQUFFeTBCLGFBQ3hDdFUsR0FBRWYsRUFBR0MsRUFBR3BmLEVBQUdELEdBQUlpNUMsS0FDdEI1NUIsRUFBSUEsRUFBRW1WLE1BRVIsT0FBT25WLEVBRVQsS0FBSyxFQUNILE9BQU8rMUIsR0FBRy8xQixHQUFJLE9BQVNELEdBQUswNUIsR0FBR3o1QixHQUFJcGYsRUFBSW9mLEVBQUVwTyxLQUFNd0QsRUFBSTRLLEVBQUV3NUIsYUFBY3IzQixFQUFJLE9BQVNwQyxFQUFJQSxFQUFFbTJCLGNBQWdCLEtBQU05MEIsRUFBSWhNLEVBQUV3USxTQUFVcVgsR0FBR3I4QixFQUFHd1UsR0FBS2dNLEVBQUksS0FBTyxPQUFTZSxHQUFLOGEsR0FBR3I4QixFQUFHdWhCLEtBQU9uQyxFQUFFNlUsV0FBYSxJQUFLdWxCLEdBQUdyNkIsRUFBR0MsR0FBYSxFQUFUQSxFQUFFdmUsTUFBWSxJQUFNZCxHQUFLeVUsRUFBRWl2QyxRQUFVcmtDLEVBQUV3eEIsZUFBaUJ4eEIsRUFBRXF4QixvQkFBc0IsRUFBR3J4QixFQUFJLE9BQVNjLEdBQUVmLEVBQUdDLEVBQUdvQixFQUFHemdCLEdBQUlxZixFQUFJQSxFQUFFbVYsT0FBUW5WLEVBRTFVLEtBQUssRUFDSCxPQUFPLE9BQVNELEdBQUswNUIsR0FBR3o1QixHQUFJLEtBRTlCLEtBQUssR0FDSCxPQUFPazdCLEdBQUduN0IsRUFBR0MsRUFBR3JmLEdBRWxCLEtBQUssRUFDSCxPQUFPaTFDLEdBQUc1MUIsRUFBR0EsRUFBRTBNLFVBQVVtSyxlQUFnQmoyQixFQUFJb2YsRUFBRXc1QixhQUFjLE9BQVN6NUIsRUFBSUMsRUFBRW1WLE1BQVFrZ0IsR0FBR3IxQixFQUFHLEtBQU1wZixFQUFHRCxHQUFLbWdCLEdBQUVmLEVBQUdDLEVBQUdwZixFQUFHRCxHQUFJcWYsRUFBRW1WLE1BRTNILEtBQUssR0FDSCxPQUFPdjBCLEVBQUlvZixFQUFFcE8sS0FBTXdELEVBQUk0SyxFQUFFdzVCLGFBQXNETSxHQUFHLzVCLEVBQUdDLEVBQUdwZixFQUFqRHdVLEVBQUk0SyxFQUFFZzFCLGNBQWdCcDBDLEVBQUl3VSxFQUFJeTdCLEdBQUdqd0MsRUFBR3dVLEdBQW1CelUsR0FFaEcsS0FBSyxFQUNILE9BQU9tZ0IsR0FBRWYsRUFBR0MsRUFBR0EsRUFBRXc1QixhQUFjNzRDLEdBQUlxZixFQUFFbVYsTUFFdkMsS0FBSyxFQUdMLEtBQUssR0FDSCxPQUFPclUsR0FBRWYsRUFBR0MsRUFBR0EsRUFBRXc1QixhQUFhNXpCLFNBQVVqbEIsR0FBSXFmLEVBQUVtVixNQUVoRCxLQUFLLEdBQ0hwVixFQUFHLENBQ0RuZixFQUFJb2YsRUFBRXBPLEtBQUtrWSxTQUNYMVUsRUFBSTRLLEVBQUV3NUIsYUFDTnA0QixFQUFJcEIsRUFBRWsyQixjQUNOL3pCLEVBQUkvTSxFQUFFN1QsTUFDTixJQUFJd1YsRUFBSWlKLEVBQUVwTyxLQUFLa1ksU0FHZixHQUZBN0gsR0FBRTZ1QixHQUFJLzVCLEVBQUU0UyxlQUNSNVMsRUFBRTRTLGNBQWdCeEgsRUFDZCxPQUFTZixFQUFHLEdBQUlySyxFQUFJcUssRUFBRTdmLE1BQTRILEtBQXJINGdCLEVBQUkra0IsR0FBR253QixFQUFHb0wsR0FBSyxFQUFtRyxHQUE5RixvQkFBc0J2aEIsRUFBRThvQixzQkFBd0I5b0IsRUFBRThvQixzQkFBc0IzUyxFQUFHb0wsR0FBSyxjQUNuSSxHQUFJZixFQUFFd0UsV0FBYXhRLEVBQUV3USxXQUFhN0QsR0FBRWxHLFFBQVMsQ0FDM0NtRSxFQUFJKzVCLEdBQUdoNkIsRUFBR0MsRUFBR3JmLEdBQ2IsTUFBTW9mLFFBRUgsSUFBa0IsUUFBYmhKLEVBQUlpSixFQUFFbVYsU0FBc0JwZSxFQUFFbVosT0FBU2xRLEdBQUksT0FBU2pKLEdBQUksQ0FDbEUsSUFBSUQsRUFBSUMsRUFBRW9WLGFBRVYsR0FBSSxPQUFTclYsRUFBRyxDQUNkc0ssRUFBSXJLLEVBQUVvZSxNQUVOLElBQUssSUFBSTUwQixFQUFJdVcsRUFBRXk2QixhQUFjLE9BQVNoeEMsR0FBSSxDQUN4QyxHQUFJQSxFQUFFNkssVUFBWXhLLEdBQUssS0FBT0wsRUFBRW94QyxhQUFleHZCLEdBQUksQ0FDakQsSUFBTXBMLEVBQUVuTixPQUFRckosRUFBSSt4QyxHQUFHM3hDLEVBQUcsT0FBU2lKLElBQU0sRUFBRzZvQyxHQUFHMTdCLEVBQUd4VyxJQUNsRHdXLEVBQUV5NkIsZUFBaUI3d0MsSUFBTW9XLEVBQUV5NkIsZUFBaUI3d0MsR0FFNUMsUUFEQUosRUFBSXdXLEVBQUU2ZCxZQUNRcjBCLEVBQUVpeEMsZUFBaUI3d0MsSUFBTUosRUFBRWl4QyxlQUFpQjd3QyxHQUMxRHl3QyxHQUFHcjZCLEVBQUVtWixPQUFRdnZCLEdBQ2JtVyxFQUFFMDZCLGVBQWlCN3dDLElBQU1tVyxFQUFFMDZCLGVBQWlCN3dDLEdBQzVDLE1BR0ZKLEVBQUlBLEVBQUUrWixXQUVIOEcsRUFBSSxLQUFPckssRUFBRW5OLEtBQU1tTixFQUFFbkYsT0FBU29PLEVBQUVwTyxLQUFPLEtBQWlCbUYsRUFBRW9lLE1BRWpFLEdBQUksT0FBUy9ULEVBQUdBLEVBQUU4TyxPQUFTblosT0FBTyxJQUFLcUssRUFBSXJLLEVBQUcsT0FBU3FLLEdBQUksQ0FDekQsR0FBSUEsSUFBTXBCLEVBQUcsQ0FDWG9CLEVBQUksS0FDSixNQUtGLEdBQUksUUFGSnJLLEVBQUlxSyxFQUFFZ1UsU0FFVSxDQUNkcmUsRUFBRW1aLE9BQVM5TyxFQUFFOE8sT0FDYjlPLEVBQUlySyxFQUNKLE1BR0ZxSyxFQUFJQSxFQUFFOE8sT0FFUm5aLEVBQUlxSyxFQUVOTixHQUFFZixFQUFHQyxFQUFHNUssRUFBRXdRLFNBQVVqbEIsR0FDcEJxZixFQUFJQSxFQUFFbVYsTUFHUixPQUFPblYsRUFFVCxLQUFLLEVBQ0gsT0FBTzVLLEVBQUk0SyxFQUFFcE8sS0FBMEJoUixHQUFwQnVoQixFQUFJbkMsRUFBRXc1QixjQUFvQjV6QixTQUFVMHJCLEdBQUd0eEIsRUFBR3JmLEdBQXdDQyxFQUFJQSxFQUF4Q3dVLEVBQUlzOEIsR0FBR3Q4QixFQUFHK00sRUFBRXNpQyx3QkFBa0N6a0MsRUFBRTZVLFdBQWEsRUFBRy9ULEdBQUVmLEVBQUdDLEVBQUdwZixFQUFHRCxHQUFJcWYsRUFBRW1WLE1BRXBKLEtBQUssR0FDSCxPQUFtQmhULEVBQUkwdUIsR0FBaEJ6N0IsRUFBSTRLLEVBQUVwTyxLQUFnQm9PLEVBQUV3NUIsY0FBa0NRLEdBQUdqNkIsRUFBR0MsRUFBRzVLLEVBQTVCK00sRUFBSTB1QixHQUFHejdCLEVBQUV4RCxLQUFNdVEsR0FBbUJ2aEIsRUFBR0QsR0FFckYsS0FBSyxHQUNILE9BQU91NUMsR0FBR242QixFQUFHQyxFQUFHQSxFQUFFcE8sS0FBTW9PLEVBQUV3NUIsYUFBYzU0QyxFQUFHRCxHQUU3QyxLQUFLLEdBQ0gsT0FBT0MsRUFBSW9mLEVBQUVwTyxLQUFNd0QsRUFBSTRLLEVBQUV3NUIsYUFBY3BrQyxFQUFJNEssRUFBRWcxQixjQUFnQnAwQyxFQUFJd1UsRUFBSXk3QixHQUFHandDLEVBQUd3VSxHQUFJLE9BQVMySyxJQUFNQSxFQUFFNlUsVUFBWSxLQUFNNVUsRUFBRTRVLFVBQVksS0FBTTVVLEVBQUU2VSxXQUFhLEdBQUk3VSxFQUFFcFcsSUFBTSxFQUFHMlcsR0FBRTNmLElBQU1tZixHQUFJLEVBQUl3dUIsR0FBR3Z1QixJQUFNRCxHQUFJLEVBQUl1eEIsR0FBR3R4QixFQUFHcmYsR0FBSTh5QyxHQUFHenpCLEVBQUdwZixFQUFHd1UsR0FBSTIrQixHQUFHL3pCLEVBQUdwZixFQUFHd1UsRUFBR3pVLEdBQUk4NUMsR0FBRyxLQUFNejZCLEVBQUdwZixHQUFHLEVBQUltZixFQUFHcGYsR0FFcFEsS0FBSyxHQUNILE9BQU9tN0MsR0FBRy83QixFQUFHQyxFQUFHcmYsR0FHcEIsTUFBTWluQixNQUFNNUYsRUFBRSxJQUFLaEMsRUFBRXBXLE9BR3ZCLElBQUlzNkMsR0FBSyxLQUNMckcsR0FBSyxLQTBCVCxTQUFTNkcsR0FBRzNrQyxFQUFHQyxFQUFHcmYsRUFBR0MsR0FDbkJvVixLQUFLcE0sSUFBTW1XLEVBQ1gvSixLQUFLblUsSUFBTWxCLEVBQ1hxVixLQUFLb2YsUUFBVXBmLEtBQUttZixNQUFRbmYsS0FBS2thLE9BQVNsYSxLQUFLMFcsVUFBWTFXLEtBQUtwRSxLQUFPb0UsS0FBS2cvQixZQUFjLEtBQzFGaC9CLEtBQUs2K0IsTUFBUSxFQUNiNytCLEtBQUszSyxJQUFNLEtBQ1gySyxLQUFLd2pDLGFBQWV4NUIsRUFDcEJoSyxLQUFLbVcsYUFBZW5XLEtBQUsrZSxjQUFnQi9lLEtBQUsrN0IsWUFBYy83QixLQUFLa2dDLGNBQWdCLEtBQ2pGbGdDLEtBQUt2VSxLQUFPYixFQUNab1YsS0FBSzZlLFVBQVksRUFDakI3ZSxLQUFLMCtCLFdBQWExK0IsS0FBSzQrQixZQUFjNStCLEtBQUsyK0IsV0FBYSxLQUN2RDMrQixLQUFLcTdCLG9CQUFzQnI3QixLQUFLdzdCLGVBQWlCLEVBQ2pEeDdCLEtBQUs0ZSxVQUFZLEtBR25CLFNBQVMwa0IsR0FBR3Y1QixFQUFHQyxFQUFHcmYsRUFBR0MsR0FDbkIsT0FBTyxJQUFJOGpELEdBQUcza0MsRUFBR0MsRUFBR3JmLEVBQUdDLEdBR3pCLFNBQVNxNUMsR0FBR2w2QixHQUVWLFVBREFBLEVBQUlBLEVBQUU3ZCxhQUNVNmQsRUFBRTJILGtCQWVwQixTQUFTb3RCLEdBQUcvMEIsRUFBR0MsR0FDYixJQUFJcmYsRUFBSW9mLEVBQUU2VSxVQWlCVixPQWhCQSxPQUFTajBCLElBQUtBLEVBQUkyNEMsR0FBR3Y1QixFQUFFblcsSUFBS29XLEVBQUdELEVBQUVsZSxJQUFLa2UsRUFBRXRlLE9BQVN1ekMsWUFBY2oxQixFQUFFaTFCLFlBQWFyMEMsRUFBRWlSLEtBQU9tTyxFQUFFbk8sS0FBTWpSLEVBQUUrckIsVUFBWTNNLEVBQUUyTSxVQUFXL3JCLEVBQUVpMEIsVUFBWTdVLEVBQUdBLEVBQUU2VSxVQUFZajBCLElBQU1BLEVBQUU2NEMsYUFBZXg1QixFQUFHcmYsRUFBRWswQixVQUFZLEVBQUdsMEIsRUFBRWcwQyxXQUFhLEtBQU1oMEMsRUFBRWkwQyxZQUFjLEtBQU1qMEMsRUFBRSt6QyxXQUFhLE1BQzlQL3pDLEVBQUUwd0Msb0JBQXNCdHhCLEVBQUVzeEIsb0JBQzFCMXdDLEVBQUU2d0MsZUFBaUJ6eEIsRUFBRXl4QixlQUNyQjd3QyxFQUFFdzBCLE1BQVFwVixFQUFFb1YsTUFDWngwQixFQUFFdTFDLGNBQWdCbjJCLEVBQUVtMkIsY0FDcEJ2MUMsRUFBRW8wQixjQUFnQmhWLEVBQUVnVixjQUNwQnAwQixFQUFFb3hDLFlBQWNoeUIsRUFBRWd5QixZQUNsQi94QixFQUFJRCxFQUFFb00sYUFDTnhyQixFQUFFd3JCLGFBQWUsT0FBU25NLEVBQUksS0FBTyxDQUNuQ3d4QixlQUFnQnh4QixFQUFFd3hCLGVBQ2xCRCxhQUFjdnhCLEVBQUV1eEIsYUFDaEJLLFdBQVk1eEIsRUFBRTR4QixZQUVoQmp4QyxFQUFFeTBCLFFBQVVyVixFQUFFcVYsUUFDZHowQixFQUFFazBDLE1BQVE5MEIsRUFBRTgwQixNQUNabDBDLEVBQUUwSyxJQUFNMFUsRUFBRTFVLElBQ0gxSyxFQUdULFNBQVNzMEMsR0FBR2wxQixFQUFHQyxFQUFHcmYsRUFBR0MsRUFBR3dVLEVBQUcrTSxHQUN6QixJQUFJZixFQUFJLEVBRVIsR0FEQXhnQixFQUFJbWYsRUFDQSxvQkFBc0JBLEVBQUdrNkIsR0FBR2w2QixLQUFPcUIsRUFBSSxRQUFRLEdBQUksa0JBQW9CckIsRUFBR3FCLEVBQUksT0FBT3JCLEVBQUcsT0FBUUEsR0FDbEcsS0FBSytPLEdBQ0gsT0FBT3NtQixHQUFHejBDLEVBQUVpbEIsU0FBVXhRLEVBQUcrTSxFQUFHbkMsR0FFOUIsS0FBS21QLEdBQ0gvTixFQUFJLEVBQ0poTSxHQUFLLEVBQ0wsTUFFRixLQUFLMlosR0FDSDNOLEVBQUksRUFDSmhNLEdBQUssRUFDTCxNQUVGLEtBQUs0WixHQUNILE9BQU9qUCxFQUFJdTVCLEdBQUcsR0FBSTM0QyxFQUFHcWYsRUFBTyxFQUFKNUssSUFBVTQvQixZQUFjaG1CLEdBQUlqUCxFQUFFbk8sS0FBT29kLEdBQUlqUCxFQUFFeXhCLGVBQWlCcnZCLEVBQUdwQyxFQUV6RixLQUFLc1AsR0FDSCxPQUFPdFAsRUFBSXU1QixHQUFHLEdBQUkzNEMsRUFBR3FmLEVBQUc1SyxJQUFNeEQsS0FBT3lkLEdBQUl0UCxFQUFFaTFCLFlBQWMzbEIsR0FBSXRQLEVBQUV5eEIsZUFBaUJydkIsRUFBR3BDLEVBRXJGLEtBQUt1UCxHQUNILE9BQU92UCxFQUFJdTVCLEdBQUcsR0FBSTM0QyxFQUFHcWYsRUFBRzVLLElBQU00L0IsWUFBYzFsQixHQUFJdlAsRUFBRXl4QixlQUFpQnJ2QixFQUFHcEMsRUFFeEUsUUFDRSxHQUFJLGtCQUFvQkEsR0FBSyxPQUFTQSxFQUFHLE9BQVFBLEVBQUVrSSxVQUNqRCxLQUFLZ0gsR0FDSDdOLEVBQUksR0FDSixNQUFNckIsRUFFUixLQUFLbVAsR0FDSDlOLEVBQUksRUFDSixNQUFNckIsRUFFUixLQUFLcVAsR0FDSGhPLEVBQUksR0FDSixNQUFNckIsRUFFUixLQUFLd1AsR0FDSG5PLEVBQUksR0FDSixNQUFNckIsRUFFUixLQUFLeVAsR0FDSHBPLEVBQUksR0FDSnhnQixFQUFJLEtBQ0osTUFBTW1mLEVBRVIsS0FBSzBQLEdBQ0hyTyxFQUFJLEdBQ0osTUFBTXJCLEVBRVYsTUFBTTZILE1BQU01RixFQUFFLElBQUssTUFBUWpDLEVBQUlBLFNBQVdBLEVBQUcsS0FNakQsT0FKQUMsRUFBSXM1QixHQUFHbDRCLEVBQUd6Z0IsRUFBR3FmLEVBQUc1SyxJQUNkNC9CLFlBQWNqMUIsRUFDaEJDLEVBQUVwTyxLQUFPaFIsRUFDVG9mLEVBQUV3eEIsZUFBaUJydkIsRUFDWm5DLEVBR1QsU0FBU28xQixHQUFHcjFCLEVBQUdDLEVBQUdyZixFQUFHQyxHQUduQixPQUZBbWYsRUFBSXU1QixHQUFHLEVBQUd2NUIsRUFBR25mLEVBQUdvZixJQUNkd3hCLGVBQWlCN3dDLEVBQ1pvZixFQUdULFNBQVNnMUIsR0FBR2gxQixFQUFHQyxFQUFHcmYsR0FHaEIsT0FGQW9mLEVBQUl1NUIsR0FBRyxFQUFHdjVCLEVBQUcsS0FBTUMsSUFDakJ3eEIsZUFBaUI3d0MsRUFDWm9mLEVBR1QsU0FBU28xQixHQUFHcDFCLEVBQUdDLEVBQUdyZixHQVFoQixPQVBBcWYsRUFBSXM1QixHQUFHLEVBQUcsT0FBU3Y1QixFQUFFNkYsU0FBVzdGLEVBQUU2RixTQUFXLEdBQUk3RixFQUFFbGUsSUFBS21lLElBQ3REd3hCLGVBQWlCN3dDLEVBQ25CcWYsRUFBRTBNLFVBQVksQ0FDWm1LLGNBQWU5VyxFQUFFOFcsY0FDakI4dEIsZ0JBQWlCLEtBQ2pCelAsZUFBZ0JuMUIsRUFBRW0xQixnQkFFYmwxQixFQUdULFNBQVM0a0MsR0FBRzdrQyxFQUFHQyxFQUFHcmYsR0FDaEJxVixLQUFLcE0sSUFBTW9XLEVBQ1hoSyxLQUFLNkYsUUFBVSxLQUNmN0YsS0FBSzZnQixjQUFnQjlXLEVBQ3JCL0osS0FBS3NzQyxVQUFZdHNDLEtBQUsydUMsZ0JBQWtCLEtBQ3hDM3VDLEtBQUs0ckMsdUJBQXlCLEVBQzlCNXJDLEtBQUsyckMsYUFBZSxLQUNwQjNyQyxLQUFLK3JDLGVBQWlCLEVBQ3RCL3JDLEtBQUs0a0MsZUFBaUI1a0MsS0FBSzVLLFFBQVUsS0FDckM0SyxLQUFLeWlCLFFBQVU5M0IsRUFDZnFWLEtBQUtrckMsYUFBZSxLQUNwQmxyQyxLQUFLaXJDLGlCQUFtQixHQUN4QmpyQyxLQUFLMnFDLGdCQUFrQjNxQyxLQUFLOHFDLGVBQWlCOXFDLEtBQUsrcUMsc0JBQXdCL3FDLEtBQUs2ckMsa0JBQW9CN3JDLEtBQUs2c0MsbUJBQXFCN3NDLEtBQUs2cUMsaUJBQW1CLEVBR3ZKLFNBQVNELEdBQUc3Z0MsRUFBR0MsR0FDYixJQUFJcmYsRUFBSW9mLEVBQUU4aUMsbUJBRVYsT0FEQTlpQyxFQUFJQSxFQUFFOGhDLGtCQUNDLElBQU1saEQsR0FBS0EsR0FBS3FmLEdBQUtELEdBQUtDLEVBR25DLFNBQVMyOEIsR0FBRzU4QixFQUFHQyxHQUNiLElBQUlyZixFQUFJb2YsRUFBRThpQyxtQkFDTmppRCxFQUFJbWYsRUFBRThoQyxrQkFDVmxoRCxFQUFJcWYsSUFBTUQsRUFBRThpQyxtQkFBcUI3aUMsSUFDN0JwZixFQUFJb2YsR0FBSyxJQUFNcmYsS0FBR29mLEVBQUU4aEMsa0JBQW9CN2hDLEdBQzVDQSxHQUFLRCxFQUFFK2dDLGlCQUFtQi9nQyxFQUFFK2dDLGVBQWlCLEdBQzdDOWdDLEdBQUtELEVBQUU0Z0Msa0JBQW9CNWdDLEVBQUU0Z0MsZ0JBQWtCLEdBR2pELFNBQVMvRCxHQUFHNzhCLEVBQUdDLEdBQ2JBLEVBQUlELEVBQUU4Z0MsbUJBQXFCOWdDLEVBQUU4Z0MsaUJBQW1CN2dDLEdBQ2hELElBQUlyZixFQUFJb2YsRUFBRThpQyxtQkFDVixJQUFNbGlELElBQU1xZixHQUFLcmYsRUFBSW9mLEVBQUU4aUMsbUJBQXFCOWlDLEVBQUU4aEMsa0JBQW9COWhDLEVBQUVnaEMsc0JBQXdCLEVBQUkvZ0MsR0FBS0QsRUFBRThoQyxvQkFBc0I5aEMsRUFBRThoQyxrQkFBb0I3aEMsRUFBSSxHQUFJQSxFQUFJRCxFQUFFZ2hDLHdCQUEwQmhoQyxFQUFFZ2hDLHNCQUF3Qi9nQyxJQUd2TixTQUFTcWhDLEdBQUd0aEMsRUFBR0MsR0FDYixJQUFJcmYsRUFBSW9mLEVBQUU0Z0MsaUJBQ04sSUFBTWhnRCxHQUFLQSxFQUFJcWYsS0FBR0QsRUFBRTRnQyxnQkFBa0IzZ0MsR0FHNUMsU0FBUzZrQyxHQUFHOWtDLEVBQUdDLEVBQUdyZixFQUFHQyxHQUNuQixJQUFJd1UsRUFBSTRLLEVBQUVuRSxRQUNOc0csRUFBSWl4QixLQUNKaHlCLEVBQUkyeEIsR0FBR3BxQixTQUNYeEcsRUFBSWt4QixHQUFHbHhCLEVBQUcvTSxFQUFHZ00sR0FFYnJCLEVBQUcsR0FBSXBmLEVBQUcsQ0FHUnFmLEVBQUcsQ0FDRCxHQUFJMlUsR0FITmgwQixFQUFJQSxFQUFFd3lDLHVCQUdVeHlDLEdBQUssSUFBTUEsRUFBRWlKLElBQUssTUFBTWdlLE1BQU01RixFQUFFLE1BQzlDLElBQUlqTCxFQUFJcFcsRUFFUixFQUFHLENBQ0QsT0FBUW9XLEVBQUVuTixLQUNSLEtBQUssRUFDSG1OLEVBQUlBLEVBQUUyVixVQUFVdGhCLFFBQ2hCLE1BQU00VSxFQUVSLEtBQUssRUFDSCxHQUFJTyxHQUFFeEosRUFBRW5GLE1BQU8sQ0FDYm1GLEVBQUlBLEVBQUUyVixVQUFVOGhCLDBDQUNoQixNQUFNeHVCLEdBS1pqSixFQUFJQSxFQUFFbVosYUFDQyxPQUFTblosR0FFbEIsTUFBTTZRLE1BQU01RixFQUFFLE1BR2hCLEdBQUksSUFBTXJoQixFQUFFaUosSUFBSyxDQUNmLElBQUlrTixFQUFJblcsRUFBRWlSLEtBRVYsR0FBSTJPLEdBQUV6SixHQUFJLENBQ1JuVyxFQUFJMHRDLEdBQUcxdEMsRUFBR21XLEVBQUdDLEdBQ2IsTUFBTWdKLEdBSVZwZixFQUFJb1csT0FDQ3BXLEVBQUlpdEMsR0FXWCxPQVRBLE9BQVM1dEIsRUFBRTVVLFFBQVU0VSxFQUFFNVUsUUFBVXpLLEVBQUlxZixFQUFFNDZCLGVBQWlCajZDLEdBQ3hEcWYsRUFBSXN5QixHQUFHbndCLEVBQUdmLElBQ1J2UCxRQUFVLENBQ1ZrdEMsUUFBU2gvQixHQUdYLFFBREFuZixPQUFJLElBQVdBLEVBQUksS0FBT0EsS0FDWG9mLEVBQUV3eUIsU0FBVzV4QyxHQUM1QjZ4QyxHQUFHcjlCLEVBQUc0SyxHQUNOc3pCLEdBQUdsK0IsRUFBRytNLEdBQ0NBLEVBR1QsU0FBUzJpQyxHQUFHL2tDLEdBRVYsS0FEQUEsRUFBSUEsRUFBRWxFLFNBQ0NzWixNQUFPLE9BQU8sS0FFckIsT0FBUXBWLEVBQUVvVixNQUFNdnJCLEtBQ2QsS0FBSyxFQUdMLFFBQ0UsT0FBT21XLEVBQUVvVixNQUFNekksV0FJckIsU0FBU3E0QixHQUFHaGxDLEVBQUdDLEdBRWIsUUFEQUQsRUFBSUEsRUFBRWdWLGdCQUNRLE9BQVNoVixFQUFFaVYsWUFBY2pWLEVBQUVrN0IsVUFBWWo3QixJQUFNRCxFQUFFazdCLFVBQVlqN0IsR0FHM0UsU0FBU2dsQyxHQUFHamxDLEVBQUdDLEdBQ2Ira0MsR0FBR2hsQyxFQUFHQyxJQUNMRCxFQUFJQSxFQUFFNlUsWUFBY213QixHQUFHaGxDLEVBQUdDLEdBRzdCLFNBQVNpbEMsR0FBR2xsQyxFQUFHQyxFQUFHcmYsR0FFaEIsSUFBSUMsRUFBSSxJQUFJZ2tELEdBQUc3a0MsRUFBR0MsRUFEbEJyZixFQUFJLE1BQVFBLElBQUssSUFBT0EsRUFBRTgzQixTQUV0QnJqQixFQUFJa2tDLEdBQUcsRUFBRyxLQUFNLEtBQU0sSUFBTXQ1QixFQUFJLEVBQUksSUFBTUEsRUFBSSxFQUFJLEdBQ3REcGYsRUFBRWliLFFBQVV6RyxFQUNaQSxFQUFFc1gsVUFBWTlyQixFQUNka3hDLEdBQUcxOEIsR0FDSDJLLEVBQUVpZSxJQUFNcDlCLEVBQUVpYixRQUNWbGIsR0FBSyxJQUFNcWYsR0E3NExiLFNBQVlELEVBQUdDLEdBQ2IsSUFBSXJmLEVBQUkrekIsR0FBRzFVLEdBQ1g2WCxHQUFHaHZCLFNBQVEsU0FBVWtYLEdBQ25CZ1gsR0FBR2hYLEVBQUdDLEVBQUdyZixNQUVYbTNCLEdBQUdqdkIsU0FBUSxTQUFVa1gsR0FDbkJnWCxHQUFHaFgsRUFBR0MsRUFBR3JmLE1BdTRMS3VrRCxDQUFHbmxDLEVBQUcsSUFBTUEsRUFBRXNULFNBQVd0VCxFQUFJQSxFQUFFMlIsZUFDL0MxYixLQUFLbXZDLGNBQWdCdmtELEVBZXZCLFNBQVN3a0QsR0FBR3JsQyxHQUNWLFNBQVVBLEdBQUssSUFBTUEsRUFBRXNULFVBQVksSUFBTXRULEVBQUVzVCxVQUFZLEtBQU90VCxFQUFFc1QsV0FBYSxJQUFNdFQsRUFBRXNULFVBQVksaUNBQW1DdFQsRUFBRXVULFlBYXhJLFNBQVMreEIsR0FBR3RsQyxFQUFHQyxFQUFHcmYsRUFBR0MsRUFBR3dVLEdBQ3RCLElBQUkrTSxFQUFJeGhCLEVBQUUwOUMsb0JBRVYsR0FBSWw4QixFQUFHLENBQ0wsSUFBSWYsRUFBSWUsRUFBRWdqQyxjQUVWLEdBQUksb0JBQXNCL3ZDLEVBQUcsQ0FDM0IsSUFBSTJCLEVBQUkzQixFQUVSQSxFQUFJLFdBQ0YsSUFBSTJLLEVBQUkra0MsR0FBRzFqQyxHQUNYckssRUFBRXRXLEtBQUtzZixJQUlYOGtDLEdBQUc3a0MsRUFBR29CLEVBQUdyQixFQUFHM0ssT0FDUCxDQUlMLEdBSEErTSxFQUFJeGhCLEVBQUUwOUMsb0JBM0JWLFNBQVl0K0IsRUFBR0MsR0FFYixHQURBQSxJQUEwRUEsTUFBcEVBLEVBQUlELEVBQUksSUFBTUEsRUFBRXNULFNBQVd0VCxFQUFFODFCLGdCQUFrQjkxQixFQUFFbVQsV0FBYSxPQUFrQixJQUFNbFQsRUFBRXFULFdBQWFyVCxFQUFFc2xDLGFBQWEscUJBQ3JIdGxDLEVBQUcsSUFBSyxJQUFJcmYsRUFBR0EsRUFBSW9mLEVBQUVxVCxXQUN4QnJULEVBQUVQLFlBQVk3ZSxHQUVoQixPQUFPLElBQUlza0QsR0FBR2xsQyxFQUFHLEVBQUdDLEVBQUksQ0FDdEJ5WSxTQUFTLFFBQ1AsR0FvQjBCOHNCLENBQUc1a0QsRUFBR0MsR0FDbEN3Z0IsRUFBSWUsRUFBRWdqQyxjQUVGLG9CQUFzQi92QyxFQUFHLENBQzNCLElBQUkwQixFQUFJMUIsRUFFUkEsRUFBSSxXQUNGLElBQUkySyxFQUFJK2tDLEdBQUcxakMsR0FDWHRLLEVBQUVyVyxLQUFLc2YsSUFJWHNpQyxJQUFHLFdBQ0R3QyxHQUFHN2tDLEVBQUdvQixFQUFHckIsRUFBRzNLLE1BSWhCLE9BQU8wdkMsR0FBRzFqQyxHQUdaLFNBQVNva0MsR0FBR3psQyxFQUFHQyxFQUFHcmYsR0FDaEIsSUFBSUMsRUFBSSxFQUFJOEgsVUFBVUMsYUFBVSxJQUFXRCxVQUFVLEdBQUtBLFVBQVUsR0FBSyxLQUN6RSxNQUFPLENBQ0x1ZixTQUFVNEcsR0FDVmh0QixJQUFLLE1BQVFqQixFQUFJLEtBQU8sR0FBS0EsRUFDN0JnbEIsU0FBVTdGLEVBQ1Y4VyxjQUFlN1csRUFDZmsxQixlQUFnQnYwQyxHQXlGcEIsU0FBUzhrRCxHQUFHMWxDLEVBQUdDLEdBQ2IsSUFBSXJmLEVBQUksRUFBSStILFVBQVVDLGFBQVUsSUFBV0QsVUFBVSxHQUFLQSxVQUFVLEdBQUssS0FDekUsSUFBSzA4QyxHQUFHcGxDLEdBQUksTUFBTTRILE1BQU01RixFQUFFLE1BQzFCLE9BQU93akMsR0FBR3psQyxFQUFHQyxFQUFHLEtBQU1yZixHQWxLeEJza0QsR0FBRy9pRCxVQUFVZ29CLE9BQVMsU0FBVW5LLEdBQzlCOGtDLEdBQUc5a0MsRUFBRy9KLEtBQUttdkMsY0FBZSxLQUFNLE9BR2xDRixHQUFHL2lELFVBQVV3akQsUUFBVSxXQUNyQixJQUFJM2xDLEVBQUkvSixLQUFLbXZDLGNBQ1RubEMsRUFBSUQsRUFBRThXLGNBQ1ZndUIsR0FBRyxLQUFNOWtDLEVBQUcsTUFBTSxXQUNoQkMsRUFBRWdlLElBQU0sU0FrRVo5RyxHQUFLLFNBQVluWCxHQUNmLEdBQUksS0FBT0EsRUFBRW5XLElBQUssQ0FDaEIsSUFBSW9XLEVBQUk0d0IsR0FBR3dDLEtBQU0sSUFBSyxLQUN0QkUsR0FBR3Z6QixFQUFHQyxHQUNOZ2xDLEdBQUdqbEMsRUFBR0MsS0FJVm1YLEdBQUssU0FBWXBYLEdBQ2YsS0FBT0EsRUFBRW5XLE1BQVEwcEMsR0FBR3Z6QixFQUFHLEdBQUlpbEMsR0FBR2psQyxFQUFHLEtBR25DcVgsR0FBSyxTQUFZclgsR0FDZixHQUFJLEtBQU9BLEVBQUVuVyxJQUFLLENBQ2hCLElBQUlvVyxFQUFJb3pCLEtBRVJFLEdBQUd2ekIsRUFESEMsRUFBSXF6QixHQUFHcnpCLEVBQUdELEVBQUcsT0FFYmlsQyxHQUFHamxDLEVBQUdDLEtBSVZzTSxFQUFLLFNBQVl2TSxFQUFHQyxFQUFHcmYsR0FDckIsT0FBUXFmLEdBQ04sSUFBSyxRQUlILEdBSEF1UixHQUFHeFIsRUFBR3BmLEdBQ05xZixFQUFJcmYsRUFBRUUsS0FFRixVQUFZRixFQUFFaVIsTUFBUSxNQUFRb08sRUFBRyxDQUNuQyxJQUFLcmYsRUFBSW9mLEVBQUdwZixFQUFFNGUsWUFDWjVlLEVBQUlBLEVBQUU0ZSxXQUtSLElBRkE1ZSxFQUFJQSxFQUFFd2pCLGlCQUFpQixjQUFnQndoQyxLQUFLQyxVQUFVLEdBQUs1bEMsR0FBSyxtQkFFM0RBLEVBQUksRUFBR0EsRUFBSXJmLEVBQUVnSSxPQUFRcVgsSUFBSyxDQUM3QixJQUFJcGYsRUFBSUQsRUFBRXFmLEdBRVYsR0FBSXBmLElBQU1tZixHQUFLbmYsRUFBRWlsRCxPQUFTOWxDLEVBQUU4bEMsS0FBTSxDQUNoQyxJQUFJendDLEVBQUk4b0IsR0FBR3Q5QixHQUNYLElBQUt3VSxFQUFHLE1BQU13UyxNQUFNNUYsRUFBRSxLQUN0QjRPLEdBQUdod0IsR0FDSDJ3QixHQUFHM3dCLEVBQUd3VSxLQUtaLE1BRUYsSUFBSyxXQUNIaWQsR0FBR3RTLEVBQUdwZixHQUNOLE1BRUYsSUFBSyxTQUNVLE9BQWJxZixFQUFJcmYsRUFBRVksUUFBb0J1d0IsR0FBRy9SLElBQUtwZixFQUFFdTdDLFNBQVVsOEIsR0FBRyxLQUl2RDZNLEVBQUt1MUIsR0FFTHQxQixFQUFLLFNBQVkvTSxFQUFHQyxFQUFHcmYsRUFBR0MsRUFBR3dVLEdBQzNCLElBQUkrTSxFQUFJeEMsR0FDUkEsSUFBSyxFQUVMLElBQ0UsT0FBTzR3QixHQUFHLEdBQUl4d0IsRUFBRWplLEtBQUssS0FBTWtlLEVBQUdyZixFQUFHQyxFQUFHd1UsSUFDcEMsUUE5bkRJLEtBK25ESnVLLEdBQUl3QyxJQUFjd3VCLE9BSXRCNWpCLEVBQUssV0Fub0RHLEtBb29ERCxHQUFKcE4sTUF4MUNILFdBQ0UsR0FBSSxPQUFTd2dDLEdBQUksQ0FDZixJQUFJcGdDLEVBQUlvZ0MsR0FDUkEsR0FBSyxLQUNMcGdDLEVBQUVsWCxTQUFRLFNBQVVrWCxFQUFHcGYsR0FDckIwZ0QsR0FBRzFnRCxFQUFHb2YsR0FDTkUsR0FBRXRmLE1BRUpnd0MsTUFnMUM0Qm1WLEdBQU14RSxPQUd0Q3QwQixFQUFLLFNBQVlqTixFQUFHQyxHQUNsQixJQUFJcmYsRUFBSWdmLEdBQ1JBLElBQUssRUFFTCxJQUNFLE9BQU9JLEVBQUVDLEdBQ1QsUUE3b0RJLEtBOG9ESkwsR0FBSWhmLElBQWNnd0MsT0FVdEIsSUFBSW9WLEdBQUssQ0FDUEMsT0FBUSxDQUFDM3RCLEdBQUk0RixHQUFJQyxHQUFJOVIsRUFBSVAsRUFBSThTLEdBQUksU0FBVTVlLEdBQ3pDd1YsR0FBR3hWLEVBQUcyZSxLQUNML1IsRUFBSUMsRUFBSTNjLEdBQUk4bEIsR0FBSXVyQixHQUFJLENBQ3JCemxDLFNBQVMsTUFJYixTQUFXa0UsR0FDVCxJQUFJQyxFQUFJRCxFQUFFa21DLHlCQXpkWixTQUFZbG1DLEdBQ1YsR0FBSSxxQkFBdUJrRywrQkFBZ0MsT0FBTyxFQUNsRSxJQUFJakcsRUFBSWlHLCtCQUNSLEdBQUlqRyxFQUFFa21DLGFBQWVsbUMsRUFBRW1tQyxjQUFlLE9BQU8sRUFFN0MsSUFDRSxJQUFJeGxELEVBQUlxZixFQUFFb21DLE9BQU9ybUMsR0FFakJta0MsR0FBSyxTQUFZbmtDLEdBQ2YsSUFDRUMsRUFBRXFtQyxrQkFBa0IxbEQsRUFBR29mLE9BQUcsRUFBUSxNQUE4QixHQUF0QkEsRUFBRWxFLFFBQVFnWixZQUNwRCxNQUFPemYsTUFHWHlvQyxHQUFLLFNBQVk5OUIsR0FDZixJQUNFQyxFQUFFc21DLHFCQUFxQjNsRCxFQUFHb2YsR0FDMUIsTUFBTzNLLE1BRVgsTUFBT3hVLE1BdWNGMmxELENBQUd4a0QsRUFBRSxHQUFJZ2UsRUFBRyxDQUNqQnltQyxrQkFBbUIsS0FDbkJDLGNBQWUsS0FDZkMsbUJBQW9CLEtBQ3BCQyxlQUFnQixLQUNoQkMscUJBQXNCejRCLEVBQUcxRix1QkFDekJvK0Isd0JBQXlCLFNBQWlDOW1DLEdBRXhELE9BQU8sUUFEUEEsRUFBSW1WLEdBQUduVixJQUNhLEtBQU9BLEVBQUUyTSxXQUUvQnU1Qix3QkFBeUIsU0FBaUNsbUMsR0FDeEQsT0FBT0MsRUFBSUEsRUFBRUQsR0FBSyxNQUVwQittQyw0QkFBNkIsS0FDN0JDLGdCQUFpQixLQUNqQkMsYUFBYyxLQUNkQyxrQkFBbUIsS0FDbkJDLGdCQUFpQixRQW5CckIsQ0FxQkcsQ0FDRGpCLHdCQUF5Qm52QixHQUN6QnF3QixXQUFZLEVBQ1ovN0IsUUFBUyxVQUNUZzhCLG9CQUFxQixjQUd2QmhuRCxFQUFRbXBCLG1EQUFxRHc4QixHQUM3RDNsRCxFQUFRaW5ELGFBQWU1QixHQUV2QnJsRCxFQUFRa25ELFlBQWMsU0FBVXZuQyxHQUM5QixHQUFJLE1BQVFBLEVBQUcsT0FBTyxLQUN0QixHQUFJLElBQU1BLEVBQUVzVCxTQUFVLE9BQU90VCxFQUM3QixJQUFJQyxFQUFJRCxFQUFFb3pCLG9CQUVWLFFBQUksSUFBV256QixFQUFHLENBQ2hCLEdBQUksb0JBQXNCRCxFQUFFbUssT0FBUSxNQUFNdEMsTUFBTTVGLEVBQUUsTUFDbEQsTUFBTTRGLE1BQU01RixFQUFFLElBQUtoaEIsT0FBT2dILEtBQUsrWCxLQUtqQyxPQURBQSxFQUFJLFFBREpBLEVBQUltVixHQUFHbFYsSUFDVSxLQUFPRCxFQUFFMk0sV0FJNUJ0c0IsRUFBUW1uRCxVQUFZLFNBQVV4bkMsRUFBR0MsR0FDL0IsR0Evc0RNLEtBK3NERyxHQUFKTCxJQUFzQixNQUFNaUksTUFBTTVGLEVBQUUsTUFDekMsSUFBSXJoQixFQUFJZ2YsR0FDUkEsSUFBSyxFQUVMLElBQ0UsT0FBTzR3QixHQUFHLEdBQUl4d0IsRUFBRWplLEtBQUssS0FBTWtlLElBQzNCLFFBQ0FMLEdBQUloZixFQUFHZ3dDLE9BSVh2d0MsRUFBUXE0QixRQUFVLFNBQVUxWSxFQUFHQyxFQUFHcmYsR0FDaEMsSUFBS3lrRCxHQUFHcGxDLEdBQUksTUFBTTRILE1BQU01RixFQUFFLE1BQzFCLE9BQU9xakMsR0FBRyxLQUFNdGxDLEVBQUdDLEdBQUcsRUFBSXJmLElBRzVCUCxFQUFROHBCLE9BQVMsU0FBVW5LLEVBQUdDLEVBQUdyZixHQUMvQixJQUFLeWtELEdBQUdwbEMsR0FBSSxNQUFNNEgsTUFBTTVGLEVBQUUsTUFDMUIsT0FBT3FqQyxHQUFHLEtBQU10bEMsRUFBR0MsR0FBRyxFQUFJcmYsSUFHNUJQLEVBQVFvbkQsdUJBQXlCLFNBQVV6bkMsR0FDekMsSUFBS3FsQyxHQUFHcmxDLEdBQUksTUFBTTZILE1BQU01RixFQUFFLEtBQzFCLFFBQU9qQyxFQUFFcytCLHNCQUF1QmdFLElBQUcsV0FDakNnRCxHQUFHLEtBQU0sS0FBTXRsQyxHQUFHLEdBQUksV0FDcEJBLEVBQUVzK0Isb0JBQXNCLEtBQ3hCdCtCLEVBQUVpZSxJQUFNLFlBRVIsSUFHTjU5QixFQUFRcW5ELHdCQUEwQnJGLEdBRWxDaGlELEVBQVFzbkQsc0JBQXdCLFNBQVUzbkMsRUFBR0MsR0FDM0MsT0FBT3lsQyxHQUFHMWxDLEVBQUdDLEVBQUcsRUFBSXRYLFVBQVVDLGFBQVUsSUFBV0QsVUFBVSxHQUFLQSxVQUFVLEdBQUssT0FHbkZ0SSxFQUFRdW5ELG9DQUFzQyxTQUFVNW5DLEVBQUdDLEVBQUdyZixFQUFHQyxHQUMvRCxJQUFLd2tELEdBQUd6a0QsR0FBSSxNQUFNaW5CLE1BQU01RixFQUFFLE1BQzFCLEdBQUksTUFBUWpDLFFBQUssSUFBV0EsRUFBRW96QixvQkFBcUIsTUFBTXZyQixNQUFNNUYsRUFBRSxLQUNqRSxPQUFPcWpDLEdBQUd0bEMsRUFBR0MsRUFBR3JmLEdBQUcsRUFBSUMsSUFHekJSLEVBQVFnckIsUUFBVSxXLDZCQ3h0T2hCL3FCLEVBQU9ELFFBQVUsRUFBUSxLLDZCQ08zQixJQUFJd25ELEVBQUl4bUMsRUFBR3JLLEVBQUdELEVBQUd2VyxFQUVqQixHQUFJLHFCQUF1QmtTLFFBQVUsb0JBQXNCbzFDLGVBQWdCLENBQ3pFLElBQUl6bEQsRUFBSSxLQUNKK2UsRUFBSSxLQUNKM2YsRUFBSSxTQUFTQSxJQUNmLEdBQUksT0FBU1ksRUFBRyxJQUNkLElBQUkyZCxFQUFJM2YsRUFBUTZ1QyxlQUNoQjdzQyxHQUFFLEVBQUkyZCxHQUNOM2QsRUFBSSxLQUNKLE1BQU80ZCxHQUNQLE1BQU1vZCxXQUFXNTdCLEVBQUcsR0FBSXdlLElBR3hCZ0MsRUFBSTlNLEtBQUtpckIsTUFFYi8vQixFQUFRNnVDLGFBQWUsV0FDckIsT0FBTy81QixLQUFLaXJCLE1BQVFuZSxHQUd0QjRsQyxFQUFLLFNBQVc3bkMsR0FDZCxPQUFTM2QsRUFBSWc3QixXQUFXd3FCLEVBQUksRUFBRzduQyxJQUFNM2QsRUFBSTJkLEVBQUdxZCxXQUFXNTdCLEVBQUcsS0FHNUQ0ZixFQUFJLFNBQVdyQixFQUFHQyxHQUNoQm1CLEVBQUlpYyxXQUFXcmQsRUFBR0MsSUFHcEJqSixFQUFJLFdBQ0Z1bUIsYUFBYW5jLElBR2ZySyxFQUFJLFdBQ0YsT0FBTyxHQUdUdlcsRUFBSUgsRUFBUTBuRCx3QkFBMEIsaUJBQ2pDLENBQ0wsSUFBSXhuQyxFQUFJN04sT0FBT3MxQyxZQUNYdnhDLEVBQUkvRCxPQUFPeUMsS0FDWDJNLEVBQUlwUCxPQUFPMnFCLFdBQ1h6YixFQUFJbFAsT0FBTzZxQixhQUVmLEdBQUkscUJBQXVCblgsUUFBUyxDQUNsQyxJQUFJOUUsRUFBSTVPLE9BQU91MUMscUJBQ2Ysb0JBQXNCdjFDLE9BQU93MUMsdUJBQXlCOWhDLFFBQVFDLE1BQU0sMklBQ3BFLG9CQUFzQi9FLEdBQUs4RSxRQUFRQyxNQUFNLDBJQUczQyxHQUFJLGtCQUFvQjlGLEdBQUssb0JBQXNCQSxFQUFFNmYsSUFBSy8vQixFQUFRNnVDLGFBQWUsV0FDL0UsT0FBTzN1QixFQUFFNmYsV0FDSixDQUNMLElBQUk1ZSxFQUFJL0ssRUFBRTJwQixNQUVWLy9CLEVBQVE2dUMsYUFBZSxXQUNyQixPQUFPejRCLEVBQUUycEIsTUFBUTVlLEdBR3JCLElBQUlPLEdBQUksRUFDSkosRUFBSSxLQUNKa0IsR0FBSyxFQUNMekMsRUFBSSxFQUNKTyxFQUFJLEVBRVI1SixFQUFJLFdBQ0YsT0FBTzFXLEVBQVE2dUMsZ0JBQWtCdnVCLEdBR25DbmdCLEVBQUksYUFFSkgsRUFBUTBuRCx3QkFBMEIsU0FBVS9uQyxHQUMxQyxFQUFJQSxHQUFLLElBQU1BLEVBQUlvRyxRQUFRQyxNQUFNLG9IQUFzSGpHLEVBQUksRUFBSUosRUFBSTZkLEtBQUtzcUIsTUFBTSxJQUFNbm9DLEdBQUssR0FHM0wsSUFBSW1CLEVBQUksSUFBSTJtQyxlQUNSNWxDLEVBQUlmLEVBQUVpbkMsTUFFVmpuQyxFQUFFa25DLE1BQU1DLFVBQVksV0FDbEIsR0FBSSxPQUFTM21DLEVBQUcsQ0FDZCxJQUFJM0IsRUFBSTNmLEVBQVE2dUMsZUFDaEJ2dUIsRUFBSVgsRUFBSUksRUFFUixJQUNFdUIsR0FBRSxFQUFJM0IsR0FBS2tDLEVBQUVxbUMsWUFBWSxPQUFTeG1DLEdBQUksRUFBSUosRUFBSSxNQUM5QyxNQUFPMUIsR0FDUCxNQUFNaUMsRUFBRXFtQyxZQUFZLE1BQU90b0MsUUFFeEI4QixHQUFJLEdBR2I4bEMsRUFBSyxTQUFZN25DLEdBQ2YyQixFQUFJM0IsRUFDSitCLElBQU1BLEdBQUksRUFBSUcsRUFBRXFtQyxZQUFZLFFBRzlCbG5DLEVBQUksU0FBV3JCLEVBQUdDLEdBQ2hCNEMsRUFBSWYsR0FBRSxXQUNKOUIsRUFBRTNmLEVBQVE2dUMsa0JBQ1RqdkIsSUFHTGpKLEVBQUksV0FDRjRLLEVBQUVpQixHQUNGQSxHQUFLLEdBSVQsU0FBU1YsRUFBRW5DLEVBQUdDLEdBQ1osSUFBSXJmLEVBQUlvZixFQUFFcFgsT0FDVm9YLEVBQUV6WCxLQUFLMFgsR0FFUEQsRUFBRyxPQUFTLENBQ1YsSUFBSW5mLEVBQUlELEVBQUksSUFBTSxFQUNkeVUsRUFBSTJLLEVBQUVuZixHQUNWLFVBQUksSUFBV3dVLEdBQUssRUFBSTJNLEVBQUUzTSxFQUFHNEssSUFBbUMsTUFBTUQsRUFBckNBLEVBQUVuZixHQUFLb2YsRUFBR0QsRUFBRXBmLEdBQUt5VSxFQUFHelUsRUFBSUMsR0FJN0QsU0FBUzJmLEVBQUVSLEdBRVQsWUFBTyxLQURQQSxFQUFJQSxFQUFFLElBQ2dCLEtBQU9BLEVBRy9CLFNBQVM2QixFQUFFN0IsR0FDVCxJQUFJQyxFQUFJRCxFQUFFLEdBRVYsUUFBSSxJQUFXQyxFQUFHLENBQ2hCLElBQUlyZixFQUFJb2YsRUFBRW9JLE1BRVYsR0FBSXhuQixJQUFNcWYsRUFBRyxDQUNYRCxFQUFFLEdBQUtwZixFQUVQb2YsRUFBRyxJQUFLLElBQUluZixFQUFJLEVBQUd3VSxFQUFJMkssRUFBRXBYLE9BQVEvSCxFQUFJd1UsR0FBSSxDQUN2QyxJQUFJMVUsRUFBSSxHQUFLRSxFQUFJLEdBQUssRUFDbEJtQixFQUFJZ2UsRUFBRXJmLEdBQ053ZixFQUFJeGYsRUFBSSxFQUNSVSxFQUFJMmUsRUFBRUcsR0FDVixRQUFJLElBQVduZSxHQUFLLEVBQUlnZ0IsRUFBRWhnQixFQUFHcEIsUUFBSSxJQUFXUyxHQUFLLEVBQUkyZ0IsRUFBRTNnQixFQUFHVyxJQUFNZ2UsRUFBRW5mLEdBQUtRLEVBQUcyZSxFQUFFRyxHQUFLdmYsRUFBR0MsRUFBSXNmLElBQU1ILEVBQUVuZixHQUFLbUIsRUFBR2dlLEVBQUVyZixHQUFLQyxFQUFHQyxFQUFJRixPQUFRLFdBQUksSUFBV1UsR0FBSyxFQUFJMmdCLEVBQUUzZ0IsRUFBR1QsSUFBbUMsTUFBTW9mLEVBQXJDQSxFQUFFbmYsR0FBS1EsRUFBRzJlLEVBQUVHLEdBQUt2ZixFQUFHQyxFQUFJc2YsSUFJM0wsT0FBT0YsRUFHVCxPQUFPLEtBR1QsU0FBUytCLEVBQUVoQyxFQUFHQyxHQUNaLElBQUlyZixFQUFJb2YsRUFBRXdvQyxVQUFZdm9DLEVBQUV1b0MsVUFDeEIsT0FBTyxJQUFNNW5ELEVBQUlBLEVBQUlvZixFQUFFOVAsR0FBSytQLEVBQUUvUCxHQUdoQyxJQUFJbVMsRUFBSSxHQUNKRyxFQUFJLEdBQ0puQyxFQUFJLEVBQ0owQyxFQUFJLEtBQ0poQyxFQUFJLEVBQ0pRLEdBQUksRUFDSjBCLEdBQUksRUFDSnhCLEdBQUksRUFFUixTQUFTOEcsRUFBRXZJLEdBQ1QsSUFBSyxJQUFJQyxFQUFJTyxFQUFFZ0MsR0FBSSxPQUFTdkMsR0FBSSxDQUM5QixHQUFJLE9BQVNBLEVBQUV3eUIsU0FBVTV3QixFQUFFVyxPQUFRLE1BQUl2QyxFQUFFd29DLFdBQWF6b0MsR0FBc0QsTUFBbkQ2QixFQUFFVyxHQUFJdkMsRUFBRXVvQyxVQUFZdm9DLEVBQUV3eEIsZUFBZ0J0dkIsRUFBRUUsRUFBR3BDLEdBQ3BHQSxFQUFJTyxFQUFFZ0MsSUFJVixTQUFTNUMsRUFBRUksR0FHVCxHQUZBeUIsR0FBSSxFQUNKOEcsRUFBRXZJLElBQ0dpRCxFQUFHLEdBQUksT0FBU3pDLEVBQUU2QixHQUFJWSxHQUFJLEVBQUk0a0MsRUFBR2hvQyxPQUFRLENBQzVDLElBQUlJLEVBQUlPLEVBQUVnQyxHQUNWLE9BQVN2QyxHQUFLb0IsRUFBRXpCLEVBQUdLLEVBQUV3b0MsVUFBWXpvQyxJQUlyQyxTQUFTSCxFQUFFRyxFQUFHQyxHQUNaZ0QsR0FBSSxFQUNKeEIsSUFBTUEsR0FBSSxFQUFJekssS0FDZHVLLEdBQUksRUFDSixJQUFJM2dCLEVBQUltZ0IsRUFFUixJQUdFLElBRkF3SCxFQUFFdEksR0FFRzhDLEVBQUl2QyxFQUFFNkIsR0FBSSxPQUFTVSxNQUFRQSxFQUFFMHVCLGVBQWlCeHhCLElBQU1ELElBQU1qSixNQUFPLENBQ3BFLElBQUlsVyxFQUFJa2lCLEVBQUUwdkIsU0FFVixHQUFJLE9BQVM1eEMsRUFBRyxDQUNka2lCLEVBQUUwdkIsU0FBVyxLQUNiMXhCLEVBQUlnQyxFQUFFMmxDLGNBQ04sSUFBSXJ6QyxFQUFJeFUsRUFBRWtpQixFQUFFMHVCLGdCQUFrQnh4QixHQUM5QkEsRUFBSTVmLEVBQVE2dUMsZUFDWixvQkFBc0I3NUIsRUFBSTBOLEVBQUUwdkIsU0FBV3A5QixFQUFJME4sSUFBTXZDLEVBQUU2QixJQUFNUixFQUFFUSxHQUMzRGtHLEVBQUV0SSxRQUNHNEIsRUFBRVEsR0FFVFUsRUFBSXZDLEVBQUU2QixHQUdSLEdBQUksT0FBU1UsRUFBRyxJQUFJcGlCLEdBQUksTUFBUSxDQUM5QixJQUFJcUIsRUFBSXdlLEVBQUVnQyxHQUNWLE9BQVN4Z0IsR0FBS3FmLEVBQUV6QixFQUFHNWQsRUFBRXltRCxVQUFZeG9DLEdBQ2pDdGYsR0FBSSxFQUVOLE9BQU9BLEVBQ1AsUUFDQW9pQixFQUFJLEtBQU1oQyxFQUFJbmdCLEVBQUcyZ0IsR0FBSSxHQUl6QixTQUFTcUIsRUFBRTVDLEdBQ1QsT0FBUUEsR0FDTixLQUFLLEVBQ0gsT0FBUSxFQUVWLEtBQUssRUFDSCxPQUFPLElBRVQsS0FBSyxFQUNILE9BQU8sV0FFVCxLQUFLLEVBQ0gsT0FBTyxJQUVULFFBQ0UsT0FBTyxLQUliLElBQUlFLEVBQUkxZixFQUNSSCxFQUFRdXZDLHNCQUF3QixFQUNoQ3Z2QyxFQUFRaXZDLDJCQUE2QixFQUNyQ2p2QyxFQUFRcXZDLHFCQUF1QixFQUMvQnJ2QyxFQUFRNjRCLHdCQUEwQixFQUNsQzc0QixFQUFRc29ELG1CQUFxQixLQUM3QnRvRCxFQUFRMDVCLDhCQUFnQyxFQUV4QzE1QixFQUFReXVDLHdCQUEwQixTQUFVOXVCLEdBQzFDQSxFQUFFeXlCLFNBQVcsTUFHZnB5QyxFQUFRdW9ELDJCQUE2QixXQUNuQzNsQyxHQUFLMUIsSUFBTTBCLEdBQUksRUFBSTRrQyxFQUFHaG9DLEtBR3hCeGYsRUFBUSt1QyxpQ0FBbUMsV0FDekMsT0FBT3J1QixHQUdUMWdCLEVBQVF3b0QsOEJBQWdDLFdBQ3RDLE9BQU9yb0MsRUFBRTZCLElBR1hoaUIsRUFBUXlvRCxjQUFnQixTQUFVOW9DLEdBQ2hDLE9BQVFlLEdBQ04sS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0gsSUFBSWQsRUFBSSxFQUNSLE1BRUYsUUFDRUEsRUFBSWMsRUFHUixJQUFJbmdCLEVBQUltZ0IsRUFDUkEsRUFBSWQsRUFFSixJQUNFLE9BQU9ELElBQ1AsUUFDQWUsRUFBSW5nQixJQUlSUCxFQUFRMG9ELHdCQUEwQixhQUVsQzFvRCxFQUFRMnVDLHNCQUF3Qjl1QixFQUVoQzdmLEVBQVFtNEIseUJBQTJCLFNBQVV4WSxFQUFHQyxHQUM5QyxPQUFRRCxHQUNOLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0gsTUFFRixRQUNFQSxFQUFJLEVBR1IsSUFBSXBmLEVBQUltZ0IsRUFDUkEsRUFBSWYsRUFFSixJQUNFLE9BQU9DLElBQ1AsUUFDQWMsRUFBSW5nQixJQUlSUCxFQUFRNDRCLDBCQUE0QixTQUFValosRUFBR0MsRUFBR3JmLEdBQ2xELElBQUlDLEVBQUlSLEVBQVE2dUMsZUFFaEIsR0FBSSxrQkFBb0J0dUMsR0FBSyxPQUFTQSxFQUFHLENBQ3ZDLElBQUl5VSxFQUFJelUsRUFBRW9vRCxNQUNWM3pDLEVBQUksa0JBQW9CQSxHQUFLLEVBQUlBLEVBQUl4VSxFQUFJd1UsRUFBSXhVLEVBQzdDRCxFQUFJLGtCQUFvQkEsRUFBRXlnRCxRQUFVemdELEVBQUV5Z0QsUUFBVXorQixFQUFFNUMsUUFDN0NwZixFQUFJZ2lCLEVBQUU1QyxHQUFJM0ssRUFBSXhVLEVBWXJCLE9BVEFtZixFQUFJLENBQ0Y5UCxHQUFJbVEsSUFDSm95QixTQUFVeHlCLEVBQ1Z5b0MsY0FBZTFvQyxFQUNmeW9DLFVBQVdwekMsRUFDWG84QixlQU5GN3dDLEVBQUl5VSxFQUFJelUsRUFPTjRuRCxXQUFZLEdBRWRuekMsRUFBSXhVLEdBQUttZixFQUFFd29DLFVBQVluekMsRUFBRzhNLEVBQUVLLEVBQUd4QyxHQUFJLE9BQVNRLEVBQUU2QixJQUFNckMsSUFBTVEsRUFBRWdDLEtBQU9mLEVBQUl6SyxJQUFNeUssR0FBSSxFQUFJSixFQUFFekIsRUFBR3ZLLEVBQUl4VSxNQUFRbWYsRUFBRXdvQyxVQUFZNW5ELEVBQUd1aEIsRUFBRUUsRUFBR3JDLEdBQUlpRCxHQUFLMUIsSUFBTTBCLEdBQUksRUFBSTRrQyxFQUFHaG9DLEtBQy9JRyxHQUdUM2YsRUFBUTB2QyxxQkFBdUIsV0FDN0IsSUFBSS92QixFQUFJM2YsRUFBUTZ1QyxlQUNoQjNtQixFQUFFdkksR0FDRixJQUFJQyxFQUFJTyxFQUFFNkIsR0FDVixPQUFPcEMsSUFBTThDLEdBQUssT0FBU0EsR0FBSyxPQUFTOUMsR0FBSyxPQUFTQSxFQUFFd3lCLFVBQVl4eUIsRUFBRXdvQyxXQUFhem9DLEdBQUtDLEVBQUV3eEIsZUFBaUIxdUIsRUFBRTB1QixnQkFBa0IxNkIsS0FHbEkxVyxFQUFRNG9ELHNCQUF3QixTQUFVanBDLEdBQ3hDLElBQUlDLEVBQUljLEVBQ1IsT0FBTyxXQUNMLElBQUluZ0IsRUFBSW1nQixFQUNSQSxFQUFJZCxFQUVKLElBQ0UsT0FBT0QsRUFBRXhYLE1BQU15TixLQUFNdE4sV0FDckIsUUFDQW9ZLEVBQUluZ0IsTSw0dUJDNVZGZ0csRUFBOENkLElBQTlDYyxRQUFTRCxFQUFxQ2IsSUFBckNhLFVBQVdULEVBQTBCSixJQUExQkksTUFBT2dCLEVBQW1CcEIsSUFBbkJvQixPQUFRWCxFQUFXVCxJQUFYUyxPQUVyQzJpRCxFQUFTQyxJQUFPdmpCLE9BQVYsS0FFSSxTQUFBeDZCLEdBQUssT0FBS0EsRUFBTTRCLE9BQVM5RyxFQUFRVSxJQUMzQkQsR0FDSixTQUFBeUUsR0FBSyxPQUFLQSxFQUFNcUgsU0FBV2xNLEVBQVNJLElBWXBDTyxHQUtOLFNBQUFrRSxHQUFLLE9BQUtBLEVBQU00QixPQUFTLE1BQVEsT0FhOUIsU0FBU284QyxFQUFULEdBQStDLElBQTdCN1IsRUFBNEIsRUFBNUJBLE9BQVF2cUMsRUFBb0IsRUFBcEJBLE9BQVF5RixFQUFZLEVBQVpBLFNBQy9DLE9BQU8sa0JBQUN5MkMsRUFBRCxDQUFROU0sUUFBUzdFLEVBQVF2cUMsT0FBUUEsRUFBUXlGLFNBQVVBLEksK3FHQ2pCMURsTSxFQVFFVCxJQVJGUyxPQUNBTSxFQU9FZixJQVBGZSxNQUNBRyxFQU1FbEIsSUFORmtCLE1BQ0FSLEVBS0VWLElBTEZVLEtBQ0FFLEVBSUVaLElBSkZZLFdBQ0FSLEVBR0VKLElBSEZJLE1BQ0FPLEVBRUVYLElBRkZXLE1BQ0FMLEVBQ0VOLElBREZNLFNBRU1zWCxFQUFzQkQsSUFBdEJDLGtCQUVGMnJDLEdBQW9CRixJQUFPdmpCLE9BQVYsSUFDbkJqaEIsSUFDT2xlLEVBSUVMLEdBR1BrakQsR0FBbUJILElBQU9JLElBQVYsSUFHTDdyQyxHQVNYOHJDLEdBQWVMLElBQU9NLEdBQVYsS0FDUCxTQUFDcitDLEdBQUQsT0FBWUEsRUFBTXFILFNBQVc1TCxFQUFRTixLQU8xQ21qRCxHQUFpQlAsSUFBT0ksSUFBVixJQUVNdmlELEVBUU5SLEdBT2RtakQsR0FBc0JSLElBQU9JLElBQVYsS0FDZCxTQUFDbitDLEdBQUQsT0FBWUEsRUFBTXFILFNBQVc1TCxFQUFRSCxLQWMxQ2tqRCxHQUF3QlQsSUFBT0ksSUFBVixLQUdyQk0sR0FBNEJWLElBQU9JLElBQVYsS0FJekJPLEdBQTBCWCxJQUFPbnBDLEVBQVYsSUFDbEJ0WixFQU1FUixHQUdQNmpELEdBQXNCWixJQUFPbnBDLEVBQVYsSUFDZHRaLEVBS0VSLEdBR1A4akQsR0FBcUJiLElBQU9JLElBQVYsS0FDYixTQUFDbitDLEdBQUQsT0FBWUEsRUFBTXFILFNBQVc1TCxFQUFRSCxLQWMxQ3VqRCxHQUFtQmQsSUFBT0ksSUFBVixLQUtoQlcsR0FBY2YsSUFBT0ksSUFBVixLQUlYWSxHQUEwQmhCLElBQU9pQixHQUFWLEtBYXZCQyxHQUF1QmxCLElBQU9pQixHQUFWLElBT2IxakQsRUFLRVIsR0FJVG9rRCxHQUFnQm5CLElBQU9vQixPQUFWLElBQ1I3akQsR0FRTDhqRCxHLDRNQUNKNVcsTUFBUSxDQUNONlcsd0JBQXlCN3pDLFlBQVF0SixZQUFXLDRCQUM1Q285QyxjQUFlOXpDLFlBQVF0SixZQUFXLGtCQUNsQ21GLFNBQVVtRSxZQUFRdEosWUFBVyxhQUM3QnE5QyxhQUFjcjlDLFlBQVcsZ0JBQ3pCczlDLFNBQVV0OUMsWUFBVyxhLEVBR3ZCdTlDLFNBQVcsV0FBTyxJQUFELEVBQ29CLEVBQUtqWCxNQUFoQytXLEVBRE8sRUFDUEEsYUFBY0MsRUFEUCxFQUNPQSxTQUN0QixPQUFPRCxHQUFnQkMsRUFBVyxFQUFLRSxTQUFTRixHQUFZLEVBQUtHLGEsRUFHbkVELFNBQVcsU0FBQ0YsR0FDVixPQUNFLDZCQUNHQSxFQURILFVBQ3NCLElBQ3BCLGtCQUFDdkIsR0FBRCxDQUFtQmpOLFFBQVMsa0JBQU1qcUMsWUFBZTRULE9BQzlDMVUsWUFBUyxlQUFnQixnQkFDUCxJQUp2QixNLEVBVUowNUMsVUFBWSxXQUNWLE9BQ0Usa0JBQUMxQixHQUFELENBQW1Cak4sUUFBUyxrQkFBTWpxQyxZQUFlMlQsT0FDOUN6VSxZQUFTLGVBQWdCLGdCLEVBS2hDMjVDLGNBQWdCLFdBQ2QsRUFBS3BqQyxVQUNILFNBQUNnc0IsR0FBRCxNQUFZLENBQ1Y4VyxlQUFnQjlXLEVBQU04VyxrQkFFeEIsV0FDRWw1QyxZQUFZLENBQ1ZLLEtBQU0vTyxJQUNOZ1AsUUFBUyxDQUFFbTVDLFVBQVcsRUFBS3JYLE1BQU04VyxxQixFQUt6Q1Esc0JBQXdCLFdBQ3RCLEVBQUt0akMsVUFDSCxTQUFDZ3NCLEdBQUQsTUFBWSxDQUNWNlcseUJBQTBCN1csRUFBTTZXLDRCQUVsQyxXQUNFajVDLFlBQVksQ0FDVkssS0FBTWhQLElBQ05pUCxRQUFTLENBQUVtNUMsVUFBVyxFQUFLclgsTUFBTTZXLCtCLEVBTXpDVSxhQUFlLGtCQUFNaDVDLFlBQWU2VCxNLHVEQUUxQixJQUFELEVBQ3NEL1AsS0FBSzI5QixNQUExRDZXLEVBREQsRUFDQ0Esd0JBQXlCQyxFQUQxQixFQUMwQkEsY0FBZWo0QyxFQUR6QyxFQUN5Q0EsU0FFaEQsT0FDRSxrQkFBQzYyQyxHQUFELEtBQ0Usa0JBQUNFLEdBQUQsQ0FBYy8yQyxTQUFVQSxHQUNyQjBLLFlBQVcsQ0FDVnRPLE1BQU8sT0FDUEMsT0FBUSxPQUNSdU4sWUFBYSxPQUNiK3VDLFVBQVcsTUFDWGh2QyxjQUFlLGFBRWhCL0ssWUFBUyxlQUFnQixVQVI1QixLQVF5QyxJQUN0Q0EsWUFBUyxlQUFnQixtQkFHNUIsa0JBQUNxNEMsR0FBRCxLQUNFLGtCQUFDRSxHQUFELEtBQ0Usa0JBQUNELEdBQUQsS0FDR3Q0QyxZQUFTLGVBQWdCLGdCQUU1QixrQkFBQzI0QyxHQUFELEtBQXFCL3pDLEtBQUs0MEMsY0FJOUIsa0JBQUNuQixHQUFELEtBQ0Usa0JBQUNFLEdBQUQsS0FDRSxrQkFBQ0QsR0FBRCxLQUNHdDRDLFlBQVMsZUFBZ0IsNEJBRTVCLGtCQUFDMjRDLEdBQUQsS0FDRSxrQkFBQ1gsR0FBRCxDQUFtQmpOLFFBQVNubUMsS0FBS2sxQyxjQUM5Qjk1QyxZQUFTLGVBQWdCLHVCQU1sQyxrQkFBQ3E0QyxHQUFELEtBQ0Usa0JBQUNFLEdBQUQsS0FDRSxrQkFBQ0QsR0FBRCxLQUNHdDRDLFlBQVMsZUFBZ0IsOEJBRTVCLGtCQUFDMjRDLEdBQUQsS0FDRSxrQkFBQ0csR0FBRCxLQUNFLDRCQUNFLGtCQUFDZixFQUFELENBQVFwOEMsT0FBUTA5QyxFQUFlblQsT0FBUXRoQyxLQUFLKzBDLGdCQUQ5QyxZQUtGLGtCQUFDZCxHQUFELEtBQ0c3NEMsWUFBUyxlQUFnQixxQkFNbEMsa0JBQUNxNEMsR0FBRCxLQUNFLGtCQUFDRSxHQUFELEtBQ0Usa0JBQUNELEdBQUQsS0FDR3Q0QyxZQUFTLGVBQWdCLDBCQUU1QixrQkFBQzI0QyxHQUFELEtBQ0Usa0JBQUNaLEVBQUQsQ0FDRXA4QyxPQUFReTlDLEVBQ1JsVCxPQUFRdGhDLEtBQUtpMUMsd0JBRWYsa0JBQUNoQixHQUFELEtBQ0c3NEMsWUFBUyxlQUFnQiw4QkFNbEMsa0JBQUNxNEMsR0FBRCxLQUNFLGtCQUFDRSxHQUFELEtBQ0Usa0JBQUNELEdBQUQsS0FDR3Q0QyxZQUFTLGVBQWdCLDJCQUU1QixrQkFBQzI0QyxHQUFELEtBQ0Usa0JBQUNLLEdBQUQsS0FDRSw0QkFDRSx1QkFBRzF0QixLQUFLLDhCQUNMdHJCLFlBQVMsZUFBZ0IseUJBRzlCLDRCQUNFLHVCQUFHc3JCLEtBQUssMkNBQ0x0ckIsWUFBUyxlQUFnQiwyQkFHOUIsNEJBQ0UsdUJBQUdzckIsS0FBSyw2RUFDTHRyQixZQUFTLGVBQWdCLHNDQVF0QyxrQkFBQ3E0QyxHQUFELEtBQ0Usa0JBQUNHLEdBQUQsQ0FBMkJsK0MsVUFBVSxzQkFDbkMsa0JBQUNnK0MsR0FBRCxLQUNHdDRDLFlBQVMsZUFBZ0IsNEJBRTVCLGtCQUFDMjRDLEdBQUQsS0FDRSxrQkFBQ0YsR0FBRCxDQUNFbnRCLEtBQUssdUdBQ0wwdUIsSUFBSSxzQkFDSjNpRCxPQUFPLFVBQ040VSxZQUFhLENBQ1p6TyxNQUFPLE9BQ1BDLE9BQVEsT0FDUnVOLFlBQWEsSUFFZixrQkFBQzR0QyxHQUFELENBQWtCeDNDLFNBQVVBLEdBQTVCLG1CQUlGLGtCQUFDcTNDLEdBQUQsQ0FDRW50QixLQUFLLGdDQUNMMHVCLElBQUksc0JBQ0ozaUQsT0FBTyxVQUNOaVUsWUFBWSxDQUNYOU4sTUFBTyxPQUNQQyxPQUFRLE9BQ1J1TixZQUFhLElBRWYsa0JBQUM0dEMsR0FBRCxDQUFrQngzQyxTQUFVQSxHQUE1QixZQUVGLGtCQUFDcTNDLEdBQUQsQ0FDRW50QixLQUFLLCtCQUNMMHVCLElBQUksc0JBQ0ozaUQsT0FBTyxVQUNOc1UsWUFBVyxDQUNWbk8sTUFBTyxPQUNQQyxPQUFRLE9BQ1J1TixZQUFhLElBRWYsa0JBQUM0dEMsR0FBRCxDQUFrQngzQyxTQUFVQSxHQUE1QixnQkFJRixrQkFBQ3EzQyxHQUFELENBQ0VudEIsS0FBSyw0QkFDTDB1QixJQUFJLHNCQUNKM2lELE9BQU8sVUFDTnVVLFlBQUksQ0FDSHBPLE1BQU8sT0FDUEMsT0FBUSxPQUNSdU4sWUFBYSxJQUVmLGtCQUFDNHRDLEdBQUQsQ0FBa0J4M0MsU0FBVUEsR0FBNUIsV0FNUixrQkFBQzYzQyxHQUFELHdCQUNvQixJQUFJbjFDLE1BQU9tMkMsY0FEL0Isc0JBRUUsa0JBQUN2QixHQUFELENBQ0VwdEIsS0FBSyw2Q0FDTDB1QixJQUFJLHNCQUNKM2lELE9BQU8sVUFIVCx5QixHQWpPZXdnQixhQTZPbkJxaUMsR0FBTzlzQyxTQUFTK3NDLGVBQWUsMkJBRXJDQyxJQUFTdGhDLE9BQU8sa0JBQUMsR0FBRCxNQUFnQm9oQyIsImZpbGUiOiJqcy9vcHRpb25zLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCIvXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSA2OCk7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn0iLCJleHBvcnQgY29uc3QgTUFJTl9TQ1JJUFRfSU5KRUNURUQgPSAnTUFJTl9TQ1JJUFRfSU5KRUNURUQnXG5leHBvcnQgY29uc3QgTE9HR0VEX09VVF9PRl9QT0NLRVQgPSAnTE9HR0VEX09VVF9PRl9QT0NLRVQnXG5leHBvcnQgY29uc3QgQVJDSElWRV9JVEVNID0gJ0FSQ0hJVkVfSVRFTSdcbmV4cG9ydCBjb25zdCBSRU1PVkVfSVRFTSA9ICdSRU1PVkVfSVRFTSdcbmV4cG9ydCBjb25zdCBPUEVOX1BPQ0tFVCA9ICdPUEVOX1BPQ0tFVCdcbmV4cG9ydCBjb25zdCBBVVRIX0NPREVfUkVDRUlWRUQgPSAnQVVUSF9DT0RFX1JFQ0VJVkVEJ1xuZXhwb3J0IGNvbnN0IENPTE9SX01PREVfQ0hBTkdFID0gJ0NPTE9SX01PREVfQ0hBTkdFJ1xuZXhwb3J0IGNvbnN0IFRPR0dMRV9PTl9TQVZFX1JFQ1MgPSAnVE9HR0xFX09OX1NBVkVfUkVDUydcbmV4cG9ydCBjb25zdCBUT0dHTEVfVFdJVFRFUiA9ICdUT0dHTEVfVFdJVFRFUidcblxuZXhwb3J0IGNvbnN0IFNBVkVfVE9fUE9DS0VUX1JFUVVFU1QgPSAnU0FWRV9UT19QT0NLRVRfUkVRVUVTVCdcbmV4cG9ydCBjb25zdCBTQVZFX1RPX1BPQ0tFVF9TVUNDRVNTID0gJ1NBVkVfVE9fUE9DS0VUX1NVQ0NFU1MnXG5leHBvcnQgY29uc3QgU0FWRV9UT19QT0NLRVRfRkFJTFVSRSA9ICdTQVZFX1RPX1BPQ0tFVF9GQUlMVVJFJ1xuZXhwb3J0IGNvbnN0IFNBVkVfVE9fUE9DS0VUX1VQREFURSA9ICdTQVZFX1RPX1BPQ0tFVF9VUERBVEUnXG5leHBvcnQgY29uc3QgU0FWRV9UT19QT0NLRVRfQ09NUExFVEUgPSAnU0FWRV9UT19QT0NLRVRfQ09NUExFVEUnXG5cbmV4cG9ydCBjb25zdCBBUkNISVZFX0lURU1fUkVRVUVTVCA9ICdBUkNISVZFX0lURU1fUkVRVUVTVCdcbmV4cG9ydCBjb25zdCBBUkNISVZFX0lURU1fU1VDQ0VTUyA9ICdBUkNISVZFX0lURU1fU1VDQ0VTUydcbmV4cG9ydCBjb25zdCBBUkNISVZFX0lURU1fRkFJTFVSRSA9ICdBUkNISVZFX0lURU1fRkFJTFVSRSdcblxuZXhwb3J0IGNvbnN0IFJFTU9WRV9JVEVNX1JFUVVFU1QgPSAnUkVNT1ZFX0lURU1fUkVRVUVTVCdcbmV4cG9ydCBjb25zdCBSRU1PVkVfSVRFTV9TVUNDRVNTID0gJ1JFTU9WRV9JVEVNX1NVQ0NFU1MnXG5leHBvcnQgY29uc3QgUkVNT1ZFX0lURU1fRkFJTFVSRSA9ICdSRU1PVkVfSVRFTV9GQUlMVVJFJ1xuXG5leHBvcnQgY29uc3QgU1VHR0VTVEVEX1RBR1NfUkVRVUVTVCA9ICdTVUdHRVNURURfVEFHU19SRVFVRVNUJ1xuZXhwb3J0IGNvbnN0IFNVR0dFU1RFRF9UQUdTX1NVQ0NFU1MgPSAnU1VHR0VTVEVEX1RBR1NfU1VDQ0VTUydcbmV4cG9ydCBjb25zdCBTVUdHRVNURURfVEFHU19GQUlMVVJFID0gJ1NVR0dFU1RFRF9UQUdTX0ZBSUxVUkUnXG5cbmV4cG9ydCBjb25zdCBUQUdfQUNUSVZBVEUgPSAnVEFHX0FDVElWQVRFJ1xuZXhwb3J0IGNvbnN0IFRBR19ERUFDVElWQVRFID0gJ1RBR19ERUFDVElWQVRFJ1xuZXhwb3J0IGNvbnN0IFRBR1NfREVBQ1RJVkFURSA9ICdUQUdTX0RFQUNUSVZBVEUnXG5leHBvcnQgY29uc3QgVEFHX0FERCA9ICdUQUdfQUREJ1xuZXhwb3J0IGNvbnN0IFRBR19SRU1PVkUgPSAnVEFHX1JFTU9WRSdcbmV4cG9ydCBjb25zdCBUQUdTX1JFTU9WRSA9ICdUQUdTX1JFTU9WRSdcbmV4cG9ydCBjb25zdCBUQUdTX0FEREVEX0ZBSUxVUkUgPSAnVEFHU19BRERFRF9GQUlMVVJFJ1xuZXhwb3J0IGNvbnN0IFRBR1NfQURERURfU1VDQ0VTUyA9ICdUQUdTX0FEREVEX1NVQ0NFU1MnXG5cbmV4cG9ydCBjb25zdCBFRElUX1RBR1MgPSAnRURJVF9UQUdTJ1xuZXhwb3J0IGNvbnN0IFRBR1NfU1lOQyA9ICdUQUdTX1NZTkMnXG5leHBvcnQgY29uc3QgVEFHX1NZTkNfUkVRVUVTVCA9ICdUQUdfU1lOQ19SRVFVRVNUJ1xuZXhwb3J0IGNvbnN0IFRBR19TWU5DX1NVQ0NFU1MgPSAnVEFHX1NZTkNfU1VDQ0VTUydcbmV4cG9ydCBjb25zdCBUQUdfU1lOQ19GQUlMVVJFID0gJ1RBR19TWU5DX0ZBSUxVUkUnXG5cbmV4cG9ydCBjb25zdCBVUERBVEVfU1RPUkVEX1RBR1MgPSAnVVBEQVRFX1NUT1JFRF9UQUdTJ1xuXG5leHBvcnQgY29uc3QgVVNFUl9MT0dfSU4gPSAnVVNFUl9MT0dfSU4nXG5leHBvcnQgY29uc3QgVVNFUl9MT0dfSU5fU1VDQ0VTUyA9ICdVU0VSX0xPR19JTl9TVUNDRVNTJ1xuZXhwb3J0IGNvbnN0IFVTRVJfTE9HX0lOX0ZBSUxVUkUgPSAnVVNFUl9MT0dfSU5fRkFJTFVSRSdcblxuZXhwb3J0IGNvbnN0IFVTRVJfTE9HX09VVCA9ICdVU0VSX0xPR19PVVQnXG5leHBvcnQgY29uc3QgVVNFUl9MT0dfT1VUX1NVQ0NFU1MgPSAnVVNFUl9MT0dfT1VUX1NVQ0NFU1MnXG5leHBvcnQgY29uc3QgVVNFUl9MT0dfT1VUX0ZBSUxVUkUgPSAnVVNFUl9MT0dfSU5fRkFJTFVSRSdcblxuZXhwb3J0IGNvbnN0IEdFVF9SRUNTX1JFUVVFU1QgPSAnR0VUX1JFQ1NfUkVRVUVTVCdcbmV4cG9ydCBjb25zdCBHRVRfUkVDU19TVUNDRVNTID0gJ0dFVF9SRUNTX1NVQ0NFU1MnXG5leHBvcnQgY29uc3QgR0VUX1JFQ1NfRkFJTFVSRSA9ICdHRVRfUkVDU19GQUlMVVJFJ1xuXG5leHBvcnQgY29uc3QgU0FWRV9SRUMgPSAnU0FWRV9SRUMnXG5leHBvcnQgY29uc3QgU0FWRV9SRUNfUkVRVUVTVCA9ICdTQVZFX1JFQ19SRVFVRVNUJ1xuZXhwb3J0IGNvbnN0IFNBVkVfUkVDX1NVQ0NFU1MgPSAnU0FWRV9SRUNfU1VDQ0VTUydcbmV4cG9ydCBjb25zdCBTQVZFX1JFQ19GQUlMVVJFID0gJ1NBVkVfUkVDX0ZBSUxVUkUnXG5cbmV4cG9ydCBjb25zdCBPUEVOX1JFQyA9ICdPUEVOX1JFQydcblxuZXhwb3J0IGNvbnN0IENIRUNLX1RXSVRURVJfSU5URUdSQVRJT04gPSAnQ0hFQ0tfVFdJVFRFUl9JTlRFR1JBVElPTidcbmV4cG9ydCBjb25zdCBTVEFSVF9UV0lUVEVSX0lOVEVHUkFUSU9OID0gJ1NUQVJUX1RXSVRURVJfSU5URUdSQVRJT04nXG5leHBvcnQgY29uc3QgU1RPUF9UV0lUVEVSX0lOVEVHUkFUSU9OID0gJ1NUT1BfVFdJVFRFUl9JTlRFR1JBVElPTidcbmV4cG9ydCBjb25zdCBTQVZFX1RXRUVUX1RPX1BPQ0tFVCA9ICdTQVZFX1RXRUVUX1RPX1BPQ0tFVCdcblxuZXhwb3J0IGNvbnN0IFRXSVRURVJfU0FWRV9SRVFVRVNUID0gJ1RXSVRURVJfU0FWRV9SRVFVRVNUJ1xuZXhwb3J0IGNvbnN0IFRXSVRURVJfU0FWRV9TVUNDRVNTID0gJ1RXSVRURVJfU0FWRV9TVUNDRVNTJ1xuZXhwb3J0IGNvbnN0IFRXSVRURVJfU0FWRV9GQUlMVVJFID0gJ1RXSVRURVJfU0FWRV9GQUlMVVJFJ1xuIiwiZXhwb3J0IGNvbnN0IENPTE9SUyA9IHtcbiAgJGhvdENvcmFsOiAnI2VmNDA1NicsXG4gICRhbWJlcjogJyNmY2I2NDMnLFxuICAkbWludEdyZWVuOiAnIzgzZWRiOCcsXG4gICR0ZWFsOiAnIzUwYmNiNicsXG4gICR0ZWFsSG92ZXI6ICcjNDJhZWE4JyxcbiAgJGVtZXJhbGQ6ICcjMDBhNjlkJyxcbiAgJGJsYWNrOiAnIzAwMCcsXG4gICRuaWdodDogJyMxZjFmMWYnLFxuICAkcGl0Y2g6ICcjMjIyJyxcbiAgJHRhcjogJyMzMzMnLFxuICAkY29hbDogJyM0NDQnLFxuICAkZGFya3Ntb2tlOiAnIzY2NicsXG4gICRvdmVyY2FzdDogJyM5OTknLFxuICAkc2lsdmVyOiAnI2JiYicsXG4gICRncmF5OiAnI2NjYycsXG4gICRzbW9rZTogJyNkZGQnLFxuICAkYWxhYmFzdGVyOiAnI2U2ZTZlNicsXG4gICRzbm93OiAnI2VlZScsXG4gICRwb3dkZXI6ICcjZjlmOWY5JyxcbiAgJHdoaXRlOiAnI2ZmZidcbn1cblxuY29uc3QgJHJhaW5ib3cgPVxuICAnbGluZWFyLWdyYWRpZW50KDkwZGVnLCAjYWZlY2MzICAwJSwgIzg0YzNjMCAgMzQlLCAjZDQ1YTY4ICA2NyUsICNlY2JmNjMgIDEwMCUpJ1xuXG5leHBvcnQgY29uc3QgVVRJTElaQVRJT04gPSB7XG4gICRyYWluYm93LFxuICAkc2hhZG93QnV0dG9uOiAnMnB4IDJweCA4cHggcmdiYSgwLCAwLCAwLCAwLjQpJyxcbiAgJHNoYWRvd0J1dHRvbkRvd246ICcxcHggMXB4IDRweCByZ2JhKDAsIDAsIDAsIDAuNSknLFxuICAkcGFuZWxTaGFkb3c6ICcwIDJweCA1cHggcmdiYSgwLCAwLCAwLCAwLjUpJyxcbiAgJHNoYWRvdzogJzAgMCAyNXB4IHJnYmEoMCwwLDAsMC4yKScsXG4gICRzaGFkb3dFZGdlOiAnMCAwIDJweCByZ2JhKDAsMCwwLDAuMTUpJyxcbiAgJHNoYWRvd0Rvd246ICcwIDAgNXB4IDFweCByZ2JhKDAsMCwwLDAuMjUpJyxcbiAgJHNoYWRvd0xvdzogJzAgMCA1cHggcmdiYSgwLDAsMCwwLjE1KScsXG4gICRzaGFkb3dIaWdoOiAnMCAwIDMwcHggMnB4IHJnYmEoMCwwLDAsMC4yNSknLFxuICAkc2hhZG93TGlnaHQ6ICcwIDAgMjVweCByZ2JhKDAsMCwwLDAuMSknLFxuICAkc2hhZG93VXBwZXI6ICcwIDAgNDBweCByZ2JhKDIwMCwyMDAsMjAwLDAuMiknXG59XG4iLCJpbXBvcnQgZGVmaW5lUHJvcGVydHkgZnJvbSBcIi4vZGVmaW5lUHJvcGVydHlcIjtcblxuZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7XG4gIHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTtcblxuICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgIHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpO1xuICAgIGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHtcbiAgICAgIHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlO1xuICAgIH0pO1xuICAgIGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTtcbiAgfVxuXG4gIHJldHVybiBrZXlzO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfb2JqZWN0U3ByZWFkMih0YXJnZXQpIHtcbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTtcblxuICAgIGlmIChpICUgMikge1xuICAgICAgb3duS2V5cyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIGRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7XG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7XG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpO1xuICAgIH0gZWxzZSB7XG4gICAgICBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoc3RyaW5ncywgcmF3KSB7XG4gIGlmICghcmF3KSB7XG4gICAgcmF3ID0gc3RyaW5ncy5zbGljZSgwKTtcbiAgfVxuXG4gIHJldHVybiBPYmplY3QuZnJlZXplKE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHN0cmluZ3MsIHtcbiAgICByYXc6IHtcbiAgICAgIHZhbHVlOiBPYmplY3QuZnJlZXplKHJhdylcbiAgICB9XG4gIH0pKTtcbn0iLCJpbXBvcnQgbWVtb2l6ZSBmcm9tICdAZW1vdGlvbi9tZW1vaXplJztcbnZhciByZWFjdFByb3BzUmVnZXggPSAvXigoY2hpbGRyZW58ZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUx8a2V5fHJlZnxhdXRvRm9jdXN8ZGVmYXVsdFZhbHVlfGRlZmF1bHRDaGVja2VkfGlubmVySFRNTHxzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmd8c3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nfHZhbHVlTGlua3xhY2NlcHR8YWNjZXB0Q2hhcnNldHxhY2Nlc3NLZXl8YWN0aW9ufGFsbG93fGFsbG93VXNlck1lZGlhfGFsbG93UGF5bWVudFJlcXVlc3R8YWxsb3dGdWxsU2NyZWVufGFsbG93VHJhbnNwYXJlbmN5fGFsdHxhc3luY3xhdXRvQ29tcGxldGV8YXV0b1BsYXl8Y2FwdHVyZXxjZWxsUGFkZGluZ3xjZWxsU3BhY2luZ3xjaGFsbGVuZ2V8Y2hhclNldHxjaGVja2VkfGNpdGV8Y2xhc3NJRHxjbGFzc05hbWV8Y29sc3xjb2xTcGFufGNvbnRlbnR8Y29udGVudEVkaXRhYmxlfGNvbnRleHRNZW51fGNvbnRyb2xzfGNvbnRyb2xzTGlzdHxjb29yZHN8Y3Jvc3NPcmlnaW58ZGF0YXxkYXRlVGltZXxkZWNvZGluZ3xkZWZhdWx0fGRlZmVyfGRpcnxkaXNhYmxlZHxkaXNhYmxlUGljdHVyZUluUGljdHVyZXxkb3dubG9hZHxkcmFnZ2FibGV8ZW5jVHlwZXxmb3JtfGZvcm1BY3Rpb258Zm9ybUVuY1R5cGV8Zm9ybU1ldGhvZHxmb3JtTm9WYWxpZGF0ZXxmb3JtVGFyZ2V0fGZyYW1lQm9yZGVyfGhlYWRlcnN8aGVpZ2h0fGhpZGRlbnxoaWdofGhyZWZ8aHJlZkxhbmd8aHRtbEZvcnxodHRwRXF1aXZ8aWR8aW5wdXRNb2RlfGludGVncml0eXxpc3xrZXlQYXJhbXN8a2V5VHlwZXxraW5kfGxhYmVsfGxhbmd8bGlzdHxsb2FkaW5nfGxvb3B8bG93fG1hcmdpbkhlaWdodHxtYXJnaW5XaWR0aHxtYXh8bWF4TGVuZ3RofG1lZGlhfG1lZGlhR3JvdXB8bWV0aG9kfG1pbnxtaW5MZW5ndGh8bXVsdGlwbGV8bXV0ZWR8bmFtZXxub25jZXxub1ZhbGlkYXRlfG9wZW58b3B0aW11bXxwYXR0ZXJufHBsYWNlaG9sZGVyfHBsYXlzSW5saW5lfHBvc3RlcnxwcmVsb2FkfHByb2ZpbGV8cmFkaW9Hcm91cHxyZWFkT25seXxyZWZlcnJlclBvbGljeXxyZWx8cmVxdWlyZWR8cmV2ZXJzZWR8cm9sZXxyb3dzfHJvd1NwYW58c2FuZGJveHxzY29wZXxzY29wZWR8c2Nyb2xsaW5nfHNlYW1sZXNzfHNlbGVjdGVkfHNoYXBlfHNpemV8c2l6ZXN8c2xvdHxzcGFufHNwZWxsQ2hlY2t8c3JjfHNyY0RvY3xzcmNMYW5nfHNyY1NldHxzdGFydHxzdGVwfHN0eWxlfHN1bW1hcnl8dGFiSW5kZXh8dGFyZ2V0fHRpdGxlfHR5cGV8dXNlTWFwfHZhbHVlfHdpZHRofHdtb2RlfHdyYXB8YWJvdXR8ZGF0YXR5cGV8aW5saXN0fHByZWZpeHxwcm9wZXJ0eXxyZXNvdXJjZXx0eXBlb2Z8dm9jYWJ8YXV0b0NhcGl0YWxpemV8YXV0b0NvcnJlY3R8YXV0b1NhdmV8Y29sb3J8aW5lcnR8aXRlbVByb3B8aXRlbVNjb3BlfGl0ZW1UeXBlfGl0ZW1JRHxpdGVtUmVmfG9ufHJlc3VsdHN8c2VjdXJpdHl8dW5zZWxlY3RhYmxlfGFjY2VudEhlaWdodHxhY2N1bXVsYXRlfGFkZGl0aXZlfGFsaWdubWVudEJhc2VsaW5lfGFsbG93UmVvcmRlcnxhbHBoYWJldGljfGFtcGxpdHVkZXxhcmFiaWNGb3JtfGFzY2VudHxhdHRyaWJ1dGVOYW1lfGF0dHJpYnV0ZVR5cGV8YXV0b1JldmVyc2V8YXppbXV0aHxiYXNlRnJlcXVlbmN5fGJhc2VsaW5lU2hpZnR8YmFzZVByb2ZpbGV8YmJveHxiZWdpbnxiaWFzfGJ5fGNhbGNNb2RlfGNhcEhlaWdodHxjbGlwfGNsaXBQYXRoVW5pdHN8Y2xpcFBhdGh8Y2xpcFJ1bGV8Y29sb3JJbnRlcnBvbGF0aW9ufGNvbG9ySW50ZXJwb2xhdGlvbkZpbHRlcnN8Y29sb3JQcm9maWxlfGNvbG9yUmVuZGVyaW5nfGNvbnRlbnRTY3JpcHRUeXBlfGNvbnRlbnRTdHlsZVR5cGV8Y3Vyc29yfGN4fGN5fGR8ZGVjZWxlcmF0ZXxkZXNjZW50fGRpZmZ1c2VDb25zdGFudHxkaXJlY3Rpb258ZGlzcGxheXxkaXZpc29yfGRvbWluYW50QmFzZWxpbmV8ZHVyfGR4fGR5fGVkZ2VNb2RlfGVsZXZhdGlvbnxlbmFibGVCYWNrZ3JvdW5kfGVuZHxleHBvbmVudHxleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkfGZpbGx8ZmlsbE9wYWNpdHl8ZmlsbFJ1bGV8ZmlsdGVyfGZpbHRlclJlc3xmaWx0ZXJVbml0c3xmbG9vZENvbG9yfGZsb29kT3BhY2l0eXxmb2N1c2FibGV8Zm9udEZhbWlseXxmb250U2l6ZXxmb250U2l6ZUFkanVzdHxmb250U3RyZXRjaHxmb250U3R5bGV8Zm9udFZhcmlhbnR8Zm9udFdlaWdodHxmb3JtYXR8ZnJvbXxmcnxmeHxmeXxnMXxnMnxnbHlwaE5hbWV8Z2x5cGhPcmllbnRhdGlvbkhvcml6b250YWx8Z2x5cGhPcmllbnRhdGlvblZlcnRpY2FsfGdseXBoUmVmfGdyYWRpZW50VHJhbnNmb3JtfGdyYWRpZW50VW5pdHN8aGFuZ2luZ3xob3JpekFkdlh8aG9yaXpPcmlnaW5YfGlkZW9ncmFwaGljfGltYWdlUmVuZGVyaW5nfGlufGluMnxpbnRlcmNlcHR8a3xrMXxrMnxrM3xrNHxrZXJuZWxNYXRyaXh8a2VybmVsVW5pdExlbmd0aHxrZXJuaW5nfGtleVBvaW50c3xrZXlTcGxpbmVzfGtleVRpbWVzfGxlbmd0aEFkanVzdHxsZXR0ZXJTcGFjaW5nfGxpZ2h0aW5nQ29sb3J8bGltaXRpbmdDb25lQW5nbGV8bG9jYWx8bWFya2VyRW5kfG1hcmtlck1pZHxtYXJrZXJTdGFydHxtYXJrZXJIZWlnaHR8bWFya2VyVW5pdHN8bWFya2VyV2lkdGh8bWFza3xtYXNrQ29udGVudFVuaXRzfG1hc2tVbml0c3xtYXRoZW1hdGljYWx8bW9kZXxudW1PY3RhdmVzfG9mZnNldHxvcGFjaXR5fG9wZXJhdG9yfG9yZGVyfG9yaWVudHxvcmllbnRhdGlvbnxvcmlnaW58b3ZlcmZsb3d8b3ZlcmxpbmVQb3NpdGlvbnxvdmVybGluZVRoaWNrbmVzc3xwYW5vc2UxfHBhaW50T3JkZXJ8cGF0aExlbmd0aHxwYXR0ZXJuQ29udGVudFVuaXRzfHBhdHRlcm5UcmFuc2Zvcm18cGF0dGVyblVuaXRzfHBvaW50ZXJFdmVudHN8cG9pbnRzfHBvaW50c0F0WHxwb2ludHNBdFl8cG9pbnRzQXRafHByZXNlcnZlQWxwaGF8cHJlc2VydmVBc3BlY3RSYXRpb3xwcmltaXRpdmVVbml0c3xyfHJhZGl1c3xyZWZYfHJlZll8cmVuZGVyaW5nSW50ZW50fHJlcGVhdENvdW50fHJlcGVhdER1cnxyZXF1aXJlZEV4dGVuc2lvbnN8cmVxdWlyZWRGZWF0dXJlc3xyZXN0YXJ0fHJlc3VsdHxyb3RhdGV8cnh8cnl8c2NhbGV8c2VlZHxzaGFwZVJlbmRlcmluZ3xzbG9wZXxzcGFjaW5nfHNwZWN1bGFyQ29uc3RhbnR8c3BlY3VsYXJFeHBvbmVudHxzcGVlZHxzcHJlYWRNZXRob2R8c3RhcnRPZmZzZXR8c3RkRGV2aWF0aW9ufHN0ZW1ofHN0ZW12fHN0aXRjaFRpbGVzfHN0b3BDb2xvcnxzdG9wT3BhY2l0eXxzdHJpa2V0aHJvdWdoUG9zaXRpb258c3RyaWtldGhyb3VnaFRoaWNrbmVzc3xzdHJpbmd8c3Ryb2tlfHN0cm9rZURhc2hhcnJheXxzdHJva2VEYXNob2Zmc2V0fHN0cm9rZUxpbmVjYXB8c3Ryb2tlTGluZWpvaW58c3Ryb2tlTWl0ZXJsaW1pdHxzdHJva2VPcGFjaXR5fHN0cm9rZVdpZHRofHN1cmZhY2VTY2FsZXxzeXN0ZW1MYW5ndWFnZXx0YWJsZVZhbHVlc3x0YXJnZXRYfHRhcmdldFl8dGV4dEFuY2hvcnx0ZXh0RGVjb3JhdGlvbnx0ZXh0UmVuZGVyaW5nfHRleHRMZW5ndGh8dG98dHJhbnNmb3JtfHUxfHUyfHVuZGVybGluZVBvc2l0aW9ufHVuZGVybGluZVRoaWNrbmVzc3x1bmljb2RlfHVuaWNvZGVCaWRpfHVuaWNvZGVSYW5nZXx1bml0c1BlckVtfHZBbHBoYWJldGljfHZIYW5naW5nfHZJZGVvZ3JhcGhpY3x2TWF0aGVtYXRpY2FsfHZhbHVlc3x2ZWN0b3JFZmZlY3R8dmVyc2lvbnx2ZXJ0QWR2WXx2ZXJ0T3JpZ2luWHx2ZXJ0T3JpZ2luWXx2aWV3Qm94fHZpZXdUYXJnZXR8dmlzaWJpbGl0eXx3aWR0aHN8d29yZFNwYWNpbmd8d3JpdGluZ01vZGV8eHx4SGVpZ2h0fHgxfHgyfHhDaGFubmVsU2VsZWN0b3J8eGxpbmtBY3R1YXRlfHhsaW5rQXJjcm9sZXx4bGlua0hyZWZ8eGxpbmtSb2xlfHhsaW5rU2hvd3x4bGlua1RpdGxlfHhsaW5rVHlwZXx4bWxCYXNlfHhtbG5zfHhtbG5zWGxpbmt8eG1sTGFuZ3x4bWxTcGFjZXx5fHkxfHkyfHlDaGFubmVsU2VsZWN0b3J8enx6b29tQW5kUGFufGZvcnxjbGFzc3xhdXRvZm9jdXMpfCgoW0RkXVtBYV1bVHRdW0FhXXxbQWFdW1JyXVtJaV1bQWFdfHgpLS4qKSkkLzsgLy8gaHR0cHM6Ly9lc2JlbmNoLmNvbS9iZW5jaC81YmZlZTY4YTRjZDdlNjAwOWVmNjFkMjNcblxudmFyIGluZGV4ID0gbWVtb2l6ZShmdW5jdGlvbiAocHJvcCkge1xuICByZXR1cm4gcmVhY3RQcm9wc1JlZ2V4LnRlc3QocHJvcCkgfHwgcHJvcC5jaGFyQ29kZUF0KDApID09PSAxMTFcbiAgLyogbyAqL1xuICAmJiBwcm9wLmNoYXJDb2RlQXQoMSkgPT09IDExMFxuICAvKiBuICovXG4gICYmIHByb3AuY2hhckNvZGVBdCgyKSA8IDkxO1xufVxuLyogWisxICovXG4pO1xuZXhwb3J0IGRlZmF1bHQgaW5kZXg7IiwiaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2RlZmluZVByb3BlcnR5JztcbmltcG9ydCB7IGNyZWF0ZUVsZW1lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgaXNQcm9wVmFsaWQgZnJvbSAnQGVtb3Rpb24vaXMtcHJvcC12YWxpZCc7XG5pbXBvcnQgeyB3aXRoRW1vdGlvbkNhY2hlLCBUaGVtZUNvbnRleHQgfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCB7IGdldFJlZ2lzdGVyZWRTdHlsZXMsIGluc2VydFN0eWxlcyB9IGZyb20gJ0BlbW90aW9uL3V0aWxzJztcbmltcG9ydCB7IHNlcmlhbGl6ZVN0eWxlcyB9IGZyb20gJ0BlbW90aW9uL3NlcmlhbGl6ZSc7XG52YXIgdGVzdE9taXRQcm9wc09uU3RyaW5nVGFnID0gaXNQcm9wVmFsaWQ7XG5cbnZhciB0ZXN0T21pdFByb3BzT25Db21wb25lbnQgPSBmdW5jdGlvbiB0ZXN0T21pdFByb3BzT25Db21wb25lbnQoa2V5KSB7XG4gIHJldHVybiBrZXkgIT09ICd0aGVtZScgJiYga2V5ICE9PSAnaW5uZXJSZWYnO1xufTtcblxudmFyIGdldERlZmF1bHRTaG91bGRGb3J3YXJkUHJvcCA9IGZ1bmN0aW9uIGdldERlZmF1bHRTaG91bGRGb3J3YXJkUHJvcCh0YWcpIHtcbiAgcmV0dXJuIHR5cGVvZiB0YWcgPT09ICdzdHJpbmcnICYmIC8vIDk2IGlzIG9uZSBsZXNzIHRoYW4gdGhlIGNoYXIgY29kZVxuICAvLyBmb3IgXCJhXCIgc28gdGhpcyBpcyBjaGVja2luZyB0aGF0XG4gIC8vIGl0J3MgYSBsb3dlcmNhc2UgY2hhcmFjdGVyXG4gIHRhZy5jaGFyQ29kZUF0KDApID4gOTYgPyB0ZXN0T21pdFByb3BzT25TdHJpbmdUYWcgOiB0ZXN0T21pdFByb3BzT25Db21wb25lbnQ7XG59O1xuXG5mdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHtcbiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpO1xuXG4gIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7XG4gICAgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkge1xuICAgICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7XG4gICAgfSk7XG4gICAga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpO1xuICB9XG5cbiAgcmV0dXJuIGtleXM7XG59XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7XG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307XG5cbiAgICBpZiAoaSAlIDIpIHtcbiAgICAgIG93bktleXMoc291cmNlLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7XG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7XG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpO1xuICAgIH0gZWxzZSB7XG4gICAgICBvd25LZXlzKHNvdXJjZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn1cblxudmFyIElMTEVHQUxfRVNDQVBFX1NFUVVFTkNFX0VSUk9SID0gXCJZb3UgaGF2ZSBpbGxlZ2FsIGVzY2FwZSBzZXF1ZW5jZSBpbiB5b3VyIHRlbXBsYXRlIGxpdGVyYWwsIG1vc3QgbGlrZWx5IGluc2lkZSBjb250ZW50J3MgcHJvcGVydHkgdmFsdWUuXFxuQmVjYXVzZSB5b3Ugd3JpdGUgeW91ciBDU1MgaW5zaWRlIGEgSmF2YVNjcmlwdCBzdHJpbmcgeW91IGFjdHVhbGx5IGhhdmUgdG8gZG8gZG91YmxlIGVzY2FwaW5nLCBzbyBmb3IgZXhhbXBsZSBcXFwiY29udGVudDogJ1xcXFwwMGQ3JztcXFwiIHNob3VsZCBiZWNvbWUgXFxcImNvbnRlbnQ6ICdcXFxcXFxcXDAwZDcnO1xcXCIuXFxuWW91IGNhbiByZWFkIG1vcmUgYWJvdXQgdGhpcyBoZXJlOlxcbmh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL1RlbXBsYXRlX2xpdGVyYWxzI0VTMjAxOF9yZXZpc2lvbl9vZl9pbGxlZ2FsX2VzY2FwZV9zZXF1ZW5jZXNcIjtcblxudmFyIGNyZWF0ZVN0eWxlZCA9IGZ1bmN0aW9uIGNyZWF0ZVN0eWxlZCh0YWcsIG9wdGlvbnMpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBpZiAodGFnID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignWW91IGFyZSB0cnlpbmcgdG8gY3JlYXRlIGEgc3R5bGVkIGVsZW1lbnQgd2l0aCBhbiB1bmRlZmluZWQgY29tcG9uZW50LlxcbllvdSBtYXkgaGF2ZSBmb3Jnb3R0ZW4gdG8gaW1wb3J0IGl0LicpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpZGVudGlmaWVyTmFtZTtcbiAgdmFyIHNob3VsZEZvcndhcmRQcm9wO1xuICB2YXIgdGFyZ2V0Q2xhc3NOYW1lO1xuXG4gIGlmIChvcHRpb25zICE9PSB1bmRlZmluZWQpIHtcbiAgICBpZGVudGlmaWVyTmFtZSA9IG9wdGlvbnMubGFiZWw7XG4gICAgdGFyZ2V0Q2xhc3NOYW1lID0gb3B0aW9ucy50YXJnZXQ7XG4gICAgc2hvdWxkRm9yd2FyZFByb3AgPSB0YWcuX19lbW90aW9uX2ZvcndhcmRQcm9wICYmIG9wdGlvbnMuc2hvdWxkRm9yd2FyZFByb3AgPyBmdW5jdGlvbiAocHJvcE5hbWUpIHtcbiAgICAgIHJldHVybiB0YWcuX19lbW90aW9uX2ZvcndhcmRQcm9wKHByb3BOYW1lKSAmJiAvLyAkRmxvd0ZpeE1lXG4gICAgICBvcHRpb25zLnNob3VsZEZvcndhcmRQcm9wKHByb3BOYW1lKTtcbiAgICB9IDogb3B0aW9ucy5zaG91bGRGb3J3YXJkUHJvcDtcbiAgfVxuXG4gIHZhciBpc1JlYWwgPSB0YWcuX19lbW90aW9uX3JlYWwgPT09IHRhZztcbiAgdmFyIGJhc2VUYWcgPSBpc1JlYWwgJiYgdGFnLl9fZW1vdGlvbl9iYXNlIHx8IHRhZztcblxuICBpZiAodHlwZW9mIHNob3VsZEZvcndhcmRQcm9wICE9PSAnZnVuY3Rpb24nICYmIGlzUmVhbCkge1xuICAgIHNob3VsZEZvcndhcmRQcm9wID0gdGFnLl9fZW1vdGlvbl9mb3J3YXJkUHJvcDtcbiAgfVxuXG4gIHZhciBkZWZhdWx0U2hvdWxkRm9yd2FyZFByb3AgPSBzaG91bGRGb3J3YXJkUHJvcCB8fCBnZXREZWZhdWx0U2hvdWxkRm9yd2FyZFByb3AoYmFzZVRhZyk7XG4gIHZhciBzaG91bGRVc2VBcyA9ICFkZWZhdWx0U2hvdWxkRm9yd2FyZFByb3AoJ2FzJyk7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgdmFyIHN0eWxlcyA9IGlzUmVhbCAmJiB0YWcuX19lbW90aW9uX3N0eWxlcyAhPT0gdW5kZWZpbmVkID8gdGFnLl9fZW1vdGlvbl9zdHlsZXMuc2xpY2UoMCkgOiBbXTtcblxuICAgIGlmIChpZGVudGlmaWVyTmFtZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBzdHlsZXMucHVzaChcImxhYmVsOlwiICsgaWRlbnRpZmllck5hbWUgKyBcIjtcIik7XG4gICAgfVxuXG4gICAgaWYgKGFyZ3NbMF0gPT0gbnVsbCB8fCBhcmdzWzBdLnJhdyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBzdHlsZXMucHVzaC5hcHBseShzdHlsZXMsIGFyZ3MpO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBhcmdzWzBdWzBdID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihJTExFR0FMX0VTQ0FQRV9TRVFVRU5DRV9FUlJPUik7XG4gICAgICB9XG5cbiAgICAgIHN0eWxlcy5wdXNoKGFyZ3NbMF1bMF0pO1xuICAgICAgdmFyIGxlbiA9IGFyZ3MubGVuZ3RoO1xuICAgICAgdmFyIGkgPSAxO1xuXG4gICAgICBmb3IgKDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGFyZ3NbMF1baV0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoSUxMRUdBTF9FU0NBUEVfU0VRVUVOQ0VfRVJST1IpO1xuICAgICAgICB9XG5cbiAgICAgICAgc3R5bGVzLnB1c2goYXJnc1tpXSwgYXJnc1swXVtpXSk7XG4gICAgICB9XG4gICAgfSAvLyAkRmxvd0ZpeE1lOiB3ZSBuZWVkIHRvIGNhc3QgU3RhdGVsZXNzRnVuY3Rpb25hbENvbXBvbmVudCB0byBvdXIgUHJpdmF0ZVN0eWxlZENvbXBvbmVudCBjbGFzc1xuXG5cbiAgICB2YXIgU3R5bGVkID0gd2l0aEVtb3Rpb25DYWNoZShmdW5jdGlvbiAocHJvcHMsIGNvbnRleHQsIHJlZikge1xuICAgICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoVGhlbWVDb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAodGhlbWUpIHtcbiAgICAgICAgdmFyIGZpbmFsVGFnID0gc2hvdWxkVXNlQXMgJiYgcHJvcHMuYXMgfHwgYmFzZVRhZztcbiAgICAgICAgdmFyIGNsYXNzTmFtZSA9ICcnO1xuICAgICAgICB2YXIgY2xhc3NJbnRlcnBvbGF0aW9ucyA9IFtdO1xuICAgICAgICB2YXIgbWVyZ2VkUHJvcHMgPSBwcm9wcztcblxuICAgICAgICBpZiAocHJvcHMudGhlbWUgPT0gbnVsbCkge1xuICAgICAgICAgIG1lcmdlZFByb3BzID0ge307XG5cbiAgICAgICAgICBmb3IgKHZhciBrZXkgaW4gcHJvcHMpIHtcbiAgICAgICAgICAgIG1lcmdlZFByb3BzW2tleV0gPSBwcm9wc1trZXldO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIG1lcmdlZFByb3BzLnRoZW1lID0gdGhlbWU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodHlwZW9mIHByb3BzLmNsYXNzTmFtZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICBjbGFzc05hbWUgPSBnZXRSZWdpc3RlcmVkU3R5bGVzKGNvbnRleHQucmVnaXN0ZXJlZCwgY2xhc3NJbnRlcnBvbGF0aW9ucywgcHJvcHMuY2xhc3NOYW1lKTtcbiAgICAgICAgfSBlbHNlIGlmIChwcm9wcy5jbGFzc05hbWUgIT0gbnVsbCkge1xuICAgICAgICAgIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSArIFwiIFwiO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHNlcmlhbGl6ZWQgPSBzZXJpYWxpemVTdHlsZXMoc3R5bGVzLmNvbmNhdChjbGFzc0ludGVycG9sYXRpb25zKSwgY29udGV4dC5yZWdpc3RlcmVkLCBtZXJnZWRQcm9wcyk7XG4gICAgICAgIHZhciBydWxlcyA9IGluc2VydFN0eWxlcyhjb250ZXh0LCBzZXJpYWxpemVkLCB0eXBlb2YgZmluYWxUYWcgPT09ICdzdHJpbmcnKTtcbiAgICAgICAgY2xhc3NOYW1lICs9IGNvbnRleHQua2V5ICsgXCItXCIgKyBzZXJpYWxpemVkLm5hbWU7XG5cbiAgICAgICAgaWYgKHRhcmdldENsYXNzTmFtZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgY2xhc3NOYW1lICs9IFwiIFwiICsgdGFyZ2V0Q2xhc3NOYW1lO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGZpbmFsU2hvdWxkRm9yd2FyZFByb3AgPSBzaG91bGRVc2VBcyAmJiBzaG91bGRGb3J3YXJkUHJvcCA9PT0gdW5kZWZpbmVkID8gZ2V0RGVmYXVsdFNob3VsZEZvcndhcmRQcm9wKGZpbmFsVGFnKSA6IGRlZmF1bHRTaG91bGRGb3J3YXJkUHJvcDtcbiAgICAgICAgdmFyIG5ld1Byb3BzID0ge307XG5cbiAgICAgICAgZm9yICh2YXIgX2tleSBpbiBwcm9wcykge1xuICAgICAgICAgIGlmIChzaG91bGRVc2VBcyAmJiBfa2V5ID09PSAnYXMnKSBjb250aW51ZTtcblxuICAgICAgICAgIGlmICggLy8gJEZsb3dGaXhNZVxuICAgICAgICAgIGZpbmFsU2hvdWxkRm9yd2FyZFByb3AoX2tleSkpIHtcbiAgICAgICAgICAgIG5ld1Byb3BzW19rZXldID0gcHJvcHNbX2tleV07XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgbmV3UHJvcHMuY2xhc3NOYW1lID0gY2xhc3NOYW1lO1xuICAgICAgICBuZXdQcm9wcy5yZWYgPSByZWYgfHwgcHJvcHMuaW5uZXJSZWY7XG5cbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgcHJvcHMuaW5uZXJSZWYpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKCdgaW5uZXJSZWZgIGlzIGRlcHJlY2F0ZWQgYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiBhIGZ1dHVyZSBtYWpvciB2ZXJzaW9uIG9mIEVtb3Rpb24sIHBsZWFzZSB1c2UgdGhlIGByZWZgIHByb3AgaW5zdGVhZCcgKyAoaWRlbnRpZmllck5hbWUgPT09IHVuZGVmaW5lZCA/ICcnIDogXCIgaW4gdGhlIHVzYWdlIG9mIGBcIiArIGlkZW50aWZpZXJOYW1lICsgXCJgXCIpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBlbGUgPSBjcmVhdGVFbGVtZW50KGZpbmFsVGFnLCBuZXdQcm9wcyk7XG4gICAgICAgIHJldHVybiBlbGU7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBTdHlsZWQuZGlzcGxheU5hbWUgPSBpZGVudGlmaWVyTmFtZSAhPT0gdW5kZWZpbmVkID8gaWRlbnRpZmllck5hbWUgOiBcIlN0eWxlZChcIiArICh0eXBlb2YgYmFzZVRhZyA9PT0gJ3N0cmluZycgPyBiYXNlVGFnIDogYmFzZVRhZy5kaXNwbGF5TmFtZSB8fCBiYXNlVGFnLm5hbWUgfHwgJ0NvbXBvbmVudCcpICsgXCIpXCI7XG4gICAgU3R5bGVkLmRlZmF1bHRQcm9wcyA9IHRhZy5kZWZhdWx0UHJvcHM7XG4gICAgU3R5bGVkLl9fZW1vdGlvbl9yZWFsID0gU3R5bGVkO1xuICAgIFN0eWxlZC5fX2Vtb3Rpb25fYmFzZSA9IGJhc2VUYWc7XG4gICAgU3R5bGVkLl9fZW1vdGlvbl9zdHlsZXMgPSBzdHlsZXM7XG4gICAgU3R5bGVkLl9fZW1vdGlvbl9mb3J3YXJkUHJvcCA9IHNob3VsZEZvcndhcmRQcm9wO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTdHlsZWQsICd0b1N0cmluZycsIHtcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiB2YWx1ZSgpIHtcbiAgICAgICAgaWYgKHRhcmdldENsYXNzTmFtZSA9PT0gdW5kZWZpbmVkICYmIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICByZXR1cm4gJ05PX0NPTVBPTkVOVF9TRUxFQ1RPUic7XG4gICAgICAgIH0gLy8gJEZsb3dGaXhNZTogY29lcmNlIHVuZGVmaW5lZCB0byBzdHJpbmdcblxuXG4gICAgICAgIHJldHVybiBcIi5cIiArIHRhcmdldENsYXNzTmFtZTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIFN0eWxlZC53aXRoQ29tcG9uZW50ID0gZnVuY3Rpb24gKG5leHRUYWcsIG5leHRPcHRpb25zKSB7XG4gICAgICByZXR1cm4gY3JlYXRlU3R5bGVkKG5leHRUYWcsIG5leHRPcHRpb25zICE9PSB1bmRlZmluZWQgPyBfb2JqZWN0U3ByZWFkKHt9LCBvcHRpb25zIHx8IHt9LCB7fSwgbmV4dE9wdGlvbnMpIDogb3B0aW9ucykuYXBwbHkodm9pZCAwLCBzdHlsZXMpO1xuICAgIH07XG5cbiAgICByZXR1cm4gU3R5bGVkO1xuICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlU3R5bGVkOyIsImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkLWJhc2UnO1xudmFyIHRhZ3MgPSBbJ2EnLCAnYWJicicsICdhZGRyZXNzJywgJ2FyZWEnLCAnYXJ0aWNsZScsICdhc2lkZScsICdhdWRpbycsICdiJywgJ2Jhc2UnLCAnYmRpJywgJ2JkbycsICdiaWcnLCAnYmxvY2txdW90ZScsICdib2R5JywgJ2JyJywgJ2J1dHRvbicsICdjYW52YXMnLCAnY2FwdGlvbicsICdjaXRlJywgJ2NvZGUnLCAnY29sJywgJ2NvbGdyb3VwJywgJ2RhdGEnLCAnZGF0YWxpc3QnLCAnZGQnLCAnZGVsJywgJ2RldGFpbHMnLCAnZGZuJywgJ2RpYWxvZycsICdkaXYnLCAnZGwnLCAnZHQnLCAnZW0nLCAnZW1iZWQnLCAnZmllbGRzZXQnLCAnZmlnY2FwdGlvbicsICdmaWd1cmUnLCAnZm9vdGVyJywgJ2Zvcm0nLCAnaDEnLCAnaDInLCAnaDMnLCAnaDQnLCAnaDUnLCAnaDYnLCAnaGVhZCcsICdoZWFkZXInLCAnaGdyb3VwJywgJ2hyJywgJ2h0bWwnLCAnaScsICdpZnJhbWUnLCAnaW1nJywgJ2lucHV0JywgJ2lucycsICdrYmQnLCAna2V5Z2VuJywgJ2xhYmVsJywgJ2xlZ2VuZCcsICdsaScsICdsaW5rJywgJ21haW4nLCAnbWFwJywgJ21hcmsnLCAnbWFycXVlZScsICdtZW51JywgJ21lbnVpdGVtJywgJ21ldGEnLCAnbWV0ZXInLCAnbmF2JywgJ25vc2NyaXB0JywgJ29iamVjdCcsICdvbCcsICdvcHRncm91cCcsICdvcHRpb24nLCAnb3V0cHV0JywgJ3AnLCAncGFyYW0nLCAncGljdHVyZScsICdwcmUnLCAncHJvZ3Jlc3MnLCAncScsICdycCcsICdydCcsICdydWJ5JywgJ3MnLCAnc2FtcCcsICdzY3JpcHQnLCAnc2VjdGlvbicsICdzZWxlY3QnLCAnc21hbGwnLCAnc291cmNlJywgJ3NwYW4nLCAnc3Ryb25nJywgJ3N0eWxlJywgJ3N1YicsICdzdW1tYXJ5JywgJ3N1cCcsICd0YWJsZScsICd0Ym9keScsICd0ZCcsICd0ZXh0YXJlYScsICd0Zm9vdCcsICd0aCcsICd0aGVhZCcsICd0aW1lJywgJ3RpdGxlJywgJ3RyJywgJ3RyYWNrJywgJ3UnLCAndWwnLCAndmFyJywgJ3ZpZGVvJywgJ3dicicsIC8vIFNWR1xuJ2NpcmNsZScsICdjbGlwUGF0aCcsICdkZWZzJywgJ2VsbGlwc2UnLCAnZm9yZWlnbk9iamVjdCcsICdnJywgJ2ltYWdlJywgJ2xpbmUnLCAnbGluZWFyR3JhZGllbnQnLCAnbWFzaycsICdwYXRoJywgJ3BhdHRlcm4nLCAncG9seWdvbicsICdwb2x5bGluZScsICdyYWRpYWxHcmFkaWVudCcsICdyZWN0JywgJ3N0b3AnLCAnc3ZnJywgJ3RleHQnLCAndHNwYW4nXTtcbnZhciBuZXdTdHlsZWQgPSBzdHlsZWQuYmluZCgpO1xudGFncy5mb3JFYWNoKGZ1bmN0aW9uICh0YWdOYW1lKSB7XG4gIG5ld1N0eWxlZFt0YWdOYW1lXSA9IG5ld1N0eWxlZCh0YWdOYW1lKTtcbn0pO1xuZXhwb3J0IGRlZmF1bHQgbmV3U3R5bGVkOyIsIi8qIGdsb2JhbCBjaHJvbWUgKi9cblxuaW1wb3J0IHsgb3BlblVybCB9IGZyb20gJy4vaW50ZXJmYWNlJ1xuXG5leHBvcnQgZnVuY3Rpb24gb3BlblBvY2tldCgpIHtcbiAgb3BlblVybChnZXRCYXNlVXJsKCkpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc05ld1RhYih0YWIsIHVybCkge1xuICByZXR1cm4gKFxuICAgIHR5cGVvZiB1cmwgPT09ICd1bmRlZmluZWQnICYmIHRhYi5hY3RpdmUgJiYgdGFiLnVybCA9PT0gJ2Nocm9tZTovL25ld3RhYi8nXG4gIClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzU3lzdGVtUGFnZSh0YWIpIHtcbiAgcmV0dXJuIHRhYi5hY3RpdmUgJiYgaXNTeXN0ZW1MaW5rKHRhYi51cmwpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1N5c3RlbUxpbmsobGluaykge1xuICByZXR1cm4gKFxuICAgIGxpbmsuc3RhcnRzV2l0aCgnY2hyb21lOi8vJykgfHxcbiAgICBsaW5rLnN0YXJ0c1dpdGgoJ2Nocm9tZS1leHRlbnNpb246Ly8nKSB8fFxuICAgIGxpbmsuc3RhcnRzV2l0aCgnY2hyb21lLXNlYXJjaDovLycpXG4gIClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEJhc2VVcmwoKSB7XG4gIGNvbnN0IGJhc2VVUkxTZXR0aW5nID0gZ2V0U2V0dGluZygnYmFzZV9VUkwnKVxuICBpZiAoIWJhc2VVUkxTZXR0aW5nKSBzZXRTZXR0aW5ncyh7IGJhc2VfVVJMOiAnaHR0cHM6Ly9nZXRwb2NrZXQuY29tLycgfSlcbiAgcmV0dXJuIGJhc2VVUkxTZXR0aW5nIHx8ICdodHRwczovL2dldHBvY2tldC5jb20vJ1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0QVBJVmVyc2lvbigpIHtcbiAgY29uc3QgQVBJU2V0dGluZyA9IGdldFNldHRpbmcoJ2Jhc2VfYXBpX3ZlcnNpb24nKVxuICBpZiAoIUFQSVNldHRpbmcpIHNldFNldHRpbmdzKHsgYmFzZV9hcGlfdmVyc2lvbjogJ3YzLycgfSlcbiAgcmV0dXJuIEFQSVNldHRpbmcgfHwgJ3YzLydcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEFQSVVybCgpIHtcbiAgcmV0dXJuIGdldEJhc2VVcmwoKSArIGdldEFQSVZlcnNpb24oKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0U2x1Zyh1cmwpIHtcbiAgY29uc3QgbWF0Y2ggPSB1cmwubWF0Y2goL14oPzpodHRwczpcXC9cXC9nZXRwb2NrZXQuY29tXFwvZXhwbG9yZVxcLykoLitbXi9dKS9pKVxuICByZXR1cm4gbWF0Y2hbMV1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEFjY2Vzc1Rva2VuKCkge1xuICByZXR1cm4gZ2V0U2V0dGluZygnYWNjZXNzX3Rva2VuJylcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzQXV0aG9yaXplZCgpIHtcbiAgcmV0dXJuIChcbiAgICB0eXBlb2YgZ2V0U2V0dGluZygndXNlcm5hbWUnKSAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICB0eXBlb2YgZ2V0U2V0dGluZygnb2F1dGhfdG9rZW4nKSAhPT0gJ3VuZGVmaW5lZCdcbiAgKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNNYWMoKSB7XG4gIHJldHVybiBuYXZpZ2F0b3IucGxhdGZvcm0ubWF0Y2goL15NYWMvKSAhPT0gbnVsbFxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q3VycmVudExhbmd1YWdlQ29kZSgpIHtcbiAgdmFyIGxhbmd1YWdlID0gbmF2aWdhdG9yLmxhbmd1YWdlc1xuICAgID8gbmF2aWdhdG9yLmxhbmd1YWdlc1swXVxuICAgIDogbmF2aWdhdG9yLmxhbmd1YWdlIHx8IG5hdmlnYXRvci51c2VyTGFuZ3VhZ2VcblxuICBsYW5ndWFnZSA9IHR5cGVvZiBsYW5ndWFnZSAhPT0gJ3VuZGVmaW5lZCcgPyBsYW5ndWFnZS50b0xvd2VyQ2FzZSgpIDogJ2VuJ1xuXG4gIGlmIChsYW5ndWFnZS5pbmRleE9mKCdlbicpID09PSAwKSByZXR1cm4gJ2VuJyAvLyBFbmdsaXNoXG4gIGlmIChsYW5ndWFnZS5pbmRleE9mKCdkZScpID09PSAwKSByZXR1cm4gJ2RlJyAvLyBHZXJtYW5cbiAgaWYgKGxhbmd1YWdlLmluZGV4T2YoJ2ZyJykgPT09IDApIHJldHVybiAnZnInIC8vIEZyZW5jaFxuICBpZiAobGFuZ3VhZ2UuaW5kZXhPZignaXQnKSA9PT0gMCkgcmV0dXJuICdpdCcgLy8gSXRhbGlhblxuICBpZiAobGFuZ3VhZ2UuaW5kZXhPZignZXNfNDE5JykgPT09IDApIHJldHVybiAnZXNfNDE5JyAvLyBTcGFuaXNoIChMYXRpbiBBbWVyaWNhIGFuZCBDYXJpYmJlYW4pXG4gIGlmIChsYW5ndWFnZS5pbmRleE9mKCdlcycpID09PSAwKSByZXR1cm4gJ2VzJyAvLyBTcGFuaXNoXG4gIGlmIChsYW5ndWFnZS5pbmRleE9mKCdqYScpID09PSAwKSByZXR1cm4gJ2phJyAvLyBKYXBhbmVzZVxuICBpZiAobGFuZ3VhZ2UuaW5kZXhPZigncnUnKSA9PT0gMCkgcmV0dXJuICdydScgLy8gUnVzc2lhblxuICBpZiAobGFuZ3VhZ2UuaW5kZXhPZigna28nKSA9PT0gMCkgcmV0dXJuICdrbycgLy8gS29yZWFuXG4gIGlmIChsYW5ndWFnZS5pbmRleE9mKCdubCcpID09PSAwKSByZXR1cm4gJ25sJyAvLyBEdXRjaFxuICBpZiAobGFuZ3VhZ2UuaW5kZXhPZigncGwnKSA9PT0gMCkgcmV0dXJuICdwbCcgLy8gUG9saXNoXG4gIGlmIChsYW5ndWFnZS5pbmRleE9mKCdwdF9CUicpID09PSAwKSByZXR1cm4gJ3B0X0JSJyAvLyBQb3J0dWd1ZXNlIEJyYXppbFxuICBpZiAobGFuZ3VhZ2UuaW5kZXhPZigncHRfUFQnKSA9PT0gMCkgcmV0dXJuICdwdF9QVCcgLy8gUG9ydHVndWVzZSBQb3J0dWdhbFxuICBpZiAobGFuZ3VhZ2UuaW5kZXhPZignemhfQ04nKSA9PT0gMCkgcmV0dXJuICd6aF9DTicgLy8gQ2hpbmVzZSBTaW1wbGlmaWVkXG4gIGlmIChsYW5ndWFnZS5pbmRleE9mKCd6aF9UVycpID09PSAwKSByZXR1cm4gJ3poX1RXJyAvLyBDaGluZXNlIFRyYWRpdGlvbmFsXG4gIHJldHVybiAnZW4nIC8vIERlZmF1bHQgaXMgRW5nbGlzaFxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0RGVmYXVsdEtleWJvYXJkU2hvcnRDdXQoKSB7XG4gIHJldHVybiBpc01hYygpXG4gICAgPyBgJHtTdHJpbmcuZnJvbUNoYXJDb2RlKCc4OTg0Jyl9KyR7U3RyaW5nLmZyb21DaGFyQ29kZSgnODY3OScpfStQYFxuICAgIDogJ2N0cmwrc2hpZnQrUydcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEJlc3RJbWFnZShpdGVtKSB7XG4gIHJldHVybiBpdGVtLnRvcF9pbWFnZV91cmxcbiAgICA/IGl0ZW0udG9wX2ltYWdlX3VybFxuICAgIDogaXRlbS5pbWFnZXNbT2JqZWN0LmtleXMoaXRlbS5pbWFnZXMpWzBdXS5zcmNcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEltYWdlQ2FjaGVVcmwodXJsLCBpbWFnZVNpemUpIHtcbiAgaWYgKCF1cmwpIHJldHVyblxuICBjb25zdCByZXNpemVQYXJhbSA9IGltYWdlU2l6ZSA/IGAke2ltYWdlU2l6ZS53aWR0aH14JHtpbWFnZVNpemUuaGVpZ2h0fWAgOiAnJ1xuICBjb25zdCBlbmNvZGVkVVJMID0gZW5jb2RlVVJJQ29tcG9uZW50KHVybC5yZXBsYWNlKC8nL2csICclMjcnKSlcbiAgY29uc3QgdXJsUGFyYW0gPSBgJHtlbmNvZGVkVVJMfWBcbiAgY29uc3QgY2FjaGVVUkwgPSAnaHR0cHM6Ly9wb2NrZXQtaW1hZ2UtY2FjaGUuY29tJyAvL2RpcmVjdCdcbiAgcmV0dXJuIGAke2NhY2hlVVJMfS8ke3Jlc2l6ZVBhcmFtfS9maWx0ZXJzOm5vX3Vwc2NhbGUoKS8ke3VybFBhcmFtfWBcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEl0ZW1Qb3NpdGlvbihpdGVtKSB7XG4gIHJldHVybiBpdGVtLm9mZnNldExlZnQgLSBpdGVtLnNjcm9sbExlZnQgKyBpdGVtLmNsaWVudExlZnQgKyBpdGVtLm9mZnNldFdpZHRoXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjaGVja0R1cGxpY2F0ZShsaXN0LCB0YWdWYWx1ZSkge1xuICByZXR1cm4gbGlzdC5maWx0ZXIoKHRhZykgPT4gdGFnLm5hbWUgPT09IHRhZ1ZhbHVlKS5sZW5ndGhcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFNldHRpbmcoa2V5KSB7XG4gIHJldHVybiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXRTZXR0aW5ncyh2YWx1ZXMpIHtcbiAgT2JqZWN0LmtleXModmFsdWVzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShrZXksIHZhbHVlc1trZXldKVxuICB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlU2V0dGluZ3ModmFsdWVzKSB7XG4gIHZhbHVlcy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpXG4gIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjbG9zZUxvZ2luUGFnZSgpIHtcbiAgY2hyb21lLnRhYnMucXVlcnkoXG4gICAgeyB1cmw6ICcqOi8vZ2V0cG9ja2V0LmNvbS9leHRlbnNpb25fbG9naW5fc3VjY2VzcycgfSxcbiAgICAodGFicykgPT4ge1xuICAgICAgY2hyb21lLnRhYnMucmVtb3ZlKHRhYnMubWFwKCh0YWIpID0+IHRhYi5pZCkpXG4gICAgfVxuICApXG59XG4iLCJpbXBvcnQgeyBnZXRDdXJyZW50TGFuZ3VhZ2VDb2RlIH0gZnJvbSAnLi4vaGVscGVycydcblxuaW1wb3J0IGRlIGZyb20gJy4vZGUvc3RyaW5ncy5qc29uJ1xuaW1wb3J0IGVuIGZyb20gJy4vZW4vc3RyaW5ncy5qc29uJ1xuaW1wb3J0IGVzIGZyb20gJy4vZXMvc3RyaW5ncy5qc29uJ1xuaW1wb3J0IGVzXzQxOSBmcm9tICcuL2VzXzQxOS9zdHJpbmdzLmpzb24nXG5pbXBvcnQgZnIgZnJvbSAnLi9mci9zdHJpbmdzLmpzb24nXG5pbXBvcnQgaXQgZnJvbSAnLi9pdC9zdHJpbmdzLmpzb24nXG5pbXBvcnQgamEgZnJvbSAnLi9qYS9zdHJpbmdzLmpzb24nXG5pbXBvcnQga28gZnJvbSAnLi9rby9zdHJpbmdzLmpzb24nXG5pbXBvcnQgbmwgZnJvbSAnLi9ubC9zdHJpbmdzLmpzb24nXG5pbXBvcnQgcGwgZnJvbSAnLi9wbC9zdHJpbmdzLmpzb24nXG5pbXBvcnQgcHRfQlIgZnJvbSAnLi9wdF9CUi9zdHJpbmdzLmpzb24nXG5pbXBvcnQgcHRfUFQgZnJvbSAnLi9wdF9QVC9zdHJpbmdzLmpzb24nXG5pbXBvcnQgcnUgZnJvbSAnLi9ydS9zdHJpbmdzLmpzb24nXG5pbXBvcnQgemhfQ04gZnJvbSAnLi96aF9DTi9zdHJpbmdzLmpzb24nXG5pbXBvcnQgemhfVFcgZnJvbSAnLi96aF9UVy9zdHJpbmdzLmpzb24nXG5cbmZ1bmN0aW9uIGxvY2FsaXplZFN0cmluZ3MoKSB7XG4gIGNvbnN0IGxvY2FsaXplZENvcHkgPSB7XG4gICAgZGUsXG4gICAgZW4sXG4gICAgZXMsXG4gICAgZXNfNDE5LFxuICAgIGZyLFxuICAgIGl0LFxuICAgIGphLFxuICAgIGtvLFxuICAgIG5sLFxuICAgIHBsLFxuICAgIHB0X0JSLFxuICAgIHB0X1BULFxuICAgIHJ1LFxuICAgIHpoX0NOLFxuICAgIHpoX1RXXG4gIH1cblxuICBjb25zdCBjdXJyZW50TGFuZ3VhZ2UgPSBnZXRDdXJyZW50TGFuZ3VhZ2VDb2RlKClcbiAgcmV0dXJuIGxvY2FsaXplZENvcHlbY3VycmVudExhbmd1YWdlXSB8fCBsb2NhbGl6ZWRDb3B5WydlbiddXG59XG5cbmNvbnN0IGN1cnJlbnRTdHJpbmdzID0gbG9jYWxpemVkU3RyaW5ncygpXG5cbmV4cG9ydCBmdW5jdGlvbiBsb2NhbGl6ZShzZWN0aW9uLCBzdHJpbmcpIHtcbiAgcmV0dXJuIGN1cnJlbnRTdHJpbmdzW3NlY3Rpb25dW3N0cmluZ11cbn1cbiIsIi8qIGdsb2JhbCBjaHJvbWUgc2FmYXJpICovXG5cbi8qIFV0aWxpdGllc1xu4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCT4oCTICovXG5pbXBvcnQgeyBpc0Z1bmN0aW9uIH0gZnJvbSAnLi91dGlsaXRpZXMnXG5cbi8qIExpc3RlbmVycyBGdW5jdGlvbnNcbuKAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAkyAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFkZE1lc3NhZ2VMaXN0ZW5lcihoYW5kbGVyKSB7XG4gIHJldHVybiBjaHJvbWUucnVudGltZS5vbk1lc3NhZ2UuYWRkTGlzdGVuZXIoaGFuZGxlcilcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZU1lc3NhZ2VMaXN0ZW5lcihoYW5kbGVyKSB7XG4gIHJldHVybiBjaHJvbWUucnVudGltZS5vbk1lc3NhZ2UucmVtb3ZlTGlzdGVuZXIoaGFuZGxlcilcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9uVXBkYXRlQXZhaWxhYmxlKGhhbmRsZXIpIHtcbiAgcmV0dXJuIGNocm9tZS5ydW50aW1lLm9uVXBkYXRlQXZhaWxhYmxlLmFkZExpc3RlbmVyKGhhbmRsZXIpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZWxvYWRFeHRlbnNpb24oKSB7XG4gIHJldHVybiBjaHJvbWUucnVudGltZS5yZWxvYWQoKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gb25JbnN0YWxsZWQoKSB7XG4gIHJldHVybiBjaHJvbWUucnVudGltZS5vbkluc3RhbGxlZFxufVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0VW5pbnN0YWxsVXJsKHVybCkge1xuICByZXR1cm4gY2hyb21lLnJ1bnRpbWUuc2V0VW5pbnN0YWxsVVJMKHVybClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9uU3VzcGVuZCgpIHtcbiAgcmV0dXJuIGNocm9tZS5ydW50aW1lLm9uU3VzcGVuZFxufVxuXG5leHBvcnQgZnVuY3Rpb24gb25UYWJBY3RpdmF0ZWQoY2FsbGJhY2spIHtcbiAgcmV0dXJuIGNocm9tZS50YWJzLm9uQWN0aXZhdGVkLmFkZExpc3RlbmVyKGNhbGxiYWNrKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gb25UYWJVcGRhdGUoY2FsbGJhY2spIHtcbiAgcmV0dXJuIGNocm9tZS50YWJzLm9uVXBkYXRlZC5hZGRMaXN0ZW5lcihjYWxsYmFjaylcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9uVGFiQ3JlYXRlZChjYWxsYmFjaykge1xuICByZXR1cm4gY2hyb21lLnRhYnMub25DcmVhdGVkLmFkZExpc3RlbmVyKGNhbGxiYWNrKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gb25UYWJSZW1vdmVkKGNhbGxiYWNrKSB7XG4gIHJldHVybiBjaHJvbWUudGFicy5vblJlbW92ZWQuYWRkTGlzdGVuZXIoY2FsbGJhY2spXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBvblRhYlJlcGxhY2VkKGNhbGxiYWNrKSB7XG4gIHJldHVybiBjaHJvbWUudGFicy5vblJlcGxhY2VkLmFkZExpc3RlbmVyKGNhbGxiYWNrKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gb25Gb2N1c0NoYW5nZWQoY2FsbGJhY2spIHtcbiAgcmV0dXJuIGNocm9tZS53aW5kb3dzLm9uRm9jdXNDaGFuZ2VkLmFkZExpc3RlbmVyKGNhbGxiYWNrKVxufVxuXG4vKiBNZXNzYWdpbmdcbuKAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAkyAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNlbmRNZXNzYWdlKG1lc3NhZ2UpIHtcbiAgaWYgKHR5cGVvZiBzYWZhcmkgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIHNhZmFyaS5leHRlbnNpb24uZGlzcGF0Y2hNZXNzYWdlKG1lc3NhZ2UudHlwZSwgbWVzc2FnZS5wYXlsb2FkKVxuICB9XG5cbiAgY2hyb21lLnJ1bnRpbWUuc2VuZE1lc3NhZ2UobWVzc2FnZSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNlbmRNZXNzYWdlVG9UYWIodGFiSWQsIG1lc3NhZ2UsIGNiKSB7XG4gIGxldCBjYWxsYmFjayA9IGlzRnVuY3Rpb24oY2IpID8gY2IgOiAoKSA9PiB7fVxuICByZXR1cm4gY2hyb21lLnRhYnMuc2VuZE1lc3NhZ2UodGFiSWQsIG1lc3NhZ2UsIGNhbGxiYWNrKVxufVxuXG4vKiBCcm93c2VyXG7igJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJMgKi9cbmV4cG9ydCBmdW5jdGlvbiBjb29raWVzKCkge1xuICByZXR1cm4gY2hyb21lLmNvb2tpZXNcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFVSTCh1cmwpIHtcbiAgcmV0dXJuIGNocm9tZS5ydW50aW1lLmdldFVSTCh1cmwpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBvcGVuVXJsKHVybCkge1xuICBjaHJvbWUudGFicy5xdWVyeSh7IGFjdGl2ZTogdHJ1ZSwgY3VycmVudFdpbmRvdzogdHJ1ZSB9LCBmdW5jdGlvbih0YWIpIHtcbiAgICBjaHJvbWUudGFicy51cGRhdGUodGFiWzBdLmlkLCB7IHVybCB9KVxuICB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gb3BlblRhYldpdGhVcmwodXJsLCBpbkJhY2tncm91bmQpIHtcbiAgbGV0IG1ha2VUYWJBY3RpdmUgPSBpbkJhY2tncm91bmQgPT09IHRydWUgPyBmYWxzZSA6IHRydWUgLy9lc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVubmVlZGVkLXRlcm5hcnlcbiAgcmV0dXJuIGNocm9tZS50YWJzLmNyZWF0ZSh7IHVybDogdXJsLCBhY3RpdmU6IG1ha2VUYWJBY3RpdmUgfSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9wZW5PcHRpb25zKCkge1xuICByZXR1cm4gY2hyb21lLnJ1bnRpbWUub3Blbk9wdGlvbnNQYWdlKClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNldFRvb2xiYXJJY29uKHRhYklkLCBpY29uTmFtZSkge1xuICBjb25zdCBwcmVmZXJzRGFyayA9XG4gICAgd2luZG93Lm1hdGNoTWVkaWEgJiZcbiAgICB3aW5kb3cubWF0Y2hNZWRpYSgnKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKScpLm1hdGNoZXNcbiAgY29uc3QgZGFya01vZGUgPSBwcmVmZXJzRGFyayA/ICctZGFyaycgOiAnJ1xuXG4gIGNvbnN0IHNtYWxsSWNvblBhdGggPSBgaW1hZ2VzLyR7aWNvbk5hbWV9JHtkYXJrTW9kZX0tMTkucG5nYFxuICBjb25zdCBiaWdJY29uUGF0aCA9IGBpbWFnZXMvJHtpY29uTmFtZX0ke2RhcmtNb2RlfS0zOC5wbmdgXG5cbiAgY2hyb21lLmJyb3dzZXJBY3Rpb24uc2V0SWNvbih7XG4gICAgdGFiSWQsXG4gICAgcGF0aDoge1xuICAgICAgJzE5Jzogc21hbGxJY29uUGF0aCxcbiAgICAgICczOCc6IGJpZ0ljb25QYXRoXG4gICAgfVxuICB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlVG9vbGJhckljb24odGFiSWQsIGFjdGl2YXRlSWNvbikge1xuICBhY3RpdmF0ZUljb25cbiAgICA/IHNldFRvb2xiYXJJY29uKHRhYklkLCAnYnJvd3Nlci1hY3Rpb24taWNvbi1hZGRlZCcpXG4gICAgOiBzZXRUb29sYmFySWNvbih0YWJJZCwgJ2Jyb3dzZXItYWN0aW9uLWljb24nKVxufVxuXG4vKiBSZWZlcmVuY2VzXG7igJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJMgKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEV4dGVuc2lvbkluZm8oKSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICByZXR1cm4gY2hyb21lLm1hbmFnZW1lbnQuZ2V0U2VsZihyZXNvbHZlKVxuICB9KVxufVxuXG4vKiBMb2NhbCBTdG9yYWdlXG7igJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJPigJMgKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRTZXR0aW5nKGtleSkge1xuICByZXR1cm4gbG9jYWxTdG9yYWdlLmdldEl0ZW0oa2V5KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0U2V0dGluZ3ModmFsdWVzKSB7XG4gIE9iamVjdC5rZXlzKHZhbHVlcykuZm9yRWFjaChmdW5jdGlvbihrZXkpIHtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShrZXksIHZhbHVlc1trZXldKVxuICB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlU2V0dGluZ3ModmFsdWVzKSB7XG4gIHZhbHVlcy5mb3JFYWNoKGZ1bmN0aW9uKGtleSkge1xuICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKGtleSlcbiAgfSlcbn1cbiIsImltcG9ydCBhcnJheVdpdGhvdXRIb2xlcyBmcm9tIFwiLi9hcnJheVdpdGhvdXRIb2xlc1wiO1xuaW1wb3J0IGl0ZXJhYmxlVG9BcnJheSBmcm9tIFwiLi9pdGVyYWJsZVRvQXJyYXlcIjtcbmltcG9ydCB1bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSBmcm9tIFwiLi91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheVwiO1xuaW1wb3J0IG5vbkl0ZXJhYmxlU3ByZWFkIGZyb20gXCIuL25vbkl0ZXJhYmxlU3ByZWFkXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7XG4gIHJldHVybiBhcnJheVdpdGhvdXRIb2xlcyhhcnIpIHx8IGl0ZXJhYmxlVG9BcnJheShhcnIpIHx8IHVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFycikgfHwgbm9uSXRlcmFibGVTcHJlYWQoKTtcbn0iLCJpbXBvcnQgYXJyYXlMaWtlVG9BcnJheSBmcm9tIFwiLi9hcnJheUxpa2VUb0FycmF5XCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnJheUxpa2VUb0FycmF5KGFycik7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheShpdGVyKSB7XG4gIGlmICh0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoaXRlcikpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9ub25JdGVyYWJsZVNwcmVhZCgpIHtcbiAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHtcbiAgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7XG5cbiAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7XG4gICAgYXJyMltpXSA9IGFycltpXTtcbiAgfVxuXG4gIHJldHVybiBhcnIyO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcbiAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpO1xuICB9XG59IiwiZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykge1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTtcbiAgICBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7XG4gICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlO1xuICAgIGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHtcbiAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7XG4gIGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTtcbiAgcmV0dXJuIENvbnN0cnVjdG9yO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gIF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gICAgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTtcbiAgfTtcbiAgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkge1xuICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7XG4gIGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7XG4gIGlmICh0eXBlb2YgUHJveHkgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIHRydWU7XG5cbiAgdHJ5IHtcbiAgICBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbiAoKSB7fSkpO1xuICAgIHJldHVybiB0cnVlO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3R5cGVvZihvYmopIHtcbiAgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiO1xuXG4gIGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikge1xuICAgIF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikge1xuICAgICAgcmV0dXJuIHR5cGVvZiBvYmo7XG4gICAgfTtcbiAgfSBlbHNlIHtcbiAgICBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqO1xuICAgIH07XG4gIH1cblxuICByZXR1cm4gX3R5cGVvZihvYmopO1xufSIsImltcG9ydCBfdHlwZW9mIGZyb20gXCIuLi8uLi9oZWxwZXJzL2VzbS90eXBlb2ZcIjtcbmltcG9ydCBhc3NlcnRUaGlzSW5pdGlhbGl6ZWQgZnJvbSBcIi4vYXNzZXJ0VGhpc0luaXRpYWxpemVkXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7XG4gIGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpKSB7XG4gICAgcmV0dXJuIGNhbGw7XG4gIH1cblxuICByZXR1cm4gYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikge1xuICBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7XG4gICAgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO1xuICB9XG5cbiAgcmV0dXJuIHNlbGY7XG59IiwiaW1wb3J0IGdldFByb3RvdHlwZU9mIGZyb20gXCIuL2dldFByb3RvdHlwZU9mXCI7XG5pbXBvcnQgaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0IGZyb20gXCIuL2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdFwiO1xuaW1wb3J0IHBvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gZnJvbSBcIi4vcG9zc2libGVDb25zdHJ1Y3RvclJldHVyblwiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgU3VwZXIgPSBnZXRQcm90b3R5cGVPZihEZXJpdmVkKSxcbiAgICAgICAgcmVzdWx0O1xuXG4gICAgaWYgKGlzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpKSB7XG4gICAgICB2YXIgTmV3VGFyZ2V0ID0gZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7XG4gICAgICByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH1cblxuICAgIHJldHVybiBwb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7XG4gIH07XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgby5fX3Byb3RvX18gPSBwO1xuICAgIHJldHVybiBvO1xuICB9O1xuXG4gIHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7XG59IiwiaW1wb3J0IHNldFByb3RvdHlwZU9mIGZyb20gXCIuL3NldFByb3RvdHlwZU9mXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTtcbiAgfVxuXG4gIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwge1xuICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICB2YWx1ZTogc3ViQ2xhc3MsXG4gICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH1cbiAgfSk7XG4gIGlmIChzdXBlckNsYXNzKSBzZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7XG59IiwiLyogVXRpbGl0aWVzXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLyogVGhlc2UgYXJlIHNpbmdsZSBmdW5jdGlvbiB1dGlsaXRpZXMgdGhhdCByZWx5IG9uXG4vKiBubyBleHRlcm5hbCBsaWJyYXJpZXMgb3IgZmlsZXNcbuKAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAkyAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWRVcmwocGFzc2VkU3RyaW5nKSB7XG4gIGNvbnN0IHZhbGlkVXJsVGVzdFBhdHRlcm4gPSAvXig/Oig/Omh0dHBzP3xmdHApOlxcL1xcLykoPzpcXFMrKD86OlxcUyopP0ApPyg/Oig/ISg/OjEwfDEyNykoPzpcXC5cXGR7MSwzfSl7M30pKD8hKD86MTY5XFwuMjU0fDE5MlxcLjE2OCkoPzpcXC5cXGR7MSwzfSl7Mn0pKD8hMTcyXFwuKD86MVs2LTldfDJcXGR8M1swLTFdKSg/OlxcLlxcZHsxLDN9KXsyfSkoPzpbMS05XVxcZD98MVxcZFxcZHwyWzAxXVxcZHwyMlswLTNdKSg/OlxcLig/OjE/XFxkezEsMn18MlswLTRdXFxkfDI1WzAtNV0pKXsyfSg/OlxcLig/OlsxLTldXFxkP3wxXFxkXFxkfDJbMC00XVxcZHwyNVswLTRdKSl8KD86KD86W2EtelxcdTAwYTEtXFx1ZmZmZjAtOV0tKikqW2EtelxcdTAwYTEtXFx1ZmZmZjAtOV0rKSg/OlxcLig/OlthLXpcXHUwMGExLVxcdWZmZmYwLTldLSopKlthLXpcXHUwMGExLVxcdWZmZmYwLTldKykqKD86XFwuKD86W2EtelxcdTAwYTEtXFx1ZmZmZl17Mix9KSlcXC4/KSg/OjpcXGR7Miw1fSk/KD86Wy8/I11cXFMqKT8kL2lcbiAgcmV0dXJuIHZhbGlkVXJsVGVzdFBhdHRlcm4udGVzdChwYXNzZWRTdHJpbmcpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkQWRkcmVzcyhwYXNzZWRTdHJpbmcpIHtcbiAgY29uc3QgdmFsaWRBZGRyZXNzUGF0dGVybiA9IC9eKD86KD86aHR0cHM/fGZ0cCk6XFwvXFwvKT8oPzpcXFMrKD86OlxcUyopP0ApPyg/Oig/ISg/OjEwfDEyNykoPzpcXC5cXGR7MSwzfSl7M30pKD8hKD86MTY5XFwuMjU0fDE5MlxcLjE2OCkoPzpcXC5cXGR7MSwzfSl7Mn0pKD8hMTcyXFwuKD86MVs2LTldfDJcXGR8M1swLTFdKSg/OlxcLlxcZHsxLDN9KXsyfSkoPzpbMS05XVxcZD98MVxcZFxcZHwyWzAxXVxcZHwyMlswLTNdKSg/OlxcLig/OjE/XFxkezEsMn18MlswLTRdXFxkfDI1WzAtNV0pKXsyfSg/OlxcLig/OlsxLTldXFxkP3wxXFxkXFxkfDJbMC00XVxcZHwyNVswLTRdKSl8KD86KD86W2EtelxcdTAwYTEtXFx1ZmZmZjAtOV0tKikqW2EtelxcdTAwYTEtXFx1ZmZmZjAtOV0rKSg/OlxcLig/OlthLXpcXHUwMGExLVxcdWZmZmYwLTldLSopKlthLXpcXHUwMGExLVxcdWZmZmYwLTldKykqKD86XFwuKD86W2EtelxcdTAwYTEtXFx1ZmZmZl17Mix9KSlcXC4/KSg/OjpcXGR7Miw1fSk/KD86Wy8/I11cXFMqKT8kL2lcbiAgcmV0dXJuIHZhbGlkQWRkcmVzc1BhdHRlcm4udGVzdChwYXNzZWRTdHJpbmcpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVWYWxpZFVybChwYXNzZWRTdHJpbmcpIHtcbiAgY29uc3QgaGFzUHJvdG9jb2wgPSAvXig/Oig/Omh0dHBzP3xmdHApOlxcL1xcLykvZ1xuICByZXR1cm4gaGFzUHJvdG9jb2wudGVzdChwYXNzZWRTdHJpbmcpXG4gICAgPyBwYXNzZWRTdHJpbmdcbiAgICA6ICdodHRwOi8vJyArIHBhc3NlZFN0cmluZ1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZG9tYWluRm9yVXJsKHVybCkge1xuICBjb25zdCBtYXRjaCA9IHVybC5tYXRjaChcbiAgICAvXig/Omh0dHBzPzpcXC9cXC8pPyg/OlteQFxcbl0rQCk/KD86d3d3XFwuKT8oW146L1xcbj89XSspL2ltXG4gIClcbiAgcmV0dXJuIG1hdGNoWzFdXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBiYXNlRG9tYWluVXJsKHVybCkge1xuICBjb25zdCBwYXRoQXJyYXkgPSB1cmwuc3BsaXQoJy8nKVxuICBjb25zdCBwcm90b2NvbCA9IHBhdGhBcnJheVswXVxuICBjb25zdCBob3N0ID0gcGF0aEFycmF5WzJdXG4gIHJldHVybiBwcm90b2NvbCArICcvLycgKyBob3N0XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0Z1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh4KSA9PT0gJ1tvYmplY3QgRnVuY3Rpb25dJ1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYXJyYXlIYXNWYWx1ZXMoY2hlY2tBcnJheSkge1xuICByZXR1cm4gY2hlY2tBcnJheS5maWx0ZXIodmFsdWUgPT4gdmFsdWUgJiYgdHlwZW9mIHZhbHVlICE9PSAndW5kZWZpbmVkJylcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNoYWxsb3dRdWVyeVBhcmFtcyhzb3VyY2UpIHtcbiAgY29uc3QgYXJyYXkgPSBbXVxuICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgaWYgKHNvdXJjZVtrZXldKSB7XG4gICAgICBsZXQgdHlwZSA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmdcbiAgICAgICAgLmNhbGwoc291cmNlW2tleV0pXG4gICAgICAgIC5tYXRjaCgvXFxbb2JqZWN0IChcXHcrKVxcXS8pWzFdXG4gICAgICBpZiAodHlwZSA9PT0gJ1N0cmluZycgfHwgdHlwZSA9PT0gJ051bWJlcicpIHtcbiAgICAgICAgYXJyYXkucHVzaChcbiAgICAgICAgICBlbmNvZGVVUklDb21wb25lbnQoa2V5KSArICc9JyArIGVuY29kZVVSSUNvbXBvbmVudChzb3VyY2Vba2V5XSlcbiAgICAgICAgKVxuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gYXJyYXkuam9pbignJicpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiByYW5kb21FbnRyeShhcnJheSkge1xuICByZXR1cm4gYXJyYXlbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogYXJyYXkubGVuZ3RoKV1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRocm90dGxlKGNhbGxiYWNrLCB3YWl0LCBjb250ZXh0ID0gdGhpcykge1xuICBsZXQgdGltZW91dCA9IG51bGxcbiAgbGV0IGNhbGxiYWNrQXJncyA9IG51bGxcblxuICBjb25zdCBsYXRlciA9ICgpID0+IHtcbiAgICBjYWxsYmFjay5hcHBseShjb250ZXh0LCBjYWxsYmFja0FyZ3MpXG4gICAgdGltZW91dCA9IG51bGxcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICBpZiAoIXRpbWVvdXQpIHtcbiAgICAgIGNhbGxiYWNrQXJncyA9IGFyZ3VtZW50c1xuICAgICAgdGltZW91dCA9IHNldFRpbWVvdXQobGF0ZXIsIHdhaXQpXG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRCb29sKHZhbHVlKSB7XG4gIHJldHVybiAoXG4gICAgdmFsdWUgPT09IHRydWUgfHxcbiAgICB2YWx1ZSA9PT0gJ3RydWUnIHx8XG4gICAgdmFsdWUgPT09IDEgfHxcbiAgICBwYXJzZUludCh2YWx1ZSwgMTApID09PSAxXG4gIClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlRGVkdXBlKGFycmF5T2ZBcnJheXMpIHtcbiAgcmV0dXJuIFsuLi5uZXcgU2V0KFtdLmNvbmNhdCguLi5hcnJheU9mQXJyYXlzKSldXG59XG4iLCIvKiBlc2xpbnQtZGlzYWJsZSAqL1xuLy8gSW5zcGlyZWQgYnkgaHR0cHM6Ly9naXRodWIuY29tL2dhcnljb3VydC9tdXJtdXJoYXNoLWpzXG4vLyBQb3J0ZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vYWFwcGxlYnkvc21oYXNoZXIvYmxvYi82MWEwNTMwZjI4Mjc3ZjJlODUwYmZjMzk2MDBjZTYxZDAyYjUxOGRlL3NyYy9NdXJtdXJIYXNoMi5jcHAjTDM3LUw4NlxuZnVuY3Rpb24gbXVybXVyMihzdHIpIHtcbiAgLy8gJ20nIGFuZCAncicgYXJlIG1peGluZyBjb25zdGFudHMgZ2VuZXJhdGVkIG9mZmxpbmUuXG4gIC8vIFRoZXkncmUgbm90IHJlYWxseSAnbWFnaWMnLCB0aGV5IGp1c3QgaGFwcGVuIHRvIHdvcmsgd2VsbC5cbiAgLy8gY29uc3QgbSA9IDB4NWJkMWU5OTU7XG4gIC8vIGNvbnN0IHIgPSAyNDtcbiAgLy8gSW5pdGlhbGl6ZSB0aGUgaGFzaFxuICB2YXIgaCA9IDA7IC8vIE1peCA0IGJ5dGVzIGF0IGEgdGltZSBpbnRvIHRoZSBoYXNoXG5cbiAgdmFyIGssXG4gICAgICBpID0gMCxcbiAgICAgIGxlbiA9IHN0ci5sZW5ndGg7XG5cbiAgZm9yICg7IGxlbiA+PSA0OyArK2ksIGxlbiAtPSA0KSB7XG4gICAgayA9IHN0ci5jaGFyQ29kZUF0KGkpICYgMHhmZiB8IChzdHIuY2hhckNvZGVBdCgrK2kpICYgMHhmZikgPDwgOCB8IChzdHIuY2hhckNvZGVBdCgrK2kpICYgMHhmZikgPDwgMTYgfCAoc3RyLmNoYXJDb2RlQXQoKytpKSAmIDB4ZmYpIDw8IDI0O1xuICAgIGsgPVxuICAgIC8qIE1hdGguaW11bChrLCBtKTogKi9cbiAgICAoayAmIDB4ZmZmZikgKiAweDViZDFlOTk1ICsgKChrID4+PiAxNikgKiAweGU5OTUgPDwgMTYpO1xuICAgIGsgXj1cbiAgICAvKiBrID4+PiByOiAqL1xuICAgIGsgPj4+IDI0O1xuICAgIGggPVxuICAgIC8qIE1hdGguaW11bChrLCBtKTogKi9cbiAgICAoayAmIDB4ZmZmZikgKiAweDViZDFlOTk1ICsgKChrID4+PiAxNikgKiAweGU5OTUgPDwgMTYpIF5cbiAgICAvKiBNYXRoLmltdWwoaCwgbSk6ICovXG4gICAgKGggJiAweGZmZmYpICogMHg1YmQxZTk5NSArICgoaCA+Pj4gMTYpICogMHhlOTk1IDw8IDE2KTtcbiAgfSAvLyBIYW5kbGUgdGhlIGxhc3QgZmV3IGJ5dGVzIG9mIHRoZSBpbnB1dCBhcnJheVxuXG5cbiAgc3dpdGNoIChsZW4pIHtcbiAgICBjYXNlIDM6XG4gICAgICBoIF49IChzdHIuY2hhckNvZGVBdChpICsgMikgJiAweGZmKSA8PCAxNjtcblxuICAgIGNhc2UgMjpcbiAgICAgIGggXj0gKHN0ci5jaGFyQ29kZUF0KGkgKyAxKSAmIDB4ZmYpIDw8IDg7XG5cbiAgICBjYXNlIDE6XG4gICAgICBoIF49IHN0ci5jaGFyQ29kZUF0KGkpICYgMHhmZjtcbiAgICAgIGggPVxuICAgICAgLyogTWF0aC5pbXVsKGgsIG0pOiAqL1xuICAgICAgKGggJiAweGZmZmYpICogMHg1YmQxZTk5NSArICgoaCA+Pj4gMTYpICogMHhlOTk1IDw8IDE2KTtcbiAgfSAvLyBEbyBhIGZldyBmaW5hbCBtaXhlcyBvZiB0aGUgaGFzaCB0byBlbnN1cmUgdGhlIGxhc3QgZmV3XG4gIC8vIGJ5dGVzIGFyZSB3ZWxsLWluY29ycG9yYXRlZC5cblxuXG4gIGggXj0gaCA+Pj4gMTM7XG4gIGggPVxuICAvKiBNYXRoLmltdWwoaCwgbSk6ICovXG4gIChoICYgMHhmZmZmKSAqIDB4NWJkMWU5OTUgKyAoKGggPj4+IDE2KSAqIDB4ZTk5NSA8PCAxNik7XG4gIHJldHVybiAoKGggXiBoID4+PiAxNSkgPj4+IDApLnRvU3RyaW5nKDM2KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgbXVybXVyMjsiLCJ2YXIgdW5pdGxlc3NLZXlzID0ge1xuICBhbmltYXRpb25JdGVyYXRpb25Db3VudDogMSxcbiAgYm9yZGVySW1hZ2VPdXRzZXQ6IDEsXG4gIGJvcmRlckltYWdlU2xpY2U6IDEsXG4gIGJvcmRlckltYWdlV2lkdGg6IDEsXG4gIGJveEZsZXg6IDEsXG4gIGJveEZsZXhHcm91cDogMSxcbiAgYm94T3JkaW5hbEdyb3VwOiAxLFxuICBjb2x1bW5Db3VudDogMSxcbiAgY29sdW1uczogMSxcbiAgZmxleDogMSxcbiAgZmxleEdyb3c6IDEsXG4gIGZsZXhQb3NpdGl2ZTogMSxcbiAgZmxleFNocmluazogMSxcbiAgZmxleE5lZ2F0aXZlOiAxLFxuICBmbGV4T3JkZXI6IDEsXG4gIGdyaWRSb3c6IDEsXG4gIGdyaWRSb3dFbmQ6IDEsXG4gIGdyaWRSb3dTcGFuOiAxLFxuICBncmlkUm93U3RhcnQ6IDEsXG4gIGdyaWRDb2x1bW46IDEsXG4gIGdyaWRDb2x1bW5FbmQ6IDEsXG4gIGdyaWRDb2x1bW5TcGFuOiAxLFxuICBncmlkQ29sdW1uU3RhcnQ6IDEsXG4gIG1zR3JpZFJvdzogMSxcbiAgbXNHcmlkUm93U3BhbjogMSxcbiAgbXNHcmlkQ29sdW1uOiAxLFxuICBtc0dyaWRDb2x1bW5TcGFuOiAxLFxuICBmb250V2VpZ2h0OiAxLFxuICBsaW5lSGVpZ2h0OiAxLFxuICBvcGFjaXR5OiAxLFxuICBvcmRlcjogMSxcbiAgb3JwaGFuczogMSxcbiAgdGFiU2l6ZTogMSxcbiAgd2lkb3dzOiAxLFxuICB6SW5kZXg6IDEsXG4gIHpvb206IDEsXG4gIFdlYmtpdExpbmVDbGFtcDogMSxcbiAgLy8gU1ZHLXJlbGF0ZWQgcHJvcGVydGllc1xuICBmaWxsT3BhY2l0eTogMSxcbiAgZmxvb2RPcGFjaXR5OiAxLFxuICBzdG9wT3BhY2l0eTogMSxcbiAgc3Ryb2tlRGFzaGFycmF5OiAxLFxuICBzdHJva2VEYXNob2Zmc2V0OiAxLFxuICBzdHJva2VNaXRlcmxpbWl0OiAxLFxuICBzdHJva2VPcGFjaXR5OiAxLFxuICBzdHJva2VXaWR0aDogMVxufTtcbmV4cG9ydCBkZWZhdWx0IHVuaXRsZXNzS2V5czsiLCJpbXBvcnQgaGFzaFN0cmluZyBmcm9tICdAZW1vdGlvbi9oYXNoJztcbmltcG9ydCB1bml0bGVzcyBmcm9tICdAZW1vdGlvbi91bml0bGVzcyc7XG5pbXBvcnQgbWVtb2l6ZSBmcm9tICdAZW1vdGlvbi9tZW1vaXplJztcbnZhciBJTExFR0FMX0VTQ0FQRV9TRVFVRU5DRV9FUlJPUiA9IFwiWW91IGhhdmUgaWxsZWdhbCBlc2NhcGUgc2VxdWVuY2UgaW4geW91ciB0ZW1wbGF0ZSBsaXRlcmFsLCBtb3N0IGxpa2VseSBpbnNpZGUgY29udGVudCdzIHByb3BlcnR5IHZhbHVlLlxcbkJlY2F1c2UgeW91IHdyaXRlIHlvdXIgQ1NTIGluc2lkZSBhIEphdmFTY3JpcHQgc3RyaW5nIHlvdSBhY3R1YWxseSBoYXZlIHRvIGRvIGRvdWJsZSBlc2NhcGluZywgc28gZm9yIGV4YW1wbGUgXFxcImNvbnRlbnQ6ICdcXFxcMDBkNyc7XFxcIiBzaG91bGQgYmVjb21lIFxcXCJjb250ZW50OiAnXFxcXFxcXFwwMGQ3JztcXFwiLlxcbllvdSBjYW4gcmVhZCBtb3JlIGFib3V0IHRoaXMgaGVyZTpcXG5odHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9UZW1wbGF0ZV9saXRlcmFscyNFUzIwMThfcmV2aXNpb25fb2ZfaWxsZWdhbF9lc2NhcGVfc2VxdWVuY2VzXCI7XG52YXIgVU5ERUZJTkVEX0FTX09CSkVDVF9LRVlfRVJST1IgPSBcIllvdSBoYXZlIHBhc3NlZCBpbiBmYWxzeSB2YWx1ZSBhcyBzdHlsZSBvYmplY3QncyBrZXkgKGNhbiBoYXBwZW4gd2hlbiBpbiBleGFtcGxlIHlvdSBwYXNzIHVuZXhwb3J0ZWQgY29tcG9uZW50IGFzIGNvbXB1dGVkIGtleSkuXCI7XG52YXIgaHlwaGVuYXRlUmVnZXggPSAvW0EtWl18Xm1zL2c7XG52YXIgYW5pbWF0aW9uUmVnZXggPSAvX0VNT18oW15fXSs/KV8oW15dKj8pX0VNT18vZztcblxudmFyIGlzQ3VzdG9tUHJvcGVydHkgPSBmdW5jdGlvbiBpc0N1c3RvbVByb3BlcnR5KHByb3BlcnR5KSB7XG4gIHJldHVybiBwcm9wZXJ0eS5jaGFyQ29kZUF0KDEpID09PSA0NTtcbn07XG5cbnZhciBpc1Byb2Nlc3NhYmxlVmFsdWUgPSBmdW5jdGlvbiBpc1Byb2Nlc3NhYmxlVmFsdWUodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICE9IG51bGwgJiYgdHlwZW9mIHZhbHVlICE9PSAnYm9vbGVhbic7XG59O1xuXG52YXIgcHJvY2Vzc1N0eWxlTmFtZSA9IG1lbW9pemUoZnVuY3Rpb24gKHN0eWxlTmFtZSkge1xuICByZXR1cm4gaXNDdXN0b21Qcm9wZXJ0eShzdHlsZU5hbWUpID8gc3R5bGVOYW1lIDogc3R5bGVOYW1lLnJlcGxhY2UoaHlwaGVuYXRlUmVnZXgsICctJCYnKS50b0xvd2VyQ2FzZSgpO1xufSk7XG5cbnZhciBwcm9jZXNzU3R5bGVWYWx1ZSA9IGZ1bmN0aW9uIHByb2Nlc3NTdHlsZVZhbHVlKGtleSwgdmFsdWUpIHtcbiAgc3dpdGNoIChrZXkpIHtcbiAgICBjYXNlICdhbmltYXRpb24nOlxuICAgIGNhc2UgJ2FuaW1hdGlvbk5hbWUnOlxuICAgICAge1xuICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKGFuaW1hdGlvblJlZ2V4LCBmdW5jdGlvbiAobWF0Y2gsIHAxLCBwMikge1xuICAgICAgICAgICAgY3Vyc29yID0ge1xuICAgICAgICAgICAgICBuYW1lOiBwMSxcbiAgICAgICAgICAgICAgc3R5bGVzOiBwMixcbiAgICAgICAgICAgICAgbmV4dDogY3Vyc29yXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIHAxO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG4gIH1cblxuICBpZiAodW5pdGxlc3Nba2V5XSAhPT0gMSAmJiAhaXNDdXN0b21Qcm9wZXJ0eShrZXkpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicgJiYgdmFsdWUgIT09IDApIHtcbiAgICByZXR1cm4gdmFsdWUgKyAncHgnO1xuICB9XG5cbiAgcmV0dXJuIHZhbHVlO1xufTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIGNvbnRlbnRWYWx1ZVBhdHRlcm4gPSAvKGF0dHJ8Y2FsY3xjb3VudGVycz98dXJsKVxcKC87XG4gIHZhciBjb250ZW50VmFsdWVzID0gWydub3JtYWwnLCAnbm9uZScsICdjb3VudGVyJywgJ29wZW4tcXVvdGUnLCAnY2xvc2UtcXVvdGUnLCAnbm8tb3Blbi1xdW90ZScsICduby1jbG9zZS1xdW90ZScsICdpbml0aWFsJywgJ2luaGVyaXQnLCAndW5zZXQnXTtcbiAgdmFyIG9sZFByb2Nlc3NTdHlsZVZhbHVlID0gcHJvY2Vzc1N0eWxlVmFsdWU7XG4gIHZhciBtc1BhdHRlcm4gPSAvXi1tcy0vO1xuICB2YXIgaHlwaGVuUGF0dGVybiA9IC8tKC4pL2c7XG4gIHZhciBoeXBoZW5hdGVkQ2FjaGUgPSB7fTtcblxuICBwcm9jZXNzU3R5bGVWYWx1ZSA9IGZ1bmN0aW9uIHByb2Nlc3NTdHlsZVZhbHVlKGtleSwgdmFsdWUpIHtcbiAgICBpZiAoa2V5ID09PSAnY29udGVudCcpIHtcbiAgICAgIGlmICh0eXBlb2YgdmFsdWUgIT09ICdzdHJpbmcnIHx8IGNvbnRlbnRWYWx1ZXMuaW5kZXhPZih2YWx1ZSkgPT09IC0xICYmICFjb250ZW50VmFsdWVQYXR0ZXJuLnRlc3QodmFsdWUpICYmICh2YWx1ZS5jaGFyQXQoMCkgIT09IHZhbHVlLmNoYXJBdCh2YWx1ZS5sZW5ndGggLSAxKSB8fCB2YWx1ZS5jaGFyQXQoMCkgIT09ICdcIicgJiYgdmFsdWUuY2hhckF0KDApICE9PSBcIidcIikpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIllvdSBzZWVtIHRvIGJlIHVzaW5nIGEgdmFsdWUgZm9yICdjb250ZW50JyB3aXRob3V0IHF1b3RlcywgdHJ5IHJlcGxhY2luZyBpdCB3aXRoIGBjb250ZW50OiAnXFxcIlwiICsgdmFsdWUgKyBcIlxcXCInYFwiKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgcHJvY2Vzc2VkID0gb2xkUHJvY2Vzc1N0eWxlVmFsdWUoa2V5LCB2YWx1ZSk7XG5cbiAgICBpZiAocHJvY2Vzc2VkICE9PSAnJyAmJiAhaXNDdXN0b21Qcm9wZXJ0eShrZXkpICYmIGtleS5pbmRleE9mKCctJykgIT09IC0xICYmIGh5cGhlbmF0ZWRDYWNoZVtrZXldID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGh5cGhlbmF0ZWRDYWNoZVtrZXldID0gdHJ1ZTtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJVc2luZyBrZWJhYi1jYXNlIGZvciBjc3MgcHJvcGVydGllcyBpbiBvYmplY3RzIGlzIG5vdCBzdXBwb3J0ZWQuIERpZCB5b3UgbWVhbiBcIiArIGtleS5yZXBsYWNlKG1zUGF0dGVybiwgJ21zLScpLnJlcGxhY2UoaHlwaGVuUGF0dGVybiwgZnVuY3Rpb24gKHN0ciwgX2NoYXIpIHtcbiAgICAgICAgcmV0dXJuIF9jaGFyLnRvVXBwZXJDYXNlKCk7XG4gICAgICB9KSArIFwiP1wiKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcHJvY2Vzc2VkO1xuICB9O1xufVxuXG52YXIgc2hvdWxkV2FybkFib3V0SW50ZXJwb2xhdGluZ0NsYXNzTmFtZUZyb21Dc3MgPSB0cnVlO1xuXG5mdW5jdGlvbiBoYW5kbGVJbnRlcnBvbGF0aW9uKG1lcmdlZFByb3BzLCByZWdpc3RlcmVkLCBpbnRlcnBvbGF0aW9uLCBjb3VsZEJlU2VsZWN0b3JJbnRlcnBvbGF0aW9uKSB7XG4gIGlmIChpbnRlcnBvbGF0aW9uID09IG51bGwpIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICBpZiAoaW50ZXJwb2xhdGlvbi5fX2Vtb3Rpb25fc3R5bGVzICE9PSB1bmRlZmluZWQpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBpbnRlcnBvbGF0aW9uLnRvU3RyaW5nKCkgPT09ICdOT19DT01QT05FTlRfU0VMRUNUT1InKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NvbXBvbmVudCBzZWxlY3RvcnMgY2FuIG9ubHkgYmUgdXNlZCBpbiBjb25qdW5jdGlvbiB3aXRoIGJhYmVsLXBsdWdpbi1lbW90aW9uLicpO1xuICAgIH1cblxuICAgIHJldHVybiBpbnRlcnBvbGF0aW9uO1xuICB9XG5cbiAgc3dpdGNoICh0eXBlb2YgaW50ZXJwb2xhdGlvbikge1xuICAgIGNhc2UgJ2Jvb2xlYW4nOlxuICAgICAge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgICB9XG5cbiAgICBjYXNlICdvYmplY3QnOlxuICAgICAge1xuICAgICAgICBpZiAoaW50ZXJwb2xhdGlvbi5hbmltID09PSAxKSB7XG4gICAgICAgICAgY3Vyc29yID0ge1xuICAgICAgICAgICAgbmFtZTogaW50ZXJwb2xhdGlvbi5uYW1lLFxuICAgICAgICAgICAgc3R5bGVzOiBpbnRlcnBvbGF0aW9uLnN0eWxlcyxcbiAgICAgICAgICAgIG5leHQ6IGN1cnNvclxuICAgICAgICAgIH07XG4gICAgICAgICAgcmV0dXJuIGludGVycG9sYXRpb24ubmFtZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChpbnRlcnBvbGF0aW9uLnN0eWxlcyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgdmFyIG5leHQgPSBpbnRlcnBvbGF0aW9uLm5leHQ7XG5cbiAgICAgICAgICBpZiAobmV4dCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAvLyBub3QgdGhlIG1vc3QgZWZmaWNpZW50IHRoaW5nIGV2ZXIgYnV0IHRoaXMgaXMgYSBwcmV0dHkgcmFyZSBjYXNlXG4gICAgICAgICAgICAvLyBhbmQgdGhlcmUgd2lsbCBiZSB2ZXJ5IGZldyBpdGVyYXRpb25zIG9mIHRoaXMgZ2VuZXJhbGx5XG4gICAgICAgICAgICB3aGlsZSAobmV4dCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgIGN1cnNvciA9IHtcbiAgICAgICAgICAgICAgICBuYW1lOiBuZXh0Lm5hbWUsXG4gICAgICAgICAgICAgICAgc3R5bGVzOiBuZXh0LnN0eWxlcyxcbiAgICAgICAgICAgICAgICBuZXh0OiBjdXJzb3JcbiAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgbmV4dCA9IG5leHQubmV4dDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICB2YXIgc3R5bGVzID0gaW50ZXJwb2xhdGlvbi5zdHlsZXMgKyBcIjtcIjtcblxuICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGludGVycG9sYXRpb24ubWFwICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHN0eWxlcyArPSBpbnRlcnBvbGF0aW9uLm1hcDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gc3R5bGVzO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGNyZWF0ZVN0cmluZ0Zyb21PYmplY3QobWVyZ2VkUHJvcHMsIHJlZ2lzdGVyZWQsIGludGVycG9sYXRpb24pO1xuICAgICAgfVxuXG4gICAgY2FzZSAnZnVuY3Rpb24nOlxuICAgICAge1xuICAgICAgICBpZiAobWVyZ2VkUHJvcHMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIHZhciBwcmV2aW91c0N1cnNvciA9IGN1cnNvcjtcbiAgICAgICAgICB2YXIgcmVzdWx0ID0gaW50ZXJwb2xhdGlvbihtZXJnZWRQcm9wcyk7XG4gICAgICAgICAgY3Vyc29yID0gcHJldmlvdXNDdXJzb3I7XG4gICAgICAgICAgcmV0dXJuIGhhbmRsZUludGVycG9sYXRpb24obWVyZ2VkUHJvcHMsIHJlZ2lzdGVyZWQsIHJlc3VsdCwgY291bGRCZVNlbGVjdG9ySW50ZXJwb2xhdGlvbik7XG4gICAgICAgIH0gZWxzZSBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Z1bmN0aW9ucyB0aGF0IGFyZSBpbnRlcnBvbGF0ZWQgaW4gY3NzIGNhbGxzIHdpbGwgYmUgc3RyaW5naWZpZWQuXFxuJyArICdJZiB5b3Ugd2FudCB0byBoYXZlIGEgY3NzIGNhbGwgYmFzZWQgb24gcHJvcHMsIGNyZWF0ZSBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhIGNzcyBjYWxsIGxpa2UgdGhpc1xcbicgKyAnbGV0IGR5bmFtaWNTdHlsZSA9IChwcm9wcykgPT4gY3NzYGNvbG9yOiAke3Byb3BzLmNvbG9yfWBcXG4nICsgJ0l0IGNhbiBiZSBjYWxsZWQgZGlyZWN0bHkgd2l0aCBwcm9wcyBvciBpbnRlcnBvbGF0ZWQgaW4gYSBzdHlsZWQgY2FsbCBsaWtlIHRoaXNcXG4nICsgXCJsZXQgU29tZUNvbXBvbmVudCA9IHN0eWxlZCgnZGl2JylgJHtkeW5hbWljU3R5bGV9YFwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgY2FzZSAnc3RyaW5nJzpcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIHZhciBtYXRjaGVkID0gW107XG4gICAgICAgIHZhciByZXBsYWNlZCA9IGludGVycG9sYXRpb24ucmVwbGFjZShhbmltYXRpb25SZWdleCwgZnVuY3Rpb24gKG1hdGNoLCBwMSwgcDIpIHtcbiAgICAgICAgICB2YXIgZmFrZVZhck5hbWUgPSBcImFuaW1hdGlvblwiICsgbWF0Y2hlZC5sZW5ndGg7XG4gICAgICAgICAgbWF0Y2hlZC5wdXNoKFwiY29uc3QgXCIgKyBmYWtlVmFyTmFtZSArIFwiID0ga2V5ZnJhbWVzYFwiICsgcDIucmVwbGFjZSgvXkBrZXlmcmFtZXMgYW5pbWF0aW9uLVxcdysvLCAnJykgKyBcImBcIik7XG4gICAgICAgICAgcmV0dXJuIFwiJHtcIiArIGZha2VWYXJOYW1lICsgXCJ9XCI7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmIChtYXRjaGVkLmxlbmd0aCkge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ2BrZXlmcmFtZXNgIG91dHB1dCBnb3QgaW50ZXJwb2xhdGVkIGludG8gcGxhaW4gc3RyaW5nLCBwbGVhc2Ugd3JhcCBpdCB3aXRoIGBjc3NgLlxcblxcbicgKyAnSW5zdGVhZCBvZiBkb2luZyB0aGlzOlxcblxcbicgKyBbXS5jb25jYXQobWF0Y2hlZCwgW1wiYFwiICsgcmVwbGFjZWQgKyBcImBcIl0pLmpvaW4oJ1xcbicpICsgJ1xcblxcbllvdSBzaG91bGQgd3JhcCBpdCB3aXRoIGBjc3NgIGxpa2UgdGhpczpcXG5cXG4nICsgKFwiY3NzYFwiICsgcmVwbGFjZWQgKyBcImBcIikpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGJyZWFrO1xuICB9IC8vIGZpbmFsaXplIHN0cmluZyB2YWx1ZXMgKHJlZ3VsYXIgc3RyaW5ncyBhbmQgZnVuY3Rpb25zIGludGVycG9sYXRlZCBpbnRvIGNzcyBjYWxscylcblxuXG4gIGlmIChyZWdpc3RlcmVkID09IG51bGwpIHtcbiAgICByZXR1cm4gaW50ZXJwb2xhdGlvbjtcbiAgfVxuXG4gIHZhciBjYWNoZWQgPSByZWdpc3RlcmVkW2ludGVycG9sYXRpb25dO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGNvdWxkQmVTZWxlY3RvckludGVycG9sYXRpb24gJiYgc2hvdWxkV2FybkFib3V0SW50ZXJwb2xhdGluZ0NsYXNzTmFtZUZyb21Dc3MgJiYgY2FjaGVkICE9PSB1bmRlZmluZWQpIHtcbiAgICBjb25zb2xlLmVycm9yKCdJbnRlcnBvbGF0aW5nIGEgY2xhc3NOYW1lIGZyb20gY3NzYGAgaXMgbm90IHJlY29tbWVuZGVkIGFuZCB3aWxsIGNhdXNlIHByb2JsZW1zIHdpdGggY29tcG9zaXRpb24uXFxuJyArICdJbnRlcnBvbGF0aW5nIGEgY2xhc3NOYW1lIGZyb20gY3NzYGAgd2lsbCBiZSBjb21wbGV0ZWx5IHVuc3VwcG9ydGVkIGluIGEgZnV0dXJlIG1ham9yIHZlcnNpb24gb2YgRW1vdGlvbicpO1xuICAgIHNob3VsZFdhcm5BYm91dEludGVycG9sYXRpbmdDbGFzc05hbWVGcm9tQ3NzID0gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gY2FjaGVkICE9PSB1bmRlZmluZWQgJiYgIWNvdWxkQmVTZWxlY3RvckludGVycG9sYXRpb24gPyBjYWNoZWQgOiBpbnRlcnBvbGF0aW9uO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVTdHJpbmdGcm9tT2JqZWN0KG1lcmdlZFByb3BzLCByZWdpc3RlcmVkLCBvYmopIHtcbiAgdmFyIHN0cmluZyA9ICcnO1xuXG4gIGlmIChBcnJheS5pc0FycmF5KG9iaikpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG9iai5sZW5ndGg7IGkrKykge1xuICAgICAgc3RyaW5nICs9IGhhbmRsZUludGVycG9sYXRpb24obWVyZ2VkUHJvcHMsIHJlZ2lzdGVyZWQsIG9ialtpXSwgZmFsc2UpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBmb3IgKHZhciBfa2V5IGluIG9iaikge1xuICAgICAgdmFyIHZhbHVlID0gb2JqW19rZXldO1xuXG4gICAgICBpZiAodHlwZW9mIHZhbHVlICE9PSAnb2JqZWN0Jykge1xuICAgICAgICBpZiAocmVnaXN0ZXJlZCAhPSBudWxsICYmIHJlZ2lzdGVyZWRbdmFsdWVdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBzdHJpbmcgKz0gX2tleSArIFwie1wiICsgcmVnaXN0ZXJlZFt2YWx1ZV0gKyBcIn1cIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc1Byb2Nlc3NhYmxlVmFsdWUodmFsdWUpKSB7XG4gICAgICAgICAgc3RyaW5nICs9IHByb2Nlc3NTdHlsZU5hbWUoX2tleSkgKyBcIjpcIiArIHByb2Nlc3NTdHlsZVZhbHVlKF9rZXksIHZhbHVlKSArIFwiO1wiO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoX2tleSA9PT0gJ05PX0NPTVBPTkVOVF9TRUxFQ1RPUicgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ29tcG9uZW50IHNlbGVjdG9ycyBjYW4gb25seSBiZSB1c2VkIGluIGNvbmp1bmN0aW9uIHdpdGggYmFiZWwtcGx1Z2luLWVtb3Rpb24uJyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkgJiYgdHlwZW9mIHZhbHVlWzBdID09PSAnc3RyaW5nJyAmJiAocmVnaXN0ZXJlZCA9PSBudWxsIHx8IHJlZ2lzdGVyZWRbdmFsdWVbMF1dID09PSB1bmRlZmluZWQpKSB7XG4gICAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IHZhbHVlLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgaWYgKGlzUHJvY2Vzc2FibGVWYWx1ZSh2YWx1ZVtfaV0pKSB7XG4gICAgICAgICAgICAgIHN0cmluZyArPSBwcm9jZXNzU3R5bGVOYW1lKF9rZXkpICsgXCI6XCIgKyBwcm9jZXNzU3R5bGVWYWx1ZShfa2V5LCB2YWx1ZVtfaV0pICsgXCI7XCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBpbnRlcnBvbGF0ZWQgPSBoYW5kbGVJbnRlcnBvbGF0aW9uKG1lcmdlZFByb3BzLCByZWdpc3RlcmVkLCB2YWx1ZSwgZmFsc2UpO1xuXG4gICAgICAgICAgc3dpdGNoIChfa2V5KSB7XG4gICAgICAgICAgICBjYXNlICdhbmltYXRpb24nOlxuICAgICAgICAgICAgY2FzZSAnYW5pbWF0aW9uTmFtZSc6XG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzdHJpbmcgKz0gcHJvY2Vzc1N0eWxlTmFtZShfa2V5KSArIFwiOlwiICsgaW50ZXJwb2xhdGVkICsgXCI7XCI7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIF9rZXkgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFVOREVGSU5FRF9BU19PQkpFQ1RfS0VZX0VSUk9SKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBzdHJpbmcgKz0gX2tleSArIFwie1wiICsgaW50ZXJwb2xhdGVkICsgXCJ9XCI7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gc3RyaW5nO1xufVxuXG52YXIgbGFiZWxQYXR0ZXJuID0gL2xhYmVsOlxccyooW15cXHM7XFxue10rKVxccyo7L2c7XG52YXIgc291cmNlTWFwUGF0dGVybjtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgc291cmNlTWFwUGF0dGVybiA9IC9cXC9cXCojXFxzc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uXFwvanNvbjtcXFMrXFxzK1xcKlxcLy87XG59IC8vIHRoaXMgaXMgdGhlIGN1cnNvciBmb3Iga2V5ZnJhbWVzXG4vLyBrZXlmcmFtZXMgYXJlIHN0b3JlZCBvbiB0aGUgU2VyaWFsaXplZFN0eWxlcyBvYmplY3QgYXMgYSBsaW5rZWQgbGlzdFxuXG5cbnZhciBjdXJzb3I7XG5cbnZhciBzZXJpYWxpemVTdHlsZXMgPSBmdW5jdGlvbiBzZXJpYWxpemVTdHlsZXMoYXJncywgcmVnaXN0ZXJlZCwgbWVyZ2VkUHJvcHMpIHtcbiAgaWYgKGFyZ3MubGVuZ3RoID09PSAxICYmIHR5cGVvZiBhcmdzWzBdID09PSAnb2JqZWN0JyAmJiBhcmdzWzBdICE9PSBudWxsICYmIGFyZ3NbMF0uc3R5bGVzICE9PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gYXJnc1swXTtcbiAgfVxuXG4gIHZhciBzdHJpbmdNb2RlID0gdHJ1ZTtcbiAgdmFyIHN0eWxlcyA9ICcnO1xuICBjdXJzb3IgPSB1bmRlZmluZWQ7XG4gIHZhciBzdHJpbmdzID0gYXJnc1swXTtcblxuICBpZiAoc3RyaW5ncyA9PSBudWxsIHx8IHN0cmluZ3MucmF3ID09PSB1bmRlZmluZWQpIHtcbiAgICBzdHJpbmdNb2RlID0gZmFsc2U7XG4gICAgc3R5bGVzICs9IGhhbmRsZUludGVycG9sYXRpb24obWVyZ2VkUHJvcHMsIHJlZ2lzdGVyZWQsIHN0cmluZ3MsIGZhbHNlKTtcbiAgfSBlbHNlIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBzdHJpbmdzWzBdID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoSUxMRUdBTF9FU0NBUEVfU0VRVUVOQ0VfRVJST1IpO1xuICAgIH1cblxuICAgIHN0eWxlcyArPSBzdHJpbmdzWzBdO1xuICB9IC8vIHdlIHN0YXJ0IGF0IDEgc2luY2Ugd2UndmUgYWxyZWFkeSBoYW5kbGVkIHRoZSBmaXJzdCBhcmdcblxuXG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJncy5sZW5ndGg7IGkrKykge1xuICAgIHN0eWxlcyArPSBoYW5kbGVJbnRlcnBvbGF0aW9uKG1lcmdlZFByb3BzLCByZWdpc3RlcmVkLCBhcmdzW2ldLCBzdHlsZXMuY2hhckNvZGVBdChzdHlsZXMubGVuZ3RoIC0gMSkgPT09IDQ2KTtcblxuICAgIGlmIChzdHJpbmdNb2RlKSB7XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBzdHJpbmdzW2ldID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihJTExFR0FMX0VTQ0FQRV9TRVFVRU5DRV9FUlJPUik7XG4gICAgICB9XG5cbiAgICAgIHN0eWxlcyArPSBzdHJpbmdzW2ldO1xuICAgIH1cbiAgfVxuXG4gIHZhciBzb3VyY2VNYXA7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBzdHlsZXMgPSBzdHlsZXMucmVwbGFjZShzb3VyY2VNYXBQYXR0ZXJuLCBmdW5jdGlvbiAobWF0Y2gpIHtcbiAgICAgIHNvdXJjZU1hcCA9IG1hdGNoO1xuICAgICAgcmV0dXJuICcnO1xuICAgIH0pO1xuICB9IC8vIHVzaW5nIGEgZ2xvYmFsIHJlZ2V4IHdpdGggLmV4ZWMgaXMgc3RhdGVmdWwgc28gbGFzdEluZGV4IGhhcyB0byBiZSByZXNldCBlYWNoIHRpbWVcblxuXG4gIGxhYmVsUGF0dGVybi5sYXN0SW5kZXggPSAwO1xuICB2YXIgaWRlbnRpZmllck5hbWUgPSAnJztcbiAgdmFyIG1hdGNoOyAvLyBodHRwczovL2VzYmVuY2guY29tL2JlbmNoLzViODA5YzJjZjI5NDk4MDBhMGY2MWZiNVxuXG4gIHdoaWxlICgobWF0Y2ggPSBsYWJlbFBhdHRlcm4uZXhlYyhzdHlsZXMpKSAhPT0gbnVsbCkge1xuICAgIGlkZW50aWZpZXJOYW1lICs9ICctJyArIC8vICRGbG93Rml4TWUgd2Uga25vdyBpdCdzIG5vdCBudWxsXG4gICAgbWF0Y2hbMV07XG4gIH1cblxuICB2YXIgbmFtZSA9IGhhc2hTdHJpbmcoc3R5bGVzKSArIGlkZW50aWZpZXJOYW1lO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gJEZsb3dGaXhNZSBTZXJpYWxpemVkU3R5bGVzIHR5cGUgZG9lc24ndCBoYXZlIHRvU3RyaW5nIHByb3BlcnR5IChhbmQgd2UgZG9uJ3Qgd2FudCB0byBhZGQgaXQpXG4gICAgcmV0dXJuIHtcbiAgICAgIG5hbWU6IG5hbWUsXG4gICAgICBzdHlsZXM6IHN0eWxlcyxcbiAgICAgIG1hcDogc291cmNlTWFwLFxuICAgICAgbmV4dDogY3Vyc29yLFxuICAgICAgdG9TdHJpbmc6IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gXCJZb3UgaGF2ZSB0cmllZCB0byBzdHJpbmdpZnkgb2JqZWN0IHJldHVybmVkIGZyb20gYGNzc2AgZnVuY3Rpb24uIEl0IGlzbid0IHN1cHBvc2VkIHRvIGJlIHVzZWQgZGlyZWN0bHkgKGUuZy4gYXMgdmFsdWUgb2YgdGhlIGBjbGFzc05hbWVgIHByb3ApLCBidXQgcmF0aGVyIGhhbmRlZCB0byBlbW90aW9uIHNvIGl0IGNhbiBoYW5kbGUgaXQgKGUuZy4gYXMgdmFsdWUgb2YgYGNzc2AgcHJvcCkuXCI7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgbmFtZTogbmFtZSxcbiAgICBzdHlsZXM6IHN0eWxlcyxcbiAgICBuZXh0OiBjdXJzb3JcbiAgfTtcbn07XG5cbmV4cG9ydCB7IHNlcmlhbGl6ZVN0eWxlcyB9OyIsInZhciBpc0Jyb3dzZXIgPSBcIm9iamVjdFwiICE9PSAndW5kZWZpbmVkJztcblxuZnVuY3Rpb24gZ2V0UmVnaXN0ZXJlZFN0eWxlcyhyZWdpc3RlcmVkLCByZWdpc3RlcmVkU3R5bGVzLCBjbGFzc05hbWVzKSB7XG4gIHZhciByYXdDbGFzc05hbWUgPSAnJztcbiAgY2xhc3NOYW1lcy5zcGxpdCgnICcpLmZvckVhY2goZnVuY3Rpb24gKGNsYXNzTmFtZSkge1xuICAgIGlmIChyZWdpc3RlcmVkW2NsYXNzTmFtZV0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgcmVnaXN0ZXJlZFN0eWxlcy5wdXNoKHJlZ2lzdGVyZWRbY2xhc3NOYW1lXSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJhd0NsYXNzTmFtZSArPSBjbGFzc05hbWUgKyBcIiBcIjtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gcmF3Q2xhc3NOYW1lO1xufVxuXG52YXIgaW5zZXJ0U3R5bGVzID0gZnVuY3Rpb24gaW5zZXJ0U3R5bGVzKGNhY2hlLCBzZXJpYWxpemVkLCBpc1N0cmluZ1RhZykge1xuICB2YXIgY2xhc3NOYW1lID0gY2FjaGUua2V5ICsgXCItXCIgKyBzZXJpYWxpemVkLm5hbWU7XG5cbiAgaWYgKCAvLyB3ZSBvbmx5IG5lZWQgdG8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIHJlZ2lzdGVyZWQgY2FjaGUgaWYgdGhlXG4gIC8vIGNsYXNzIG5hbWUgY291bGQgYmUgdXNlZCBmdXJ0aGVyIGRvd25cbiAgLy8gdGhlIHRyZWUgYnV0IGlmIGl0J3MgYSBzdHJpbmcgdGFnLCB3ZSBrbm93IGl0IHdvbid0XG4gIC8vIHNvIHdlIGRvbid0IGhhdmUgdG8gYWRkIGl0IHRvIHJlZ2lzdGVyZWQgY2FjaGUuXG4gIC8vIHRoaXMgaW1wcm92ZXMgbWVtb3J5IHVzYWdlIHNpbmNlIHdlIGNhbiBhdm9pZCBzdG9yaW5nIHRoZSB3aG9sZSBzdHlsZSBzdHJpbmdcbiAgKGlzU3RyaW5nVGFnID09PSBmYWxzZSB8fCAvLyB3ZSBuZWVkIHRvIGFsd2F5cyBzdG9yZSBpdCBpZiB3ZSdyZSBpbiBjb21wYXQgbW9kZSBhbmRcbiAgLy8gaW4gbm9kZSBzaW5jZSBlbW90aW9uLXNlcnZlciByZWxpZXMgb24gd2hldGhlciBhIHN0eWxlIGlzIGluXG4gIC8vIHRoZSByZWdpc3RlcmVkIGNhY2hlIHRvIGtub3cgd2hldGhlciBhIHN0eWxlIGlzIGdsb2JhbCBvciBub3RcbiAgLy8gYWxzbywgbm90ZSB0aGF0IHRoaXMgY2hlY2sgd2lsbCBiZSBkZWFkIGNvZGUgZWxpbWluYXRlZCBpbiB0aGUgYnJvd3NlclxuICBpc0Jyb3dzZXIgPT09IGZhbHNlICYmIGNhY2hlLmNvbXBhdCAhPT0gdW5kZWZpbmVkKSAmJiBjYWNoZS5yZWdpc3RlcmVkW2NsYXNzTmFtZV0gPT09IHVuZGVmaW5lZCkge1xuICAgIGNhY2hlLnJlZ2lzdGVyZWRbY2xhc3NOYW1lXSA9IHNlcmlhbGl6ZWQuc3R5bGVzO1xuICB9XG5cbiAgaWYgKGNhY2hlLmluc2VydGVkW3NlcmlhbGl6ZWQubmFtZV0gPT09IHVuZGVmaW5lZCkge1xuICAgIHZhciBjdXJyZW50ID0gc2VyaWFsaXplZDtcblxuICAgIGRvIHtcbiAgICAgIHZhciBtYXliZVN0eWxlcyA9IGNhY2hlLmluc2VydChcIi5cIiArIGNsYXNzTmFtZSwgY3VycmVudCwgY2FjaGUuc2hlZXQsIHRydWUpO1xuICAgICAgY3VycmVudCA9IGN1cnJlbnQubmV4dDtcbiAgICB9IHdoaWxlIChjdXJyZW50ICE9PSB1bmRlZmluZWQpO1xuICB9XG59O1xuXG5leHBvcnQgeyBnZXRSZWdpc3RlcmVkU3R5bGVzLCBpbnNlcnRTdHlsZXMgfTsiLCJleHBvcnQgY29uc3Qgc3ZnU3R5bGVzID0gKGFkZGl0aW9uYWxfc3R5bGVzID0ge30pID0+IHtcbiAgcmV0dXJuIHtcbiAgICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyxcbiAgICB2ZXJ0aWNhbEFsaWduOiAnbWlkZGxlJyxcbiAgICB3aWR0aDogJzE2cHgnLFxuICAgIGhlaWdodDogJzE2cHgnLFxuICAgIG1hcmdpblJpZ2h0OiAnNXB4JyxcbiAgICBmaWxsOiAnY3VycmVudENvbG9yJyxcbiAgICBsaW5lSGVpZ2h0OiAnMWVtJyxcbiAgICAuLi5hZGRpdGlvbmFsX3N0eWxlc1xuICB9XG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBzdmdTdHlsZXMgfSBmcm9tICcuL3N0eWxlJ1xuXG5leHBvcnQgY29uc3QgQWJvdXQgPSBzdHlsZXMgPT4ge1xuICByZXR1cm4gKFxuICAgIDxzdmdcbiAgICAgIHN0eWxlPXtzdmdTdHlsZXMoc3R5bGVzKX1cbiAgICAgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuICAgICAgdmlld0JveD1cIjAgMCAyNSAyNVwiPlxuICAgICAgPHBhdGggZD1cIk0yMS42NTYsMjAuMDgzYy0wLjAxNi0wLjAxMS0xLjIwNi0wLjg0Mi0xLjk2LTIuNDAzYzEuMjA1LTEuNDM1LDEuOTMtMy4yMjksMS45My01LjE4MyBjMC00LjY5NC00LjE0MS04LjUtOS4yNS04LjVzLTkuMjUsMy44MDYtOS4yNSw4LjVzNC4xNDEsOC41LDkuMjUsOC41YzEuNDYsMCwyLjgzNS0wLjMxOSw0LjA2My0wLjg3MyBjMS4wNTQsMC40NywyLjU0NSwwLjg3OCw0LjU1MSwwLjg3OGMwLjEzMSwwLDAuMjY0LTAuMDAyLDAuMzk5LTAuMDA1YzAuMjE3LTAuMDA2LDAuNDA1LTAuMTUxLDAuNDY2LTAuMzU5IEMyMS45MTYsMjAuNDMsMjEuODM1LDIwLjIwNSwyMS42NTYsMjAuMDgzeiBNMTAuMjYxLDEwLjU1NEw5LjAxMyw5LjE1M2MwLjgxNi0wLjk1NSwyLjA0Ny0xLjQ5MywzLjM3Mi0xLjQ5MyBjMS45ODYsMCwzLjIwMywxLjAwMSwzLjIwMywyLjQzM2MwLDIuMjQ4LTIuNTcxLDIuNDE3LTIuNTcxLDMuNzFjMCwwLjExOSwwLjAzLDAuMjQxLDAuMDc3LDAuMzUxSDExLjE5IGMtMC4wNDktMC4xNzgtMC4wODMtMC4zNjUtMC4wODMtMC41NjdjMC0xLjgzMiwyLjI0OC0yLjA0OCwyLjI0OC0zLjExYzAtMC40NzctMC4zNTQtMC44NzctMS4yMDEtMC44NzcgQzExLjM4NSw5LjU5OSwxMC43MzgsOS45ODQsMTAuMjYxLDEwLjU1NHogTTEyLjM1NCwxOC4yNTJjLTAuNjc3LDAtMS4yNDctMC41Ny0xLjI0Ny0xLjI0N2MwLTAuNjc3LDAuNTctMS4yNDcsMS4yNDctMS4yNDcgYzAuNjc3LDAsMS4yNDcsMC41NywxLjI0NywxLjI0N0MxMy42MDEsMTcuNjgyLDEzLjAzMiwxOC4yNTIsMTIuMzU0LDE4LjI1MnpcIiAvPlxuICAgIDwvc3ZnPlxuICApXG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBzdmdTdHlsZXMgfSBmcm9tICcuL3N0eWxlJ1xuXG5leHBvcnQgY29uc3QgQW5kcm9pZExvZ28gPSBzdHlsZXMgPT4ge1xuICByZXR1cm4gKFxuICAgIDxzdmcgc3R5bGU9e3N2Z1N0eWxlcyhzdHlsZXMpfSB2aWV3Qm94PVwiMCAwIDgxLjMgOTZcIj5cbiAgICAgIDxwYXRoIGQ9XCJNNS45IDMxLjFBNS45IDUuOSAwIDAgMCAwIDM3djI0LjhhNS45IDUuOSAwIDEgMCAxMS44IDBWMzdhNS45IDUuOSAwIDAgMC01LjktNS45TTUzLjcgOC44bDQuMS03LjZhLjgwNjIyNTc3LjgwNjIyNTc3IDAgMSAwLTEuNC0uOEw1Mi4yIDhBMjguOSAyOC45IDAgMCAwIDI5IDhMMjQuOC40YS44MDYyMjU3Ny44MDYyMjU3NyAwIDEgMC0xLjQuOGw0LjEgNy41QzE5LjQgMTIuOSAxMy45IDIwLjkgMTMuOSAzMGg1My40YzAtOS4yLTUuNS0xNy4xLTEzLjYtMjEuM00yOC41IDIwLjVhMi4yIDIuMiAwIDEgMSAyLjItMi4yIDIuMiAyLjIgMCAwIDEtMi4yIDIuMm0yNC4zIDBhMi4yIDIuMiAwIDEgMSAyLjItMi4yIDIuMiAyLjIgMCAwIDEtMi4yIDIuMk0xNC4yIDMyLjJ2MzguNWE2LjMgNi4zIDAgMCAwIDYuMyA2LjNoNC4zdjEzLjFhNS45IDUuOSAwIDEgMCAxMS44IDBWNzdoOHYxMy4xYTUuOTUgNS45NSAwIDEgMCAxMS45IDBWNzdoNC4zYTYuMyA2LjMgMCAwIDAgNi4zLTYuM1YzMi4yaC01M3pNODEuMyAzN2E1LjkgNS45IDAgMSAwLTExLjggMHYyNC44YTUuOSA1LjkgMCAxIDAgMTEuOCAwVjM3elwiIC8+XG4gICAgPC9zdmc+XG4gIClcbn1cbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IHN2Z1N0eWxlcyB9IGZyb20gJy4vc3R5bGUnXG5cbmV4cG9ydCBjb25zdCBBcmNoaXZlID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxzdmcgc3R5bGU9e3N2Z1N0eWxlcygpfSB2aWV3Qm94PVwiMCAwIDE2IDE2XCI+XG4gICAgICA8cGF0aCBkPVwiTTEsMTQuNjY2NjY2NyBMMSw0IEwxNSw0IEwxNSwxNC42NjY2NjY3IEMxNSwxNS40MDMwNDYzIDE0LjQwMzA0NjMsMTYgMTMuNjY2NjY2NywxNiBMMi4zMzMzMzMzMywxNiBDMS41OTY5NTM2NywxNiAxLDE1LjQwMzA0NjMgMSwxNC42NjY2NjY3IFogTTEsMi4yNjkyOTU4NmUtMTMgTDE1LDIuMjY5Mjk1ODZlLTEzIEMxNS41NTIyODQ3LDIuMjY4MjgxMzNlLTEzIDE2LDAuNDQ3NzE1MjUgMTYsMSBDMTYsMS41NTIyODQ3NSAxNS41NTIyODQ3LDIgMTUsMiBMMSwyIEMwLjQ0NzcxNTI1LDIgNS43MDIyMDc2NWUtMTQsMS41NTIyODQ3NSA1LjY5NTQ0NDEyZS0xNCwxIEM1LjY5OTc4MjgxZS0xNCwwLjQ0NzcxNTI1IDAuNDQ3NzE1MjUsMi4yNzAzMTAzOWUtMTMgMSwyLjI2OTI5NTg2ZS0xMyBaIE0xMC4zNDE0OTU0LDcuMjQ3NDIzMzEgTDcuMDQ1NTcwODUsMTAuMTMxMzU3MyBMNi4yMDcxMDY3OCw5LjI5Mjg5MzIyIEM1LjgxNjU4MjQ5LDguOTAyMzY4OTMgNS4xODM0MTc1MSw4LjkwMjM2ODkzIDQuNzkyODkzMjIsOS4yOTI4OTMyMiBDNC40MDIzNjg5Myw5LjY4MzQxNzUxIDQuNDAyMzY4OTMsMTAuMzE2NTgyNSA0Ljc5Mjg5MzIyLDEwLjcwNzEwNjggTDYuMjkyODkzMjIsMTIuMjA3MTA2OCBDNi42NjUxNTkzOSwxMi41NzkzNzMgNy4yNjIzMDAxNywxMi41OTkyNTU2IDcuNjU4NTA0NjEsMTIuMjUyNTc2NyBMMTEuNjU4NTA0Niw4Ljc1MjU3NjY5IEMxMi4wNzQxNDEyLDguMzg4ODk0NjQgMTIuMTE2MjU4Nyw3Ljc1NzEzMjAyIDExLjc1MjU3NjcsNy4zNDE0OTUzOSBDMTEuMzg4ODk0Niw2LjkyNTg1ODc2IDEwLjc1NzEzMiw2Ljg4Mzc0MTI1IDEwLjM0MTQ5NTQsNy4yNDc0MjMzMSBaXCIgaWQ9XCJDb21iaW5lZC1TaGFwZVwiPjwvcGF0aD5cbiAgICA8L3N2Zz5cbiAgKVxufVxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgc3ZnU3R5bGVzIH0gZnJvbSAnLi9zdHlsZSdcblxuZXhwb3J0IGNvbnN0IENhcnJldERvd24gPSBzdHlsZXMgPT4ge1xuICByZXR1cm4gKFxuICAgIDxzdmdcbiAgICAgIHN0eWxlPXtzdmdTdHlsZXMoc3R5bGVzKX1cbiAgICAgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuICAgICAgdmlld0JveD1cIjAgMCAxNCAxNlwiPlxuICAgICAgPHBhdGggZD1cIk0xMy42NCw0LjMzYTEuMzIsMS4zMiwwLDAsMC0xLjc1LDBMNyw5LjI2LDIuMTEsNC4zM2ExLjMyLDEuMzIsMCwwLDAtMS43NSwwLDEuMDcsMS4wNywwLDAsMCwwLDEuNkw2LDExLjY3QTEuMjksMS4yOSwwLDAsMCw3LDEyYTEuMjksMS4yOSwwLDAsMCwxLS4zM2w1LjY5LTUuNzRBMS4wNywxLjA3LDAsMCwwLDEzLjY0LDQuMzNaXCIgLz5cbiAgICA8L3N2Zz5cbiAgKVxufVxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgc3ZnU3R5bGVzIH0gZnJvbSAnLi9zdHlsZSdcblxuZXhwb3J0IGNvbnN0IEhpZGUgPSBzdHlsZXMgPT4ge1xuICByZXR1cm4gKFxuICAgIDxzdmdcbiAgICAgIHN0eWxlPXtzdmdTdHlsZXMoc3R5bGVzKX1cbiAgICAgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuICAgICAgdmlld0JveD1cIjAgMCAyNSAyNVwiPlxuICAgICAgPHBhdGggZD1cIk0xNC44NTQsMTIuNTM2bDMuODE0LTMuODI1YzAuNjQ0LTAuNjQ1LDAuNjQzLTEuNjg5LTAuMDAzLTIuMzMzcy0xLjY4OS0wLjY0My0yLjMzMywwLjAwMyBsLTMuODEsMy44MThMOC42NjgsNi4zMzVDOC4wMjQsNS42ODksNi45OCw1LjY4OCw2LjMzNSw2LjMzMlM1LjY4OCw4LjAxOSw2LjMzMiw4LjY2NWwzLjg2LDMuODcxbC0zLjc0MywzLjc1MyBjLTAuNjQ0LDAuNjQ1LTAuNjQzLDEuNjg5LDAuMDAzLDIuMzMzczEuNjg5LDAuNjQzLDIuMzMzLTAuMDAzbDMuNzM3LTMuNzQ3bDMuNzgzLDMuNzkzYzAuMzIyLDAuMzIzLDAuNzQ1LDAuNDg1LDEuMTY4LDAuNDg1IGMwLjQyMiwwLDAuODQzLTAuMTYxLDEuMTY1LTAuNDgyYzAuNjQ2LTAuNjQ0LDAuNjQ2LTEuNjg4LDAuMDAzLTIuMzMzTDE0Ljg1NCwxMi41MzZ6XCIgLz5cbiAgICA8L3N2Zz5cbiAgKVxufVxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgc3ZnU3R5bGVzIH0gZnJvbSAnLi9zdHlsZSdcblxuZXhwb3J0IGNvbnN0IEhpZGVBbGwgPSBzdHlsZXMgPT4ge1xuICByZXR1cm4gKFxuICAgIDxzdmdcbiAgICAgIHN0eWxlPXtzdmdTdHlsZXMoc3R5bGVzKX1cbiAgICAgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuICAgICAgdmlld0JveD1cIjAgMCAyNSAyNVwiPlxuICAgICAgPHBhdGggZD1cIk0yMC45NzgsNi4xMzdDMjAuNjA5LDQuNjYsMTYuOTU4LDMuNSwxMi41MDYsMy41Yy00LjQ1MiwwLTguMTAyLDEuMTYtOC40NzIsMi42MzdDNC4wMTksNi4xOTgsNC4wMSw2LjI1OSw0LjAwNiw2LjMyMSBsMCwwLjA2M0w0LDE2LjQ3OGMwLDAuNDIzLDAuMjUyLDAuODEzLDAuNjc3LDEuMDQzbDIuMjUzLDEuMjE0bDMuNjc1LDEuOThsMS4xMDMsMC41OTRjMC4yMzUsMC4xMjUsMC41MDYsMC4xOTIsMC43ODQsMC4xOTIgYzAuMjc1LDAsMC41NDQtMC4wNjUsMC43ODEtMC4xOWwxLjAyLTAuNTQzbDMuNjk4LTEuOTdsMi4zMDktMS4yM2MwLjM1OC0wLjE5LDAuNTkzLTAuNDk1LDAuNjYyLTAuODM5IEMyMC45ODYsMTYuNjM5LDIxLDE2LjU0OSwyMSwxNi40NTVWNi4zODNWNi4yMzRDMjAuOTk1LDYuMjAyLDIwLjk4Niw2LjE2OSwyMC45NzgsNi4xMzd6IE0xNi4zMzcsMTEuNDY3bC01LjM1Miw1Ljk0NCBjLTAuMDU0LDAuMDYtMC4xMzMsMC4wOTItMC4yMTQsMC4wOTJjLTAuMDM3LDAtMC4wNzQtMC4wMDctMC4xMDktMC4wMjFsLTAuMDA3LTAuMDAzbC0wLjEzMi0wLjA1MiBjLTAuMTMyLTAuMDUyLTAuMTk5LTAuMTg4LTAuMTUyLTAuMzEzbDEuNDA3LTMuNzdIOC45NDJjLTAuMTA3LDAtMC4yMDQtMC4wNTYtMC4yNS0wLjE0NWMtMC4wNDYtMC4wODgtMC4wMzItMC4xOTMsMC4wMzYtMC4yNjggbDUuMzc3LTUuOTYyYzAuMDg3LTAuMDk3LDAuMjM5LTAuMTIsMC4zNTctMC4wNTZsMC4xMjUsMC4wNjljMC4xMTEsMC4wNjEsMC4xNjEsMC4xODUsMC4xMTksMC4yOThsLTEuNDE4LDMuNzc0aDIuODM0IGMwLjEwNywwLDAuMjA0LDAuMDU2LDAuMjUsMC4xNDRDMTYuNDE5LDExLjI4NywxNi40MDQsMTEuMzkyLDE2LjMzNywxMS40Njd6XCIgLz5cbiAgICA8L3N2Zz5cbiAgKVxufVxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgc3ZnU3R5bGVzIH0gZnJvbSAnLi9zdHlsZSdcblxuZXhwb3J0IGNvbnN0IElwaG9uZUlwYWQgPSBzdHlsZXMgPT4ge1xuICByZXR1cm4gKFxuICAgIDxzdmcgc3R5bGU9e3N2Z1N0eWxlcyhzdHlsZXMpfSB2aWV3Qm94PVwiMCAwIDk2IDk2XCI+XG4gICAgICA8cGF0aCBkPVwiTTgyIDJIMzZhNiA2IDAgMCAwLTYgNnYyMkgxNmE2IDYgMCAwIDAtNiA2djUyYTYgNiAwIDAgMCA2IDZoMjRhNiA2IDAgMCAwIDYtNnYtOGgzNmE2IDYgMCAwIDAgNi02VjhhNiA2IDAgMCAwLTYtNnpNMjIuMSAzMi4zaDEyYTEgMSAwIDAgMSAwIDJoLTEyYTEgMSAwIDAgMSAwLTJ6TTI4IDkyYTIgMiAwIDEgMSAyLTIgMiAyIDAgMCAxLTIgMnptMTQtOGEyIDIgMCAwIDEtMiAySDE2YTIgMiAwIDAgMS0yLTJWMzhhMiAyIDAgMCAxIDItMmgyNGEyIDIgMCAwIDEgMiAydjQ2em0xOC02YTIgMiAwIDEgMSAyLTIgMiAyIDAgMCAxLTIgMnptMjQtOGEyIDIgMCAwIDEtMiAySDQ2VjM2YTYgNiAwIDAgMC02LTZoLTZWOGEyIDIgMCAwIDEgMi0yaDQ2YTIgMiAwIDAgMSAyIDJ2NjJ6XCIgLz5cbiAgICA8L3N2Zz5cbiAgKVxufVxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgc3ZnU3R5bGVzIH0gZnJvbSAnLi9zdHlsZSdcblxuZXhwb3J0IGNvbnN0IE1hYyA9IHN0eWxlcyA9PiB7XG4gIHJldHVybiAoXG4gICAgPHN2ZyBzdHlsZT17c3ZnU3R5bGVzKHN0eWxlcyl9IHZpZXdCb3g9XCIwIDAgNDggNDhcIj5cbiAgICAgIDxwYXRoIGQ9XCJNMzAgNDdIMTguMWEyIDIgMCAwIDEtMi0ybDEuOS04LjlhMiAyIDAgMCAxIDItMmg4YTIgMiAwIDAgMSAyIDJsMiA4LjlhMiAyIDAgMCAxLTIgMnpNNDYgMEgyYTIgMiAwIDAgMC0yIDJ2MjhhMiAyIDAgMCAwIDIgMmg0NGEyIDIgMCAwIDAgMi0yVjJhMiAyIDAgMCAwLTItMnpNMjQgMWExIDEgMCAxIDEtMSAxIDEgMSAwIDAgMSAxLTF6bTIyIDI3SDJWNGg0NHYyNHpcIiAvPlxuICAgIDwvc3ZnPlxuICApXG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBzdmdTdHlsZXMgfSBmcm9tICcuL3N0eWxlJ1xuXG5leHBvcnQgY29uc3QgT3ZlcmZsb3cgPSAoKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPHN2Z1xuICAgICAgc3R5bGU9e3N2Z1N0eWxlcyh7IG1hcmdpblJpZ2h0OiAwLCB3aWR0aDogJzIwcHgnLCBoZWlnaHQ6ICcyMHB4JyB9KX1cbiAgICAgIHZpZXdCb3g9XCIwIDAgMTAwIDEwMFwiPlxuICAgICAgPHBhdGggZD1cIk0xNSA0MGM1LjQ2IDAgMTAgNC41NCAxMCAxMHMtNC41NCAxMC0xMCAxMFM1IDU1LjQ2IDUgNTBzNC41NC0xMCAxMC0xMHptNjAgMTBjMCA1LjQ2IDQuNTQgMTAgMTAgMTBzMTAtNC41NCAxMC0xMC00LjU0LTEwLTEwLTEwLTEwIDQuNTQtMTAgMTB6bS0zNSAwYzAgNS40NiA0LjU0IDEwIDEwIDEwczEwLTQuNTQgMTAtMTAtNC41NC0xMC0xMC0xMC0xMCA0LjU0LTEwIDEwelwiIC8+XG4gICAgPC9zdmc+XG4gIClcbn1cbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IHN2Z1N0eWxlcyB9IGZyb20gJy4vc3R5bGUnXG5cbmV4cG9ydCBjb25zdCBQb2NrZXRMb2dvID0gc3R5bGVzID0+IHtcbiAgcmV0dXJuIChcbiAgICA8c3ZnXG4gICAgICBzdHlsZT17c3ZnU3R5bGVzKHN0eWxlcyl9XG4gICAgICB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcbiAgICAgIHZpZXdCb3g9XCIwIDAgMjYgMjZcIj5cbiAgICAgIDxwYXRoXG4gICAgICAgIGZpbGw9XCIjRUU0MDU2XCJcbiAgICAgICAgdGl0bGU9XCJQb2NrZXRcIlxuICAgICAgICBhbHQ9XCJQb2NrZXRcIlxuICAgICAgICBkPVwiTTI2LDRhMiwyLDAsMCwwLTItMkgyQTIsMiwwLDAsMCwwLDR2OWMwLDAuMSwwLC4yLDAsMC40czAsMC40LDAsLjZjMCw0LDUuOCwxMSwxMywxMXMxMy03LDEzLTExYzAtLjIsMC0wLjQsMC0wLjZzMC0uMiwwLTAuNFY0Wm0tNS41LDctNiw2YTEuOSwxLjksMCwwLDEtMi45LDBsLTYtNkExLjcsMS43LDAsMCwxLDgsOC41bDUsNSw1LTVhMS43LDEuNywwLDAsMSwyLjUsMGgwQTEuNywxLjcsMCwwLDEsMjAuNSwxMVpcIlxuICAgICAgLz5cbiAgICA8L3N2Zz5cbiAgKVxufVxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgc3ZnU3R5bGVzIH0gZnJvbSAnLi9zdHlsZSdcblxuZXhwb3J0IGNvbnN0IFBvY2tldE5ld3RhYiA9IHN0eWxlcyA9PiB7XG4gIHJldHVybiAoXG4gICAgPHN2ZyBzdHlsZT17c3ZnU3R5bGVzKHN0eWxlcyl9IHZpZXdCb3g9XCIwIDAgOTYgOTZcIj5cbiAgICAgIDxwYXRoIGQ9XCJNNzcuOSA3MnYxMkgxMlYyNGg2VjEySDZhNiA2IDAgMCAwLTYgNnY3MmE2IDYgMCAwIDAgNiA2aDc3LjlhNiA2IDAgMCAwIDYtNlY3MmgtMTJ6XCIgLz5cbiAgICAgIDxwYXRoIGQ9XCJNMzYgMGE2IDYgMCAwIDAtNiA2djE5LjlsLjIgNGEzMi4yIDMyLjIgMCAwIDAgMTIuOSAyMi4zbC40LjNoLjFhMzIuNSAzMi41IDAgMCAwIDEyLjkgNS43IDMzLjIgMzMuMiAwIDAgMCA2LjYuNyAzMi44IDMyLjggMCAwIDAgNi4xLS42aC44YTMyLjYgMzIuNiAwIDAgMCAxMi40LTUuNmguMWwuNC0uM0EzMi4yIDMyLjIgMCAwIDAgOTUuOCAzMGwuMi00VjZhNS45IDUuOSAwIDAgMC0uMy0yQTYgNiAwIDAgMCA5MC4xLjFtLTguNSAyNC42TDY2LjEgMzkuNmE0LjUgNC41IDAgMCAxLTYuMyAwTDQ0LjQgMjQuN2E0LjUyNiA0LjUyNiAwIDAgMSA2LjMtNi41bDEyLjIgMTEuOSAxMi40LTExLjlhNC41MjYgNC41MjYgMCAwIDEgNi4zIDYuNXpcIiAvPlxuICAgIDwvc3ZnPlxuICApXG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBzdmdTdHlsZXMgfSBmcm9tICcuL3N0eWxlJ1xuXG5leHBvcnQgY29uc3QgUmVtb3ZlID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxzdmcgc3R5bGU9e3N2Z1N0eWxlcygpfSB2aWV3Qm94PVwiMCAwIDE2IDE2XCI+XG4gICAgICA8cGF0aCBkPVwiTTQsMiBMNCwxLjMzMzMzMzMzIEM0LDAuNTk2OTUzNjY3IDQuNTk2OTUzNjcsLTcuNTgwMzk4NDFlLTE0IDUuMzMzMzMzMzMsLTcuNTkzOTI1NDllLTE0IEwxMC42NjY2NjY3LC03LjU5MzkyNTQ5ZS0xNCBDMTEuNDAzMDQ2MywtNy42MDc0NTI1NmUtMTQgMTIsMC41OTY5NTM2NjcgMTIsMS4zMzMzMzMzMyBMMTIsMiBMMTUuMDIwMjYzNywyIEMxNS41NzI1NDg0LDIgMTYuMDIwMjYzNywyLjQ0NzcxNTI1IDE2LjAyMDI2MzcsMyBDMTYuMDIwMjYzNywzLjU1MjI4NDc1IDE1LjU3MjU0ODQsNCAxNS4wMjAyNjM3LDQgTDEuMDAzMTczODMsNCBDMC40NTA4ODkwNzgsNCAwLjAwMzE3MzgyODEzLDMuNTUyMjg0NzUgMC4wMDMxNzM4MjgxMywzIEMwLjAwMzE3MzgyODEzLDIuNDQ3NzE1MjUgMC40NTA4ODkwNzgsMiAxLjAwMzE3MzgzLDIgTDQsMiBaIE0yLDE0LjY2NjY2NjcgTDIsNiBMMTQsNiBMMTQsMTQuNjY2NjY2NyBDMTQsMTUuNDAzMDQ2MyAxMy40MDMwNDYzLDE2IDEyLjY2NjY2NjcsMTYgTDMuMzMzMzMzMzMsMTYgQzIuNTk2OTUzNjcsMTYgMiwxNS40MDMwNDYzIDIsMTQuNjY2NjY2NyBaXCIgaWQ9XCJDb21iaW5lZC1TaGFwZVwiPjwvcGF0aD5cbiAgICA8L3N2Zz5cbiAgKVxufVxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgc3ZnU3R5bGVzIH0gZnJvbSAnLi9zdHlsZSdcblxuZXhwb3J0IGNvbnN0IFNhdmUgPSBzdHlsZXMgPT4ge1xuICByZXR1cm4gKFxuICAgIDxzdmdcbiAgICAgIHN0eWxlPXtzdmdTdHlsZXMoc3R5bGVzKX1cbiAgICAgIGNsYXNzTmFtZT1cImljb24gaWNvbi1zYXZlXCJcbiAgICAgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuICAgICAgdmlld0JveD1cIjAgMCAyNiAyNlwiPlxuICAgICAgPHBhdGhcbiAgICAgICAgYWx0PVwiU2F2ZSB0byBQb2NrZXRcIlxuICAgICAgICBkPVwiTTI2LDRhMiwyLDAsMCwwLTItMkgyQTIsMiwwLDAsMCwwLDR2OWMwLDAuMSwwLC4yLDAsMC40czAsMC40LDAsLjZjMCw0LDUuOCwxMSwxMywxMXMxMy03LDEzLTExYzAtLjIsMC0wLjQsMC0wLjZzMC0uMiwwLTAuNFY0Wm0tNS41LDctNiw2YTEuOSwxLjksMCwwLDEtMi45LDBsLTYtNkExLjcsMS43LDAsMCwxLDgsOC41bDUsNSw1LTVhMS43LDEuNywwLDAsMSwyLjUsMGgwQTEuNywxLjcsMCwwLDEsMjAuNSwxMVpcIlxuICAgICAgLz5cbiAgICA8L3N2Zz5cbiAgKVxufVxuIiwiZXhwb3J0ICogZnJvbSAnLi9pY29ucy5hYm91dCdcbmV4cG9ydCAqIGZyb20gJy4vaWNvbnMuYWRkZWQnXG5leHBvcnQgKiBmcm9tICcuL2ljb25zLmFuZHJvaWRsb2dvJ1xuZXhwb3J0ICogZnJvbSAnLi9pY29ucy5hcmNoaXZlJ1xuZXhwb3J0ICogZnJvbSAnLi9pY29ucy5hcnJvd2Rvd24nXG5leHBvcnQgKiBmcm9tICcuL2ljb25zLmFycm93bGVmdCdcbmV4cG9ydCAqIGZyb20gJy4vaWNvbnMuYXJyb3dyaWdodCdcbmV4cG9ydCAqIGZyb20gJy4vaWNvbnMuYXJyb3d1cCdcbmV4cG9ydCAqIGZyb20gJy4vaWNvbnMuYXNjZW5kaW5nJ1xuZXhwb3J0ICogZnJvbSAnLi9pY29ucy5ib29rbWFyaydcbmV4cG9ydCAqIGZyb20gJy4vaWNvbnMuY2FycmV0ZG93bidcbmV4cG9ydCAqIGZyb20gJy4vaWNvbnMuY2xvc2UnXG5leHBvcnQgKiBmcm9tICcuL2ljb25zLmNvZydcbmV4cG9ydCAqIGZyb20gJy4vaWNvbnMuZGVmYXVsdHNpdGUnXG5leHBvcnQgKiBmcm9tICcuL2ljb25zLmRpc2Nvbm5lY3RlZCdcbmV4cG9ydCAqIGZyb20gJy4vaWNvbnMuZmlsdGVycydcbmV4cG9ydCAqIGZyb20gJy4vaWNvbnMuZm9sZGVyJ1xuZXhwb3J0ICogZnJvbSAnLi9pY29ucy5naWZ0J1xuZXhwb3J0ICogZnJvbSAnLi9pY29ucy5oaWRlJ1xuZXhwb3J0ICogZnJvbSAnLi9pY29ucy5oaWRlYWxsJ1xuZXhwb3J0ICogZnJvbSAnLi9pY29ucy5pcGhvbmVpcGFkJ1xuZXhwb3J0ICogZnJvbSAnLi9pY29ucy5sb2NrJ1xuZXhwb3J0ICogZnJvbSAnLi9pY29ucy5tYWMnXG5leHBvcnQgKiBmcm9tICcuL2ljb25zLm1vb24nXG5leHBvcnQgKiBmcm9tICcuL2ljb25zLm9wZW5wb2NrZXQnXG5leHBvcnQgKiBmcm9tICcuL2ljb25zLm9wdGlvbnMnXG5leHBvcnQgKiBmcm9tICcuL2ljb25zLm92ZXJmbG93J1xuZXhwb3J0ICogZnJvbSAnLi9pY29ucy5wbGF5J1xuZXhwb3J0ICogZnJvbSAnLi9pY29ucy5wb2NrZXRsb2dvJ1xuZXhwb3J0ICogZnJvbSAnLi9pY29ucy5wb2NrZXRsb2dvdHlwZSdcbmV4cG9ydCAqIGZyb20gJy4vaWNvbnMucG9ja2V0bmV3dGFiJ1xuZXhwb3J0ICogZnJvbSAnLi9pY29ucy5wcm9maWxlJ1xuZXhwb3J0ICogZnJvbSAnLi9pY29ucy5xdWVzdGlvbidcbmV4cG9ydCAqIGZyb20gJy4vaWNvbnMucmVmcmVzaCdcbmV4cG9ydCAqIGZyb20gJy4vaWNvbnMucmVtb3ZlJ1xuZXhwb3J0ICogZnJvbSAnLi9pY29ucy5zYXZlJ1xuZXhwb3J0ICogZnJvbSAnLi9pY29ucy5zZWFyY2gnXG5leHBvcnQgKiBmcm9tICcuL2ljb25zLnNldHRpbmdzJ1xuZXhwb3J0ICogZnJvbSAnLi9pY29ucy5zaHVmZmxlJ1xuZXhwb3J0ICogZnJvbSAnLi9pY29ucy5zb3J0J1xuZXhwb3J0ICogZnJvbSAnLi9pY29ucy50b2dnbGUnXG5leHBvcnQgKiBmcm9tICcuL2ljb25zLnRvcHNpdGVzJ1xuIiwiaW1wb3J0IHsgQ09MT1JTIH0gZnJvbSAnZWxlbWVudHMvY29sb3JzL2NvbG9ycydcbmNvbnN0IHsgJGJsYWNrIH0gPSBDT0xPUlNcblxuZXhwb3J0IGNvbnN0IE1FRElBX1FVRVJJRVMgPSB7XG4gIHBoYWJsZXQ6ICcobWluLXdpZHRoOiA1NTBweCknLCAvLycgTGFyZ2VyIHRoYW4gcGhhYmxldCdcbiAgdGFibGV0OiAnKG1pbi13aWR0aDogNzUwcHgpJywgLy8nIExhcmdlciB0aGFuIHRhYmxldCdcbiAgZGVza3RvcDogJyhtaW4td2lkdGg6IDEwMDBweCknLCAvLycgTGFyZ2VyIHRoYW4gZGVza3RvcCdcbiAgZGVza3RvcGhkOiAnKG1pbi13aWR0aDogMTIwMHB4KScgLy8nIExhcmdlciB0aGFuIERlc2t0b3AgSEQnXG59XG5leHBvcnQgY29uc3QgVFlQT0dSQVBIWSA9IHtcbiAgJGZvbnRzdGFja0RlZmF1bHQ6XG4gICAgJ1wicHJveGltYS1ub3ZhXCIsLWFwcGxlLXN5c3RlbSxCbGlua01hY1N5c3RlbUZvbnQsXCJTZWdvZSBVSVwiLFJvYm90byxPeHlnZW4tU2FucyxVYnVudHUsQ2FudGFyZWxsLFwiSGVsdmV0aWNhIE5ldWVcIixIZWx2ZXRpY2Esc2Fucy1zZXJpZidcbn1cbmV4cG9ydCBjb25zdCBMQVlPVVQgPSB7XG4gICRuYXZIZWlnaHQ6ICcgNTBweCcsXG4gICRiYW5uZXJIZWlnaHQ6ICcgNjBweCcsXG4gICRib3JkZXJSYWRpdXM6ICcgNnB4J1xufVxuY29uc3QgJHNvZnRTaGFkb3dIaWdoID0gYDAgMjBweCA0MHB4IHJnYmEoJHskYmxhY2t9LCAwLjEpYFxuY29uc3QgJHNvZnRTaGFkb3cgPSBgMCAxNXB4IDMwcHggcmdiYSgkeyRibGFja30sIDAuMilgXG5jb25zdCAkc29mdFNoYWRvd0FjdGl2ZSA9IGAwIDEwcHggMjBweCByZ2JhKCR7JGJsYWNrfSwgMC4yNSlgXG5jb25zdCAkc29mdFNoYWRvd0hlYWRlciA9IGAwIDEwcHggNDBweCByZ2JhKCR7JGJsYWNrfSwgMC4xKWBcbmV4cG9ydCBjb25zdCBTSEFET1dTID0ge1xuICAkc29mdFNoYWRvdyxcbiAgJHNvZnRTaGFkb3dBY3RpdmUsXG4gICRzb2Z0U2hhZG93SGVhZGVyLFxuICAkc29mdFNoYWRvd0hpZ2gsXG5cbiAgJGhhcmRTaGFkb3c6IGAwIDVweCA4cHggcmdiYSgkeyRibGFja30sIDAuMylgLFxuICAkaGFyZFNoYWRvd0FjdGl2ZTogYDAgM3B4IDRweCByZ2JhKCR7JGJsYWNrfSwgMC41KWAsXG5cbiAgJHNtYWxsU2hhZG93SGlnaDogYDAgNXB4IDdweCByZ2JhKCR7JGJsYWNrfSwgMC4wNSlgLFxuICAkc21hbGxTaGFkb3c6IGAwIDRweCA2cHggcmdiYSgkeyRibGFja30sIDAuMSlgLFxuICAkc21hbGxTaGFkb3dBY3RpdmU6IGAwIDNweCA1cHggcmdiYSgkeyRibGFja30sIDAuMTUpYCxcblxuICAkdGlueVNoYWRvd0hpZ2g6IGAwIDJweCAzcHggcmdiYSgkeyRibGFja30sIDAuMDUpYCxcbiAgJHRpbnlTaGFkb3c6IGAwIDFweCAycHggcmdiYSgkeyRibGFja30sIDAuMTUpYCxcbiAgJHRpbnlTaGFkb3dBY3RpdmU6IGAwIDFweCAxcHggcmdiYSgkeyRibGFja30sIDAuMilgLFxuICAkdGlueVNoYWRvd0hlYWRlcjogYDAgNnB4IDlweCByZ2JhKCR7JGJsYWNrfSwgMC4xKWAsXG5cbiAgJGNhcmRTaGFkb3c6ICRzb2Z0U2hhZG93LFxuICAkY2FyZFNoYWRvd0FjdGl2ZTogJHNvZnRTaGFkb3dBY3RpdmUsXG4gICRjYXJkU2hhZG93SGlnaDogJHNvZnRTaGFkb3dIaWdoLFxuXG4gICRoZWFkZXJTaGFkb3c6ICRzb2Z0U2hhZG93SGVhZGVyLFxuICAkaGVhZGVyU3ViU2hhZG93OiBgaW5zZXQgMCAxcHggM3B4IHJnYmEoJHskYmxhY2t9LCAwLjEpYCxcbiAgJGhlYWRlclN1YlNoYWRvd09mZjogYGluc2V0IDAgMCAwIHJnYmEoJHskYmxhY2t9LCAwKWBcbn1cbmV4cG9ydCBjb25zdCBUUkFOU0lUSU9OUyA9IHtcbiAgJHRyYW5zaXRpb25WZXJ0aWNhbDogJyAxNTBtcyBjdWJpYy1iZXppZXIoMC40NTUsIDAuMDMsIDAuNTE1LCAwLjk1NSknXG59XG5leHBvcnQgY29uc3QgWklOREVYID0ge1xuICAkaW5mb3BhbmVsOiAnIDYnLFxuICAkYm9va21hcmtzOiAnIDUnLFxuICAkc2V0dGluZ3M6ICcgNCcsXG4gICR0b29sdGlwOiAnIDMnLFxuICAkZml4ZWQ6ICcgMicsXG4gICRhYm92ZTogJyAxJ1xufVxuIiwiaW1wb3J0IGFycmF5TGlrZVRvQXJyYXkgZnJvbSBcIi4vYXJyYXlMaWtlVG9BcnJheVwiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikge1xuICBpZiAoIW8pIHJldHVybjtcbiAgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xuICB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7XG4gIGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7XG4gIGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG4pO1xuICBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIGFycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gIGlmIChrZXkgaW4gb2JqKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBvYmpba2V5XSA9IHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIG9iajtcbn0iLCIvKlxuXG5CYXNlZCBvZmYgZ2xhbW9yJ3MgU3R5bGVTaGVldCwgdGhhbmtzIFN1bmlsIOKdpO+4j1xuXG5oaWdoIHBlcmZvcm1hbmNlIFN0eWxlU2hlZXQgZm9yIGNzcy1pbi1qcyBzeXN0ZW1zXG5cbi0gdXNlcyBtdWx0aXBsZSBzdHlsZSB0YWdzIGJlaGluZCB0aGUgc2NlbmVzIGZvciBtaWxsaW9ucyBvZiBydWxlc1xuLSB1c2VzIGBpbnNlcnRSdWxlYCBmb3IgYXBwZW5kaW5nIGluIHByb2R1Y3Rpb24gZm9yICptdWNoKiBmYXN0ZXIgcGVyZm9ybWFuY2VcblxuLy8gdXNhZ2VcblxuaW1wb3J0IHsgU3R5bGVTaGVldCB9IGZyb20gJ0BlbW90aW9uL3NoZWV0J1xuXG5sZXQgc3R5bGVTaGVldCA9IG5ldyBTdHlsZVNoZWV0KHsga2V5OiAnJywgY29udGFpbmVyOiBkb2N1bWVudC5oZWFkIH0pXG5cbnN0eWxlU2hlZXQuaW5zZXJ0KCcjYm94IHsgYm9yZGVyOiAxcHggc29saWQgcmVkOyB9Jylcbi0gYXBwZW5kcyBhIGNzcyBydWxlIGludG8gdGhlIHN0eWxlc2hlZXRcblxuc3R5bGVTaGVldC5mbHVzaCgpXG4tIGVtcHRpZXMgdGhlIHN0eWxlc2hlZXQgb2YgYWxsIGl0cyBjb250ZW50c1xuXG4qL1xuLy8gJEZsb3dGaXhNZVxuZnVuY3Rpb24gc2hlZXRGb3JUYWcodGFnKSB7XG4gIGlmICh0YWcuc2hlZXQpIHtcbiAgICAvLyAkRmxvd0ZpeE1lXG4gICAgcmV0dXJuIHRhZy5zaGVldDtcbiAgfSAvLyB0aGlzIHdlaXJkbmVzcyBicm91Z2h0IHRvIHlvdSBieSBmaXJlZm94XG5cbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cblxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgZG9jdW1lbnQuc3R5bGVTaGVldHMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoZG9jdW1lbnQuc3R5bGVTaGVldHNbaV0ub3duZXJOb2RlID09PSB0YWcpIHtcbiAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgIHJldHVybiBkb2N1bWVudC5zdHlsZVNoZWV0c1tpXTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIHRhZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gIHRhZy5zZXRBdHRyaWJ1dGUoJ2RhdGEtZW1vdGlvbicsIG9wdGlvbnMua2V5KTtcblxuICBpZiAob3B0aW9ucy5ub25jZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgdGFnLnNldEF0dHJpYnV0ZSgnbm9uY2UnLCBvcHRpb25zLm5vbmNlKTtcbiAgfVxuXG4gIHRhZy5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnJykpO1xuICByZXR1cm4gdGFnO1xufVxuXG52YXIgU3R5bGVTaGVldCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIFN0eWxlU2hlZXQob3B0aW9ucykge1xuICAgIHRoaXMuaXNTcGVlZHkgPSBvcHRpb25zLnNwZWVkeSA9PT0gdW5kZWZpbmVkID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyA6IG9wdGlvbnMuc3BlZWR5O1xuICAgIHRoaXMudGFncyA9IFtdO1xuICAgIHRoaXMuY3RyID0gMDtcbiAgICB0aGlzLm5vbmNlID0gb3B0aW9ucy5ub25jZTsgLy8ga2V5IGlzIHRoZSB2YWx1ZSBvZiB0aGUgZGF0YS1lbW90aW9uIGF0dHJpYnV0ZSwgaXQncyB1c2VkIHRvIGlkZW50aWZ5IGRpZmZlcmVudCBzaGVldHNcblxuICAgIHRoaXMua2V5ID0gb3B0aW9ucy5rZXk7XG4gICAgdGhpcy5jb250YWluZXIgPSBvcHRpb25zLmNvbnRhaW5lcjtcbiAgICB0aGlzLmJlZm9yZSA9IG51bGw7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gU3R5bGVTaGVldC5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmluc2VydCA9IGZ1bmN0aW9uIGluc2VydChydWxlKSB7XG4gICAgLy8gdGhlIG1heCBsZW5ndGggaXMgaG93IG1hbnkgcnVsZXMgd2UgaGF2ZSBwZXIgc3R5bGUgdGFnLCBpdCdzIDY1MDAwIGluIHNwZWVkeSBtb2RlXG4gICAgLy8gaXQncyAxIGluIGRldiBiZWNhdXNlIHdlIGluc2VydCBzb3VyY2UgbWFwcyB0aGF0IG1hcCBhIHNpbmdsZSBydWxlIHRvIGEgbG9jYXRpb25cbiAgICAvLyBhbmQgeW91IGNhbiBvbmx5IGhhdmUgb25lIHNvdXJjZSBtYXAgcGVyIHN0eWxlIHRhZ1xuICAgIGlmICh0aGlzLmN0ciAlICh0aGlzLmlzU3BlZWR5ID8gNjUwMDAgOiAxKSA9PT0gMCkge1xuICAgICAgdmFyIF90YWcgPSBjcmVhdGVTdHlsZUVsZW1lbnQodGhpcyk7XG5cbiAgICAgIHZhciBiZWZvcmU7XG5cbiAgICAgIGlmICh0aGlzLnRhZ3MubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGJlZm9yZSA9IHRoaXMuYmVmb3JlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYmVmb3JlID0gdGhpcy50YWdzW3RoaXMudGFncy5sZW5ndGggLSAxXS5uZXh0U2libGluZztcbiAgICAgIH1cblxuICAgICAgdGhpcy5jb250YWluZXIuaW5zZXJ0QmVmb3JlKF90YWcsIGJlZm9yZSk7XG4gICAgICB0aGlzLnRhZ3MucHVzaChfdGFnKTtcbiAgICB9XG5cbiAgICB2YXIgdGFnID0gdGhpcy50YWdzW3RoaXMudGFncy5sZW5ndGggLSAxXTtcblxuICAgIGlmICh0aGlzLmlzU3BlZWR5KSB7XG4gICAgICB2YXIgc2hlZXQgPSBzaGVldEZvclRhZyh0YWcpO1xuXG4gICAgICB0cnkge1xuICAgICAgICAvLyB0aGlzIGlzIGEgcmVhbGx5IGhvdCBwYXRoXG4gICAgICAgIC8vIHdlIGNoZWNrIHRoZSBzZWNvbmQgY2hhcmFjdGVyIGZpcnN0IGJlY2F1c2UgaGF2aW5nIFwiaVwiXG4gICAgICAgIC8vIGFzIHRoZSBzZWNvbmQgY2hhcmFjdGVyIHdpbGwgaGFwcGVuIGxlc3Mgb2Z0ZW4gdGhhblxuICAgICAgICAvLyBoYXZpbmcgXCJAXCIgYXMgdGhlIGZpcnN0IGNoYXJhY3RlclxuICAgICAgICB2YXIgaXNJbXBvcnRSdWxlID0gcnVsZS5jaGFyQ29kZUF0KDEpID09PSAxMDUgJiYgcnVsZS5jaGFyQ29kZUF0KDApID09PSA2NDsgLy8gdGhpcyBpcyB0aGUgdWx0cmFmYXN0IHZlcnNpb24sIHdvcmtzIGFjcm9zcyBicm93c2Vyc1xuICAgICAgICAvLyB0aGUgYmlnIGRyYXdiYWNrIGlzIHRoYXQgdGhlIGNzcyB3b24ndCBiZSBlZGl0YWJsZSBpbiBkZXZ0b29sc1xuXG4gICAgICAgIHNoZWV0Lmluc2VydFJ1bGUocnVsZSwgLy8gd2UgbmVlZCB0byBpbnNlcnQgQGltcG9ydCBydWxlcyBiZWZvcmUgYW55dGhpbmcgZWxzZVxuICAgICAgICAvLyBvdGhlcndpc2UgdGhlcmUgd2lsbCBiZSBhbiBlcnJvclxuICAgICAgICAvLyB0ZWNobmljYWxseSB0aGlzIG1lYW5zIHRoYXQgdGhlIEBpbXBvcnQgcnVsZXMgd2lsbFxuICAgICAgICAvLyBfdXN1YWxseV8obm90IGFsd2F5cyBzaW5jZSB0aGVyZSBjb3VsZCBiZSBtdWx0aXBsZSBzdHlsZSB0YWdzKVxuICAgICAgICAvLyBiZSB0aGUgZmlyc3Qgb25lcyBpbiBwcm9kIGFuZCBnZW5lcmFsbHkgbGF0ZXIgaW4gZGV2XG4gICAgICAgIC8vIHRoaXMgc2hvdWxkbid0IHJlYWxseSBtYXR0ZXIgaW4gdGhlIHJlYWwgd29ybGQgdGhvdWdoXG4gICAgICAgIC8vIEBpbXBvcnQgaXMgZ2VuZXJhbGx5IG9ubHkgdXNlZCBmb3IgZm9udCBmYWNlcyBmcm9tIGdvb2dsZSBmb250cyBhbmQgZXRjLlxuICAgICAgICAvLyBzbyB3aGlsZSB0aGlzIGNvdWxkIGJlIHRlY2huaWNhbGx5IGNvcnJlY3QgdGhlbiBpdCB3b3VsZCBiZSBzbG93ZXIgYW5kIGxhcmdlclxuICAgICAgICAvLyBmb3IgYSB0aW55IGJpdCBvZiBjb3JyZWN0bmVzcyB0aGF0IHdvbid0IG1hdHRlciBpbiB0aGUgcmVhbCB3b3JsZFxuICAgICAgICBpc0ltcG9ydFJ1bGUgPyAwIDogc2hlZXQuY3NzUnVsZXMubGVuZ3RoKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICBjb25zb2xlLndhcm4oXCJUaGVyZSB3YXMgYSBwcm9ibGVtIGluc2VydGluZyB0aGUgZm9sbG93aW5nIHJ1bGU6IFxcXCJcIiArIHJ1bGUgKyBcIlxcXCJcIiwgZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdGFnLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHJ1bGUpKTtcbiAgICB9XG5cbiAgICB0aGlzLmN0cisrO1xuICB9O1xuXG4gIF9wcm90by5mbHVzaCA9IGZ1bmN0aW9uIGZsdXNoKCkge1xuICAgIC8vICRGbG93Rml4TWVcbiAgICB0aGlzLnRhZ3MuZm9yRWFjaChmdW5jdGlvbiAodGFnKSB7XG4gICAgICByZXR1cm4gdGFnLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGFnKTtcbiAgICB9KTtcbiAgICB0aGlzLnRhZ3MgPSBbXTtcbiAgICB0aGlzLmN0ciA9IDA7XG4gIH07XG5cbiAgcmV0dXJuIFN0eWxlU2hlZXQ7XG59KCk7XG5cbmV4cG9ydCB7IFN0eWxlU2hlZXQgfTsiLCJmdW5jdGlvbiBtZW1vaXplKGZuKSB7XG4gIHZhciBjYWNoZSA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gKGFyZykge1xuICAgIGlmIChjYWNoZVthcmddID09PSB1bmRlZmluZWQpIGNhY2hlW2FyZ10gPSBmbihhcmcpO1xuICAgIHJldHVybiBjYWNoZVthcmddO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBtZW1vaXplOyIsImZ1bmN0aW9uIHN0eWxpc19taW4oVykge1xuICBmdW5jdGlvbiBNKGQsIGMsIGUsIGgsIGEpIHtcbiAgICBmb3IgKHZhciBtID0gMCwgYiA9IDAsIHYgPSAwLCBuID0gMCwgcSwgZywgeCA9IDAsIEsgPSAwLCBrLCB1ID0gayA9IHEgPSAwLCBsID0gMCwgciA9IDAsIEkgPSAwLCB0ID0gMCwgQiA9IGUubGVuZ3RoLCBKID0gQiAtIDEsIHksIGYgPSAnJywgcCA9ICcnLCBGID0gJycsIEcgPSAnJywgQzsgbCA8IEI7KSB7XG4gICAgICBnID0gZS5jaGFyQ29kZUF0KGwpO1xuICAgICAgbCA9PT0gSiAmJiAwICE9PSBiICsgbiArIHYgKyBtICYmICgwICE9PSBiICYmIChnID0gNDcgPT09IGIgPyAxMCA6IDQ3KSwgbiA9IHYgPSBtID0gMCwgQisrLCBKKyspO1xuXG4gICAgICBpZiAoMCA9PT0gYiArIG4gKyB2ICsgbSkge1xuICAgICAgICBpZiAobCA9PT0gSiAmJiAoMCA8IHIgJiYgKGYgPSBmLnJlcGxhY2UoTiwgJycpKSwgMCA8IGYudHJpbSgpLmxlbmd0aCkpIHtcbiAgICAgICAgICBzd2l0Y2ggKGcpIHtcbiAgICAgICAgICAgIGNhc2UgMzI6XG4gICAgICAgICAgICBjYXNlIDk6XG4gICAgICAgICAgICBjYXNlIDU5OlxuICAgICAgICAgICAgY2FzZSAxMzpcbiAgICAgICAgICAgIGNhc2UgMTA6XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICBmICs9IGUuY2hhckF0KGwpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGcgPSA1OTtcbiAgICAgICAgfVxuXG4gICAgICAgIHN3aXRjaCAoZykge1xuICAgICAgICAgIGNhc2UgMTIzOlxuICAgICAgICAgICAgZiA9IGYudHJpbSgpO1xuICAgICAgICAgICAgcSA9IGYuY2hhckNvZGVBdCgwKTtcbiAgICAgICAgICAgIGsgPSAxO1xuXG4gICAgICAgICAgICBmb3IgKHQgPSArK2w7IGwgPCBCOykge1xuICAgICAgICAgICAgICBzd2l0Y2ggKGcgPSBlLmNoYXJDb2RlQXQobCkpIHtcbiAgICAgICAgICAgICAgICBjYXNlIDEyMzpcbiAgICAgICAgICAgICAgICAgIGsrKztcbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgY2FzZSAxMjU6XG4gICAgICAgICAgICAgICAgICBrLS07XG4gICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgIGNhc2UgNDc6XG4gICAgICAgICAgICAgICAgICBzd2l0Y2ggKGcgPSBlLmNoYXJDb2RlQXQobCArIDEpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgNDI6XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgNDc6XG4gICAgICAgICAgICAgICAgICAgICAgYToge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh1ID0gbCArIDE7IHUgPCBKOyArK3UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChlLmNoYXJDb2RlQXQodSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDQ3OlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKDQyID09PSBnICYmIDQyID09PSBlLmNoYXJDb2RlQXQodSAtIDEpICYmIGwgKyAyICE9PSB1KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGwgPSB1ICsgMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsgYTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDEwOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKDQ3ID09PSBnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGwgPSB1ICsgMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsgYTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGwgPSB1O1xuICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgIGNhc2UgOTE6XG4gICAgICAgICAgICAgICAgICBnKys7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDQwOlxuICAgICAgICAgICAgICAgICAgZysrO1xuXG4gICAgICAgICAgICAgICAgY2FzZSAzNDpcbiAgICAgICAgICAgICAgICBjYXNlIDM5OlxuICAgICAgICAgICAgICAgICAgZm9yICg7IGwrKyA8IEogJiYgZS5jaGFyQ29kZUF0KGwpICE9PSBnOykge31cblxuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKDAgPT09IGspIGJyZWFrO1xuICAgICAgICAgICAgICBsKys7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGsgPSBlLnN1YnN0cmluZyh0LCBsKTtcbiAgICAgICAgICAgIDAgPT09IHEgJiYgKHEgPSAoZiA9IGYucmVwbGFjZShjYSwgJycpLnRyaW0oKSkuY2hhckNvZGVBdCgwKSk7XG5cbiAgICAgICAgICAgIHN3aXRjaCAocSkge1xuICAgICAgICAgICAgICBjYXNlIDY0OlxuICAgICAgICAgICAgICAgIDAgPCByICYmIChmID0gZi5yZXBsYWNlKE4sICcnKSk7XG4gICAgICAgICAgICAgICAgZyA9IGYuY2hhckNvZGVBdCgxKTtcblxuICAgICAgICAgICAgICAgIHN3aXRjaCAoZykge1xuICAgICAgICAgICAgICAgICAgY2FzZSAxMDA6XG4gICAgICAgICAgICAgICAgICBjYXNlIDEwOTpcbiAgICAgICAgICAgICAgICAgIGNhc2UgMTE1OlxuICAgICAgICAgICAgICAgICAgY2FzZSA0NTpcbiAgICAgICAgICAgICAgICAgICAgciA9IGM7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICByID0gTztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBrID0gTShjLCByLCBrLCBnLCBhICsgMSk7XG4gICAgICAgICAgICAgICAgdCA9IGsubGVuZ3RoO1xuICAgICAgICAgICAgICAgIDAgPCBBICYmIChyID0gWChPLCBmLCBJKSwgQyA9IEgoMywgaywgciwgYywgRCwgeiwgdCwgZywgYSwgaCksIGYgPSByLmpvaW4oJycpLCB2b2lkIDAgIT09IEMgJiYgMCA9PT0gKHQgPSAoayA9IEMudHJpbSgpKS5sZW5ndGgpICYmIChnID0gMCwgayA9ICcnKSk7XG4gICAgICAgICAgICAgICAgaWYgKDAgPCB0KSBzd2l0Y2ggKGcpIHtcbiAgICAgICAgICAgICAgICAgIGNhc2UgMTE1OlxuICAgICAgICAgICAgICAgICAgICBmID0gZi5yZXBsYWNlKGRhLCBlYSk7XG5cbiAgICAgICAgICAgICAgICAgIGNhc2UgMTAwOlxuICAgICAgICAgICAgICAgICAgY2FzZSAxMDk6XG4gICAgICAgICAgICAgICAgICBjYXNlIDQ1OlxuICAgICAgICAgICAgICAgICAgICBrID0gZiArICd7JyArIGsgKyAnfSc7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICBjYXNlIDEwNzpcbiAgICAgICAgICAgICAgICAgICAgZiA9IGYucmVwbGFjZShmYSwgJyQxICQyJyk7XG4gICAgICAgICAgICAgICAgICAgIGsgPSBmICsgJ3snICsgayArICd9JztcbiAgICAgICAgICAgICAgICAgICAgayA9IDEgPT09IHcgfHwgMiA9PT0gdyAmJiBMKCdAJyArIGssIDMpID8gJ0Atd2Via2l0LScgKyBrICsgJ0AnICsgayA6ICdAJyArIGs7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICBrID0gZiArIGssIDExMiA9PT0gaCAmJiAoayA9IChwICs9IGssICcnKSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGsgPSAnJztcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIGsgPSBNKGMsIFgoYywgZiwgSSksIGssIGgsIGEgKyAxKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgRiArPSBrO1xuICAgICAgICAgICAgayA9IEkgPSByID0gdSA9IHEgPSAwO1xuICAgICAgICAgICAgZiA9ICcnO1xuICAgICAgICAgICAgZyA9IGUuY2hhckNvZGVBdCgrK2wpO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlIDEyNTpcbiAgICAgICAgICBjYXNlIDU5OlxuICAgICAgICAgICAgZiA9ICgwIDwgciA/IGYucmVwbGFjZShOLCAnJykgOiBmKS50cmltKCk7XG4gICAgICAgICAgICBpZiAoMSA8ICh0ID0gZi5sZW5ndGgpKSBzd2l0Y2ggKDAgPT09IHUgJiYgKHEgPSBmLmNoYXJDb2RlQXQoMCksIDQ1ID09PSBxIHx8IDk2IDwgcSAmJiAxMjMgPiBxKSAmJiAodCA9IChmID0gZi5yZXBsYWNlKCcgJywgJzonKSkubGVuZ3RoKSwgMCA8IEEgJiYgdm9pZCAwICE9PSAoQyA9IEgoMSwgZiwgYywgZCwgRCwgeiwgcC5sZW5ndGgsIGgsIGEsIGgpKSAmJiAwID09PSAodCA9IChmID0gQy50cmltKCkpLmxlbmd0aCkgJiYgKGYgPSAnXFx4MDBcXHgwMCcpLCBxID0gZi5jaGFyQ29kZUF0KDApLCBnID0gZi5jaGFyQ29kZUF0KDEpLCBxKSB7XG4gICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICBjYXNlIDY0OlxuICAgICAgICAgICAgICAgIGlmICgxMDUgPT09IGcgfHwgOTkgPT09IGcpIHtcbiAgICAgICAgICAgICAgICAgIEcgKz0gZiArIGUuY2hhckF0KGwpO1xuICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgNTggIT09IGYuY2hhckNvZGVBdCh0IC0gMSkgJiYgKHAgKz0gUChmLCBxLCBnLCBmLmNoYXJDb2RlQXQoMikpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIEkgPSByID0gdSA9IHEgPSAwO1xuICAgICAgICAgICAgZiA9ICcnO1xuICAgICAgICAgICAgZyA9IGUuY2hhckNvZGVBdCgrK2wpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHN3aXRjaCAoZykge1xuICAgICAgICBjYXNlIDEzOlxuICAgICAgICBjYXNlIDEwOlxuICAgICAgICAgIDQ3ID09PSBiID8gYiA9IDAgOiAwID09PSAxICsgcSAmJiAxMDcgIT09IGggJiYgMCA8IGYubGVuZ3RoICYmIChyID0gMSwgZiArPSAnXFx4MDAnKTtcbiAgICAgICAgICAwIDwgQSAqIFkgJiYgSCgwLCBmLCBjLCBkLCBELCB6LCBwLmxlbmd0aCwgaCwgYSwgaCk7XG4gICAgICAgICAgeiA9IDE7XG4gICAgICAgICAgRCsrO1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgNTk6XG4gICAgICAgIGNhc2UgMTI1OlxuICAgICAgICAgIGlmICgwID09PSBiICsgbiArIHYgKyBtKSB7XG4gICAgICAgICAgICB6Kys7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG5cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICB6Kys7XG4gICAgICAgICAgeSA9IGUuY2hhckF0KGwpO1xuXG4gICAgICAgICAgc3dpdGNoIChnKSB7XG4gICAgICAgICAgICBjYXNlIDk6XG4gICAgICAgICAgICBjYXNlIDMyOlxuICAgICAgICAgICAgICBpZiAoMCA9PT0gbiArIG0gKyBiKSBzd2l0Y2ggKHgpIHtcbiAgICAgICAgICAgICAgICBjYXNlIDQ0OlxuICAgICAgICAgICAgICAgIGNhc2UgNTg6XG4gICAgICAgICAgICAgICAgY2FzZSA5OlxuICAgICAgICAgICAgICAgIGNhc2UgMzI6XG4gICAgICAgICAgICAgICAgICB5ID0gJyc7XG4gICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAzMiAhPT0gZyAmJiAoeSA9ICcgJyk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgeSA9ICdcXFxcMCc7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDEyOlxuICAgICAgICAgICAgICB5ID0gJ1xcXFxmJztcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgMTE6XG4gICAgICAgICAgICAgIHkgPSAnXFxcXHYnO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAzODpcbiAgICAgICAgICAgICAgMCA9PT0gbiArIGIgKyBtICYmIChyID0gSSA9IDEsIHkgPSAnXFxmJyArIHkpO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAxMDg6XG4gICAgICAgICAgICAgIGlmICgwID09PSBuICsgYiArIG0gKyBFICYmIDAgPCB1KSBzd2l0Y2ggKGwgLSB1KSB7XG4gICAgICAgICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgICAgICAgMTEyID09PSB4ICYmIDU4ID09PSBlLmNoYXJDb2RlQXQobCAtIDMpICYmIChFID0geCk7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDg6XG4gICAgICAgICAgICAgICAgICAxMTEgPT09IEsgJiYgKEUgPSBLKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA1ODpcbiAgICAgICAgICAgICAgMCA9PT0gbiArIGIgKyBtICYmICh1ID0gbCk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDQ0OlxuICAgICAgICAgICAgICAwID09PSBiICsgdiArIG4gKyBtICYmIChyID0gMSwgeSArPSAnXFxyJyk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDM0OlxuICAgICAgICAgICAgY2FzZSAzOTpcbiAgICAgICAgICAgICAgMCA9PT0gYiAmJiAobiA9IG4gPT09IGcgPyAwIDogMCA9PT0gbiA/IGcgOiBuKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgOTE6XG4gICAgICAgICAgICAgIDAgPT09IG4gKyBiICsgdiAmJiBtKys7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDkzOlxuICAgICAgICAgICAgICAwID09PSBuICsgYiArIHYgJiYgbS0tO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA0MTpcbiAgICAgICAgICAgICAgMCA9PT0gbiArIGIgKyBtICYmIHYtLTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgNDA6XG4gICAgICAgICAgICAgIGlmICgwID09PSBuICsgYiArIG0pIHtcbiAgICAgICAgICAgICAgICBpZiAoMCA9PT0gcSkgc3dpdGNoICgyICogeCArIDMgKiBLKSB7XG4gICAgICAgICAgICAgICAgICBjYXNlIDUzMzpcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIHEgPSAxO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2Kys7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA2NDpcbiAgICAgICAgICAgICAgMCA9PT0gYiArIHYgKyBuICsgbSArIHUgKyBrICYmIChrID0gMSk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDQyOlxuICAgICAgICAgICAgY2FzZSA0NzpcbiAgICAgICAgICAgICAgaWYgKCEoMCA8IG4gKyBtICsgdikpIHN3aXRjaCAoYikge1xuICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgIHN3aXRjaCAoMiAqIGcgKyAzICogZS5jaGFyQ29kZUF0KGwgKyAxKSkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDIzNTpcbiAgICAgICAgICAgICAgICAgICAgICBiID0gNDc7XG4gICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgICAgY2FzZSAyMjA6XG4gICAgICAgICAgICAgICAgICAgICAgdCA9IGwsIGIgPSA0MjtcbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDQyOlxuICAgICAgICAgICAgICAgICAgNDcgPT09IGcgJiYgNDIgPT09IHggJiYgdCArIDIgIT09IGwgJiYgKDMzID09PSBlLmNoYXJDb2RlQXQodCArIDIpICYmIChwICs9IGUuc3Vic3RyaW5nKHQsIGwgKyAxKSksIHkgPSAnJywgYiA9IDApO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgMCA9PT0gYiAmJiAoZiArPSB5KTtcbiAgICAgIH1cblxuICAgICAgSyA9IHg7XG4gICAgICB4ID0gZztcbiAgICAgIGwrKztcbiAgICB9XG5cbiAgICB0ID0gcC5sZW5ndGg7XG5cbiAgICBpZiAoMCA8IHQpIHtcbiAgICAgIHIgPSBjO1xuICAgICAgaWYgKDAgPCBBICYmIChDID0gSCgyLCBwLCByLCBkLCBELCB6LCB0LCBoLCBhLCBoKSwgdm9pZCAwICE9PSBDICYmIDAgPT09IChwID0gQykubGVuZ3RoKSkgcmV0dXJuIEcgKyBwICsgRjtcbiAgICAgIHAgPSByLmpvaW4oJywnKSArICd7JyArIHAgKyAnfSc7XG5cbiAgICAgIGlmICgwICE9PSB3ICogRSkge1xuICAgICAgICAyICE9PSB3IHx8IEwocCwgMikgfHwgKEUgPSAwKTtcblxuICAgICAgICBzd2l0Y2ggKEUpIHtcbiAgICAgICAgICBjYXNlIDExMTpcbiAgICAgICAgICAgIHAgPSBwLnJlcGxhY2UoaGEsICc6LW1vei0kMScpICsgcDtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSAxMTI6XG4gICAgICAgICAgICBwID0gcC5yZXBsYWNlKFEsICc6Oi13ZWJraXQtaW5wdXQtJDEnKSArIHAucmVwbGFjZShRLCAnOjotbW96LSQxJykgKyBwLnJlcGxhY2UoUSwgJzotbXMtaW5wdXQtJDEnKSArIHA7XG4gICAgICAgIH1cblxuICAgICAgICBFID0gMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gRyArIHAgKyBGO1xuICB9XG5cbiAgZnVuY3Rpb24gWChkLCBjLCBlKSB7XG4gICAgdmFyIGggPSBjLnRyaW0oKS5zcGxpdChpYSk7XG4gICAgYyA9IGg7XG4gICAgdmFyIGEgPSBoLmxlbmd0aCxcbiAgICAgICAgbSA9IGQubGVuZ3RoO1xuXG4gICAgc3dpdGNoIChtKSB7XG4gICAgICBjYXNlIDA6XG4gICAgICBjYXNlIDE6XG4gICAgICAgIHZhciBiID0gMDtcblxuICAgICAgICBmb3IgKGQgPSAwID09PSBtID8gJycgOiBkWzBdICsgJyAnOyBiIDwgYTsgKytiKSB7XG4gICAgICAgICAgY1tiXSA9IFooZCwgY1tiXSwgZSkudHJpbSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHZhciB2ID0gYiA9IDA7XG5cbiAgICAgICAgZm9yIChjID0gW107IGIgPCBhOyArK2IpIHtcbiAgICAgICAgICBmb3IgKHZhciBuID0gMDsgbiA8IG07ICsrbikge1xuICAgICAgICAgICAgY1t2KytdID0gWihkW25dICsgJyAnLCBoW2JdLCBlKS50cmltKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICB9XG5cbiAgICByZXR1cm4gYztcbiAgfVxuXG4gIGZ1bmN0aW9uIFooZCwgYywgZSkge1xuICAgIHZhciBoID0gYy5jaGFyQ29kZUF0KDApO1xuICAgIDMzID4gaCAmJiAoaCA9IChjID0gYy50cmltKCkpLmNoYXJDb2RlQXQoMCkpO1xuXG4gICAgc3dpdGNoIChoKSB7XG4gICAgICBjYXNlIDM4OlxuICAgICAgICByZXR1cm4gYy5yZXBsYWNlKEYsICckMScgKyBkLnRyaW0oKSk7XG5cbiAgICAgIGNhc2UgNTg6XG4gICAgICAgIHJldHVybiBkLnRyaW0oKSArIGMucmVwbGFjZShGLCAnJDEnICsgZC50cmltKCkpO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBpZiAoMCA8IDEgKiBlICYmIDAgPCBjLmluZGV4T2YoJ1xcZicpKSByZXR1cm4gYy5yZXBsYWNlKEYsICg1OCA9PT0gZC5jaGFyQ29kZUF0KDApID8gJycgOiAnJDEnKSArIGQudHJpbSgpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZCArIGM7XG4gIH1cblxuICBmdW5jdGlvbiBQKGQsIGMsIGUsIGgpIHtcbiAgICB2YXIgYSA9IGQgKyAnOycsXG4gICAgICAgIG0gPSAyICogYyArIDMgKiBlICsgNCAqIGg7XG5cbiAgICBpZiAoOTQ0ID09PSBtKSB7XG4gICAgICBkID0gYS5pbmRleE9mKCc6JywgOSkgKyAxO1xuICAgICAgdmFyIGIgPSBhLnN1YnN0cmluZyhkLCBhLmxlbmd0aCAtIDEpLnRyaW0oKTtcbiAgICAgIGIgPSBhLnN1YnN0cmluZygwLCBkKS50cmltKCkgKyBiICsgJzsnO1xuICAgICAgcmV0dXJuIDEgPT09IHcgfHwgMiA9PT0gdyAmJiBMKGIsIDEpID8gJy13ZWJraXQtJyArIGIgKyBiIDogYjtcbiAgICB9XG5cbiAgICBpZiAoMCA9PT0gdyB8fCAyID09PSB3ICYmICFMKGEsIDEpKSByZXR1cm4gYTtcblxuICAgIHN3aXRjaCAobSkge1xuICAgICAgY2FzZSAxMDE1OlxuICAgICAgICByZXR1cm4gOTcgPT09IGEuY2hhckNvZGVBdCgxMCkgPyAnLXdlYmtpdC0nICsgYSArIGEgOiBhO1xuXG4gICAgICBjYXNlIDk1MTpcbiAgICAgICAgcmV0dXJuIDExNiA9PT0gYS5jaGFyQ29kZUF0KDMpID8gJy13ZWJraXQtJyArIGEgKyBhIDogYTtcblxuICAgICAgY2FzZSA5NjM6XG4gICAgICAgIHJldHVybiAxMTAgPT09IGEuY2hhckNvZGVBdCg1KSA/ICctd2Via2l0LScgKyBhICsgYSA6IGE7XG5cbiAgICAgIGNhc2UgMTAwOTpcbiAgICAgICAgaWYgKDEwMCAhPT0gYS5jaGFyQ29kZUF0KDQpKSBicmVhaztcblxuICAgICAgY2FzZSA5Njk6XG4gICAgICBjYXNlIDk0MjpcbiAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgYTtcblxuICAgICAgY2FzZSA5Nzg6XG4gICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbW96LScgKyBhICsgYTtcblxuICAgICAgY2FzZSAxMDE5OlxuICAgICAgY2FzZSA5ODM6XG4gICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbW96LScgKyBhICsgJy1tcy0nICsgYSArIGE7XG5cbiAgICAgIGNhc2UgODgzOlxuICAgICAgICBpZiAoNDUgPT09IGEuY2hhckNvZGVBdCg4KSkgcmV0dXJuICctd2Via2l0LScgKyBhICsgYTtcbiAgICAgICAgaWYgKDAgPCBhLmluZGV4T2YoJ2ltYWdlLXNldCgnLCAxMSkpIHJldHVybiBhLnJlcGxhY2UoamEsICckMS13ZWJraXQtJDInKSArIGE7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIDkzMjpcbiAgICAgICAgaWYgKDQ1ID09PSBhLmNoYXJDb2RlQXQoNCkpIHN3aXRjaCAoYS5jaGFyQ29kZUF0KDUpKSB7XG4gICAgICAgICAgY2FzZSAxMDM6XG4gICAgICAgICAgICByZXR1cm4gJy13ZWJraXQtYm94LScgKyBhLnJlcGxhY2UoJy1ncm93JywgJycpICsgJy13ZWJraXQtJyArIGEgKyAnLW1zLScgKyBhLnJlcGxhY2UoJ2dyb3cnLCAncG9zaXRpdmUnKSArIGE7XG5cbiAgICAgICAgICBjYXNlIDExNTpcbiAgICAgICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbXMtJyArIGEucmVwbGFjZSgnc2hyaW5rJywgJ25lZ2F0aXZlJykgKyBhO1xuXG4gICAgICAgICAgY2FzZSA5ODpcbiAgICAgICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbXMtJyArIGEucmVwbGFjZSgnYmFzaXMnLCAncHJlZmVycmVkLXNpemUnKSArIGE7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tcy0nICsgYSArIGE7XG5cbiAgICAgIGNhc2UgOTY0OlxuICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1zLWZsZXgtJyArIGEgKyBhO1xuXG4gICAgICBjYXNlIDEwMjM6XG4gICAgICAgIGlmICg5OSAhPT0gYS5jaGFyQ29kZUF0KDgpKSBicmVhaztcbiAgICAgICAgYiA9IGEuc3Vic3RyaW5nKGEuaW5kZXhPZignOicsIDE1KSkucmVwbGFjZSgnZmxleC0nLCAnJykucmVwbGFjZSgnc3BhY2UtYmV0d2VlbicsICdqdXN0aWZ5Jyk7XG4gICAgICAgIHJldHVybiAnLXdlYmtpdC1ib3gtcGFjaycgKyBiICsgJy13ZWJraXQtJyArIGEgKyAnLW1zLWZsZXgtcGFjaycgKyBiICsgYTtcblxuICAgICAgY2FzZSAxMDA1OlxuICAgICAgICByZXR1cm4ga2EudGVzdChhKSA/IGEucmVwbGFjZShhYSwgJzotd2Via2l0LScpICsgYS5yZXBsYWNlKGFhLCAnOi1tb3otJykgKyBhIDogYTtcblxuICAgICAgY2FzZSAxZTM6XG4gICAgICAgIGIgPSBhLnN1YnN0cmluZygxMykudHJpbSgpO1xuICAgICAgICBjID0gYi5pbmRleE9mKCctJykgKyAxO1xuXG4gICAgICAgIHN3aXRjaCAoYi5jaGFyQ29kZUF0KDApICsgYi5jaGFyQ29kZUF0KGMpKSB7XG4gICAgICAgICAgY2FzZSAyMjY6XG4gICAgICAgICAgICBiID0gYS5yZXBsYWNlKEcsICd0YicpO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlIDIzMjpcbiAgICAgICAgICAgIGIgPSBhLnJlcGxhY2UoRywgJ3RiLXJsJyk7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgMjIwOlxuICAgICAgICAgICAgYiA9IGEucmVwbGFjZShHLCAnbHInKTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBhO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tcy0nICsgYiArIGE7XG5cbiAgICAgIGNhc2UgMTAxNzpcbiAgICAgICAgaWYgKC0xID09PSBhLmluZGV4T2YoJ3N0aWNreScsIDkpKSBicmVhaztcblxuICAgICAgY2FzZSA5NzU6XG4gICAgICAgIGMgPSAoYSA9IGQpLmxlbmd0aCAtIDEwO1xuICAgICAgICBiID0gKDMzID09PSBhLmNoYXJDb2RlQXQoYykgPyBhLnN1YnN0cmluZygwLCBjKSA6IGEpLnN1YnN0cmluZyhkLmluZGV4T2YoJzonLCA3KSArIDEpLnRyaW0oKTtcblxuICAgICAgICBzd2l0Y2ggKG0gPSBiLmNoYXJDb2RlQXQoMCkgKyAoYi5jaGFyQ29kZUF0KDcpIHwgMCkpIHtcbiAgICAgICAgICBjYXNlIDIwMzpcbiAgICAgICAgICAgIGlmICgxMTEgPiBiLmNoYXJDb2RlQXQoOCkpIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSAxMTU6XG4gICAgICAgICAgICBhID0gYS5yZXBsYWNlKGIsICctd2Via2l0LScgKyBiKSArICc7JyArIGE7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgMjA3OlxuICAgICAgICAgIGNhc2UgMTAyOlxuICAgICAgICAgICAgYSA9IGEucmVwbGFjZShiLCAnLXdlYmtpdC0nICsgKDEwMiA8IG0gPyAnaW5saW5lLScgOiAnJykgKyAnYm94JykgKyAnOycgKyBhLnJlcGxhY2UoYiwgJy13ZWJraXQtJyArIGIpICsgJzsnICsgYS5yZXBsYWNlKGIsICctbXMtJyArIGIgKyAnYm94JykgKyAnOycgKyBhO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGEgKyAnOyc7XG5cbiAgICAgIGNhc2UgOTM4OlxuICAgICAgICBpZiAoNDUgPT09IGEuY2hhckNvZGVBdCg1KSkgc3dpdGNoIChhLmNoYXJDb2RlQXQoNikpIHtcbiAgICAgICAgICBjYXNlIDEwNTpcbiAgICAgICAgICAgIHJldHVybiBiID0gYS5yZXBsYWNlKCctaXRlbXMnLCAnJyksICctd2Via2l0LScgKyBhICsgJy13ZWJraXQtYm94LScgKyBiICsgJy1tcy1mbGV4LScgKyBiICsgYTtcblxuICAgICAgICAgIGNhc2UgMTE1OlxuICAgICAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tcy1mbGV4LWl0ZW0tJyArIGEucmVwbGFjZShiYSwgJycpICsgYTtcblxuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1zLWZsZXgtbGluZS1wYWNrJyArIGEucmVwbGFjZSgnYWxpZ24tY29udGVudCcsICcnKS5yZXBsYWNlKGJhLCAnJykgKyBhO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIDk3MzpcbiAgICAgIGNhc2UgOTg5OlxuICAgICAgICBpZiAoNDUgIT09IGEuY2hhckNvZGVBdCgzKSB8fCAxMjIgPT09IGEuY2hhckNvZGVBdCg0KSkgYnJlYWs7XG5cbiAgICAgIGNhc2UgOTMxOlxuICAgICAgY2FzZSA5NTM6XG4gICAgICAgIGlmICghMCA9PT0gbGEudGVzdChkKSkgcmV0dXJuIDExNSA9PT0gKGIgPSBkLnN1YnN0cmluZyhkLmluZGV4T2YoJzonKSArIDEpKS5jaGFyQ29kZUF0KDApID8gUChkLnJlcGxhY2UoJ3N0cmV0Y2gnLCAnZmlsbC1hdmFpbGFibGUnKSwgYywgZSwgaCkucmVwbGFjZSgnOmZpbGwtYXZhaWxhYmxlJywgJzpzdHJldGNoJykgOiBhLnJlcGxhY2UoYiwgJy13ZWJraXQtJyArIGIpICsgYS5yZXBsYWNlKGIsICctbW96LScgKyBiLnJlcGxhY2UoJ2ZpbGwtJywgJycpKSArIGE7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIDk2MjpcbiAgICAgICAgaWYgKGEgPSAnLXdlYmtpdC0nICsgYSArICgxMDIgPT09IGEuY2hhckNvZGVBdCg1KSA/ICctbXMtJyArIGEgOiAnJykgKyBhLCAyMTEgPT09IGUgKyBoICYmIDEwNSA9PT0gYS5jaGFyQ29kZUF0KDEzKSAmJiAwIDwgYS5pbmRleE9mKCd0cmFuc2Zvcm0nLCAxMCkpIHJldHVybiBhLnN1YnN0cmluZygwLCBhLmluZGV4T2YoJzsnLCAyNykgKyAxKS5yZXBsYWNlKG1hLCAnJDEtd2Via2l0LSQyJykgKyBhO1xuICAgIH1cblxuICAgIHJldHVybiBhO1xuICB9XG5cbiAgZnVuY3Rpb24gTChkLCBjKSB7XG4gICAgdmFyIGUgPSBkLmluZGV4T2YoMSA9PT0gYyA/ICc6JyA6ICd7JyksXG4gICAgICAgIGggPSBkLnN1YnN0cmluZygwLCAzICE9PSBjID8gZSA6IDEwKTtcbiAgICBlID0gZC5zdWJzdHJpbmcoZSArIDEsIGQubGVuZ3RoIC0gMSk7XG4gICAgcmV0dXJuIFIoMiAhPT0gYyA/IGggOiBoLnJlcGxhY2UobmEsICckMScpLCBlLCBjKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGVhKGQsIGMpIHtcbiAgICB2YXIgZSA9IFAoYywgYy5jaGFyQ29kZUF0KDApLCBjLmNoYXJDb2RlQXQoMSksIGMuY2hhckNvZGVBdCgyKSk7XG4gICAgcmV0dXJuIGUgIT09IGMgKyAnOycgPyBlLnJlcGxhY2Uob2EsICcgb3IgKCQxKScpLnN1YnN0cmluZyg0KSA6ICcoJyArIGMgKyAnKSc7XG4gIH1cblxuICBmdW5jdGlvbiBIKGQsIGMsIGUsIGgsIGEsIG0sIGIsIHYsIG4sIHEpIHtcbiAgICBmb3IgKHZhciBnID0gMCwgeCA9IGMsIHc7IGcgPCBBOyArK2cpIHtcbiAgICAgIHN3aXRjaCAodyA9IFNbZ10uY2FsbChCLCBkLCB4LCBlLCBoLCBhLCBtLCBiLCB2LCBuLCBxKSkge1xuICAgICAgICBjYXNlIHZvaWQgMDpcbiAgICAgICAgY2FzZSAhMTpcbiAgICAgICAgY2FzZSAhMDpcbiAgICAgICAgY2FzZSBudWxsOlxuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgeCA9IHc7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHggIT09IGMpIHJldHVybiB4O1xuICB9XG5cbiAgZnVuY3Rpb24gVChkKSB7XG4gICAgc3dpdGNoIChkKSB7XG4gICAgICBjYXNlIHZvaWQgMDpcbiAgICAgIGNhc2UgbnVsbDpcbiAgICAgICAgQSA9IFMubGVuZ3RoID0gMDtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGlmICgnZnVuY3Rpb24nID09PSB0eXBlb2YgZCkgU1tBKytdID0gZDtlbHNlIGlmICgnb2JqZWN0JyA9PT0gdHlwZW9mIGQpIGZvciAodmFyIGMgPSAwLCBlID0gZC5sZW5ndGg7IGMgPCBlOyArK2MpIHtcbiAgICAgICAgICBUKGRbY10pO1xuICAgICAgICB9IGVsc2UgWSA9ICEhZCB8IDA7XG4gICAgfVxuXG4gICAgcmV0dXJuIFQ7XG4gIH1cblxuICBmdW5jdGlvbiBVKGQpIHtcbiAgICBkID0gZC5wcmVmaXg7XG4gICAgdm9pZCAwICE9PSBkICYmIChSID0gbnVsbCwgZCA/ICdmdW5jdGlvbicgIT09IHR5cGVvZiBkID8gdyA9IDEgOiAodyA9IDIsIFIgPSBkKSA6IHcgPSAwKTtcbiAgICByZXR1cm4gVTtcbiAgfVxuXG4gIGZ1bmN0aW9uIEIoZCwgYykge1xuICAgIHZhciBlID0gZDtcbiAgICAzMyA+IGUuY2hhckNvZGVBdCgwKSAmJiAoZSA9IGUudHJpbSgpKTtcbiAgICBWID0gZTtcbiAgICBlID0gW1ZdO1xuXG4gICAgaWYgKDAgPCBBKSB7XG4gICAgICB2YXIgaCA9IEgoLTEsIGMsIGUsIGUsIEQsIHosIDAsIDAsIDAsIDApO1xuICAgICAgdm9pZCAwICE9PSBoICYmICdzdHJpbmcnID09PSB0eXBlb2YgaCAmJiAoYyA9IGgpO1xuICAgIH1cblxuICAgIHZhciBhID0gTShPLCBlLCBjLCAwLCAwKTtcbiAgICAwIDwgQSAmJiAoaCA9IEgoLTIsIGEsIGUsIGUsIEQsIHosIGEubGVuZ3RoLCAwLCAwLCAwKSwgdm9pZCAwICE9PSBoICYmIChhID0gaCkpO1xuICAgIFYgPSAnJztcbiAgICBFID0gMDtcbiAgICB6ID0gRCA9IDE7XG4gICAgcmV0dXJuIGE7XG4gIH1cblxuICB2YXIgY2EgPSAvXlxcMCsvZyxcbiAgICAgIE4gPSAvW1xcMFxcclxcZl0vZyxcbiAgICAgIGFhID0gLzogKi9nLFxuICAgICAga2EgPSAvem9vfGdyYS8sXG4gICAgICBtYSA9IC8oWyw6IF0pKHRyYW5zZm9ybSkvZyxcbiAgICAgIGlhID0gLyxcXHIrPy9nLFxuICAgICAgRiA9IC8oW1xcdFxcclxcbiBdKSpcXGY/Ji9nLFxuICAgICAgZmEgPSAvQChrXFx3KylcXHMqKFxcUyopXFxzKi8sXG4gICAgICBRID0gLzo6KHBsYWNlKS9nLFxuICAgICAgaGEgPSAvOihyZWFkLW9ubHkpL2csXG4gICAgICBHID0gL1tzdmhdXFx3Ky1bdGJscl17Mn0vLFxuICAgICAgZGEgPSAvXFwoXFxzKiguKilcXHMqXFwpL2csXG4gICAgICBvYSA9IC8oW1xcc1xcU10qPyk7L2csXG4gICAgICBiYSA9IC8tc2VsZnxmbGV4LS9nLFxuICAgICAgbmEgPSAvW15dKj8oOltycF1bZWxdYVtcXHctXSspW15dKi8sXG4gICAgICBsYSA9IC9zdHJldGNofDpcXHMqXFx3K1xcLSg/OmNvbnRlfGF2YWlsKS8sXG4gICAgICBqYSA9IC8oW14tXSkoaW1hZ2Utc2V0XFwoKS8sXG4gICAgICB6ID0gMSxcbiAgICAgIEQgPSAxLFxuICAgICAgRSA9IDAsXG4gICAgICB3ID0gMSxcbiAgICAgIE8gPSBbXSxcbiAgICAgIFMgPSBbXSxcbiAgICAgIEEgPSAwLFxuICAgICAgUiA9IG51bGwsXG4gICAgICBZID0gMCxcbiAgICAgIFYgPSAnJztcbiAgQi51c2UgPSBUO1xuICBCLnNldCA9IFU7XG4gIHZvaWQgMCAhPT0gVyAmJiBVKFcpO1xuICByZXR1cm4gQjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc3R5bGlzX21pbjsiLCJpbXBvcnQgeyBTdHlsZVNoZWV0IH0gZnJvbSAnQGVtb3Rpb24vc2hlZXQnO1xuaW1wb3J0IFN0eWxpcyBmcm9tICdAZW1vdGlvbi9zdHlsaXMnO1xuaW1wb3J0ICdAZW1vdGlvbi93ZWFrLW1lbW9pemUnOyAvLyBodHRwczovL2dpdGh1Yi5jb20vdGh5c3VsdGFuL3N0eWxpcy5qcy90cmVlL21hc3Rlci9wbHVnaW5zL3J1bGUtc2hlZXRcbi8vIGlubGluZWQgdG8gYXZvaWQgdW1kIHdyYXBwZXIgYW5kIHBlZXJEZXAgd2FybmluZ3MvaW5zdGFsbGluZyBzdHlsaXNcbi8vIHNpbmNlIHdlIHVzZSBzdHlsaXMgYWZ0ZXIgY2xvc3VyZSBjb21waWxlclxuXG52YXIgZGVsaW1pdGVyID0gJy8qfCovJztcbnZhciBuZWVkbGUgPSBkZWxpbWl0ZXIgKyAnfSc7XG5cbmZ1bmN0aW9uIHRvU2hlZXQoYmxvY2spIHtcbiAgaWYgKGJsb2NrKSB7XG4gICAgU2hlZXQuY3VycmVudC5pbnNlcnQoYmxvY2sgKyAnfScpO1xuICB9XG59XG5cbnZhciBTaGVldCA9IHtcbiAgY3VycmVudDogbnVsbFxufTtcblxudmFyIHJ1bGVTaGVldCA9IGZ1bmN0aW9uIHJ1bGVTaGVldChjb250ZXh0LCBjb250ZW50LCBzZWxlY3RvcnMsIHBhcmVudHMsIGxpbmUsIGNvbHVtbiwgbGVuZ3RoLCBucywgZGVwdGgsIGF0KSB7XG4gIHN3aXRjaCAoY29udGV4dCkge1xuICAgIC8vIHByb3BlcnR5XG4gICAgY2FzZSAxOlxuICAgICAge1xuICAgICAgICBzd2l0Y2ggKGNvbnRlbnQuY2hhckNvZGVBdCgwKSkge1xuICAgICAgICAgIGNhc2UgNjQ6XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIC8vIEBpbXBvcnRcbiAgICAgICAgICAgICAgU2hlZXQuY3VycmVudC5pbnNlcnQoY29udGVudCArICc7Jyk7XG4gICAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAvLyBjaGFyY29kZSBmb3IgbFxuXG4gICAgICAgICAgY2FzZSAxMDg6XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIC8vIGNoYXJjb2RlIGZvciBiXG4gICAgICAgICAgICAgIC8vIHRoaXMgaWdub3JlcyBsYWJlbFxuICAgICAgICAgICAgICBpZiAoY29udGVudC5jaGFyQ29kZUF0KDIpID09PSA5OCkge1xuICAgICAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgLy8gc2VsZWN0b3JcblxuICAgIGNhc2UgMjpcbiAgICAgIHtcbiAgICAgICAgaWYgKG5zID09PSAwKSByZXR1cm4gY29udGVudCArIGRlbGltaXRlcjtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgLy8gYXQtcnVsZVxuXG4gICAgY2FzZSAzOlxuICAgICAge1xuICAgICAgICBzd2l0Y2ggKG5zKSB7XG4gICAgICAgICAgLy8gQGZvbnQtZmFjZSwgQHBhZ2VcbiAgICAgICAgICBjYXNlIDEwMjpcbiAgICAgICAgICBjYXNlIDExMjpcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgU2hlZXQuY3VycmVudC5pbnNlcnQoc2VsZWN0b3JzWzBdICsgY29udGVudCk7XG4gICAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIHJldHVybiBjb250ZW50ICsgKGF0ID09PSAwID8gZGVsaW1pdGVyIDogJycpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICBjYXNlIC0yOlxuICAgICAge1xuICAgICAgICBjb250ZW50LnNwbGl0KG5lZWRsZSkuZm9yRWFjaCh0b1NoZWV0KTtcbiAgICAgIH1cbiAgfVxufTtcblxudmFyIGNyZWF0ZUNhY2hlID0gZnVuY3Rpb24gY3JlYXRlQ2FjaGUob3B0aW9ucykge1xuICBpZiAob3B0aW9ucyA9PT0gdW5kZWZpbmVkKSBvcHRpb25zID0ge307XG4gIHZhciBrZXkgPSBvcHRpb25zLmtleSB8fCAnY3NzJztcbiAgdmFyIHN0eWxpc09wdGlvbnM7XG5cbiAgaWYgKG9wdGlvbnMucHJlZml4ICE9PSB1bmRlZmluZWQpIHtcbiAgICBzdHlsaXNPcHRpb25zID0ge1xuICAgICAgcHJlZml4OiBvcHRpb25zLnByZWZpeFxuICAgIH07XG4gIH1cblxuICB2YXIgc3R5bGlzID0gbmV3IFN0eWxpcyhzdHlsaXNPcHRpb25zKTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vICRGbG93Rml4TWVcbiAgICBpZiAoL1teYS16LV0vLnRlc3Qoa2V5KSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRW1vdGlvbiBrZXkgbXVzdCBvbmx5IGNvbnRhaW4gbG93ZXIgY2FzZSBhbHBoYWJldGljYWwgY2hhcmFjdGVycyBhbmQgLSBidXQgXFxcIlwiICsga2V5ICsgXCJcXFwiIHdhcyBwYXNzZWRcIik7XG4gICAgfVxuICB9XG5cbiAgdmFyIGluc2VydGVkID0ge307IC8vICRGbG93Rml4TWVcblxuICB2YXIgY29udGFpbmVyO1xuICB7XG4gICAgY29udGFpbmVyID0gb3B0aW9ucy5jb250YWluZXIgfHwgZG9jdW1lbnQuaGVhZDtcbiAgICB2YXIgbm9kZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwic3R5bGVbZGF0YS1lbW90aW9uLVwiICsga2V5ICsgXCJdXCIpO1xuICAgIEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwobm9kZXMsIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICB2YXIgYXR0cmliID0gbm9kZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLWVtb3Rpb24tXCIgKyBrZXkpOyAvLyAkRmxvd0ZpeE1lXG5cbiAgICAgIGF0dHJpYi5zcGxpdCgnICcpLmZvckVhY2goZnVuY3Rpb24gKGlkKSB7XG4gICAgICAgIGluc2VydGVkW2lkXSA9IHRydWU7XG4gICAgICB9KTtcblxuICAgICAgaWYgKG5vZGUucGFyZW50Tm9kZSAhPT0gY29udGFpbmVyKSB7XG4gICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChub2RlKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHZhciBfaW5zZXJ0O1xuXG4gIHtcbiAgICBzdHlsaXMudXNlKG9wdGlvbnMuc3R5bGlzUGx1Z2lucykocnVsZVNoZWV0KTtcblxuICAgIF9pbnNlcnQgPSBmdW5jdGlvbiBpbnNlcnQoc2VsZWN0b3IsIHNlcmlhbGl6ZWQsIHNoZWV0LCBzaG91bGRDYWNoZSkge1xuICAgICAgdmFyIG5hbWUgPSBzZXJpYWxpemVkLm5hbWU7XG4gICAgICBTaGVldC5jdXJyZW50ID0gc2hlZXQ7XG5cbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHNlcmlhbGl6ZWQubWFwICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdmFyIG1hcCA9IHNlcmlhbGl6ZWQubWFwO1xuICAgICAgICBTaGVldC5jdXJyZW50ID0ge1xuICAgICAgICAgIGluc2VydDogZnVuY3Rpb24gaW5zZXJ0KHJ1bGUpIHtcbiAgICAgICAgICAgIHNoZWV0Lmluc2VydChydWxlICsgbWFwKTtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIHN0eWxpcyhzZWxlY3Rvciwgc2VyaWFsaXplZC5zdHlsZXMpO1xuXG4gICAgICBpZiAoc2hvdWxkQ2FjaGUpIHtcbiAgICAgICAgY2FjaGUuaW5zZXJ0ZWRbbmFtZV0gPSB0cnVlO1xuICAgICAgfVxuICAgIH07XG4gIH1cblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIGh0dHBzOi8vZXNiZW5jaC5jb20vYmVuY2gvNWJmNzM3MWE0Y2Q3ZTYwMDllZjYxZDBhXG4gICAgdmFyIGNvbW1lbnRTdGFydCA9IC9cXC9cXCovZztcbiAgICB2YXIgY29tbWVudEVuZCA9IC9cXCpcXC8vZztcbiAgICBzdHlsaXMudXNlKGZ1bmN0aW9uIChjb250ZXh0LCBjb250ZW50KSB7XG4gICAgICBzd2l0Y2ggKGNvbnRleHQpIHtcbiAgICAgICAgY2FzZSAtMTpcbiAgICAgICAgICB7XG4gICAgICAgICAgICB3aGlsZSAoY29tbWVudFN0YXJ0LnRlc3QoY29udGVudCkpIHtcbiAgICAgICAgICAgICAgY29tbWVudEVuZC5sYXN0SW5kZXggPSBjb21tZW50U3RhcnQubGFzdEluZGV4O1xuXG4gICAgICAgICAgICAgIGlmIChjb21tZW50RW5kLnRlc3QoY29udGVudCkpIHtcbiAgICAgICAgICAgICAgICBjb21tZW50U3RhcnQubGFzdEluZGV4ID0gY29tbWVudEVuZC5sYXN0SW5kZXg7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdXIgc3R5bGVzIGhhdmUgYW4gdW50ZXJtaW5hdGVkIGNvbW1lbnQgKFwiLypcIiB3aXRob3V0IGNvcnJlc3BvbmRpbmcgXCIqL1wiKS4nKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29tbWVudFN0YXJ0Lmxhc3RJbmRleCA9IDA7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gICAgc3R5bGlzLnVzZShmdW5jdGlvbiAoY29udGV4dCwgY29udGVudCwgc2VsZWN0b3JzKSB7XG4gICAgICBzd2l0Y2ggKGNvbnRleHQpIHtcbiAgICAgICAgY2FzZSAtMTpcbiAgICAgICAgICB7XG4gICAgICAgICAgICB2YXIgZmxhZyA9ICdlbW90aW9uLWRpc2FibGUtc2VydmVyLXJlbmRlcmluZy11bnNhZmUtc2VsZWN0b3Itd2FybmluZy1wbGVhc2UtZG8tbm90LXVzZS10aGlzLXRoZS13YXJuaW5nLWV4aXN0cy1mb3ItYS1yZWFzb24nO1xuICAgICAgICAgICAgdmFyIHVuc2FmZVBzZXVkb0NsYXNzZXMgPSBjb250ZW50Lm1hdGNoKC8oOmZpcnN0fDpudGh8Om50aC1sYXN0KS1jaGlsZC9nKTtcblxuICAgICAgICAgICAgaWYgKHVuc2FmZVBzZXVkb0NsYXNzZXMgJiYgY2FjaGUuY29tcGF0ICE9PSB0cnVlKSB7XG4gICAgICAgICAgICAgIHVuc2FmZVBzZXVkb0NsYXNzZXMuZm9yRWFjaChmdW5jdGlvbiAodW5zYWZlUHNldWRvQ2xhc3MpIHtcbiAgICAgICAgICAgICAgICB2YXIgaWdub3JlUmVnRXhwID0gbmV3IFJlZ0V4cCh1bnNhZmVQc2V1ZG9DbGFzcyArIFwiLipcXFxcL1xcXFwqIFwiICsgZmxhZyArIFwiIFxcXFwqXFxcXC9cIik7XG4gICAgICAgICAgICAgICAgdmFyIGlnbm9yZSA9IGlnbm9yZVJlZ0V4cC50ZXN0KGNvbnRlbnQpO1xuXG4gICAgICAgICAgICAgICAgaWYgKHVuc2FmZVBzZXVkb0NsYXNzICYmICFpZ25vcmUpIHtcbiAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJUaGUgcHNldWRvIGNsYXNzIFxcXCJcIiArIHVuc2FmZVBzZXVkb0NsYXNzICsgXCJcXFwiIGlzIHBvdGVudGlhbGx5IHVuc2FmZSB3aGVuIGRvaW5nIHNlcnZlci1zaWRlIHJlbmRlcmluZy4gVHJ5IGNoYW5naW5nIGl0IHRvIFxcXCJcIiArIHVuc2FmZVBzZXVkb0NsYXNzLnNwbGl0KCctY2hpbGQnKVswXSArIFwiLW9mLXR5cGVcXFwiLlwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICB2YXIgY2FjaGUgPSB7XG4gICAga2V5OiBrZXksXG4gICAgc2hlZXQ6IG5ldyBTdHlsZVNoZWV0KHtcbiAgICAgIGtleToga2V5LFxuICAgICAgY29udGFpbmVyOiBjb250YWluZXIsXG4gICAgICBub25jZTogb3B0aW9ucy5ub25jZSxcbiAgICAgIHNwZWVkeTogb3B0aW9ucy5zcGVlZHlcbiAgICB9KSxcbiAgICBub25jZTogb3B0aW9ucy5ub25jZSxcbiAgICBpbnNlcnRlZDogaW5zZXJ0ZWQsXG4gICAgcmVnaXN0ZXJlZDoge30sXG4gICAgaW5zZXJ0OiBfaW5zZXJ0XG4gIH07XG4gIHJldHVybiBjYWNoZTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUNhY2hlOyIsImltcG9ydCB7IENPTE9SUywgVVRJTElaQVRJT04gfSBmcm9tICdlbGVtZW50cy9jb2xvcnMvY29sb3JzJ1xuaW1wb3J0IHsgVFlQT0dSQVBIWSB9IGZyb20gJy4vdmFyaWFibGVzJ1xuY29uc3QgeyAkd2hpdGUsICRlbWVyYWxkLCAkZGFya3Ntb2tlIH0gPSBDT0xPUlNcbmNvbnN0IHsgJHNoYWRvd0J1dHRvbiwgJHNoYWRvd0J1dHRvbkRvd24gfSA9IFVUSUxJWkFUSU9OXG5jb25zdCB7ICRmb250c3RhY2tEZWZhdWx0IH0gPSBUWVBPR1JBUEhZXG5cbmV4cG9ydCBjb25zdCBtaXhpbl9mb250QmFzZSA9IGBcbiAgZm9udC1mYW1pbHk6ICdwcm94aW1hLW5vdmEnLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsICdTZWdvZSBVSScsXG4gICAgUm9ib3RvLCBPeHlnZW4tU2FucywgVWJ1bnR1LCBDYW50YXJlbGwsICdIZWx2ZXRpY2EgTmV1ZScsIEhlbHZldGljYSxcbiAgICBzYW5zLXNlcmlmICFpbXBvcnRhbnQ7XG5gXG5cbmV4cG9ydCBjb25zdCBtaXhpbl9wb2NrZXRCdXR0b24gPSBgXG4gIGFsbDogdW5zZXQ7XG4gIGJhY2tncm91bmQtY29sb3I6IG5vbmU7XG4gIGJvcmRlcjogMDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtZmFtaWx5OiAkeyRmb250c3RhY2tEZWZhdWx0fTtcbiAgcGFkZGluZzogMDtcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTsgLyogZm9yIGJ1dHRvbiAqL1xuICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xuICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XG5gXG5leHBvcnQgY29uc3QgbWl4aW5fcG9ja2V0QnV0dG9uU3R5bGVkID0gYFxuICAke21peGluX3BvY2tldEJ1dHRvbn1cblxuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIGJveC1zaGFkb3c6ICR7JHNoYWRvd0J1dHRvbn07XG4gIHBhZGRpbmc6IDAuNWVtIDFlbTtcblxuICAmOmhvdmVyIHtcbiAgICBib3gtc2hhZG93OiAkeyRzaGFkb3dCdXR0b25Eb3dufTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMXB4KTtcbiAgfVxuYFxuZXhwb3J0IGNvbnN0IG1peGluX3BvY2tldEJ1dHRvblllcyA9IGBcbiR7bWl4aW5fcG9ja2V0QnV0dG9uU3R5bGVkfVxuXG4gIGJhY2tncm91bmQtY29sb3I6ICR7JGVtZXJhbGR9O1xuICBjb2xvcjogJHskd2hpdGV9O1xuXG4gICY6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGRhcmtlbigkeyRlbWVyYWxkfSA1JSk7XG4gIH1cbmBcbmV4cG9ydCBjb25zdCBtaXhpbl9wb2NrZXRCdXR0b25ObyA9IGBcbiR7bWl4aW5fcG9ja2V0QnV0dG9uU3R5bGVkfVxuXG4gIGJhY2tncm91bmQtY29sb3I6ICR7JGRhcmtzbW9rZX07XG4gIGNvbG9yOiAkeyR3aGl0ZX07XG5cbiAgJjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogZGFya2VuKCR7JGRhcmtzbW9rZX0gMTAlKTtcbiAgfVxuYFxuIiwiaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHNMb29zZSc7XG5pbXBvcnQgeyBjcmVhdGVDb250ZXh0LCBmb3J3YXJkUmVmLCBjcmVhdGVFbGVtZW50LCBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY3JlYXRlQ2FjaGUgZnJvbSAnQGVtb3Rpb24vY2FjaGUnO1xuaW1wb3J0IHsgZ2V0UmVnaXN0ZXJlZFN0eWxlcywgaW5zZXJ0U3R5bGVzIH0gZnJvbSAnQGVtb3Rpb24vdXRpbHMnO1xuaW1wb3J0IHsgc2VyaWFsaXplU3R5bGVzIH0gZnJvbSAnQGVtb3Rpb24vc2VyaWFsaXplJztcbmltcG9ydCB7IFN0eWxlU2hlZXQgfSBmcm9tICdAZW1vdGlvbi9zaGVldCc7XG5pbXBvcnQgY3NzIGZyb20gJ0BlbW90aW9uL2Nzcyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIGNzcyB9IGZyb20gJ0BlbW90aW9uL2Nzcyc7XG52YXIgRW1vdGlvbkNhY2hlQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQoIC8vIHdlJ3JlIGRvaW5nIHRoaXMgdG8gYXZvaWQgcHJlY29uc3RydWN0J3MgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIGluIHRoaXMgb25lIGNhc2Vcbi8vIGJlY2F1c2UgdGhpcyBtb2R1bGUgaXMgcHJpbWFyaWx5IGludGVuZGVkIGZvciB0aGUgYnJvd3NlciBhbmQgbm9kZVxuLy8gYnV0IGl0J3MgYWxzbyByZXF1aXJlZCBpbiByZWFjdCBuYXRpdmUgYW5kIHNpbWlsYXIgZW52aXJvbm1lbnRzIHNvbWV0aW1lc1xuLy8gYW5kIHdlIGNvdWxkIGhhdmUgYSBzcGVjaWFsIGJ1aWxkIGp1c3QgZm9yIHRoYXRcbi8vIGJ1dCB0aGlzIGlzIG11Y2ggZWFzaWVyIGFuZCB0aGUgbmF0aXZlIHBhY2thZ2VzXG4vLyBtaWdodCB1c2UgYSBkaWZmZXJlbnQgdGhlbWUgY29udGV4dCBpbiB0aGUgZnV0dXJlIGFueXdheVxudHlwZW9mIEhUTUxFbGVtZW50ICE9PSAndW5kZWZpbmVkJyA/IGNyZWF0ZUNhY2hlKCkgOiBudWxsKTtcbnZhciBUaGVtZUNvbnRleHQgPSBjcmVhdGVDb250ZXh0KHt9KTtcbnZhciBDYWNoZVByb3ZpZGVyID0gRW1vdGlvbkNhY2hlQ29udGV4dC5Qcm92aWRlcjtcblxudmFyIHdpdGhFbW90aW9uQ2FjaGUgPSBmdW5jdGlvbiB3aXRoRW1vdGlvbkNhY2hlKGZ1bmMpIHtcbiAgdmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcihwcm9wcywgcmVmKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoRW1vdGlvbkNhY2hlQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNhY2hlKSB7XG4gICAgICByZXR1cm4gZnVuYyhwcm9wcywgY2FjaGUsIHJlZik7XG4gICAgfSk7XG4gIH07IC8vICRGbG93Rml4TWVcblxuXG4gIHJldHVybiBmb3J3YXJkUmVmKHJlbmRlcik7XG59OyAvLyB0aHVzIHdlIG9ubHkgbmVlZCB0byByZXBsYWNlIHdoYXQgaXMgYSB2YWxpZCBjaGFyYWN0ZXIgZm9yIEpTLCBidXQgbm90IGZvciBDU1NcblxuXG52YXIgc2FuaXRpemVJZGVudGlmaWVyID0gZnVuY3Rpb24gc2FuaXRpemVJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgcmV0dXJuIGlkZW50aWZpZXIucmVwbGFjZSgvXFwkL2csICctJyk7XG59O1xuXG52YXIgdHlwZVByb3BOYW1lID0gJ19fRU1PVElPTl9UWVBFX1BMRUFTRV9ET19OT1RfVVNFX18nO1xudmFyIGxhYmVsUHJvcE5hbWUgPSAnX19FTU9USU9OX0xBQkVMX1BMRUFTRV9ET19OT1RfVVNFX18nO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcblxudmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcihjYWNoZSwgcHJvcHMsIHRoZW1lLCByZWYpIHtcbiAgdmFyIGNzc1Byb3AgPSB0aGVtZSA9PT0gbnVsbCA/IHByb3BzLmNzcyA6IHByb3BzLmNzcyh0aGVtZSk7IC8vIHNvIHRoYXQgdXNpbmcgYGNzc2AgZnJvbSBgZW1vdGlvbmAgYW5kIHBhc3NpbmcgdGhlIHJlc3VsdCB0byB0aGUgY3NzIHByb3Agd29ya3NcbiAgLy8gbm90IHBhc3NpbmcgdGhlIHJlZ2lzdGVyZWQgY2FjaGUgdG8gc2VyaWFsaXplU3R5bGVzIGJlY2F1c2UgaXQgd291bGRcbiAgLy8gbWFrZSBjZXJ0YWluIGJhYmVsIG9wdGltaXNhdGlvbnMgbm90IHBvc3NpYmxlXG5cbiAgaWYgKHR5cGVvZiBjc3NQcm9wID09PSAnc3RyaW5nJyAmJiBjYWNoZS5yZWdpc3RlcmVkW2Nzc1Byb3BdICE9PSB1bmRlZmluZWQpIHtcbiAgICBjc3NQcm9wID0gY2FjaGUucmVnaXN0ZXJlZFtjc3NQcm9wXTtcbiAgfVxuXG4gIHZhciB0eXBlID0gcHJvcHNbdHlwZVByb3BOYW1lXTtcbiAgdmFyIHJlZ2lzdGVyZWRTdHlsZXMgPSBbY3NzUHJvcF07XG4gIHZhciBjbGFzc05hbWUgPSAnJztcblxuICBpZiAodHlwZW9mIHByb3BzLmNsYXNzTmFtZSA9PT0gJ3N0cmluZycpIHtcbiAgICBjbGFzc05hbWUgPSBnZXRSZWdpc3RlcmVkU3R5bGVzKGNhY2hlLnJlZ2lzdGVyZWQsIHJlZ2lzdGVyZWRTdHlsZXMsIHByb3BzLmNsYXNzTmFtZSk7XG4gIH0gZWxzZSBpZiAocHJvcHMuY2xhc3NOYW1lICE9IG51bGwpIHtcbiAgICBjbGFzc05hbWUgPSBwcm9wcy5jbGFzc05hbWUgKyBcIiBcIjtcbiAgfVxuXG4gIHZhciBzZXJpYWxpemVkID0gc2VyaWFsaXplU3R5bGVzKHJlZ2lzdGVyZWRTdHlsZXMpO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHNlcmlhbGl6ZWQubmFtZS5pbmRleE9mKCctJykgPT09IC0xKSB7XG4gICAgdmFyIGxhYmVsRnJvbVN0YWNrID0gcHJvcHNbbGFiZWxQcm9wTmFtZV07XG5cbiAgICBpZiAobGFiZWxGcm9tU3RhY2spIHtcbiAgICAgIHNlcmlhbGl6ZWQgPSBzZXJpYWxpemVTdHlsZXMoW3NlcmlhbGl6ZWQsICdsYWJlbDonICsgbGFiZWxGcm9tU3RhY2sgKyAnOyddKTtcbiAgICB9XG4gIH1cblxuICB2YXIgcnVsZXMgPSBpbnNlcnRTdHlsZXMoY2FjaGUsIHNlcmlhbGl6ZWQsIHR5cGVvZiB0eXBlID09PSAnc3RyaW5nJyk7XG4gIGNsYXNzTmFtZSArPSBjYWNoZS5rZXkgKyBcIi1cIiArIHNlcmlhbGl6ZWQubmFtZTtcbiAgdmFyIG5ld1Byb3BzID0ge307XG5cbiAgZm9yICh2YXIga2V5IGluIHByb3BzKSB7XG4gICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwocHJvcHMsIGtleSkgJiYga2V5ICE9PSAnY3NzJyAmJiBrZXkgIT09IHR5cGVQcm9wTmFtZSAmJiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyB8fCBrZXkgIT09IGxhYmVsUHJvcE5hbWUpKSB7XG4gICAgICBuZXdQcm9wc1trZXldID0gcHJvcHNba2V5XTtcbiAgICB9XG4gIH1cblxuICBuZXdQcm9wcy5yZWYgPSByZWY7XG4gIG5ld1Byb3BzLmNsYXNzTmFtZSA9IGNsYXNzTmFtZTtcbiAgdmFyIGVsZSA9IGNyZWF0ZUVsZW1lbnQodHlwZSwgbmV3UHJvcHMpO1xuICByZXR1cm4gZWxlO1xufTtcblxudmFyIEVtb3Rpb24gPSAvKiAjX19QVVJFX18gKi93aXRoRW1vdGlvbkNhY2hlKGZ1bmN0aW9uIChwcm9wcywgY2FjaGUsIHJlZikge1xuICAvLyB1c2UgQ29udGV4dC5yZWFkIGZvciB0aGUgdGhlbWUgd2hlbiBpdCdzIHN0YWJsZVxuICBpZiAodHlwZW9mIHByb3BzLmNzcyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBjcmVhdGVFbGVtZW50KFRoZW1lQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKHRoZW1lKSB7XG4gICAgICByZXR1cm4gcmVuZGVyKGNhY2hlLCBwcm9wcywgdGhlbWUsIHJlZik7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gcmVuZGVyKGNhY2hlLCBwcm9wcywgbnVsbCwgcmVmKTtcbn0pO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBFbW90aW9uLmRpc3BsYXlOYW1lID0gJ0Vtb3Rpb25Dc3NQcm9wSW50ZXJuYWwnO1xufSAvLyAkRmxvd0ZpeE1lXG5cblxudmFyIGpzeCA9IGZ1bmN0aW9uIGpzeCh0eXBlLCBwcm9wcykge1xuICB2YXIgYXJncyA9IGFyZ3VtZW50cztcblxuICBpZiAocHJvcHMgPT0gbnVsbCB8fCAhaGFzT3duUHJvcGVydHkuY2FsbChwcm9wcywgJ2NzcycpKSB7XG4gICAgLy8gJEZsb3dGaXhNZVxuICAgIHJldHVybiBjcmVhdGVFbGVtZW50LmFwcGx5KHVuZGVmaW5lZCwgYXJncyk7XG4gIH1cblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB0eXBlb2YgcHJvcHMuY3NzID09PSAnc3RyaW5nJyAmJiAvLyBjaGVjayBpZiB0aGVyZSBpcyBhIGNzcyBkZWNsYXJhdGlvblxuICBwcm9wcy5jc3MuaW5kZXhPZignOicpICE9PSAtMSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIlN0cmluZ3MgYXJlIG5vdCBhbGxvd2VkIGFzIGNzcyBwcm9wIHZhbHVlcywgcGxlYXNlIHdyYXAgaXQgaW4gYSBjc3MgdGVtcGxhdGUgbGl0ZXJhbCBmcm9tICdAZW1vdGlvbi9jc3MnIGxpa2UgdGhpczogY3NzYFwiICsgcHJvcHMuY3NzICsgXCJgXCIpO1xuICB9XG5cbiAgdmFyIGFyZ3NMZW5ndGggPSBhcmdzLmxlbmd0aDtcbiAgdmFyIGNyZWF0ZUVsZW1lbnRBcmdBcnJheSA9IG5ldyBBcnJheShhcmdzTGVuZ3RoKTtcbiAgY3JlYXRlRWxlbWVudEFyZ0FycmF5WzBdID0gRW1vdGlvbjtcbiAgdmFyIG5ld1Byb3BzID0ge307XG5cbiAgZm9yICh2YXIga2V5IGluIHByb3BzKSB7XG4gICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwocHJvcHMsIGtleSkpIHtcbiAgICAgIG5ld1Byb3BzW2tleV0gPSBwcm9wc1trZXldO1xuICAgIH1cbiAgfVxuXG4gIG5ld1Byb3BzW3R5cGVQcm9wTmFtZV0gPSB0eXBlO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgdmFyIGVycm9yID0gbmV3IEVycm9yKCk7XG5cbiAgICBpZiAoZXJyb3Iuc3RhY2spIHtcbiAgICAgIC8vIGNocm9tZVxuICAgICAgdmFyIG1hdGNoID0gZXJyb3Iuc3RhY2subWF0Y2goL2F0ICg/Ok9iamVjdFxcLnxNb2R1bGVcXC58KWpzeC4qXFxuXFxzK2F0ICg/Ok9iamVjdFxcLnwpKFtBLVpdW0EtWmEteiRdKykgLyk7XG5cbiAgICAgIGlmICghbWF0Y2gpIHtcbiAgICAgICAgLy8gc2FmYXJpIGFuZCBmaXJlZm94XG4gICAgICAgIG1hdGNoID0gZXJyb3Iuc3RhY2subWF0Y2goLy4qXFxuKFtBLVpdW0EtWmEteiRdKylALyk7XG4gICAgICB9XG5cbiAgICAgIGlmIChtYXRjaCkge1xuICAgICAgICBuZXdQcm9wc1tsYWJlbFByb3BOYW1lXSA9IHNhbml0aXplSWRlbnRpZmllcihtYXRjaFsxXSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgY3JlYXRlRWxlbWVudEFyZ0FycmF5WzFdID0gbmV3UHJvcHM7XG5cbiAgZm9yICh2YXIgaSA9IDI7IGkgPCBhcmdzTGVuZ3RoOyBpKyspIHtcbiAgICBjcmVhdGVFbGVtZW50QXJnQXJyYXlbaV0gPSBhcmdzW2ldO1xuICB9IC8vICRGbG93Rml4TWVcblxuXG4gIHJldHVybiBjcmVhdGVFbGVtZW50LmFwcGx5KG51bGwsIGNyZWF0ZUVsZW1lbnRBcmdBcnJheSk7XG59O1xuXG52YXIgd2FybmVkQWJvdXRDc3NQcm9wRm9yR2xvYmFsID0gZmFsc2U7XG52YXIgR2xvYmFsID0gLyogI19fUFVSRV9fICovd2l0aEVtb3Rpb25DYWNoZShmdW5jdGlvbiAocHJvcHMsIGNhY2hlKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmICF3YXJuZWRBYm91dENzc1Byb3BGb3JHbG9iYWwgJiYgKCAvLyBjaGVjayBmb3IgY2xhc3NOYW1lIGFzIHdlbGwgc2luY2UgdGhlIHVzZXIgaXNcbiAgLy8gcHJvYmFibHkgdXNpbmcgdGhlIGN1c3RvbSBjcmVhdGVFbGVtZW50IHdoaWNoXG4gIC8vIG1lYW5zIGl0IHdpbGwgYmUgdHVybmVkIGludG8gYSBjbGFzc05hbWUgcHJvcFxuICAvLyAkRmxvd0ZpeE1lIEkgZG9uJ3QgcmVhbGx5IHdhbnQgdG8gYWRkIGl0IHRvIHRoZSB0eXBlIHNpbmNlIGl0IHNob3VsZG4ndCBiZSB1c2VkXG4gIHByb3BzLmNsYXNzTmFtZSB8fCBwcm9wcy5jc3MpKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkl0IGxvb2tzIGxpa2UgeW91J3JlIHVzaW5nIHRoZSBjc3MgcHJvcCBvbiBHbG9iYWwsIGRpZCB5b3UgbWVhbiB0byB1c2UgdGhlIHN0eWxlcyBwcm9wIGluc3RlYWQ/XCIpO1xuICAgIHdhcm5lZEFib3V0Q3NzUHJvcEZvckdsb2JhbCA9IHRydWU7XG4gIH1cblxuICB2YXIgc3R5bGVzID0gcHJvcHMuc3R5bGVzO1xuXG4gIGlmICh0eXBlb2Ygc3R5bGVzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoVGhlbWVDb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAodGhlbWUpIHtcbiAgICAgIHZhciBzZXJpYWxpemVkID0gc2VyaWFsaXplU3R5bGVzKFtzdHlsZXModGhlbWUpXSk7XG4gICAgICByZXR1cm4gY3JlYXRlRWxlbWVudChJbm5lckdsb2JhbCwge1xuICAgICAgICBzZXJpYWxpemVkOiBzZXJpYWxpemVkLFxuICAgICAgICBjYWNoZTogY2FjaGVcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgdmFyIHNlcmlhbGl6ZWQgPSBzZXJpYWxpemVTdHlsZXMoW3N0eWxlc10pO1xuICByZXR1cm4gY3JlYXRlRWxlbWVudChJbm5lckdsb2JhbCwge1xuICAgIHNlcmlhbGl6ZWQ6IHNlcmlhbGl6ZWQsXG4gICAgY2FjaGU6IGNhY2hlXG4gIH0pO1xufSk7IC8vIG1haW50YWluIHBsYWNlIG92ZXIgcmVyZW5kZXJzLlxuLy8gaW5pdGlhbCByZW5kZXIgZnJvbSBicm93c2VyLCBpbnNlcnRCZWZvcmUgY29udGV4dC5zaGVldC50YWdzWzBdIG9yIGlmIGEgc3R5bGUgaGFzbid0IGJlZW4gaW5zZXJ0ZWQgdGhlcmUgeWV0LCBhcHBlbmRDaGlsZFxuLy8gaW5pdGlhbCBjbGllbnQtc2lkZSByZW5kZXIgZnJvbSBTU1IsIHVzZSBwbGFjZSBvZiBoeWRyYXRpbmcgdGFnXG5cbnZhciBJbm5lckdsb2JhbCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShJbm5lckdsb2JhbCwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gSW5uZXJHbG9iYWwocHJvcHMsIGNvbnRleHQsIHVwZGF0ZXIpIHtcbiAgICByZXR1cm4gX1JlYWN0JENvbXBvbmVudC5jYWxsKHRoaXMsIHByb3BzLCBjb250ZXh0LCB1cGRhdGVyKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IElubmVyR2xvYmFsLnByb3RvdHlwZTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICB0aGlzLnNoZWV0ID0gbmV3IFN0eWxlU2hlZXQoe1xuICAgICAga2V5OiB0aGlzLnByb3BzLmNhY2hlLmtleSArIFwiLWdsb2JhbFwiLFxuICAgICAgbm9uY2U6IHRoaXMucHJvcHMuY2FjaGUuc2hlZXQubm9uY2UsXG4gICAgICBjb250YWluZXI6IHRoaXMucHJvcHMuY2FjaGUuc2hlZXQuY29udGFpbmVyXG4gICAgfSk7IC8vICRGbG93Rml4TWVcblxuICAgIHZhciBub2RlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcInN0eWxlW2RhdGEtZW1vdGlvbi1cIiArIHRoaXMucHJvcHMuY2FjaGUua2V5ICsgXCI9XFxcIlwiICsgdGhpcy5wcm9wcy5zZXJpYWxpemVkLm5hbWUgKyBcIlxcXCJdXCIpO1xuXG4gICAgaWYgKG5vZGUgIT09IG51bGwpIHtcbiAgICAgIHRoaXMuc2hlZXQudGFncy5wdXNoKG5vZGUpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnByb3BzLmNhY2hlLnNoZWV0LnRhZ3MubGVuZ3RoKSB7XG4gICAgICB0aGlzLnNoZWV0LmJlZm9yZSA9IHRoaXMucHJvcHMuY2FjaGUuc2hlZXQudGFnc1swXTtcbiAgICB9XG5cbiAgICB0aGlzLmluc2VydFN0eWxlcygpO1xuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzKSB7XG4gICAgaWYgKHByZXZQcm9wcy5zZXJpYWxpemVkLm5hbWUgIT09IHRoaXMucHJvcHMuc2VyaWFsaXplZC5uYW1lKSB7XG4gICAgICB0aGlzLmluc2VydFN0eWxlcygpO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8uaW5zZXJ0U3R5bGVzID0gZnVuY3Rpb24gaW5zZXJ0U3R5bGVzJDEoKSB7XG4gICAgaWYgKHRoaXMucHJvcHMuc2VyaWFsaXplZC5uZXh0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIC8vIGluc2VydCBrZXlmcmFtZXNcbiAgICAgIGluc2VydFN0eWxlcyh0aGlzLnByb3BzLmNhY2hlLCB0aGlzLnByb3BzLnNlcmlhbGl6ZWQubmV4dCwgdHJ1ZSk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuc2hlZXQudGFncy5sZW5ndGgpIHtcbiAgICAgIC8vIGlmIHRoaXMgZG9lc24ndCBleGlzdCB0aGVuIGl0IHdpbGwgYmUgbnVsbCBzbyB0aGUgc3R5bGUgZWxlbWVudCB3aWxsIGJlIGFwcGVuZGVkXG4gICAgICB2YXIgZWxlbWVudCA9IHRoaXMuc2hlZXQudGFnc1t0aGlzLnNoZWV0LnRhZ3MubGVuZ3RoIC0gMV0ubmV4dEVsZW1lbnRTaWJsaW5nO1xuICAgICAgdGhpcy5zaGVldC5iZWZvcmUgPSBlbGVtZW50O1xuICAgICAgdGhpcy5zaGVldC5mbHVzaCgpO1xuICAgIH1cblxuICAgIHRoaXMucHJvcHMuY2FjaGUuaW5zZXJ0KFwiXCIsIHRoaXMucHJvcHMuc2VyaWFsaXplZCwgdGhpcy5zaGVldCwgZmFsc2UpO1xuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIHRoaXMuc2hlZXQuZmx1c2goKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBudWxsO1xuICB9O1xuXG4gIHJldHVybiBJbm5lckdsb2JhbDtcbn0oQ29tcG9uZW50KTtcblxudmFyIGtleWZyYW1lcyA9IGZ1bmN0aW9uIGtleWZyYW1lcygpIHtcbiAgdmFyIGluc2VydGFibGUgPSBjc3MuYXBwbHkodm9pZCAwLCBhcmd1bWVudHMpO1xuICB2YXIgbmFtZSA9IFwiYW5pbWF0aW9uLVwiICsgaW5zZXJ0YWJsZS5uYW1lOyAvLyAkRmxvd0ZpeE1lXG5cbiAgcmV0dXJuIHtcbiAgICBuYW1lOiBuYW1lLFxuICAgIHN0eWxlczogXCJAa2V5ZnJhbWVzIFwiICsgbmFtZSArIFwie1wiICsgaW5zZXJ0YWJsZS5zdHlsZXMgKyBcIn1cIixcbiAgICBhbmltOiAxLFxuICAgIHRvU3RyaW5nOiBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICAgIHJldHVybiBcIl9FTU9fXCIgKyB0aGlzLm5hbWUgKyBcIl9cIiArIHRoaXMuc3R5bGVzICsgXCJfRU1PX1wiO1xuICAgIH1cbiAgfTtcbn07XG5cbnZhciBjbGFzc25hbWVzID0gZnVuY3Rpb24gY2xhc3NuYW1lcyhhcmdzKSB7XG4gIHZhciBsZW4gPSBhcmdzLmxlbmd0aDtcbiAgdmFyIGkgPSAwO1xuICB2YXIgY2xzID0gJyc7XG5cbiAgZm9yICg7IGkgPCBsZW47IGkrKykge1xuICAgIHZhciBhcmcgPSBhcmdzW2ldO1xuICAgIGlmIChhcmcgPT0gbnVsbCkgY29udGludWU7XG4gICAgdmFyIHRvQWRkID0gdm9pZCAwO1xuXG4gICAgc3dpdGNoICh0eXBlb2YgYXJnKSB7XG4gICAgICBjYXNlICdib29sZWFuJzpcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ29iamVjdCc6XG4gICAgICAgIHtcbiAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShhcmcpKSB7XG4gICAgICAgICAgICB0b0FkZCA9IGNsYXNzbmFtZXMoYXJnKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdG9BZGQgPSAnJztcblxuICAgICAgICAgICAgZm9yICh2YXIgayBpbiBhcmcpIHtcbiAgICAgICAgICAgICAgaWYgKGFyZ1trXSAmJiBrKSB7XG4gICAgICAgICAgICAgICAgdG9BZGQgJiYgKHRvQWRkICs9ICcgJyk7XG4gICAgICAgICAgICAgICAgdG9BZGQgKz0gaztcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHtcbiAgICAgICAgICB0b0FkZCA9IGFyZztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0b0FkZCkge1xuICAgICAgY2xzICYmIChjbHMgKz0gJyAnKTtcbiAgICAgIGNscyArPSB0b0FkZDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gY2xzO1xufTtcblxuZnVuY3Rpb24gbWVyZ2UocmVnaXN0ZXJlZCwgY3NzLCBjbGFzc05hbWUpIHtcbiAgdmFyIHJlZ2lzdGVyZWRTdHlsZXMgPSBbXTtcbiAgdmFyIHJhd0NsYXNzTmFtZSA9IGdldFJlZ2lzdGVyZWRTdHlsZXMocmVnaXN0ZXJlZCwgcmVnaXN0ZXJlZFN0eWxlcywgY2xhc3NOYW1lKTtcblxuICBpZiAocmVnaXN0ZXJlZFN0eWxlcy5sZW5ndGggPCAyKSB7XG4gICAgcmV0dXJuIGNsYXNzTmFtZTtcbiAgfVxuXG4gIHJldHVybiByYXdDbGFzc05hbWUgKyBjc3MocmVnaXN0ZXJlZFN0eWxlcyk7XG59XG5cbnZhciBDbGFzc05hbWVzID0gd2l0aEVtb3Rpb25DYWNoZShmdW5jdGlvbiAocHJvcHMsIGNvbnRleHQpIHtcbiAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoVGhlbWVDb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAodGhlbWUpIHtcbiAgICB2YXIgaGFzUmVuZGVyZWQgPSBmYWxzZTtcblxuICAgIHZhciBjc3MgPSBmdW5jdGlvbiBjc3MoKSB7XG4gICAgICBpZiAoaGFzUmVuZGVyZWQgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2NzcyBjYW4gb25seSBiZSB1c2VkIGR1cmluZyByZW5kZXInKTtcbiAgICAgIH1cblxuICAgICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgICB9XG5cbiAgICAgIHZhciBzZXJpYWxpemVkID0gc2VyaWFsaXplU3R5bGVzKGFyZ3MsIGNvbnRleHQucmVnaXN0ZXJlZCk7XG4gICAgICB7XG4gICAgICAgIGluc2VydFN0eWxlcyhjb250ZXh0LCBzZXJpYWxpemVkLCBmYWxzZSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGV4dC5rZXkgKyBcIi1cIiArIHNlcmlhbGl6ZWQubmFtZTtcbiAgICB9O1xuXG4gICAgdmFyIGN4ID0gZnVuY3Rpb24gY3goKSB7XG4gICAgICBpZiAoaGFzUmVuZGVyZWQgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2N4IGNhbiBvbmx5IGJlIHVzZWQgZHVyaW5nIHJlbmRlcicpO1xuICAgICAgfVxuXG4gICAgICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjIpLCBfa2V5MiA9IDA7IF9rZXkyIDwgX2xlbjI7IF9rZXkyKyspIHtcbiAgICAgICAgYXJnc1tfa2V5Ml0gPSBhcmd1bWVudHNbX2tleTJdO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbWVyZ2UoY29udGV4dC5yZWdpc3RlcmVkLCBjc3MsIGNsYXNzbmFtZXMoYXJncykpO1xuICAgIH07XG5cbiAgICB2YXIgY29udGVudCA9IHtcbiAgICAgIGNzczogY3NzLFxuICAgICAgY3g6IGN4LFxuICAgICAgdGhlbWU6IHRoZW1lXG4gICAgfTtcbiAgICB2YXIgZWxlID0gcHJvcHMuY2hpbGRyZW4oY29udGVudCk7XG4gICAgaGFzUmVuZGVyZWQgPSB0cnVlO1xuICAgIHJldHVybiBlbGU7XG4gIH0pO1xufSk7XG5leHBvcnQgeyBDYWNoZVByb3ZpZGVyLCBDbGFzc05hbWVzLCBHbG9iYWwsIFRoZW1lQ29udGV4dCwganN4LCBrZXlmcmFtZXMsIHdpdGhFbW90aW9uQ2FjaGUgfTsiLCJleHBvcnQgY29uc3QgUE9SVF9OQU1FID0gJ0ZOMjE4NydcblxuZXhwb3J0IGNvbnN0IENBQ0hFX0lOVEVSVkFMID0gOTAwMDAwXG5cbmV4cG9ydCBjb25zdCBLRVlfRU5URVIgPSAxM1xuXG5leHBvcnQgY29uc3QgS0VZX0VTQ0FQRSA9IDI3XG5cbmV4cG9ydCBjb25zdCBMSU5LX0hFTFBfUEFHRSA9XG4gICdodHRwczovL2hlbHAuZ2V0cG9ja2V0LmNvbS9hcnRpY2xlLzExNDEtdXNpbmctdGhlLXBvY2tldC1uZXctdGFiLWV4dGVuc2lvbi1pbi1jaHJvbWUnXG5cbmV4cG9ydCBjb25zdCBMSU5LX1NVUlZFWV9QQUdFID0gJ2h0dHBzOi8vd3d3LnN1cnZleW1vbmtleS5jb20vci9jaHJvbWVuZXd0J1xuXG5leHBvcnQgY29uc3QgQVVUSF9VUkwgPVxuICAnaHR0cHM6Ly9nZXRwb2NrZXQuY29tL3NpZ251cD9zcmM9ZXh0ZW5zaW9uJnJvdXRlPS9leHRlbnNpb25fbG9naW5fc3VjY2VzcydcblxuZXhwb3J0IGNvbnN0IExPR09VVF9VUkwgPSAnaHR0cHM6Ly9nZXRwb2NrZXQuY29tL2xvJ1xuXG5leHBvcnQgY29uc3QgU0VUX1NIT1JUQ1VUUyA9ICdjaHJvbWU6Ly9leHRlbnNpb25zL2NvbmZpZ3VyZUNvbW1hbmRzJ1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBjaGVja0RDRSgpIHtcbiAgLyogZ2xvYmFsIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAqL1xuICBpZiAodHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG5cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn0iLCIvKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG5cbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBwcm9wSXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG4gIGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuICB9XG5cbiAgcmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XG4gIHRyeSB7XG4gICAgaWYgKCFPYmplY3QuYXNzaWduKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSAvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG4gICAgLy8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDExOFxuXG5cbiAgICB2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcblxuICAgIHRlc3QxWzVdID0gJ2RlJztcblxuICAgIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0gLy8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXG5cbiAgICB2YXIgdGVzdDIgPSB7fTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuICAgICAgdGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xuICAgIH1cblxuICAgIHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG4gICAgICByZXR1cm4gdGVzdDJbbl07XG4gICAgfSk7XG5cbiAgICBpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9IC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblxuXG4gICAgdmFyIHRlc3QzID0ge307XG4gICAgJ2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG4gICAgICB0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuICAgIH0pO1xuXG4gICAgaWYgKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIHRlc3QzKSkuam9pbignJykgIT09ICdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcbiAgdmFyIGZyb207XG4gIHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG4gIHZhciBzeW1ib2xzO1xuXG4gIGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG4gICAgZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG4gICAgZm9yICh2YXIga2V5IGluIGZyb20pIHtcbiAgICAgIGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcbiAgICAgICAgdG9ba2V5XSA9IGZyb21ba2V5XTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAgICBzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuICAgICAgICAgIHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0bztcbn07IiwiZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7XG4gIHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzO1xuICBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9pbmhlcml0c0xvb3NlOyIsImZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHtcbiAgaWYgKGtleSBpbiBvYmopIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIG9ialtrZXldID0gdmFsdWU7XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZpbmVQcm9wZXJ0eTsiLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjEzLjFcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIGwgPSByZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxcbiAgICBuID0gXCJmdW5jdGlvblwiID09PSB0eXBlb2YgU3ltYm9sICYmIFN5bWJvbC5mb3IsXG4gICAgcCA9IG4gPyBTeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKSA6IDYwMTAzLFxuICAgIHEgPSBuID8gU3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKSA6IDYwMTA2LFxuICAgIHIgPSBuID8gU3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpIDogNjAxMDcsXG4gICAgdCA9IG4gPyBTeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIikgOiA2MDEwOCxcbiAgICB1ID0gbiA/IFN5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKSA6IDYwMTE0LFxuICAgIHYgPSBuID8gU3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpIDogNjAxMDksXG4gICAgdyA9IG4gPyBTeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKSA6IDYwMTEwLFxuICAgIHggPSBuID8gU3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpIDogNjAxMTIsXG4gICAgeSA9IG4gPyBTeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIikgOiA2MDExMyxcbiAgICB6ID0gbiA/IFN5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpIDogNjAxMTUsXG4gICAgQSA9IG4gPyBTeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKSA6IDYwMTE2LFxuICAgIEIgPSBcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBTeW1ib2wgJiYgU3ltYm9sLml0ZXJhdG9yO1xuXG5mdW5jdGlvbiBDKGEpIHtcbiAgZm9yICh2YXIgYiA9IFwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIgKyBhLCBjID0gMTsgYyA8IGFyZ3VtZW50cy5sZW5ndGg7IGMrKykge1xuICAgIGIgKz0gXCImYXJnc1tdPVwiICsgZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7XG4gIH1cblxuICByZXR1cm4gXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIgKyBhICsgXCI7IHZpc2l0IFwiICsgYiArIFwiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIjtcbn1cblxudmFyIEQgPSB7XG4gIGlzTW91bnRlZDogZnVuY3Rpb24gaXNNb3VudGVkKCkge1xuICAgIHJldHVybiAhMTtcbiAgfSxcbiAgZW5xdWV1ZUZvcmNlVXBkYXRlOiBmdW5jdGlvbiBlbnF1ZXVlRm9yY2VVcGRhdGUoKSB7fSxcbiAgZW5xdWV1ZVJlcGxhY2VTdGF0ZTogZnVuY3Rpb24gZW5xdWV1ZVJlcGxhY2VTdGF0ZSgpIHt9LFxuICBlbnF1ZXVlU2V0U3RhdGU6IGZ1bmN0aW9uIGVucXVldWVTZXRTdGF0ZSgpIHt9XG59LFxuICAgIEUgPSB7fTtcblxuZnVuY3Rpb24gRihhLCBiLCBjKSB7XG4gIHRoaXMucHJvcHMgPSBhO1xuICB0aGlzLmNvbnRleHQgPSBiO1xuICB0aGlzLnJlZnMgPSBFO1xuICB0aGlzLnVwZGF0ZXIgPSBjIHx8IEQ7XG59XG5cbkYucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQgPSB7fTtcblxuRi5wcm90b3R5cGUuc2V0U3RhdGUgPSBmdW5jdGlvbiAoYSwgYikge1xuICBpZiAoXCJvYmplY3RcIiAhPT0gdHlwZW9mIGEgJiYgXCJmdW5jdGlvblwiICE9PSB0eXBlb2YgYSAmJiBudWxsICE9IGEpIHRocm93IEVycm9yKEMoODUpKTtcbiAgdGhpcy51cGRhdGVyLmVucXVldWVTZXRTdGF0ZSh0aGlzLCBhLCBiLCBcInNldFN0YXRlXCIpO1xufTtcblxuRi5wcm90b3R5cGUuZm9yY2VVcGRhdGUgPSBmdW5jdGlvbiAoYSkge1xuICB0aGlzLnVwZGF0ZXIuZW5xdWV1ZUZvcmNlVXBkYXRlKHRoaXMsIGEsIFwiZm9yY2VVcGRhdGVcIik7XG59O1xuXG5mdW5jdGlvbiBHKCkge31cblxuRy5wcm90b3R5cGUgPSBGLnByb3RvdHlwZTtcblxuZnVuY3Rpb24gSChhLCBiLCBjKSB7XG4gIHRoaXMucHJvcHMgPSBhO1xuICB0aGlzLmNvbnRleHQgPSBiO1xuICB0aGlzLnJlZnMgPSBFO1xuICB0aGlzLnVwZGF0ZXIgPSBjIHx8IEQ7XG59XG5cbnZhciBJID0gSC5wcm90b3R5cGUgPSBuZXcgRygpO1xuSS5jb25zdHJ1Y3RvciA9IEg7XG5sKEksIEYucHJvdG90eXBlKTtcbkkuaXNQdXJlUmVhY3RDb21wb25lbnQgPSAhMDtcbnZhciBKID0ge1xuICBjdXJyZW50OiBudWxsXG59LFxuICAgIEsgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LFxuICAgIEwgPSB7XG4gIGtleTogITAsXG4gIHJlZjogITAsXG4gIF9fc2VsZjogITAsXG4gIF9fc291cmNlOiAhMFxufTtcblxuZnVuY3Rpb24gTShhLCBiLCBjKSB7XG4gIHZhciBlLFxuICAgICAgZCA9IHt9LFxuICAgICAgZyA9IG51bGwsXG4gICAgICBrID0gbnVsbDtcbiAgaWYgKG51bGwgIT0gYikgZm9yIChlIGluIHZvaWQgMCAhPT0gYi5yZWYgJiYgKGsgPSBiLnJlZiksIHZvaWQgMCAhPT0gYi5rZXkgJiYgKGcgPSBcIlwiICsgYi5rZXkpLCBiKSB7XG4gICAgSy5jYWxsKGIsIGUpICYmICFMLmhhc093blByb3BlcnR5KGUpICYmIChkW2VdID0gYltlXSk7XG4gIH1cbiAgdmFyIGYgPSBhcmd1bWVudHMubGVuZ3RoIC0gMjtcbiAgaWYgKDEgPT09IGYpIGQuY2hpbGRyZW4gPSBjO2Vsc2UgaWYgKDEgPCBmKSB7XG4gICAgZm9yICh2YXIgaCA9IEFycmF5KGYpLCBtID0gMDsgbSA8IGY7IG0rKykge1xuICAgICAgaFttXSA9IGFyZ3VtZW50c1ttICsgMl07XG4gICAgfVxuXG4gICAgZC5jaGlsZHJlbiA9IGg7XG4gIH1cbiAgaWYgKGEgJiYgYS5kZWZhdWx0UHJvcHMpIGZvciAoZSBpbiBmID0gYS5kZWZhdWx0UHJvcHMsIGYpIHtcbiAgICB2b2lkIDAgPT09IGRbZV0gJiYgKGRbZV0gPSBmW2VdKTtcbiAgfVxuICByZXR1cm4ge1xuICAgICQkdHlwZW9mOiBwLFxuICAgIHR5cGU6IGEsXG4gICAga2V5OiBnLFxuICAgIHJlZjogayxcbiAgICBwcm9wczogZCxcbiAgICBfb3duZXI6IEouY3VycmVudFxuICB9O1xufVxuXG5mdW5jdGlvbiBOKGEsIGIpIHtcbiAgcmV0dXJuIHtcbiAgICAkJHR5cGVvZjogcCxcbiAgICB0eXBlOiBhLnR5cGUsXG4gICAga2V5OiBiLFxuICAgIHJlZjogYS5yZWYsXG4gICAgcHJvcHM6IGEucHJvcHMsXG4gICAgX293bmVyOiBhLl9vd25lclxuICB9O1xufVxuXG5mdW5jdGlvbiBPKGEpIHtcbiAgcmV0dXJuIFwib2JqZWN0XCIgPT09IHR5cGVvZiBhICYmIG51bGwgIT09IGEgJiYgYS4kJHR5cGVvZiA9PT0gcDtcbn1cblxuZnVuY3Rpb24gZXNjYXBlKGEpIHtcbiAgdmFyIGIgPSB7XG4gICAgXCI9XCI6IFwiPTBcIixcbiAgICBcIjpcIjogXCI9MlwiXG4gIH07XG4gIHJldHVybiBcIiRcIiArIChcIlwiICsgYSkucmVwbGFjZSgvWz06XS9nLCBmdW5jdGlvbiAoYSkge1xuICAgIHJldHVybiBiW2FdO1xuICB9KTtcbn1cblxudmFyIFAgPSAvXFwvKy9nLFxuICAgIFEgPSBbXTtcblxuZnVuY3Rpb24gUihhLCBiLCBjLCBlKSB7XG4gIGlmIChRLmxlbmd0aCkge1xuICAgIHZhciBkID0gUS5wb3AoKTtcbiAgICBkLnJlc3VsdCA9IGE7XG4gICAgZC5rZXlQcmVmaXggPSBiO1xuICAgIGQuZnVuYyA9IGM7XG4gICAgZC5jb250ZXh0ID0gZTtcbiAgICBkLmNvdW50ID0gMDtcbiAgICByZXR1cm4gZDtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcmVzdWx0OiBhLFxuICAgIGtleVByZWZpeDogYixcbiAgICBmdW5jOiBjLFxuICAgIGNvbnRleHQ6IGUsXG4gICAgY291bnQ6IDBcbiAgfTtcbn1cblxuZnVuY3Rpb24gUyhhKSB7XG4gIGEucmVzdWx0ID0gbnVsbDtcbiAgYS5rZXlQcmVmaXggPSBudWxsO1xuICBhLmZ1bmMgPSBudWxsO1xuICBhLmNvbnRleHQgPSBudWxsO1xuICBhLmNvdW50ID0gMDtcbiAgMTAgPiBRLmxlbmd0aCAmJiBRLnB1c2goYSk7XG59XG5cbmZ1bmN0aW9uIFQoYSwgYiwgYywgZSkge1xuICB2YXIgZCA9IHR5cGVvZiBhO1xuICBpZiAoXCJ1bmRlZmluZWRcIiA9PT0gZCB8fCBcImJvb2xlYW5cIiA9PT0gZCkgYSA9IG51bGw7XG4gIHZhciBnID0gITE7XG4gIGlmIChudWxsID09PSBhKSBnID0gITA7ZWxzZSBzd2l0Y2ggKGQpIHtcbiAgICBjYXNlIFwic3RyaW5nXCI6XG4gICAgY2FzZSBcIm51bWJlclwiOlxuICAgICAgZyA9ICEwO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlIFwib2JqZWN0XCI6XG4gICAgICBzd2l0Y2ggKGEuJCR0eXBlb2YpIHtcbiAgICAgICAgY2FzZSBwOlxuICAgICAgICBjYXNlIHE6XG4gICAgICAgICAgZyA9ICEwO1xuICAgICAgfVxuXG4gIH1cbiAgaWYgKGcpIHJldHVybiBjKGUsIGEsIFwiXCIgPT09IGIgPyBcIi5cIiArIFUoYSwgMCkgOiBiKSwgMTtcbiAgZyA9IDA7XG4gIGIgPSBcIlwiID09PSBiID8gXCIuXCIgOiBiICsgXCI6XCI7XG4gIGlmIChBcnJheS5pc0FycmF5KGEpKSBmb3IgKHZhciBrID0gMDsgayA8IGEubGVuZ3RoOyBrKyspIHtcbiAgICBkID0gYVtrXTtcbiAgICB2YXIgZiA9IGIgKyBVKGQsIGspO1xuICAgIGcgKz0gVChkLCBmLCBjLCBlKTtcbiAgfSBlbHNlIGlmIChudWxsID09PSBhIHx8IFwib2JqZWN0XCIgIT09IHR5cGVvZiBhID8gZiA9IG51bGwgOiAoZiA9IEIgJiYgYVtCXSB8fCBhW1wiQEBpdGVyYXRvclwiXSwgZiA9IFwiZnVuY3Rpb25cIiA9PT0gdHlwZW9mIGYgPyBmIDogbnVsbCksIFwiZnVuY3Rpb25cIiA9PT0gdHlwZW9mIGYpIGZvciAoYSA9IGYuY2FsbChhKSwgayA9IDA7ICEoZCA9IGEubmV4dCgpKS5kb25lOykge1xuICAgIGQgPSBkLnZhbHVlLCBmID0gYiArIFUoZCwgaysrKSwgZyArPSBUKGQsIGYsIGMsIGUpO1xuICB9IGVsc2UgaWYgKFwib2JqZWN0XCIgPT09IGQpIHRocm93IGMgPSBcIlwiICsgYSwgRXJyb3IoQygzMSwgXCJbb2JqZWN0IE9iamVjdF1cIiA9PT0gYyA/IFwib2JqZWN0IHdpdGgga2V5cyB7XCIgKyBPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikgKyBcIn1cIiA6IGMsIFwiXCIpKTtcbiAgcmV0dXJuIGc7XG59XG5cbmZ1bmN0aW9uIFYoYSwgYiwgYykge1xuICByZXR1cm4gbnVsbCA9PSBhID8gMCA6IFQoYSwgXCJcIiwgYiwgYyk7XG59XG5cbmZ1bmN0aW9uIFUoYSwgYikge1xuICByZXR1cm4gXCJvYmplY3RcIiA9PT0gdHlwZW9mIGEgJiYgbnVsbCAhPT0gYSAmJiBudWxsICE9IGEua2V5ID8gZXNjYXBlKGEua2V5KSA6IGIudG9TdHJpbmcoMzYpO1xufVxuXG5mdW5jdGlvbiBXKGEsIGIpIHtcbiAgYS5mdW5jLmNhbGwoYS5jb250ZXh0LCBiLCBhLmNvdW50KyspO1xufVxuXG5mdW5jdGlvbiBhYShhLCBiLCBjKSB7XG4gIHZhciBlID0gYS5yZXN1bHQsXG4gICAgICBkID0gYS5rZXlQcmVmaXg7XG4gIGEgPSBhLmZ1bmMuY2FsbChhLmNvbnRleHQsIGIsIGEuY291bnQrKyk7XG4gIEFycmF5LmlzQXJyYXkoYSkgPyBYKGEsIGUsIGMsIGZ1bmN0aW9uIChhKSB7XG4gICAgcmV0dXJuIGE7XG4gIH0pIDogbnVsbCAhPSBhICYmIChPKGEpICYmIChhID0gTihhLCBkICsgKCFhLmtleSB8fCBiICYmIGIua2V5ID09PSBhLmtleSA/IFwiXCIgOiAoXCJcIiArIGEua2V5KS5yZXBsYWNlKFAsIFwiJCYvXCIpICsgXCIvXCIpICsgYykpLCBlLnB1c2goYSkpO1xufVxuXG5mdW5jdGlvbiBYKGEsIGIsIGMsIGUsIGQpIHtcbiAgdmFyIGcgPSBcIlwiO1xuICBudWxsICE9IGMgJiYgKGcgPSAoXCJcIiArIGMpLnJlcGxhY2UoUCwgXCIkJi9cIikgKyBcIi9cIik7XG4gIGIgPSBSKGIsIGcsIGUsIGQpO1xuICBWKGEsIGFhLCBiKTtcbiAgUyhiKTtcbn1cblxudmFyIFkgPSB7XG4gIGN1cnJlbnQ6IG51bGxcbn07XG5cbmZ1bmN0aW9uIFooKSB7XG4gIHZhciBhID0gWS5jdXJyZW50O1xuICBpZiAobnVsbCA9PT0gYSkgdGhyb3cgRXJyb3IoQygzMjEpKTtcbiAgcmV0dXJuIGE7XG59XG5cbnZhciBiYSA9IHtcbiAgUmVhY3RDdXJyZW50RGlzcGF0Y2hlcjogWSxcbiAgUmVhY3RDdXJyZW50QmF0Y2hDb25maWc6IHtcbiAgICBzdXNwZW5zZTogbnVsbFxuICB9LFxuICBSZWFjdEN1cnJlbnRPd25lcjogSixcbiAgSXNTb21lUmVuZGVyZXJBY3Rpbmc6IHtcbiAgICBjdXJyZW50OiAhMVxuICB9LFxuICBhc3NpZ246IGxcbn07XG5leHBvcnRzLkNoaWxkcmVuID0ge1xuICBtYXA6IGZ1bmN0aW9uIG1hcChhLCBiLCBjKSB7XG4gICAgaWYgKG51bGwgPT0gYSkgcmV0dXJuIGE7XG4gICAgdmFyIGUgPSBbXTtcbiAgICBYKGEsIGUsIG51bGwsIGIsIGMpO1xuICAgIHJldHVybiBlO1xuICB9LFxuICBmb3JFYWNoOiBmdW5jdGlvbiBmb3JFYWNoKGEsIGIsIGMpIHtcbiAgICBpZiAobnVsbCA9PSBhKSByZXR1cm4gYTtcbiAgICBiID0gUihudWxsLCBudWxsLCBiLCBjKTtcbiAgICBWKGEsIFcsIGIpO1xuICAgIFMoYik7XG4gIH0sXG4gIGNvdW50OiBmdW5jdGlvbiBjb3VudChhKSB7XG4gICAgcmV0dXJuIFYoYSwgZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSwgbnVsbCk7XG4gIH0sXG4gIHRvQXJyYXk6IGZ1bmN0aW9uIHRvQXJyYXkoYSkge1xuICAgIHZhciBiID0gW107XG4gICAgWChhLCBiLCBudWxsLCBmdW5jdGlvbiAoYSkge1xuICAgICAgcmV0dXJuIGE7XG4gICAgfSk7XG4gICAgcmV0dXJuIGI7XG4gIH0sXG4gIG9ubHk6IGZ1bmN0aW9uIG9ubHkoYSkge1xuICAgIGlmICghTyhhKSkgdGhyb3cgRXJyb3IoQygxNDMpKTtcbiAgICByZXR1cm4gYTtcbiAgfVxufTtcbmV4cG9ydHMuQ29tcG9uZW50ID0gRjtcbmV4cG9ydHMuRnJhZ21lbnQgPSByO1xuZXhwb3J0cy5Qcm9maWxlciA9IHU7XG5leHBvcnRzLlB1cmVDb21wb25lbnQgPSBIO1xuZXhwb3J0cy5TdHJpY3RNb2RlID0gdDtcbmV4cG9ydHMuU3VzcGVuc2UgPSB5O1xuZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCA9IGJhO1xuXG5leHBvcnRzLmNsb25lRWxlbWVudCA9IGZ1bmN0aW9uIChhLCBiLCBjKSB7XG4gIGlmIChudWxsID09PSBhIHx8IHZvaWQgMCA9PT0gYSkgdGhyb3cgRXJyb3IoQygyNjcsIGEpKTtcbiAgdmFyIGUgPSBsKHt9LCBhLnByb3BzKSxcbiAgICAgIGQgPSBhLmtleSxcbiAgICAgIGcgPSBhLnJlZixcbiAgICAgIGsgPSBhLl9vd25lcjtcblxuICBpZiAobnVsbCAhPSBiKSB7XG4gICAgdm9pZCAwICE9PSBiLnJlZiAmJiAoZyA9IGIucmVmLCBrID0gSi5jdXJyZW50KTtcbiAgICB2b2lkIDAgIT09IGIua2V5ICYmIChkID0gXCJcIiArIGIua2V5KTtcbiAgICBpZiAoYS50eXBlICYmIGEudHlwZS5kZWZhdWx0UHJvcHMpIHZhciBmID0gYS50eXBlLmRlZmF1bHRQcm9wcztcblxuICAgIGZvciAoaCBpbiBiKSB7XG4gICAgICBLLmNhbGwoYiwgaCkgJiYgIUwuaGFzT3duUHJvcGVydHkoaCkgJiYgKGVbaF0gPSB2b2lkIDAgPT09IGJbaF0gJiYgdm9pZCAwICE9PSBmID8gZltoXSA6IGJbaF0pO1xuICAgIH1cbiAgfVxuXG4gIHZhciBoID0gYXJndW1lbnRzLmxlbmd0aCAtIDI7XG4gIGlmICgxID09PSBoKSBlLmNoaWxkcmVuID0gYztlbHNlIGlmICgxIDwgaCkge1xuICAgIGYgPSBBcnJheShoKTtcblxuICAgIGZvciAodmFyIG0gPSAwOyBtIDwgaDsgbSsrKSB7XG4gICAgICBmW21dID0gYXJndW1lbnRzW20gKyAyXTtcbiAgICB9XG5cbiAgICBlLmNoaWxkcmVuID0gZjtcbiAgfVxuICByZXR1cm4ge1xuICAgICQkdHlwZW9mOiBwLFxuICAgIHR5cGU6IGEudHlwZSxcbiAgICBrZXk6IGQsXG4gICAgcmVmOiBnLFxuICAgIHByb3BzOiBlLFxuICAgIF9vd25lcjoga1xuICB9O1xufTtcblxuZXhwb3J0cy5jcmVhdGVDb250ZXh0ID0gZnVuY3Rpb24gKGEsIGIpIHtcbiAgdm9pZCAwID09PSBiICYmIChiID0gbnVsbCk7XG4gIGEgPSB7XG4gICAgJCR0eXBlb2Y6IHcsXG4gICAgX2NhbGN1bGF0ZUNoYW5nZWRCaXRzOiBiLFxuICAgIF9jdXJyZW50VmFsdWU6IGEsXG4gICAgX2N1cnJlbnRWYWx1ZTI6IGEsXG4gICAgX3RocmVhZENvdW50OiAwLFxuICAgIFByb3ZpZGVyOiBudWxsLFxuICAgIENvbnN1bWVyOiBudWxsXG4gIH07XG4gIGEuUHJvdmlkZXIgPSB7XG4gICAgJCR0eXBlb2Y6IHYsXG4gICAgX2NvbnRleHQ6IGFcbiAgfTtcbiAgcmV0dXJuIGEuQ29uc3VtZXIgPSBhO1xufTtcblxuZXhwb3J0cy5jcmVhdGVFbGVtZW50ID0gTTtcblxuZXhwb3J0cy5jcmVhdGVGYWN0b3J5ID0gZnVuY3Rpb24gKGEpIHtcbiAgdmFyIGIgPSBNLmJpbmQobnVsbCwgYSk7XG4gIGIudHlwZSA9IGE7XG4gIHJldHVybiBiO1xufTtcblxuZXhwb3J0cy5jcmVhdGVSZWYgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB7XG4gICAgY3VycmVudDogbnVsbFxuICB9O1xufTtcblxuZXhwb3J0cy5mb3J3YXJkUmVmID0gZnVuY3Rpb24gKGEpIHtcbiAgcmV0dXJuIHtcbiAgICAkJHR5cGVvZjogeCxcbiAgICByZW5kZXI6IGFcbiAgfTtcbn07XG5cbmV4cG9ydHMuaXNWYWxpZEVsZW1lbnQgPSBPO1xuXG5leHBvcnRzLmxhenkgPSBmdW5jdGlvbiAoYSkge1xuICByZXR1cm4ge1xuICAgICQkdHlwZW9mOiBBLFxuICAgIF9jdG9yOiBhLFxuICAgIF9zdGF0dXM6IC0xLFxuICAgIF9yZXN1bHQ6IG51bGxcbiAgfTtcbn07XG5cbmV4cG9ydHMubWVtbyA9IGZ1bmN0aW9uIChhLCBiKSB7XG4gIHJldHVybiB7XG4gICAgJCR0eXBlb2Y6IHosXG4gICAgdHlwZTogYSxcbiAgICBjb21wYXJlOiB2b2lkIDAgPT09IGIgPyBudWxsIDogYlxuICB9O1xufTtcblxuZXhwb3J0cy51c2VDYWxsYmFjayA9IGZ1bmN0aW9uIChhLCBiKSB7XG4gIHJldHVybiBaKCkudXNlQ2FsbGJhY2soYSwgYik7XG59O1xuXG5leHBvcnRzLnVzZUNvbnRleHQgPSBmdW5jdGlvbiAoYSwgYikge1xuICByZXR1cm4gWigpLnVzZUNvbnRleHQoYSwgYik7XG59O1xuXG5leHBvcnRzLnVzZURlYnVnVmFsdWUgPSBmdW5jdGlvbiAoKSB7fTtcblxuZXhwb3J0cy51c2VFZmZlY3QgPSBmdW5jdGlvbiAoYSwgYikge1xuICByZXR1cm4gWigpLnVzZUVmZmVjdChhLCBiKTtcbn07XG5cbmV4cG9ydHMudXNlSW1wZXJhdGl2ZUhhbmRsZSA9IGZ1bmN0aW9uIChhLCBiLCBjKSB7XG4gIHJldHVybiBaKCkudXNlSW1wZXJhdGl2ZUhhbmRsZShhLCBiLCBjKTtcbn07XG5cbmV4cG9ydHMudXNlTGF5b3V0RWZmZWN0ID0gZnVuY3Rpb24gKGEsIGIpIHtcbiAgcmV0dXJuIFooKS51c2VMYXlvdXRFZmZlY3QoYSwgYik7XG59O1xuXG5leHBvcnRzLnVzZU1lbW8gPSBmdW5jdGlvbiAoYSwgYikge1xuICByZXR1cm4gWigpLnVzZU1lbW8oYSwgYik7XG59O1xuXG5leHBvcnRzLnVzZVJlZHVjZXIgPSBmdW5jdGlvbiAoYSwgYiwgYykge1xuICByZXR1cm4gWigpLnVzZVJlZHVjZXIoYSwgYiwgYyk7XG59O1xuXG5leHBvcnRzLnVzZVJlZiA9IGZ1bmN0aW9uIChhKSB7XG4gIHJldHVybiBaKCkudXNlUmVmKGEpO1xufTtcblxuZXhwb3J0cy51c2VTdGF0ZSA9IGZ1bmN0aW9uIChhKSB7XG4gIHJldHVybiBaKCkudXNlU3RhdGUoYSk7XG59O1xuXG5leHBvcnRzLnZlcnNpb24gPSBcIjE2LjEzLjFcIjsiLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjEzLjFcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgYWEgPSByZXF1aXJlKFwicmVhY3RcIiksXG4gICAgbiA9IHJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLFxuICAgIHIgPSByZXF1aXJlKFwic2NoZWR1bGVyXCIpO1xuXG5mdW5jdGlvbiB1KGEpIHtcbiAgZm9yICh2YXIgYiA9IFwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIgKyBhLCBjID0gMTsgYyA8IGFyZ3VtZW50cy5sZW5ndGg7IGMrKykge1xuICAgIGIgKz0gXCImYXJnc1tdPVwiICsgZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7XG4gIH1cblxuICByZXR1cm4gXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIgKyBhICsgXCI7IHZpc2l0IFwiICsgYiArIFwiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIjtcbn1cblxuaWYgKCFhYSkgdGhyb3cgRXJyb3IodSgyMjcpKTtcblxuZnVuY3Rpb24gYmEoYSwgYiwgYywgZCwgZSwgZiwgZywgaCwgaykge1xuICB2YXIgbCA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMyk7XG5cbiAgdHJ5IHtcbiAgICBiLmFwcGx5KGMsIGwpO1xuICB9IGNhdGNoIChtKSB7XG4gICAgdGhpcy5vbkVycm9yKG0pO1xuICB9XG59XG5cbnZhciBkYSA9ICExLFxuICAgIGVhID0gbnVsbCxcbiAgICBmYSA9ICExLFxuICAgIGhhID0gbnVsbCxcbiAgICBpYSA9IHtcbiAgb25FcnJvcjogZnVuY3Rpb24gb25FcnJvcihhKSB7XG4gICAgZGEgPSAhMDtcbiAgICBlYSA9IGE7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGphKGEsIGIsIGMsIGQsIGUsIGYsIGcsIGgsIGspIHtcbiAgZGEgPSAhMTtcbiAgZWEgPSBudWxsO1xuICBiYS5hcHBseShpYSwgYXJndW1lbnRzKTtcbn1cblxuZnVuY3Rpb24ga2EoYSwgYiwgYywgZCwgZSwgZiwgZywgaCwgaykge1xuICBqYS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXG4gIGlmIChkYSkge1xuICAgIGlmIChkYSkge1xuICAgICAgdmFyIGwgPSBlYTtcbiAgICAgIGRhID0gITE7XG4gICAgICBlYSA9IG51bGw7XG4gICAgfSBlbHNlIHRocm93IEVycm9yKHUoMTk4KSk7XG5cbiAgICBmYSB8fCAoZmEgPSAhMCwgaGEgPSBsKTtcbiAgfVxufVxuXG52YXIgbGEgPSBudWxsLFxuICAgIG1hID0gbnVsbCxcbiAgICBuYSA9IG51bGw7XG5cbmZ1bmN0aW9uIG9hKGEsIGIsIGMpIHtcbiAgdmFyIGQgPSBhLnR5cGUgfHwgXCJ1bmtub3duLWV2ZW50XCI7XG4gIGEuY3VycmVudFRhcmdldCA9IG5hKGMpO1xuICBrYShkLCBiLCB2b2lkIDAsIGEpO1xuICBhLmN1cnJlbnRUYXJnZXQgPSBudWxsO1xufVxuXG52YXIgcGEgPSBudWxsLFxuICAgIHFhID0ge307XG5cbmZ1bmN0aW9uIHJhKCkge1xuICBpZiAocGEpIGZvciAodmFyIGEgaW4gcWEpIHtcbiAgICB2YXIgYiA9IHFhW2FdLFxuICAgICAgICBjID0gcGEuaW5kZXhPZihhKTtcbiAgICBpZiAoISgtMSA8IGMpKSB0aHJvdyBFcnJvcih1KDk2LCBhKSk7XG5cbiAgICBpZiAoIXNhW2NdKSB7XG4gICAgICBpZiAoIWIuZXh0cmFjdEV2ZW50cykgdGhyb3cgRXJyb3IodSg5NywgYSkpO1xuICAgICAgc2FbY10gPSBiO1xuICAgICAgYyA9IGIuZXZlbnRUeXBlcztcblxuICAgICAgZm9yICh2YXIgZCBpbiBjKSB7XG4gICAgICAgIHZhciBlID0gdm9pZCAwO1xuICAgICAgICB2YXIgZiA9IGNbZF0sXG4gICAgICAgICAgICBnID0gYixcbiAgICAgICAgICAgIGggPSBkO1xuICAgICAgICBpZiAodGEuaGFzT3duUHJvcGVydHkoaCkpIHRocm93IEVycm9yKHUoOTksIGgpKTtcbiAgICAgICAgdGFbaF0gPSBmO1xuICAgICAgICB2YXIgayA9IGYucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM7XG5cbiAgICAgICAgaWYgKGspIHtcbiAgICAgICAgICBmb3IgKGUgaW4gaykge1xuICAgICAgICAgICAgay5oYXNPd25Qcm9wZXJ0eShlKSAmJiB1YShrW2VdLCBnLCBoKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBlID0gITA7XG4gICAgICAgIH0gZWxzZSBmLnJlZ2lzdHJhdGlvbk5hbWUgPyAodWEoZi5yZWdpc3RyYXRpb25OYW1lLCBnLCBoKSwgZSA9ICEwKSA6IGUgPSAhMTtcblxuICAgICAgICBpZiAoIWUpIHRocm93IEVycm9yKHUoOTgsIGQsIGEpKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gdWEoYSwgYiwgYykge1xuICBpZiAodmFbYV0pIHRocm93IEVycm9yKHUoMTAwLCBhKSk7XG4gIHZhW2FdID0gYjtcbiAgd2FbYV0gPSBiLmV2ZW50VHlwZXNbY10uZGVwZW5kZW5jaWVzO1xufVxuXG52YXIgc2EgPSBbXSxcbiAgICB0YSA9IHt9LFxuICAgIHZhID0ge30sXG4gICAgd2EgPSB7fTtcblxuZnVuY3Rpb24geGEoYSkge1xuICB2YXIgYiA9ICExLFxuICAgICAgYztcblxuICBmb3IgKGMgaW4gYSkge1xuICAgIGlmIChhLmhhc093blByb3BlcnR5KGMpKSB7XG4gICAgICB2YXIgZCA9IGFbY107XG5cbiAgICAgIGlmICghcWEuaGFzT3duUHJvcGVydHkoYykgfHwgcWFbY10gIT09IGQpIHtcbiAgICAgICAgaWYgKHFhW2NdKSB0aHJvdyBFcnJvcih1KDEwMiwgYykpO1xuICAgICAgICBxYVtjXSA9IGQ7XG4gICAgICAgIGIgPSAhMDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBiICYmIHJhKCk7XG59XG5cbnZhciB5YSA9ICEoXCJ1bmRlZmluZWRcIiA9PT0gdHlwZW9mIHdpbmRvdyB8fCBcInVuZGVmaW5lZFwiID09PSB0eXBlb2Ygd2luZG93LmRvY3VtZW50IHx8IFwidW5kZWZpbmVkXCIgPT09IHR5cGVvZiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCksXG4gICAgemEgPSBudWxsLFxuICAgIEFhID0gbnVsbCxcbiAgICBCYSA9IG51bGw7XG5cbmZ1bmN0aW9uIENhKGEpIHtcbiAgaWYgKGEgPSBtYShhKSkge1xuICAgIGlmIChcImZ1bmN0aW9uXCIgIT09IHR5cGVvZiB6YSkgdGhyb3cgRXJyb3IodSgyODApKTtcbiAgICB2YXIgYiA9IGEuc3RhdGVOb2RlO1xuICAgIGIgJiYgKGIgPSBsYShiKSwgemEoYS5zdGF0ZU5vZGUsIGEudHlwZSwgYikpO1xuICB9XG59XG5cbmZ1bmN0aW9uIERhKGEpIHtcbiAgQWEgPyBCYSA/IEJhLnB1c2goYSkgOiBCYSA9IFthXSA6IEFhID0gYTtcbn1cblxuZnVuY3Rpb24gRWEoKSB7XG4gIGlmIChBYSkge1xuICAgIHZhciBhID0gQWEsXG4gICAgICAgIGIgPSBCYTtcbiAgICBCYSA9IEFhID0gbnVsbDtcbiAgICBDYShhKTtcbiAgICBpZiAoYikgZm9yIChhID0gMDsgYSA8IGIubGVuZ3RoOyBhKyspIHtcbiAgICAgIENhKGJbYV0pO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBGYShhLCBiKSB7XG4gIHJldHVybiBhKGIpO1xufVxuXG5mdW5jdGlvbiBHYShhLCBiLCBjLCBkLCBlKSB7XG4gIHJldHVybiBhKGIsIGMsIGQsIGUpO1xufVxuXG5mdW5jdGlvbiBIYSgpIHt9XG5cbnZhciBJYSA9IEZhLFxuICAgIEphID0gITEsXG4gICAgS2EgPSAhMTtcblxuZnVuY3Rpb24gTGEoKSB7XG4gIGlmIChudWxsICE9PSBBYSB8fCBudWxsICE9PSBCYSkgSGEoKSwgRWEoKTtcbn1cblxuZnVuY3Rpb24gTWEoYSwgYiwgYykge1xuICBpZiAoS2EpIHJldHVybiBhKGIsIGMpO1xuICBLYSA9ICEwO1xuXG4gIHRyeSB7XG4gICAgcmV0dXJuIElhKGEsIGIsIGMpO1xuICB9IGZpbmFsbHkge1xuICAgIEthID0gITEsIExhKCk7XG4gIH1cbn1cblxudmFyIE5hID0gL15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLFxuICAgIE9hID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxcbiAgICBQYSA9IHt9LFxuICAgIFFhID0ge307XG5cbmZ1bmN0aW9uIFJhKGEpIHtcbiAgaWYgKE9hLmNhbGwoUWEsIGEpKSByZXR1cm4gITA7XG4gIGlmIChPYS5jYWxsKFBhLCBhKSkgcmV0dXJuICExO1xuICBpZiAoTmEudGVzdChhKSkgcmV0dXJuIFFhW2FdID0gITA7XG4gIFBhW2FdID0gITA7XG4gIHJldHVybiAhMTtcbn1cblxuZnVuY3Rpb24gU2EoYSwgYiwgYywgZCkge1xuICBpZiAobnVsbCAhPT0gYyAmJiAwID09PSBjLnR5cGUpIHJldHVybiAhMTtcblxuICBzd2l0Y2ggKHR5cGVvZiBiKSB7XG4gICAgY2FzZSBcImZ1bmN0aW9uXCI6XG4gICAgY2FzZSBcInN5bWJvbFwiOlxuICAgICAgcmV0dXJuICEwO1xuXG4gICAgY2FzZSBcImJvb2xlYW5cIjpcbiAgICAgIGlmIChkKSByZXR1cm4gITE7XG4gICAgICBpZiAobnVsbCAhPT0gYykgcmV0dXJuICFjLmFjY2VwdHNCb29sZWFucztcbiAgICAgIGEgPSBhLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCwgNSk7XG4gICAgICByZXR1cm4gXCJkYXRhLVwiICE9PSBhICYmIFwiYXJpYS1cIiAhPT0gYTtcblxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gITE7XG4gIH1cbn1cblxuZnVuY3Rpb24gVGEoYSwgYiwgYywgZCkge1xuICBpZiAobnVsbCA9PT0gYiB8fCBcInVuZGVmaW5lZFwiID09PSB0eXBlb2YgYiB8fCBTYShhLCBiLCBjLCBkKSkgcmV0dXJuICEwO1xuICBpZiAoZCkgcmV0dXJuICExO1xuICBpZiAobnVsbCAhPT0gYykgc3dpdGNoIChjLnR5cGUpIHtcbiAgICBjYXNlIDM6XG4gICAgICByZXR1cm4gIWI7XG5cbiAgICBjYXNlIDQ6XG4gICAgICByZXR1cm4gITEgPT09IGI7XG5cbiAgICBjYXNlIDU6XG4gICAgICByZXR1cm4gaXNOYU4oYik7XG5cbiAgICBjYXNlIDY6XG4gICAgICByZXR1cm4gaXNOYU4oYikgfHwgMSA+IGI7XG4gIH1cbiAgcmV0dXJuICExO1xufVxuXG5mdW5jdGlvbiB2KGEsIGIsIGMsIGQsIGUsIGYpIHtcbiAgdGhpcy5hY2NlcHRzQm9vbGVhbnMgPSAyID09PSBiIHx8IDMgPT09IGIgfHwgNCA9PT0gYjtcbiAgdGhpcy5hdHRyaWJ1dGVOYW1lID0gZDtcbiAgdGhpcy5hdHRyaWJ1dGVOYW1lc3BhY2UgPSBlO1xuICB0aGlzLm11c3RVc2VQcm9wZXJ0eSA9IGM7XG4gIHRoaXMucHJvcGVydHlOYW1lID0gYTtcbiAgdGhpcy50eXBlID0gYjtcbiAgdGhpcy5zYW5pdGl6ZVVSTCA9IGY7XG59XG5cbnZhciBDID0ge307XG5cImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uIChhKSB7XG4gIENbYV0gPSBuZXcgdihhLCAwLCAhMSwgYSwgbnVsbCwgITEpO1xufSk7XG5bW1wiYWNjZXB0Q2hhcnNldFwiLCBcImFjY2VwdC1jaGFyc2V0XCJdLCBbXCJjbGFzc05hbWVcIiwgXCJjbGFzc1wiXSwgW1wiaHRtbEZvclwiLCBcImZvclwiXSwgW1wiaHR0cEVxdWl2XCIsIFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbiAoYSkge1xuICB2YXIgYiA9IGFbMF07XG4gIENbYl0gPSBuZXcgdihiLCAxLCAhMSwgYVsxXSwgbnVsbCwgITEpO1xufSk7XG5bXCJjb250ZW50RWRpdGFibGVcIiwgXCJkcmFnZ2FibGVcIiwgXCJzcGVsbENoZWNrXCIsIFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbiAoYSkge1xuICBDW2FdID0gbmV3IHYoYSwgMiwgITEsIGEudG9Mb3dlckNhc2UoKSwgbnVsbCwgITEpO1xufSk7XG5bXCJhdXRvUmV2ZXJzZVwiLCBcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIiwgXCJmb2N1c2FibGVcIiwgXCJwcmVzZXJ2ZUFscGhhXCJdLmZvckVhY2goZnVuY3Rpb24gKGEpIHtcbiAgQ1thXSA9IG5ldyB2KGEsIDIsICExLCBhLCBudWxsLCAhMSk7XG59KTtcblwiYWxsb3dGdWxsU2NyZWVuIGFzeW5jIGF1dG9Gb2N1cyBhdXRvUGxheSBjb250cm9scyBkZWZhdWx0IGRlZmVyIGRpc2FibGVkIGRpc2FibGVQaWN0dXJlSW5QaWN0dXJlIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24gKGEpIHtcbiAgQ1thXSA9IG5ldyB2KGEsIDMsICExLCBhLnRvTG93ZXJDYXNlKCksIG51bGwsICExKTtcbn0pO1xuW1wiY2hlY2tlZFwiLCBcIm11bHRpcGxlXCIsIFwibXV0ZWRcIiwgXCJzZWxlY3RlZFwiXS5mb3JFYWNoKGZ1bmN0aW9uIChhKSB7XG4gIENbYV0gPSBuZXcgdihhLCAzLCAhMCwgYSwgbnVsbCwgITEpO1xufSk7XG5bXCJjYXB0dXJlXCIsIFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbiAoYSkge1xuICBDW2FdID0gbmV3IHYoYSwgNCwgITEsIGEsIG51bGwsICExKTtcbn0pO1xuW1wiY29sc1wiLCBcInJvd3NcIiwgXCJzaXplXCIsIFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uIChhKSB7XG4gIENbYV0gPSBuZXcgdihhLCA2LCAhMSwgYSwgbnVsbCwgITEpO1xufSk7XG5bXCJyb3dTcGFuXCIsIFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbiAoYSkge1xuICBDW2FdID0gbmV3IHYoYSwgNSwgITEsIGEudG9Mb3dlckNhc2UoKSwgbnVsbCwgITEpO1xufSk7XG52YXIgVWEgPSAvW1xcLTpdKFthLXpdKS9nO1xuXG5mdW5jdGlvbiBWYShhKSB7XG4gIHJldHVybiBhWzFdLnRvVXBwZXJDYXNlKCk7XG59XG5cblwiYWNjZW50LWhlaWdodCBhbGlnbm1lbnQtYmFzZWxpbmUgYXJhYmljLWZvcm0gYmFzZWxpbmUtc2hpZnQgY2FwLWhlaWdodCBjbGlwLXBhdGggY2xpcC1ydWxlIGNvbG9yLWludGVycG9sYXRpb24gY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzIGNvbG9yLXByb2ZpbGUgY29sb3ItcmVuZGVyaW5nIGRvbWluYW50LWJhc2VsaW5lIGVuYWJsZS1iYWNrZ3JvdW5kIGZpbGwtb3BhY2l0eSBmaWxsLXJ1bGUgZmxvb2QtY29sb3IgZmxvb2Qtb3BhY2l0eSBmb250LWZhbWlseSBmb250LXNpemUgZm9udC1zaXplLWFkanVzdCBmb250LXN0cmV0Y2ggZm9udC1zdHlsZSBmb250LXZhcmlhbnQgZm9udC13ZWlnaHQgZ2x5cGgtbmFtZSBnbHlwaC1vcmllbnRhdGlvbi1ob3Jpem9udGFsIGdseXBoLW9yaWVudGF0aW9uLXZlcnRpY2FsIGhvcml6LWFkdi14IGhvcml6LW9yaWdpbi14IGltYWdlLXJlbmRlcmluZyBsZXR0ZXItc3BhY2luZyBsaWdodGluZy1jb2xvciBtYXJrZXItZW5kIG1hcmtlci1taWQgbWFya2VyLXN0YXJ0IG92ZXJsaW5lLXBvc2l0aW9uIG92ZXJsaW5lLXRoaWNrbmVzcyBwYWludC1vcmRlciBwYW5vc2UtMSBwb2ludGVyLWV2ZW50cyByZW5kZXJpbmctaW50ZW50IHNoYXBlLXJlbmRlcmluZyBzdG9wLWNvbG9yIHN0b3Atb3BhY2l0eSBzdHJpa2V0aHJvdWdoLXBvc2l0aW9uIHN0cmlrZXRocm91Z2gtdGhpY2tuZXNzIHN0cm9rZS1kYXNoYXJyYXkgc3Ryb2tlLWRhc2hvZmZzZXQgc3Ryb2tlLWxpbmVjYXAgc3Ryb2tlLWxpbmVqb2luIHN0cm9rZS1taXRlcmxpbWl0IHN0cm9rZS1vcGFjaXR5IHN0cm9rZS13aWR0aCB0ZXh0LWFuY2hvciB0ZXh0LWRlY29yYXRpb24gdGV4dC1yZW5kZXJpbmcgdW5kZXJsaW5lLXBvc2l0aW9uIHVuZGVybGluZS10aGlja25lc3MgdW5pY29kZS1iaWRpIHVuaWNvZGUtcmFuZ2UgdW5pdHMtcGVyLWVtIHYtYWxwaGFiZXRpYyB2LWhhbmdpbmcgdi1pZGVvZ3JhcGhpYyB2LW1hdGhlbWF0aWNhbCB2ZWN0b3ItZWZmZWN0IHZlcnQtYWR2LXkgdmVydC1vcmlnaW4teCB2ZXJ0LW9yaWdpbi15IHdvcmQtc3BhY2luZyB3cml0aW5nLW1vZGUgeG1sbnM6eGxpbmsgeC1oZWlnaHRcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbiAoYSkge1xuICB2YXIgYiA9IGEucmVwbGFjZShVYSwgVmEpO1xuICBDW2JdID0gbmV3IHYoYiwgMSwgITEsIGEsIG51bGwsICExKTtcbn0pO1xuXCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbiAoYSkge1xuICB2YXIgYiA9IGEucmVwbGFjZShVYSwgVmEpO1xuICBDW2JdID0gbmV3IHYoYiwgMSwgITEsIGEsIFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCAhMSk7XG59KTtcbltcInhtbDpiYXNlXCIsIFwieG1sOmxhbmdcIiwgXCJ4bWw6c3BhY2VcIl0uZm9yRWFjaChmdW5jdGlvbiAoYSkge1xuICB2YXIgYiA9IGEucmVwbGFjZShVYSwgVmEpO1xuICBDW2JdID0gbmV3IHYoYiwgMSwgITEsIGEsIFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIsICExKTtcbn0pO1xuW1widGFiSW5kZXhcIiwgXCJjcm9zc09yaWdpblwiXS5mb3JFYWNoKGZ1bmN0aW9uIChhKSB7XG4gIENbYV0gPSBuZXcgdihhLCAxLCAhMSwgYS50b0xvd2VyQ2FzZSgpLCBudWxsLCAhMSk7XG59KTtcbkMueGxpbmtIcmVmID0gbmV3IHYoXCJ4bGlua0hyZWZcIiwgMSwgITEsIFwieGxpbms6aHJlZlwiLCBcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwgITApO1xuW1wic3JjXCIsIFwiaHJlZlwiLCBcImFjdGlvblwiLCBcImZvcm1BY3Rpb25cIl0uZm9yRWFjaChmdW5jdGlvbiAoYSkge1xuICBDW2FdID0gbmV3IHYoYSwgMSwgITEsIGEudG9Mb3dlckNhc2UoKSwgbnVsbCwgITApO1xufSk7XG52YXIgV2EgPSBhYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDtcbldhLmhhc093blByb3BlcnR5KFwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlclwiKSB8fCAoV2EuUmVhY3RDdXJyZW50RGlzcGF0Y2hlciA9IHtcbiAgY3VycmVudDogbnVsbFxufSk7XG5XYS5oYXNPd25Qcm9wZXJ0eShcIlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnXCIpIHx8IChXYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyA9IHtcbiAgc3VzcGVuc2U6IG51bGxcbn0pO1xuXG5mdW5jdGlvbiBYYShhLCBiLCBjLCBkKSB7XG4gIHZhciBlID0gQy5oYXNPd25Qcm9wZXJ0eShiKSA/IENbYl0gOiBudWxsO1xuICB2YXIgZiA9IG51bGwgIT09IGUgPyAwID09PSBlLnR5cGUgOiBkID8gITEgOiAhKDIgPCBiLmxlbmd0aCkgfHwgXCJvXCIgIT09IGJbMF0gJiYgXCJPXCIgIT09IGJbMF0gfHwgXCJuXCIgIT09IGJbMV0gJiYgXCJOXCIgIT09IGJbMV0gPyAhMSA6ICEwO1xuICBmIHx8IChUYShiLCBjLCBlLCBkKSAmJiAoYyA9IG51bGwpLCBkIHx8IG51bGwgPT09IGUgPyBSYShiKSAmJiAobnVsbCA9PT0gYyA/IGEucmVtb3ZlQXR0cmlidXRlKGIpIDogYS5zZXRBdHRyaWJ1dGUoYiwgXCJcIiArIGMpKSA6IGUubXVzdFVzZVByb3BlcnR5ID8gYVtlLnByb3BlcnR5TmFtZV0gPSBudWxsID09PSBjID8gMyA9PT0gZS50eXBlID8gITEgOiBcIlwiIDogYyA6IChiID0gZS5hdHRyaWJ1dGVOYW1lLCBkID0gZS5hdHRyaWJ1dGVOYW1lc3BhY2UsIG51bGwgPT09IGMgPyBhLnJlbW92ZUF0dHJpYnV0ZShiKSA6IChlID0gZS50eXBlLCBjID0gMyA9PT0gZSB8fCA0ID09PSBlICYmICEwID09PSBjID8gXCJcIiA6IFwiXCIgKyBjLCBkID8gYS5zZXRBdHRyaWJ1dGVOUyhkLCBiLCBjKSA6IGEuc2V0QXR0cmlidXRlKGIsIGMpKSkpO1xufVxuXG52YXIgWWEgPSAvXiguKilbXFxcXFxcL10vLFxuICAgIEUgPSBcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBTeW1ib2wgJiYgU3ltYm9sLmZvcixcbiAgICBaYSA9IEUgPyBTeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKSA6IDYwMTAzLFxuICAgICRhID0gRSA/IFN5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIikgOiA2MDEwNixcbiAgICBhYiA9IEUgPyBTeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIikgOiA2MDEwNyxcbiAgICBiYiA9IEUgPyBTeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIikgOiA2MDEwOCxcbiAgICBjYiA9IEUgPyBTeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIikgOiA2MDExNCxcbiAgICBkYiA9IEUgPyBTeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIikgOiA2MDEwOSxcbiAgICBlYiA9IEUgPyBTeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKSA6IDYwMTEwLFxuICAgIGZiID0gRSA/IFN5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIikgOiA2MDExMSxcbiAgICBnYiA9IEUgPyBTeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIikgOiA2MDExMixcbiAgICBoYiA9IEUgPyBTeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIikgOiA2MDExMyxcbiAgICBpYiA9IEUgPyBTeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKSA6IDYwMTIwLFxuICAgIGpiID0gRSA/IFN5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpIDogNjAxMTUsXG4gICAga2IgPSBFID8gU3ltYm9sLmZvcihcInJlYWN0LmxhenlcIikgOiA2MDExNixcbiAgICBsYiA9IEUgPyBTeW1ib2wuZm9yKFwicmVhY3QuYmxvY2tcIikgOiA2MDEyMSxcbiAgICBtYiA9IFwiZnVuY3Rpb25cIiA9PT0gdHlwZW9mIFN5bWJvbCAmJiBTeW1ib2wuaXRlcmF0b3I7XG5cbmZ1bmN0aW9uIG5iKGEpIHtcbiAgaWYgKG51bGwgPT09IGEgfHwgXCJvYmplY3RcIiAhPT0gdHlwZW9mIGEpIHJldHVybiBudWxsO1xuICBhID0gbWIgJiYgYVttYl0gfHwgYVtcIkBAaXRlcmF0b3JcIl07XG4gIHJldHVybiBcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBhID8gYSA6IG51bGw7XG59XG5cbmZ1bmN0aW9uIG9iKGEpIHtcbiAgaWYgKC0xID09PSBhLl9zdGF0dXMpIHtcbiAgICBhLl9zdGF0dXMgPSAwO1xuICAgIHZhciBiID0gYS5fY3RvcjtcbiAgICBiID0gYigpO1xuICAgIGEuX3Jlc3VsdCA9IGI7XG4gICAgYi50aGVuKGZ1bmN0aW9uIChiKSB7XG4gICAgICAwID09PSBhLl9zdGF0dXMgJiYgKGIgPSBiLmRlZmF1bHQsIGEuX3N0YXR1cyA9IDEsIGEuX3Jlc3VsdCA9IGIpO1xuICAgIH0sIGZ1bmN0aW9uIChiKSB7XG4gICAgICAwID09PSBhLl9zdGF0dXMgJiYgKGEuX3N0YXR1cyA9IDIsIGEuX3Jlc3VsdCA9IGIpO1xuICAgIH0pO1xuICB9XG59XG5cbmZ1bmN0aW9uIHBiKGEpIHtcbiAgaWYgKG51bGwgPT0gYSkgcmV0dXJuIG51bGw7XG4gIGlmIChcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBhKSByZXR1cm4gYS5kaXNwbGF5TmFtZSB8fCBhLm5hbWUgfHwgbnVsbDtcbiAgaWYgKFwic3RyaW5nXCIgPT09IHR5cGVvZiBhKSByZXR1cm4gYTtcblxuICBzd2l0Y2ggKGEpIHtcbiAgICBjYXNlIGFiOlxuICAgICAgcmV0dXJuIFwiRnJhZ21lbnRcIjtcblxuICAgIGNhc2UgJGE6XG4gICAgICByZXR1cm4gXCJQb3J0YWxcIjtcblxuICAgIGNhc2UgY2I6XG4gICAgICByZXR1cm4gXCJQcm9maWxlclwiO1xuXG4gICAgY2FzZSBiYjpcbiAgICAgIHJldHVybiBcIlN0cmljdE1vZGVcIjtcblxuICAgIGNhc2UgaGI6XG4gICAgICByZXR1cm4gXCJTdXNwZW5zZVwiO1xuXG4gICAgY2FzZSBpYjpcbiAgICAgIHJldHVybiBcIlN1c3BlbnNlTGlzdFwiO1xuICB9XG5cbiAgaWYgKFwib2JqZWN0XCIgPT09IHR5cGVvZiBhKSBzd2l0Y2ggKGEuJCR0eXBlb2YpIHtcbiAgICBjYXNlIGViOlxuICAgICAgcmV0dXJuIFwiQ29udGV4dC5Db25zdW1lclwiO1xuXG4gICAgY2FzZSBkYjpcbiAgICAgIHJldHVybiBcIkNvbnRleHQuUHJvdmlkZXJcIjtcblxuICAgIGNhc2UgZ2I6XG4gICAgICB2YXIgYiA9IGEucmVuZGVyO1xuICAgICAgYiA9IGIuZGlzcGxheU5hbWUgfHwgYi5uYW1lIHx8IFwiXCI7XG4gICAgICByZXR1cm4gYS5kaXNwbGF5TmFtZSB8fCAoXCJcIiAhPT0gYiA/IFwiRm9yd2FyZFJlZihcIiArIGIgKyBcIilcIiA6IFwiRm9yd2FyZFJlZlwiKTtcblxuICAgIGNhc2UgamI6XG4gICAgICByZXR1cm4gcGIoYS50eXBlKTtcblxuICAgIGNhc2UgbGI6XG4gICAgICByZXR1cm4gcGIoYS5yZW5kZXIpO1xuXG4gICAgY2FzZSBrYjpcbiAgICAgIGlmIChhID0gMSA9PT0gYS5fc3RhdHVzID8gYS5fcmVzdWx0IDogbnVsbCkgcmV0dXJuIHBiKGEpO1xuICB9XG4gIHJldHVybiBudWxsO1xufVxuXG5mdW5jdGlvbiBxYihhKSB7XG4gIHZhciBiID0gXCJcIjtcblxuICBkbyB7XG4gICAgYTogc3dpdGNoIChhLnRhZykge1xuICAgICAgY2FzZSAzOlxuICAgICAgY2FzZSA0OlxuICAgICAgY2FzZSA2OlxuICAgICAgY2FzZSA3OlxuICAgICAgY2FzZSAxMDpcbiAgICAgIGNhc2UgOTpcbiAgICAgICAgdmFyIGMgPSBcIlwiO1xuICAgICAgICBicmVhayBhO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICB2YXIgZCA9IGEuX2RlYnVnT3duZXIsXG4gICAgICAgICAgICBlID0gYS5fZGVidWdTb3VyY2UsXG4gICAgICAgICAgICBmID0gcGIoYS50eXBlKTtcbiAgICAgICAgYyA9IG51bGw7XG4gICAgICAgIGQgJiYgKGMgPSBwYihkLnR5cGUpKTtcbiAgICAgICAgZCA9IGY7XG4gICAgICAgIGYgPSBcIlwiO1xuICAgICAgICBlID8gZiA9IFwiIChhdCBcIiArIGUuZmlsZU5hbWUucmVwbGFjZShZYSwgXCJcIikgKyBcIjpcIiArIGUubGluZU51bWJlciArIFwiKVwiIDogYyAmJiAoZiA9IFwiIChjcmVhdGVkIGJ5IFwiICsgYyArIFwiKVwiKTtcbiAgICAgICAgYyA9IFwiXFxuICAgIGluIFwiICsgKGQgfHwgXCJVbmtub3duXCIpICsgZjtcbiAgICB9XG5cbiAgICBiICs9IGM7XG4gICAgYSA9IGEucmV0dXJuO1xuICB9IHdoaWxlIChhKTtcblxuICByZXR1cm4gYjtcbn1cblxuZnVuY3Rpb24gcmIoYSkge1xuICBzd2l0Y2ggKHR5cGVvZiBhKSB7XG4gICAgY2FzZSBcImJvb2xlYW5cIjpcbiAgICBjYXNlIFwibnVtYmVyXCI6XG4gICAgY2FzZSBcIm9iamVjdFwiOlxuICAgIGNhc2UgXCJzdHJpbmdcIjpcbiAgICBjYXNlIFwidW5kZWZpbmVkXCI6XG4gICAgICByZXR1cm4gYTtcblxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gXCJcIjtcbiAgfVxufVxuXG5mdW5jdGlvbiBzYihhKSB7XG4gIHZhciBiID0gYS50eXBlO1xuICByZXR1cm4gKGEgPSBhLm5vZGVOYW1lKSAmJiBcImlucHV0XCIgPT09IGEudG9Mb3dlckNhc2UoKSAmJiAoXCJjaGVja2JveFwiID09PSBiIHx8IFwicmFkaW9cIiA9PT0gYik7XG59XG5cbmZ1bmN0aW9uIHRiKGEpIHtcbiAgdmFyIGIgPSBzYihhKSA/IFwiY2hlY2tlZFwiIDogXCJ2YWx1ZVwiLFxuICAgICAgYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsIGIpLFxuICAgICAgZCA9IFwiXCIgKyBhW2JdO1xuXG4gIGlmICghYS5oYXNPd25Qcm9wZXJ0eShiKSAmJiBcInVuZGVmaW5lZFwiICE9PSB0eXBlb2YgYyAmJiBcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBjLmdldCAmJiBcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBjLnNldCkge1xuICAgIHZhciBlID0gYy5nZXQsXG4gICAgICAgIGYgPSBjLnNldDtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoYSwgYiwge1xuICAgICAgY29uZmlndXJhYmxlOiAhMCxcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICByZXR1cm4gZS5jYWxsKHRoaXMpO1xuICAgICAgfSxcbiAgICAgIHNldDogZnVuY3Rpb24gc2V0KGEpIHtcbiAgICAgICAgZCA9IFwiXCIgKyBhO1xuICAgICAgICBmLmNhbGwodGhpcywgYSk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGEsIGIsIHtcbiAgICAgIGVudW1lcmFibGU6IGMuZW51bWVyYWJsZVxuICAgIH0pO1xuICAgIHJldHVybiB7XG4gICAgICBnZXRWYWx1ZTogZnVuY3Rpb24gZ2V0VmFsdWUoKSB7XG4gICAgICAgIHJldHVybiBkO1xuICAgICAgfSxcbiAgICAgIHNldFZhbHVlOiBmdW5jdGlvbiBzZXRWYWx1ZShhKSB7XG4gICAgICAgIGQgPSBcIlwiICsgYTtcbiAgICAgIH0sXG4gICAgICBzdG9wVHJhY2tpbmc6IGZ1bmN0aW9uIHN0b3BUcmFja2luZygpIHtcbiAgICAgICAgYS5fdmFsdWVUcmFja2VyID0gbnVsbDtcbiAgICAgICAgZGVsZXRlIGFbYl07XG4gICAgICB9XG4gICAgfTtcbiAgfVxufVxuXG5mdW5jdGlvbiB4YihhKSB7XG4gIGEuX3ZhbHVlVHJhY2tlciB8fCAoYS5fdmFsdWVUcmFja2VyID0gdGIoYSkpO1xufVxuXG5mdW5jdGlvbiB5YihhKSB7XG4gIGlmICghYSkgcmV0dXJuICExO1xuICB2YXIgYiA9IGEuX3ZhbHVlVHJhY2tlcjtcbiAgaWYgKCFiKSByZXR1cm4gITA7XG4gIHZhciBjID0gYi5nZXRWYWx1ZSgpO1xuICB2YXIgZCA9IFwiXCI7XG4gIGEgJiYgKGQgPSBzYihhKSA/IGEuY2hlY2tlZCA/IFwidHJ1ZVwiIDogXCJmYWxzZVwiIDogYS52YWx1ZSk7XG4gIGEgPSBkO1xuICByZXR1cm4gYSAhPT0gYyA/IChiLnNldFZhbHVlKGEpLCAhMCkgOiAhMTtcbn1cblxuZnVuY3Rpb24gemIoYSwgYikge1xuICB2YXIgYyA9IGIuY2hlY2tlZDtcbiAgcmV0dXJuIG4oe30sIGIsIHtcbiAgICBkZWZhdWx0Q2hlY2tlZDogdm9pZCAwLFxuICAgIGRlZmF1bHRWYWx1ZTogdm9pZCAwLFxuICAgIHZhbHVlOiB2b2lkIDAsXG4gICAgY2hlY2tlZDogbnVsbCAhPSBjID8gYyA6IGEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZFxuICB9KTtcbn1cblxuZnVuY3Rpb24gQWIoYSwgYikge1xuICB2YXIgYyA9IG51bGwgPT0gYi5kZWZhdWx0VmFsdWUgPyBcIlwiIDogYi5kZWZhdWx0VmFsdWUsXG4gICAgICBkID0gbnVsbCAhPSBiLmNoZWNrZWQgPyBiLmNoZWNrZWQgOiBiLmRlZmF1bHRDaGVja2VkO1xuICBjID0gcmIobnVsbCAhPSBiLnZhbHVlID8gYi52YWx1ZSA6IGMpO1xuICBhLl93cmFwcGVyU3RhdGUgPSB7XG4gICAgaW5pdGlhbENoZWNrZWQ6IGQsXG4gICAgaW5pdGlhbFZhbHVlOiBjLFxuICAgIGNvbnRyb2xsZWQ6IFwiY2hlY2tib3hcIiA9PT0gYi50eXBlIHx8IFwicmFkaW9cIiA9PT0gYi50eXBlID8gbnVsbCAhPSBiLmNoZWNrZWQgOiBudWxsICE9IGIudmFsdWVcbiAgfTtcbn1cblxuZnVuY3Rpb24gQmIoYSwgYikge1xuICBiID0gYi5jaGVja2VkO1xuICBudWxsICE9IGIgJiYgWGEoYSwgXCJjaGVja2VkXCIsIGIsICExKTtcbn1cblxuZnVuY3Rpb24gQ2IoYSwgYikge1xuICBCYihhLCBiKTtcbiAgdmFyIGMgPSByYihiLnZhbHVlKSxcbiAgICAgIGQgPSBiLnR5cGU7XG4gIGlmIChudWxsICE9IGMpIHtcbiAgICBpZiAoXCJudW1iZXJcIiA9PT0gZCkge1xuICAgICAgaWYgKDAgPT09IGMgJiYgXCJcIiA9PT0gYS52YWx1ZSB8fCBhLnZhbHVlICE9IGMpIGEudmFsdWUgPSBcIlwiICsgYztcbiAgICB9IGVsc2UgYS52YWx1ZSAhPT0gXCJcIiArIGMgJiYgKGEudmFsdWUgPSBcIlwiICsgYyk7XG4gIH0gZWxzZSBpZiAoXCJzdWJtaXRcIiA9PT0gZCB8fCBcInJlc2V0XCIgPT09IGQpIHtcbiAgICBhLnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpO1xuICAgIHJldHVybjtcbiAgfVxuICBiLmhhc093blByb3BlcnR5KFwidmFsdWVcIikgPyBEYihhLCBiLnR5cGUsIGMpIDogYi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSAmJiBEYihhLCBiLnR5cGUsIHJiKGIuZGVmYXVsdFZhbHVlKSk7XG4gIG51bGwgPT0gYi5jaGVja2VkICYmIG51bGwgIT0gYi5kZWZhdWx0Q2hlY2tlZCAmJiAoYS5kZWZhdWx0Q2hlY2tlZCA9ICEhYi5kZWZhdWx0Q2hlY2tlZCk7XG59XG5cbmZ1bmN0aW9uIEViKGEsIGIsIGMpIHtcbiAgaWYgKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKSB8fCBiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpKSB7XG4gICAgdmFyIGQgPSBiLnR5cGU7XG4gICAgaWYgKCEoXCJzdWJtaXRcIiAhPT0gZCAmJiBcInJlc2V0XCIgIT09IGQgfHwgdm9pZCAwICE9PSBiLnZhbHVlICYmIG51bGwgIT09IGIudmFsdWUpKSByZXR1cm47XG4gICAgYiA9IFwiXCIgKyBhLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO1xuICAgIGMgfHwgYiA9PT0gYS52YWx1ZSB8fCAoYS52YWx1ZSA9IGIpO1xuICAgIGEuZGVmYXVsdFZhbHVlID0gYjtcbiAgfVxuXG4gIGMgPSBhLm5hbWU7XG4gIFwiXCIgIT09IGMgJiYgKGEubmFtZSA9IFwiXCIpO1xuICBhLmRlZmF1bHRDaGVja2VkID0gISFhLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWQ7XG4gIFwiXCIgIT09IGMgJiYgKGEubmFtZSA9IGMpO1xufVxuXG5mdW5jdGlvbiBEYihhLCBiLCBjKSB7XG4gIGlmIChcIm51bWJlclwiICE9PSBiIHx8IGEub3duZXJEb2N1bWVudC5hY3RpdmVFbGVtZW50ICE9PSBhKSBudWxsID09IGMgPyBhLmRlZmF1bHRWYWx1ZSA9IFwiXCIgKyBhLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlIDogYS5kZWZhdWx0VmFsdWUgIT09IFwiXCIgKyBjICYmIChhLmRlZmF1bHRWYWx1ZSA9IFwiXCIgKyBjKTtcbn1cblxuZnVuY3Rpb24gRmIoYSkge1xuICB2YXIgYiA9IFwiXCI7XG4gIGFhLkNoaWxkcmVuLmZvckVhY2goYSwgZnVuY3Rpb24gKGEpIHtcbiAgICBudWxsICE9IGEgJiYgKGIgKz0gYSk7XG4gIH0pO1xuICByZXR1cm4gYjtcbn1cblxuZnVuY3Rpb24gR2IoYSwgYikge1xuICBhID0gbih7XG4gICAgY2hpbGRyZW46IHZvaWQgMFxuICB9LCBiKTtcbiAgaWYgKGIgPSBGYihiLmNoaWxkcmVuKSkgYS5jaGlsZHJlbiA9IGI7XG4gIHJldHVybiBhO1xufVxuXG5mdW5jdGlvbiBIYihhLCBiLCBjLCBkKSB7XG4gIGEgPSBhLm9wdGlvbnM7XG5cbiAgaWYgKGIpIHtcbiAgICBiID0ge307XG5cbiAgICBmb3IgKHZhciBlID0gMDsgZSA8IGMubGVuZ3RoOyBlKyspIHtcbiAgICAgIGJbXCIkXCIgKyBjW2VdXSA9ICEwO1xuICAgIH1cblxuICAgIGZvciAoYyA9IDA7IGMgPCBhLmxlbmd0aDsgYysrKSB7XG4gICAgICBlID0gYi5oYXNPd25Qcm9wZXJ0eShcIiRcIiArIGFbY10udmFsdWUpLCBhW2NdLnNlbGVjdGVkICE9PSBlICYmIChhW2NdLnNlbGVjdGVkID0gZSksIGUgJiYgZCAmJiAoYVtjXS5kZWZhdWx0U2VsZWN0ZWQgPSAhMCk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGMgPSBcIlwiICsgcmIoYyk7XG4gICAgYiA9IG51bGw7XG5cbiAgICBmb3IgKGUgPSAwOyBlIDwgYS5sZW5ndGg7IGUrKykge1xuICAgICAgaWYgKGFbZV0udmFsdWUgPT09IGMpIHtcbiAgICAgICAgYVtlXS5zZWxlY3RlZCA9ICEwO1xuICAgICAgICBkICYmIChhW2VdLmRlZmF1bHRTZWxlY3RlZCA9ICEwKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBudWxsICE9PSBiIHx8IGFbZV0uZGlzYWJsZWQgfHwgKGIgPSBhW2VdKTtcbiAgICB9XG5cbiAgICBudWxsICE9PSBiICYmIChiLnNlbGVjdGVkID0gITApO1xuICB9XG59XG5cbmZ1bmN0aW9uIEliKGEsIGIpIHtcbiAgaWYgKG51bGwgIT0gYi5kYW5nZXJvdXNseVNldElubmVySFRNTCkgdGhyb3cgRXJyb3IodSg5MSkpO1xuICByZXR1cm4gbih7fSwgYiwge1xuICAgIHZhbHVlOiB2b2lkIDAsXG4gICAgZGVmYXVsdFZhbHVlOiB2b2lkIDAsXG4gICAgY2hpbGRyZW46IFwiXCIgKyBhLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBKYihhLCBiKSB7XG4gIHZhciBjID0gYi52YWx1ZTtcblxuICBpZiAobnVsbCA9PSBjKSB7XG4gICAgYyA9IGIuY2hpbGRyZW47XG4gICAgYiA9IGIuZGVmYXVsdFZhbHVlO1xuXG4gICAgaWYgKG51bGwgIT0gYykge1xuICAgICAgaWYgKG51bGwgIT0gYikgdGhyb3cgRXJyb3IodSg5MikpO1xuXG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShjKSkge1xuICAgICAgICBpZiAoISgxID49IGMubGVuZ3RoKSkgdGhyb3cgRXJyb3IodSg5MykpO1xuICAgICAgICBjID0gY1swXTtcbiAgICAgIH1cblxuICAgICAgYiA9IGM7XG4gICAgfVxuXG4gICAgbnVsbCA9PSBiICYmIChiID0gXCJcIik7XG4gICAgYyA9IGI7XG4gIH1cblxuICBhLl93cmFwcGVyU3RhdGUgPSB7XG4gICAgaW5pdGlhbFZhbHVlOiByYihjKVxuICB9O1xufVxuXG5mdW5jdGlvbiBLYihhLCBiKSB7XG4gIHZhciBjID0gcmIoYi52YWx1ZSksXG4gICAgICBkID0gcmIoYi5kZWZhdWx0VmFsdWUpO1xuICBudWxsICE9IGMgJiYgKGMgPSBcIlwiICsgYywgYyAhPT0gYS52YWx1ZSAmJiAoYS52YWx1ZSA9IGMpLCBudWxsID09IGIuZGVmYXVsdFZhbHVlICYmIGEuZGVmYXVsdFZhbHVlICE9PSBjICYmIChhLmRlZmF1bHRWYWx1ZSA9IGMpKTtcbiAgbnVsbCAhPSBkICYmIChhLmRlZmF1bHRWYWx1ZSA9IFwiXCIgKyBkKTtcbn1cblxuZnVuY3Rpb24gTGIoYSkge1xuICB2YXIgYiA9IGEudGV4dENvbnRlbnQ7XG4gIGIgPT09IGEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUgJiYgXCJcIiAhPT0gYiAmJiBudWxsICE9PSBiICYmIChhLnZhbHVlID0gYik7XG59XG5cbnZhciBNYiA9IHtcbiAgaHRtbDogXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIsXG4gIG1hdGhtbDogXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsXG4gIHN2ZzogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG59O1xuXG5mdW5jdGlvbiBOYihhKSB7XG4gIHN3aXRjaCAoYSkge1xuICAgIGNhc2UgXCJzdmdcIjpcbiAgICAgIHJldHVybiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7XG5cbiAgICBjYXNlIFwibWF0aFwiOlxuICAgICAgcmV0dXJuIFwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjtcbiAgfVxufVxuXG5mdW5jdGlvbiBPYihhLCBiKSB7XG4gIHJldHVybiBudWxsID09IGEgfHwgXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIgPT09IGEgPyBOYihiKSA6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiA9PT0gYSAmJiBcImZvcmVpZ25PYmplY3RcIiA9PT0gYiA/IFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiIDogYTtcbn1cblxudmFyIFBiLFxuICAgIFFiID0gZnVuY3Rpb24gKGEpIHtcbiAgcmV0dXJuIFwidW5kZWZpbmVkXCIgIT09IHR5cGVvZiBNU0FwcCAmJiBNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbiA/IGZ1bmN0aW9uIChiLCBjLCBkLCBlKSB7XG4gICAgTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIGEoYiwgYywgZCwgZSk7XG4gICAgfSk7XG4gIH0gOiBhO1xufShmdW5jdGlvbiAoYSwgYikge1xuICBpZiAoYS5uYW1lc3BhY2VVUkkgIT09IE1iLnN2ZyB8fCBcImlubmVySFRNTFwiIGluIGEpIGEuaW5uZXJIVE1MID0gYjtlbHNlIHtcbiAgICBQYiA9IFBiIHx8IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgUGIuaW5uZXJIVE1MID0gXCI8c3ZnPlwiICsgYi52YWx1ZU9mKCkudG9TdHJpbmcoKSArIFwiPC9zdmc+XCI7XG5cbiAgICBmb3IgKGIgPSBQYi5maXJzdENoaWxkOyBhLmZpcnN0Q2hpbGQ7KSB7XG4gICAgICBhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgZm9yICg7IGIuZmlyc3RDaGlsZDspIHtcbiAgICAgIGEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKTtcbiAgICB9XG4gIH1cbn0pO1xuXG5mdW5jdGlvbiBSYihhLCBiKSB7XG4gIGlmIChiKSB7XG4gICAgdmFyIGMgPSBhLmZpcnN0Q2hpbGQ7XG5cbiAgICBpZiAoYyAmJiBjID09PSBhLmxhc3RDaGlsZCAmJiAzID09PSBjLm5vZGVUeXBlKSB7XG4gICAgICBjLm5vZGVWYWx1ZSA9IGI7XG4gICAgICByZXR1cm47XG4gICAgfVxuICB9XG5cbiAgYS50ZXh0Q29udGVudCA9IGI7XG59XG5cbmZ1bmN0aW9uIFNiKGEsIGIpIHtcbiAgdmFyIGMgPSB7fTtcbiAgY1thLnRvTG93ZXJDYXNlKCldID0gYi50b0xvd2VyQ2FzZSgpO1xuICBjW1wiV2Via2l0XCIgKyBhXSA9IFwid2Via2l0XCIgKyBiO1xuICBjW1wiTW96XCIgKyBhXSA9IFwibW96XCIgKyBiO1xuICByZXR1cm4gYztcbn1cblxudmFyIFRiID0ge1xuICBhbmltYXRpb25lbmQ6IFNiKFwiQW5pbWF0aW9uXCIsIFwiQW5pbWF0aW9uRW5kXCIpLFxuICBhbmltYXRpb25pdGVyYXRpb246IFNiKFwiQW5pbWF0aW9uXCIsIFwiQW5pbWF0aW9uSXRlcmF0aW9uXCIpLFxuICBhbmltYXRpb25zdGFydDogU2IoXCJBbmltYXRpb25cIiwgXCJBbmltYXRpb25TdGFydFwiKSxcbiAgdHJhbnNpdGlvbmVuZDogU2IoXCJUcmFuc2l0aW9uXCIsIFwiVHJhbnNpdGlvbkVuZFwiKVxufSxcbiAgICBVYiA9IHt9LFxuICAgIFZiID0ge307XG55YSAmJiAoVmIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLCBcIkFuaW1hdGlvbkV2ZW50XCIgaW4gd2luZG93IHx8IChkZWxldGUgVGIuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbiwgZGVsZXRlIFRiLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sIGRlbGV0ZSBUYi5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLCBcIlRyYW5zaXRpb25FdmVudFwiIGluIHdpbmRvdyB8fCBkZWxldGUgVGIudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtcblxuZnVuY3Rpb24gV2IoYSkge1xuICBpZiAoVWJbYV0pIHJldHVybiBVYlthXTtcbiAgaWYgKCFUYlthXSkgcmV0dXJuIGE7XG4gIHZhciBiID0gVGJbYV0sXG4gICAgICBjO1xuXG4gIGZvciAoYyBpbiBiKSB7XG4gICAgaWYgKGIuaGFzT3duUHJvcGVydHkoYykgJiYgYyBpbiBWYikgcmV0dXJuIFViW2FdID0gYltjXTtcbiAgfVxuXG4gIHJldHVybiBhO1xufVxuXG52YXIgWGIgPSBXYihcImFuaW1hdGlvbmVuZFwiKSxcbiAgICBZYiA9IFdiKFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIpLFxuICAgIFpiID0gV2IoXCJhbmltYXRpb25zdGFydFwiKSxcbiAgICAkYiA9IFdiKFwidHJhbnNpdGlvbmVuZFwiKSxcbiAgICBhYyA9IFwiYWJvcnQgY2FucGxheSBjYW5wbGF5dGhyb3VnaCBkdXJhdGlvbmNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBsb2FkZWRkYXRhIGxvYWRlZG1ldGFkYXRhIGxvYWRzdGFydCBwYXVzZSBwbGF5IHBsYXlpbmcgcHJvZ3Jlc3MgcmF0ZWNoYW5nZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1c3BlbmQgdGltZXVwZGF0ZSB2b2x1bWVjaGFuZ2Ugd2FpdGluZ1wiLnNwbGl0KFwiIFwiKSxcbiAgICBiYyA9IG5ldyAoXCJmdW5jdGlvblwiID09PSB0eXBlb2YgV2Vha01hcCA/IFdlYWtNYXAgOiBNYXApKCk7XG5cbmZ1bmN0aW9uIGNjKGEpIHtcbiAgdmFyIGIgPSBiYy5nZXQoYSk7XG4gIHZvaWQgMCA9PT0gYiAmJiAoYiA9IG5ldyBNYXAoKSwgYmMuc2V0KGEsIGIpKTtcbiAgcmV0dXJuIGI7XG59XG5cbmZ1bmN0aW9uIGRjKGEpIHtcbiAgdmFyIGIgPSBhLFxuICAgICAgYyA9IGE7XG4gIGlmIChhLmFsdGVybmF0ZSkgZm9yICg7IGIucmV0dXJuOykge1xuICAgIGIgPSBiLnJldHVybjtcbiAgfSBlbHNlIHtcbiAgICBhID0gYjtcblxuICAgIGRvIHtcbiAgICAgIGIgPSBhLCAwICE9PSAoYi5lZmZlY3RUYWcgJiAxMDI2KSAmJiAoYyA9IGIucmV0dXJuKSwgYSA9IGIucmV0dXJuO1xuICAgIH0gd2hpbGUgKGEpO1xuICB9XG4gIHJldHVybiAzID09PSBiLnRhZyA/IGMgOiBudWxsO1xufVxuXG5mdW5jdGlvbiBlYyhhKSB7XG4gIGlmICgxMyA9PT0gYS50YWcpIHtcbiAgICB2YXIgYiA9IGEubWVtb2l6ZWRTdGF0ZTtcbiAgICBudWxsID09PSBiICYmIChhID0gYS5hbHRlcm5hdGUsIG51bGwgIT09IGEgJiYgKGIgPSBhLm1lbW9pemVkU3RhdGUpKTtcbiAgICBpZiAobnVsbCAhPT0gYikgcmV0dXJuIGIuZGVoeWRyYXRlZDtcbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuXG5mdW5jdGlvbiBmYyhhKSB7XG4gIGlmIChkYyhhKSAhPT0gYSkgdGhyb3cgRXJyb3IodSgxODgpKTtcbn1cblxuZnVuY3Rpb24gZ2MoYSkge1xuICB2YXIgYiA9IGEuYWx0ZXJuYXRlO1xuXG4gIGlmICghYikge1xuICAgIGIgPSBkYyhhKTtcbiAgICBpZiAobnVsbCA9PT0gYikgdGhyb3cgRXJyb3IodSgxODgpKTtcbiAgICByZXR1cm4gYiAhPT0gYSA/IG51bGwgOiBhO1xuICB9XG5cbiAgZm9yICh2YXIgYyA9IGEsIGQgPSBiOzspIHtcbiAgICB2YXIgZSA9IGMucmV0dXJuO1xuICAgIGlmIChudWxsID09PSBlKSBicmVhaztcbiAgICB2YXIgZiA9IGUuYWx0ZXJuYXRlO1xuXG4gICAgaWYgKG51bGwgPT09IGYpIHtcbiAgICAgIGQgPSBlLnJldHVybjtcblxuICAgICAgaWYgKG51bGwgIT09IGQpIHtcbiAgICAgICAgYyA9IGQ7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICBpZiAoZS5jaGlsZCA9PT0gZi5jaGlsZCkge1xuICAgICAgZm9yIChmID0gZS5jaGlsZDsgZjspIHtcbiAgICAgICAgaWYgKGYgPT09IGMpIHJldHVybiBmYyhlKSwgYTtcbiAgICAgICAgaWYgKGYgPT09IGQpIHJldHVybiBmYyhlKSwgYjtcbiAgICAgICAgZiA9IGYuc2libGluZztcbiAgICAgIH1cblxuICAgICAgdGhyb3cgRXJyb3IodSgxODgpKTtcbiAgICB9XG5cbiAgICBpZiAoYy5yZXR1cm4gIT09IGQucmV0dXJuKSBjID0gZSwgZCA9IGY7ZWxzZSB7XG4gICAgICBmb3IgKHZhciBnID0gITEsIGggPSBlLmNoaWxkOyBoOykge1xuICAgICAgICBpZiAoaCA9PT0gYykge1xuICAgICAgICAgIGcgPSAhMDtcbiAgICAgICAgICBjID0gZTtcbiAgICAgICAgICBkID0gZjtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChoID09PSBkKSB7XG4gICAgICAgICAgZyA9ICEwO1xuICAgICAgICAgIGQgPSBlO1xuICAgICAgICAgIGMgPSBmO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgICAgaCA9IGguc2libGluZztcbiAgICAgIH1cblxuICAgICAgaWYgKCFnKSB7XG4gICAgICAgIGZvciAoaCA9IGYuY2hpbGQ7IGg7KSB7XG4gICAgICAgICAgaWYgKGggPT09IGMpIHtcbiAgICAgICAgICAgIGcgPSAhMDtcbiAgICAgICAgICAgIGMgPSBmO1xuICAgICAgICAgICAgZCA9IGU7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoaCA9PT0gZCkge1xuICAgICAgICAgICAgZyA9ICEwO1xuICAgICAgICAgICAgZCA9IGY7XG4gICAgICAgICAgICBjID0gZTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGggPSBoLnNpYmxpbmc7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIWcpIHRocm93IEVycm9yKHUoMTg5KSk7XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChjLmFsdGVybmF0ZSAhPT0gZCkgdGhyb3cgRXJyb3IodSgxOTApKTtcbiAgfVxuXG4gIGlmICgzICE9PSBjLnRhZykgdGhyb3cgRXJyb3IodSgxODgpKTtcbiAgcmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQgPT09IGMgPyBhIDogYjtcbn1cblxuZnVuY3Rpb24gaGMoYSkge1xuICBhID0gZ2MoYSk7XG4gIGlmICghYSkgcmV0dXJuIG51bGw7XG5cbiAgZm9yICh2YXIgYiA9IGE7Oykge1xuICAgIGlmICg1ID09PSBiLnRhZyB8fCA2ID09PSBiLnRhZykgcmV0dXJuIGI7XG4gICAgaWYgKGIuY2hpbGQpIGIuY2hpbGQucmV0dXJuID0gYiwgYiA9IGIuY2hpbGQ7ZWxzZSB7XG4gICAgICBpZiAoYiA9PT0gYSkgYnJlYWs7XG5cbiAgICAgIGZvciAoOyAhYi5zaWJsaW5nOykge1xuICAgICAgICBpZiAoIWIucmV0dXJuIHx8IGIucmV0dXJuID09PSBhKSByZXR1cm4gbnVsbDtcbiAgICAgICAgYiA9IGIucmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBiLnNpYmxpbmcucmV0dXJuID0gYi5yZXR1cm47XG4gICAgICBiID0gYi5zaWJsaW5nO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuXG5mdW5jdGlvbiBpYyhhLCBiKSB7XG4gIGlmIChudWxsID09IGIpIHRocm93IEVycm9yKHUoMzApKTtcbiAgaWYgKG51bGwgPT0gYSkgcmV0dXJuIGI7XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkoYSkpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShiKSkgcmV0dXJuIGEucHVzaC5hcHBseShhLCBiKSwgYTtcbiAgICBhLnB1c2goYik7XG4gICAgcmV0dXJuIGE7XG4gIH1cblxuICByZXR1cm4gQXJyYXkuaXNBcnJheShiKSA/IFthXS5jb25jYXQoYikgOiBbYSwgYl07XG59XG5cbmZ1bmN0aW9uIGpjKGEsIGIsIGMpIHtcbiAgQXJyYXkuaXNBcnJheShhKSA/IGEuZm9yRWFjaChiLCBjKSA6IGEgJiYgYi5jYWxsKGMsIGEpO1xufVxuXG52YXIga2MgPSBudWxsO1xuXG5mdW5jdGlvbiBsYyhhKSB7XG4gIGlmIChhKSB7XG4gICAgdmFyIGIgPSBhLl9kaXNwYXRjaExpc3RlbmVycyxcbiAgICAgICAgYyA9IGEuX2Rpc3BhdGNoSW5zdGFuY2VzO1xuICAgIGlmIChBcnJheS5pc0FycmF5KGIpKSBmb3IgKHZhciBkID0gMDsgZCA8IGIubGVuZ3RoICYmICFhLmlzUHJvcGFnYXRpb25TdG9wcGVkKCk7IGQrKykge1xuICAgICAgb2EoYSwgYltkXSwgY1tkXSk7XG4gICAgfSBlbHNlIGIgJiYgb2EoYSwgYiwgYyk7XG4gICAgYS5fZGlzcGF0Y2hMaXN0ZW5lcnMgPSBudWxsO1xuICAgIGEuX2Rpc3BhdGNoSW5zdGFuY2VzID0gbnVsbDtcbiAgICBhLmlzUGVyc2lzdGVudCgpIHx8IGEuY29uc3RydWN0b3IucmVsZWFzZShhKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBtYyhhKSB7XG4gIG51bGwgIT09IGEgJiYgKGtjID0gaWMoa2MsIGEpKTtcbiAgYSA9IGtjO1xuICBrYyA9IG51bGw7XG5cbiAgaWYgKGEpIHtcbiAgICBqYyhhLCBsYyk7XG4gICAgaWYgKGtjKSB0aHJvdyBFcnJvcih1KDk1KSk7XG4gICAgaWYgKGZhKSB0aHJvdyBhID0gaGEsIGZhID0gITEsIGhhID0gbnVsbCwgYTtcbiAgfVxufVxuXG5mdW5jdGlvbiBuYyhhKSB7XG4gIGEgPSBhLnRhcmdldCB8fCBhLnNyY0VsZW1lbnQgfHwgd2luZG93O1xuICBhLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50ICYmIChhID0gYS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7XG4gIHJldHVybiAzID09PSBhLm5vZGVUeXBlID8gYS5wYXJlbnROb2RlIDogYTtcbn1cblxuZnVuY3Rpb24gb2MoYSkge1xuICBpZiAoIXlhKSByZXR1cm4gITE7XG4gIGEgPSBcIm9uXCIgKyBhO1xuICB2YXIgYiA9IChhIGluIGRvY3VtZW50KTtcbiAgYiB8fCAoYiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksIGIuc2V0QXR0cmlidXRlKGEsIFwicmV0dXJuO1wiKSwgYiA9IFwiZnVuY3Rpb25cIiA9PT0gdHlwZW9mIGJbYV0pO1xuICByZXR1cm4gYjtcbn1cblxudmFyIHBjID0gW107XG5cbmZ1bmN0aW9uIHFjKGEpIHtcbiAgYS50b3BMZXZlbFR5cGUgPSBudWxsO1xuICBhLm5hdGl2ZUV2ZW50ID0gbnVsbDtcbiAgYS50YXJnZXRJbnN0ID0gbnVsbDtcbiAgYS5hbmNlc3RvcnMubGVuZ3RoID0gMDtcbiAgMTAgPiBwYy5sZW5ndGggJiYgcGMucHVzaChhKTtcbn1cblxuZnVuY3Rpb24gcmMoYSwgYiwgYywgZCkge1xuICBpZiAocGMubGVuZ3RoKSB7XG4gICAgdmFyIGUgPSBwYy5wb3AoKTtcbiAgICBlLnRvcExldmVsVHlwZSA9IGE7XG4gICAgZS5ldmVudFN5c3RlbUZsYWdzID0gZDtcbiAgICBlLm5hdGl2ZUV2ZW50ID0gYjtcbiAgICBlLnRhcmdldEluc3QgPSBjO1xuICAgIHJldHVybiBlO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICB0b3BMZXZlbFR5cGU6IGEsXG4gICAgZXZlbnRTeXN0ZW1GbGFnczogZCxcbiAgICBuYXRpdmVFdmVudDogYixcbiAgICB0YXJnZXRJbnN0OiBjLFxuICAgIGFuY2VzdG9yczogW11cbiAgfTtcbn1cblxuZnVuY3Rpb24gc2MoYSkge1xuICB2YXIgYiA9IGEudGFyZ2V0SW5zdCxcbiAgICAgIGMgPSBiO1xuXG4gIGRvIHtcbiAgICBpZiAoIWMpIHtcbiAgICAgIGEuYW5jZXN0b3JzLnB1c2goYyk7XG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICB2YXIgZCA9IGM7XG4gICAgaWYgKDMgPT09IGQudGFnKSBkID0gZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlbHNlIHtcbiAgICAgIGZvciAoOyBkLnJldHVybjspIHtcbiAgICAgICAgZCA9IGQucmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBkID0gMyAhPT0gZC50YWcgPyBudWxsIDogZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztcbiAgICB9XG4gICAgaWYgKCFkKSBicmVhaztcbiAgICBiID0gYy50YWc7XG4gICAgNSAhPT0gYiAmJiA2ICE9PSBiIHx8IGEuYW5jZXN0b3JzLnB1c2goYyk7XG4gICAgYyA9IHRjKGQpO1xuICB9IHdoaWxlIChjKTtcblxuICBmb3IgKGMgPSAwOyBjIDwgYS5hbmNlc3RvcnMubGVuZ3RoOyBjKyspIHtcbiAgICBiID0gYS5hbmNlc3RvcnNbY107XG4gICAgdmFyIGUgPSBuYyhhLm5hdGl2ZUV2ZW50KTtcbiAgICBkID0gYS50b3BMZXZlbFR5cGU7XG4gICAgdmFyIGYgPSBhLm5hdGl2ZUV2ZW50LFxuICAgICAgICBnID0gYS5ldmVudFN5c3RlbUZsYWdzO1xuICAgIDAgPT09IGMgJiYgKGcgfD0gNjQpO1xuXG4gICAgZm9yICh2YXIgaCA9IG51bGwsIGsgPSAwOyBrIDwgc2EubGVuZ3RoOyBrKyspIHtcbiAgICAgIHZhciBsID0gc2Fba107XG4gICAgICBsICYmIChsID0gbC5leHRyYWN0RXZlbnRzKGQsIGIsIGYsIGUsIGcpKSAmJiAoaCA9IGljKGgsIGwpKTtcbiAgICB9XG5cbiAgICBtYyhoKTtcbiAgfVxufVxuXG5mdW5jdGlvbiB1YyhhLCBiLCBjKSB7XG4gIGlmICghYy5oYXMoYSkpIHtcbiAgICBzd2l0Y2ggKGEpIHtcbiAgICAgIGNhc2UgXCJzY3JvbGxcIjpcbiAgICAgICAgdmMoYiwgXCJzY3JvbGxcIiwgITApO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBcImZvY3VzXCI6XG4gICAgICBjYXNlIFwiYmx1clwiOlxuICAgICAgICB2YyhiLCBcImZvY3VzXCIsICEwKTtcbiAgICAgICAgdmMoYiwgXCJibHVyXCIsICEwKTtcbiAgICAgICAgYy5zZXQoXCJibHVyXCIsIG51bGwpO1xuICAgICAgICBjLnNldChcImZvY3VzXCIsIG51bGwpO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBcImNhbmNlbFwiOlxuICAgICAgY2FzZSBcImNsb3NlXCI6XG4gICAgICAgIG9jKGEpICYmIHZjKGIsIGEsICEwKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgXCJpbnZhbGlkXCI6XG4gICAgICBjYXNlIFwic3VibWl0XCI6XG4gICAgICBjYXNlIFwicmVzZXRcIjpcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIC0xID09PSBhYy5pbmRleE9mKGEpICYmIEYoYSwgYik7XG4gICAgfVxuXG4gICAgYy5zZXQoYSwgbnVsbCk7XG4gIH1cbn1cblxudmFyIHdjLFxuICAgIHhjLFxuICAgIHljLFxuICAgIHpjID0gITEsXG4gICAgQWMgPSBbXSxcbiAgICBCYyA9IG51bGwsXG4gICAgQ2MgPSBudWxsLFxuICAgIERjID0gbnVsbCxcbiAgICBFYyA9IG5ldyBNYXAoKSxcbiAgICBGYyA9IG5ldyBNYXAoKSxcbiAgICBHYyA9IFtdLFxuICAgIEhjID0gXCJtb3VzZWRvd24gbW91c2V1cCB0b3VjaGNhbmNlbCB0b3VjaGVuZCB0b3VjaHN0YXJ0IGF1eGNsaWNrIGRibGNsaWNrIHBvaW50ZXJjYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlcnVwIGRyYWdlbmQgZHJhZ3N0YXJ0IGRyb3AgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIGlucHV0IHRleHRJbnB1dCBjbG9zZSBjYW5jZWwgY29weSBjdXQgcGFzdGUgY2xpY2sgY2hhbmdlIGNvbnRleHRtZW51IHJlc2V0IHN1Ym1pdFwiLnNwbGl0KFwiIFwiKSxcbiAgICBJYyA9IFwiZm9jdXMgYmx1ciBkcmFnZW50ZXIgZHJhZ2xlYXZlIG1vdXNlb3ZlciBtb3VzZW91dCBwb2ludGVyb3ZlciBwb2ludGVyb3V0IGdvdHBvaW50ZXJjYXB0dXJlIGxvc3Rwb2ludGVyY2FwdHVyZVwiLnNwbGl0KFwiIFwiKTtcblxuZnVuY3Rpb24gSmMoYSwgYikge1xuICB2YXIgYyA9IGNjKGIpO1xuICBIYy5mb3JFYWNoKGZ1bmN0aW9uIChhKSB7XG4gICAgdWMoYSwgYiwgYyk7XG4gIH0pO1xuICBJYy5mb3JFYWNoKGZ1bmN0aW9uIChhKSB7XG4gICAgdWMoYSwgYiwgYyk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBLYyhhLCBiLCBjLCBkLCBlKSB7XG4gIHJldHVybiB7XG4gICAgYmxvY2tlZE9uOiBhLFxuICAgIHRvcExldmVsVHlwZTogYixcbiAgICBldmVudFN5c3RlbUZsYWdzOiBjIHwgMzIsXG4gICAgbmF0aXZlRXZlbnQ6IGUsXG4gICAgY29udGFpbmVyOiBkXG4gIH07XG59XG5cbmZ1bmN0aW9uIExjKGEsIGIpIHtcbiAgc3dpdGNoIChhKSB7XG4gICAgY2FzZSBcImZvY3VzXCI6XG4gICAgY2FzZSBcImJsdXJcIjpcbiAgICAgIEJjID0gbnVsbDtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSBcImRyYWdlbnRlclwiOlxuICAgIGNhc2UgXCJkcmFnbGVhdmVcIjpcbiAgICAgIENjID0gbnVsbDtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSBcIm1vdXNlb3ZlclwiOlxuICAgIGNhc2UgXCJtb3VzZW91dFwiOlxuICAgICAgRGMgPSBudWxsO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlIFwicG9pbnRlcm92ZXJcIjpcbiAgICBjYXNlIFwicG9pbnRlcm91dFwiOlxuICAgICAgRWMuZGVsZXRlKGIucG9pbnRlcklkKTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6XG4gICAgY2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOlxuICAgICAgRmMuZGVsZXRlKGIucG9pbnRlcklkKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBNYyhhLCBiLCBjLCBkLCBlLCBmKSB7XG4gIGlmIChudWxsID09PSBhIHx8IGEubmF0aXZlRXZlbnQgIT09IGYpIHJldHVybiBhID0gS2MoYiwgYywgZCwgZSwgZiksIG51bGwgIT09IGIgJiYgKGIgPSBOYyhiKSwgbnVsbCAhPT0gYiAmJiB4YyhiKSksIGE7XG4gIGEuZXZlbnRTeXN0ZW1GbGFncyB8PSBkO1xuICByZXR1cm4gYTtcbn1cblxuZnVuY3Rpb24gT2MoYSwgYiwgYywgZCwgZSkge1xuICBzd2l0Y2ggKGIpIHtcbiAgICBjYXNlIFwiZm9jdXNcIjpcbiAgICAgIHJldHVybiBCYyA9IE1jKEJjLCBhLCBiLCBjLCBkLCBlKSwgITA7XG5cbiAgICBjYXNlIFwiZHJhZ2VudGVyXCI6XG4gICAgICByZXR1cm4gQ2MgPSBNYyhDYywgYSwgYiwgYywgZCwgZSksICEwO1xuXG4gICAgY2FzZSBcIm1vdXNlb3ZlclwiOlxuICAgICAgcmV0dXJuIERjID0gTWMoRGMsIGEsIGIsIGMsIGQsIGUpLCAhMDtcblxuICAgIGNhc2UgXCJwb2ludGVyb3ZlclwiOlxuICAgICAgdmFyIGYgPSBlLnBvaW50ZXJJZDtcbiAgICAgIEVjLnNldChmLCBNYyhFYy5nZXQoZikgfHwgbnVsbCwgYSwgYiwgYywgZCwgZSkpO1xuICAgICAgcmV0dXJuICEwO1xuXG4gICAgY2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6XG4gICAgICByZXR1cm4gZiA9IGUucG9pbnRlcklkLCBGYy5zZXQoZiwgTWMoRmMuZ2V0KGYpIHx8IG51bGwsIGEsIGIsIGMsIGQsIGUpKSwgITA7XG4gIH1cblxuICByZXR1cm4gITE7XG59XG5cbmZ1bmN0aW9uIFBjKGEpIHtcbiAgdmFyIGIgPSB0YyhhLnRhcmdldCk7XG5cbiAgaWYgKG51bGwgIT09IGIpIHtcbiAgICB2YXIgYyA9IGRjKGIpO1xuICAgIGlmIChudWxsICE9PSBjKSBpZiAoYiA9IGMudGFnLCAxMyA9PT0gYikge1xuICAgICAgaWYgKGIgPSBlYyhjKSwgbnVsbCAhPT0gYikge1xuICAgICAgICBhLmJsb2NrZWRPbiA9IGI7XG4gICAgICAgIHIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KGEucHJpb3JpdHksIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICB5YyhjKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKDMgPT09IGIgJiYgYy5zdGF0ZU5vZGUuaHlkcmF0ZSkge1xuICAgICAgYS5ibG9ja2VkT24gPSAzID09PSBjLnRhZyA/IGMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8gOiBudWxsO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgfVxuXG4gIGEuYmxvY2tlZE9uID0gbnVsbDtcbn1cblxuZnVuY3Rpb24gUWMoYSkge1xuICBpZiAobnVsbCAhPT0gYS5ibG9ja2VkT24pIHJldHVybiAhMTtcbiAgdmFyIGIgPSBSYyhhLnRvcExldmVsVHlwZSwgYS5ldmVudFN5c3RlbUZsYWdzLCBhLmNvbnRhaW5lciwgYS5uYXRpdmVFdmVudCk7XG5cbiAgaWYgKG51bGwgIT09IGIpIHtcbiAgICB2YXIgYyA9IE5jKGIpO1xuICAgIG51bGwgIT09IGMgJiYgeGMoYyk7XG4gICAgYS5ibG9ja2VkT24gPSBiO1xuICAgIHJldHVybiAhMTtcbiAgfVxuXG4gIHJldHVybiAhMDtcbn1cblxuZnVuY3Rpb24gU2MoYSwgYiwgYykge1xuICBRYyhhKSAmJiBjLmRlbGV0ZShiKTtcbn1cblxuZnVuY3Rpb24gVGMoKSB7XG4gIGZvciAoemMgPSAhMTsgMCA8IEFjLmxlbmd0aDspIHtcbiAgICB2YXIgYSA9IEFjWzBdO1xuXG4gICAgaWYgKG51bGwgIT09IGEuYmxvY2tlZE9uKSB7XG4gICAgICBhID0gTmMoYS5ibG9ja2VkT24pO1xuICAgICAgbnVsbCAhPT0gYSAmJiB3YyhhKTtcbiAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIHZhciBiID0gUmMoYS50b3BMZXZlbFR5cGUsIGEuZXZlbnRTeXN0ZW1GbGFncywgYS5jb250YWluZXIsIGEubmF0aXZlRXZlbnQpO1xuICAgIG51bGwgIT09IGIgPyBhLmJsb2NrZWRPbiA9IGIgOiBBYy5zaGlmdCgpO1xuICB9XG5cbiAgbnVsbCAhPT0gQmMgJiYgUWMoQmMpICYmIChCYyA9IG51bGwpO1xuICBudWxsICE9PSBDYyAmJiBRYyhDYykgJiYgKENjID0gbnVsbCk7XG4gIG51bGwgIT09IERjICYmIFFjKERjKSAmJiAoRGMgPSBudWxsKTtcbiAgRWMuZm9yRWFjaChTYyk7XG4gIEZjLmZvckVhY2goU2MpO1xufVxuXG5mdW5jdGlvbiBVYyhhLCBiKSB7XG4gIGEuYmxvY2tlZE9uID09PSBiICYmIChhLmJsb2NrZWRPbiA9IG51bGwsIHpjIHx8ICh6YyA9ICEwLCByLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2soci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSwgVGMpKSk7XG59XG5cbmZ1bmN0aW9uIFZjKGEpIHtcbiAgZnVuY3Rpb24gYihiKSB7XG4gICAgcmV0dXJuIFVjKGIsIGEpO1xuICB9XG5cbiAgaWYgKDAgPCBBYy5sZW5ndGgpIHtcbiAgICBVYyhBY1swXSwgYSk7XG5cbiAgICBmb3IgKHZhciBjID0gMTsgYyA8IEFjLmxlbmd0aDsgYysrKSB7XG4gICAgICB2YXIgZCA9IEFjW2NdO1xuICAgICAgZC5ibG9ja2VkT24gPT09IGEgJiYgKGQuYmxvY2tlZE9uID0gbnVsbCk7XG4gICAgfVxuICB9XG5cbiAgbnVsbCAhPT0gQmMgJiYgVWMoQmMsIGEpO1xuICBudWxsICE9PSBDYyAmJiBVYyhDYywgYSk7XG4gIG51bGwgIT09IERjICYmIFVjKERjLCBhKTtcbiAgRWMuZm9yRWFjaChiKTtcbiAgRmMuZm9yRWFjaChiKTtcblxuICBmb3IgKGMgPSAwOyBjIDwgR2MubGVuZ3RoOyBjKyspIHtcbiAgICBkID0gR2NbY10sIGQuYmxvY2tlZE9uID09PSBhICYmIChkLmJsb2NrZWRPbiA9IG51bGwpO1xuICB9XG5cbiAgZm9yICg7IDAgPCBHYy5sZW5ndGggJiYgKGMgPSBHY1swXSwgbnVsbCA9PT0gYy5ibG9ja2VkT24pOykge1xuICAgIFBjKGMpLCBudWxsID09PSBjLmJsb2NrZWRPbiAmJiBHYy5zaGlmdCgpO1xuICB9XG59XG5cbnZhciBXYyA9IHt9LFxuICAgIFljID0gbmV3IE1hcCgpLFxuICAgIFpjID0gbmV3IE1hcCgpLFxuICAgICRjID0gW1wiYWJvcnRcIiwgXCJhYm9ydFwiLCBYYiwgXCJhbmltYXRpb25FbmRcIiwgWWIsIFwiYW5pbWF0aW9uSXRlcmF0aW9uXCIsIFpiLCBcImFuaW1hdGlvblN0YXJ0XCIsIFwiY2FucGxheVwiLCBcImNhblBsYXlcIiwgXCJjYW5wbGF5dGhyb3VnaFwiLCBcImNhblBsYXlUaHJvdWdoXCIsIFwiZHVyYXRpb25jaGFuZ2VcIiwgXCJkdXJhdGlvbkNoYW5nZVwiLCBcImVtcHRpZWRcIiwgXCJlbXB0aWVkXCIsIFwiZW5jcnlwdGVkXCIsIFwiZW5jcnlwdGVkXCIsIFwiZW5kZWRcIiwgXCJlbmRlZFwiLCBcImVycm9yXCIsIFwiZXJyb3JcIiwgXCJnb3Rwb2ludGVyY2FwdHVyZVwiLCBcImdvdFBvaW50ZXJDYXB0dXJlXCIsIFwibG9hZFwiLCBcImxvYWRcIiwgXCJsb2FkZWRkYXRhXCIsIFwibG9hZGVkRGF0YVwiLCBcImxvYWRlZG1ldGFkYXRhXCIsIFwibG9hZGVkTWV0YWRhdGFcIiwgXCJsb2Fkc3RhcnRcIiwgXCJsb2FkU3RhcnRcIiwgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIiwgXCJsb3N0UG9pbnRlckNhcHR1cmVcIiwgXCJwbGF5aW5nXCIsIFwicGxheWluZ1wiLCBcInByb2dyZXNzXCIsIFwicHJvZ3Jlc3NcIiwgXCJzZWVraW5nXCIsIFwic2Vla2luZ1wiLCBcInN0YWxsZWRcIiwgXCJzdGFsbGVkXCIsIFwic3VzcGVuZFwiLCBcInN1c3BlbmRcIiwgXCJ0aW1ldXBkYXRlXCIsIFwidGltZVVwZGF0ZVwiLCAkYiwgXCJ0cmFuc2l0aW9uRW5kXCIsIFwid2FpdGluZ1wiLCBcIndhaXRpbmdcIl07XG5cbmZ1bmN0aW9uIGFkKGEsIGIpIHtcbiAgZm9yICh2YXIgYyA9IDA7IGMgPCBhLmxlbmd0aDsgYyArPSAyKSB7XG4gICAgdmFyIGQgPSBhW2NdLFxuICAgICAgICBlID0gYVtjICsgMV0sXG4gICAgICAgIGYgPSBcIm9uXCIgKyAoZVswXS50b1VwcGVyQ2FzZSgpICsgZS5zbGljZSgxKSk7XG4gICAgZiA9IHtcbiAgICAgIHBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOiB7XG4gICAgICAgIGJ1YmJsZWQ6IGYsXG4gICAgICAgIGNhcHR1cmVkOiBmICsgXCJDYXB0dXJlXCJcbiAgICAgIH0sXG4gICAgICBkZXBlbmRlbmNpZXM6IFtkXSxcbiAgICAgIGV2ZW50UHJpb3JpdHk6IGJcbiAgICB9O1xuICAgIFpjLnNldChkLCBiKTtcbiAgICBZYy5zZXQoZCwgZik7XG4gICAgV2NbZV0gPSBmO1xuICB9XG59XG5cbmFkKFwiYmx1ciBibHVyIGNhbmNlbCBjYW5jZWwgY2xpY2sgY2xpY2sgY2xvc2UgY2xvc2UgY29udGV4dG1lbnUgY29udGV4dE1lbnUgY29weSBjb3B5IGN1dCBjdXQgYXV4Y2xpY2sgYXV4Q2xpY2sgZGJsY2xpY2sgZG91YmxlQ2xpY2sgZHJhZ2VuZCBkcmFnRW5kIGRyYWdzdGFydCBkcmFnU3RhcnQgZHJvcCBkcm9wIGZvY3VzIGZvY3VzIGlucHV0IGlucHV0IGludmFsaWQgaW52YWxpZCBrZXlkb3duIGtleURvd24ga2V5cHJlc3Mga2V5UHJlc3Mga2V5dXAga2V5VXAgbW91c2Vkb3duIG1vdXNlRG93biBtb3VzZXVwIG1vdXNlVXAgcGFzdGUgcGFzdGUgcGF1c2UgcGF1c2UgcGxheSBwbGF5IHBvaW50ZXJjYW5jZWwgcG9pbnRlckNhbmNlbCBwb2ludGVyZG93biBwb2ludGVyRG93biBwb2ludGVydXAgcG9pbnRlclVwIHJhdGVjaGFuZ2UgcmF0ZUNoYW5nZSByZXNldCByZXNldCBzZWVrZWQgc2Vla2VkIHN1Ym1pdCBzdWJtaXQgdG91Y2hjYW5jZWwgdG91Y2hDYW5jZWwgdG91Y2hlbmQgdG91Y2hFbmQgdG91Y2hzdGFydCB0b3VjaFN0YXJ0IHZvbHVtZWNoYW5nZSB2b2x1bWVDaGFuZ2VcIi5zcGxpdChcIiBcIiksIDApO1xuYWQoXCJkcmFnIGRyYWcgZHJhZ2VudGVyIGRyYWdFbnRlciBkcmFnZXhpdCBkcmFnRXhpdCBkcmFnbGVhdmUgZHJhZ0xlYXZlIGRyYWdvdmVyIGRyYWdPdmVyIG1vdXNlbW92ZSBtb3VzZU1vdmUgbW91c2VvdXQgbW91c2VPdXQgbW91c2VvdmVyIG1vdXNlT3ZlciBwb2ludGVybW92ZSBwb2ludGVyTW92ZSBwb2ludGVyb3V0IHBvaW50ZXJPdXQgcG9pbnRlcm92ZXIgcG9pbnRlck92ZXIgc2Nyb2xsIHNjcm9sbCB0b2dnbGUgdG9nZ2xlIHRvdWNobW92ZSB0b3VjaE1vdmUgd2hlZWwgd2hlZWxcIi5zcGxpdChcIiBcIiksIDEpO1xuYWQoJGMsIDIpO1xuXG5mb3IgKHZhciBiZCA9IFwiY2hhbmdlIHNlbGVjdGlvbmNoYW5nZSB0ZXh0SW5wdXQgY29tcG9zaXRpb25zdGFydCBjb21wb3NpdGlvbmVuZCBjb21wb3NpdGlvbnVwZGF0ZVwiLnNwbGl0KFwiIFwiKSwgY2QgPSAwOyBjZCA8IGJkLmxlbmd0aDsgY2QrKykge1xuICBaYy5zZXQoYmRbY2RdLCAwKTtcbn1cblxudmFyIGRkID0gci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxcbiAgICBlZCA9IHIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5LFxuICAgIGZkID0gITA7XG5cbmZ1bmN0aW9uIEYoYSwgYikge1xuICB2YyhiLCBhLCAhMSk7XG59XG5cbmZ1bmN0aW9uIHZjKGEsIGIsIGMpIHtcbiAgdmFyIGQgPSBaYy5nZXQoYik7XG5cbiAgc3dpdGNoICh2b2lkIDAgPT09IGQgPyAyIDogZCkge1xuICAgIGNhc2UgMDpcbiAgICAgIGQgPSBnZC5iaW5kKG51bGwsIGIsIDEsIGEpO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlIDE6XG4gICAgICBkID0gaGQuYmluZChudWxsLCBiLCAxLCBhKTtcbiAgICAgIGJyZWFrO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIGQgPSBpZC5iaW5kKG51bGwsIGIsIDEsIGEpO1xuICB9XG5cbiAgYyA/IGEuYWRkRXZlbnRMaXN0ZW5lcihiLCBkLCAhMCkgOiBhLmFkZEV2ZW50TGlzdGVuZXIoYiwgZCwgITEpO1xufVxuXG5mdW5jdGlvbiBnZChhLCBiLCBjLCBkKSB7XG4gIEphIHx8IEhhKCk7XG4gIHZhciBlID0gaWQsXG4gICAgICBmID0gSmE7XG4gIEphID0gITA7XG5cbiAgdHJ5IHtcbiAgICBHYShlLCBhLCBiLCBjLCBkKTtcbiAgfSBmaW5hbGx5IHtcbiAgICAoSmEgPSBmKSB8fCBMYSgpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGhkKGEsIGIsIGMsIGQpIHtcbiAgZWQoZGQsIGlkLmJpbmQobnVsbCwgYSwgYiwgYywgZCkpO1xufVxuXG5mdW5jdGlvbiBpZChhLCBiLCBjLCBkKSB7XG4gIGlmIChmZCkgaWYgKDAgPCBBYy5sZW5ndGggJiYgLTEgPCBIYy5pbmRleE9mKGEpKSBhID0gS2MobnVsbCwgYSwgYiwgYywgZCksIEFjLnB1c2goYSk7ZWxzZSB7XG4gICAgdmFyIGUgPSBSYyhhLCBiLCBjLCBkKTtcbiAgICBpZiAobnVsbCA9PT0gZSkgTGMoYSwgZCk7ZWxzZSBpZiAoLTEgPCBIYy5pbmRleE9mKGEpKSBhID0gS2MoZSwgYSwgYiwgYywgZCksIEFjLnB1c2goYSk7ZWxzZSBpZiAoIU9jKGUsIGEsIGIsIGMsIGQpKSB7XG4gICAgICBMYyhhLCBkKTtcbiAgICAgIGEgPSByYyhhLCBkLCBudWxsLCBiKTtcblxuICAgICAgdHJ5IHtcbiAgICAgICAgTWEoc2MsIGEpO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgcWMoYSk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIFJjKGEsIGIsIGMsIGQpIHtcbiAgYyA9IG5jKGQpO1xuICBjID0gdGMoYyk7XG5cbiAgaWYgKG51bGwgIT09IGMpIHtcbiAgICB2YXIgZSA9IGRjKGMpO1xuICAgIGlmIChudWxsID09PSBlKSBjID0gbnVsbDtlbHNlIHtcbiAgICAgIHZhciBmID0gZS50YWc7XG5cbiAgICAgIGlmICgxMyA9PT0gZikge1xuICAgICAgICBjID0gZWMoZSk7XG4gICAgICAgIGlmIChudWxsICE9PSBjKSByZXR1cm4gYztcbiAgICAgICAgYyA9IG51bGw7XG4gICAgICB9IGVsc2UgaWYgKDMgPT09IGYpIHtcbiAgICAgICAgaWYgKGUuc3RhdGVOb2RlLmh5ZHJhdGUpIHJldHVybiAzID09PSBlLnRhZyA/IGUuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8gOiBudWxsO1xuICAgICAgICBjID0gbnVsbDtcbiAgICAgIH0gZWxzZSBlICE9PSBjICYmIChjID0gbnVsbCk7XG4gICAgfVxuICB9XG5cbiAgYSA9IHJjKGEsIGQsIGMsIGIpO1xuXG4gIHRyeSB7XG4gICAgTWEoc2MsIGEpO1xuICB9IGZpbmFsbHkge1xuICAgIHFjKGEpO1xuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59XG5cbnZhciBqZCA9IHtcbiAgYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ICEwLFxuICBib3JkZXJJbWFnZU91dHNldDogITAsXG4gIGJvcmRlckltYWdlU2xpY2U6ICEwLFxuICBib3JkZXJJbWFnZVdpZHRoOiAhMCxcbiAgYm94RmxleDogITAsXG4gIGJveEZsZXhHcm91cDogITAsXG4gIGJveE9yZGluYWxHcm91cDogITAsXG4gIGNvbHVtbkNvdW50OiAhMCxcbiAgY29sdW1uczogITAsXG4gIGZsZXg6ICEwLFxuICBmbGV4R3JvdzogITAsXG4gIGZsZXhQb3NpdGl2ZTogITAsXG4gIGZsZXhTaHJpbms6ICEwLFxuICBmbGV4TmVnYXRpdmU6ICEwLFxuICBmbGV4T3JkZXI6ICEwLFxuICBncmlkQXJlYTogITAsXG4gIGdyaWRSb3c6ICEwLFxuICBncmlkUm93RW5kOiAhMCxcbiAgZ3JpZFJvd1NwYW46ICEwLFxuICBncmlkUm93U3RhcnQ6ICEwLFxuICBncmlkQ29sdW1uOiAhMCxcbiAgZ3JpZENvbHVtbkVuZDogITAsXG4gIGdyaWRDb2x1bW5TcGFuOiAhMCxcbiAgZ3JpZENvbHVtblN0YXJ0OiAhMCxcbiAgZm9udFdlaWdodDogITAsXG4gIGxpbmVDbGFtcDogITAsXG4gIGxpbmVIZWlnaHQ6ICEwLFxuICBvcGFjaXR5OiAhMCxcbiAgb3JkZXI6ICEwLFxuICBvcnBoYW5zOiAhMCxcbiAgdGFiU2l6ZTogITAsXG4gIHdpZG93czogITAsXG4gIHpJbmRleDogITAsXG4gIHpvb206ICEwLFxuICBmaWxsT3BhY2l0eTogITAsXG4gIGZsb29kT3BhY2l0eTogITAsXG4gIHN0b3BPcGFjaXR5OiAhMCxcbiAgc3Ryb2tlRGFzaGFycmF5OiAhMCxcbiAgc3Ryb2tlRGFzaG9mZnNldDogITAsXG4gIHN0cm9rZU1pdGVybGltaXQ6ICEwLFxuICBzdHJva2VPcGFjaXR5OiAhMCxcbiAgc3Ryb2tlV2lkdGg6ICEwXG59LFxuICAgIGtkID0gW1wiV2Via2l0XCIsIFwibXNcIiwgXCJNb3pcIiwgXCJPXCJdO1xuT2JqZWN0LmtleXMoamQpLmZvckVhY2goZnVuY3Rpb24gKGEpIHtcbiAga2QuZm9yRWFjaChmdW5jdGlvbiAoYikge1xuICAgIGIgPSBiICsgYS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIGEuc3Vic3RyaW5nKDEpO1xuICAgIGpkW2JdID0gamRbYV07XG4gIH0pO1xufSk7XG5cbmZ1bmN0aW9uIGxkKGEsIGIsIGMpIHtcbiAgcmV0dXJuIG51bGwgPT0gYiB8fCBcImJvb2xlYW5cIiA9PT0gdHlwZW9mIGIgfHwgXCJcIiA9PT0gYiA/IFwiXCIgOiBjIHx8IFwibnVtYmVyXCIgIT09IHR5cGVvZiBiIHx8IDAgPT09IGIgfHwgamQuaGFzT3duUHJvcGVydHkoYSkgJiYgamRbYV0gPyAoXCJcIiArIGIpLnRyaW0oKSA6IGIgKyBcInB4XCI7XG59XG5cbmZ1bmN0aW9uIG1kKGEsIGIpIHtcbiAgYSA9IGEuc3R5bGU7XG5cbiAgZm9yICh2YXIgYyBpbiBiKSB7XG4gICAgaWYgKGIuaGFzT3duUHJvcGVydHkoYykpIHtcbiAgICAgIHZhciBkID0gMCA9PT0gYy5pbmRleE9mKFwiLS1cIiksXG4gICAgICAgICAgZSA9IGxkKGMsIGJbY10sIGQpO1xuICAgICAgXCJmbG9hdFwiID09PSBjICYmIChjID0gXCJjc3NGbG9hdFwiKTtcbiAgICAgIGQgPyBhLnNldFByb3BlcnR5KGMsIGUpIDogYVtjXSA9IGU7XG4gICAgfVxuICB9XG59XG5cbnZhciBuZCA9IG4oe1xuICBtZW51aXRlbTogITBcbn0sIHtcbiAgYXJlYTogITAsXG4gIGJhc2U6ICEwLFxuICBicjogITAsXG4gIGNvbDogITAsXG4gIGVtYmVkOiAhMCxcbiAgaHI6ICEwLFxuICBpbWc6ICEwLFxuICBpbnB1dDogITAsXG4gIGtleWdlbjogITAsXG4gIGxpbms6ICEwLFxuICBtZXRhOiAhMCxcbiAgcGFyYW06ICEwLFxuICBzb3VyY2U6ICEwLFxuICB0cmFjazogITAsXG4gIHdicjogITBcbn0pO1xuXG5mdW5jdGlvbiBvZChhLCBiKSB7XG4gIGlmIChiKSB7XG4gICAgaWYgKG5kW2FdICYmIChudWxsICE9IGIuY2hpbGRyZW4gfHwgbnVsbCAhPSBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSkgdGhyb3cgRXJyb3IodSgxMzcsIGEsIFwiXCIpKTtcblxuICAgIGlmIChudWxsICE9IGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpIHtcbiAgICAgIGlmIChudWxsICE9IGIuY2hpbGRyZW4pIHRocm93IEVycm9yKHUoNjApKTtcbiAgICAgIGlmICghKFwib2JqZWN0XCIgPT09IHR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MICYmIFwiX19odG1sXCIgaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpIHRocm93IEVycm9yKHUoNjEpKTtcbiAgICB9XG5cbiAgICBpZiAobnVsbCAhPSBiLnN0eWxlICYmIFwib2JqZWN0XCIgIT09IHR5cGVvZiBiLnN0eWxlKSB0aHJvdyBFcnJvcih1KDYyLCBcIlwiKSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gcGQoYSwgYikge1xuICBpZiAoLTEgPT09IGEuaW5kZXhPZihcIi1cIikpIHJldHVybiBcInN0cmluZ1wiID09PSB0eXBlb2YgYi5pcztcblxuICBzd2l0Y2ggKGEpIHtcbiAgICBjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpcbiAgICBjYXNlIFwiY29sb3ItcHJvZmlsZVwiOlxuICAgIGNhc2UgXCJmb250LWZhY2VcIjpcbiAgICBjYXNlIFwiZm9udC1mYWNlLXNyY1wiOlxuICAgIGNhc2UgXCJmb250LWZhY2UtdXJpXCI6XG4gICAgY2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpcbiAgICBjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpcbiAgICBjYXNlIFwibWlzc2luZy1nbHlwaFwiOlxuICAgICAgcmV0dXJuICExO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiAhMDtcbiAgfVxufVxuXG52YXIgcWQgPSBNYi5odG1sO1xuXG5mdW5jdGlvbiByZChhLCBiKSB7XG4gIGEgPSA5ID09PSBhLm5vZGVUeXBlIHx8IDExID09PSBhLm5vZGVUeXBlID8gYSA6IGEub3duZXJEb2N1bWVudDtcbiAgdmFyIGMgPSBjYyhhKTtcbiAgYiA9IHdhW2JdO1xuXG4gIGZvciAodmFyIGQgPSAwOyBkIDwgYi5sZW5ndGg7IGQrKykge1xuICAgIHVjKGJbZF0sIGEsIGMpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHNkKCkge31cblxuZnVuY3Rpb24gdGQoYSkge1xuICBhID0gYSB8fCAoXCJ1bmRlZmluZWRcIiAhPT0gdHlwZW9mIGRvY3VtZW50ID8gZG9jdW1lbnQgOiB2b2lkIDApO1xuICBpZiAoXCJ1bmRlZmluZWRcIiA9PT0gdHlwZW9mIGEpIHJldHVybiBudWxsO1xuXG4gIHRyeSB7XG4gICAgcmV0dXJuIGEuYWN0aXZlRWxlbWVudCB8fCBhLmJvZHk7XG4gIH0gY2F0Y2ggKGIpIHtcbiAgICByZXR1cm4gYS5ib2R5O1xuICB9XG59XG5cbmZ1bmN0aW9uIHVkKGEpIHtcbiAgZm9yICg7IGEgJiYgYS5maXJzdENoaWxkOykge1xuICAgIGEgPSBhLmZpcnN0Q2hpbGQ7XG4gIH1cblxuICByZXR1cm4gYTtcbn1cblxuZnVuY3Rpb24gdmQoYSwgYikge1xuICB2YXIgYyA9IHVkKGEpO1xuICBhID0gMDtcblxuICBmb3IgKHZhciBkOyBjOykge1xuICAgIGlmICgzID09PSBjLm5vZGVUeXBlKSB7XG4gICAgICBkID0gYSArIGMudGV4dENvbnRlbnQubGVuZ3RoO1xuICAgICAgaWYgKGEgPD0gYiAmJiBkID49IGIpIHJldHVybiB7XG4gICAgICAgIG5vZGU6IGMsXG4gICAgICAgIG9mZnNldDogYiAtIGFcbiAgICAgIH07XG4gICAgICBhID0gZDtcbiAgICB9XG5cbiAgICBhOiB7XG4gICAgICBmb3IgKDsgYzspIHtcbiAgICAgICAgaWYgKGMubmV4dFNpYmxpbmcpIHtcbiAgICAgICAgICBjID0gYy5uZXh0U2libGluZztcbiAgICAgICAgICBicmVhayBhO1xuICAgICAgICB9XG5cbiAgICAgICAgYyA9IGMucGFyZW50Tm9kZTtcbiAgICAgIH1cblxuICAgICAgYyA9IHZvaWQgMDtcbiAgICB9XG5cbiAgICBjID0gdWQoYyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gd2QoYSwgYikge1xuICByZXR1cm4gYSAmJiBiID8gYSA9PT0gYiA/ICEwIDogYSAmJiAzID09PSBhLm5vZGVUeXBlID8gITEgOiBiICYmIDMgPT09IGIubm9kZVR5cGUgPyB3ZChhLCBiLnBhcmVudE5vZGUpIDogXCJjb250YWluc1wiIGluIGEgPyBhLmNvbnRhaW5zKGIpIDogYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiA/ICEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikgJiAxNikgOiAhMSA6ICExO1xufVxuXG5mdW5jdGlvbiB4ZCgpIHtcbiAgZm9yICh2YXIgYSA9IHdpbmRvdywgYiA9IHRkKCk7IGIgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oykge1xuICAgIHRyeSB7XG4gICAgICB2YXIgYyA9IFwic3RyaW5nXCIgPT09IHR5cGVvZiBiLmNvbnRlbnRXaW5kb3cubG9jYXRpb24uaHJlZjtcbiAgICB9IGNhdGNoIChkKSB7XG4gICAgICBjID0gITE7XG4gICAgfVxuXG4gICAgaWYgKGMpIGEgPSBiLmNvbnRlbnRXaW5kb3c7ZWxzZSBicmVhaztcbiAgICBiID0gdGQoYS5kb2N1bWVudCk7XG4gIH1cblxuICByZXR1cm4gYjtcbn1cblxuZnVuY3Rpb24geWQoYSkge1xuICB2YXIgYiA9IGEgJiYgYS5ub2RlTmFtZSAmJiBhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG4gIHJldHVybiBiICYmIChcImlucHV0XCIgPT09IGIgJiYgKFwidGV4dFwiID09PSBhLnR5cGUgfHwgXCJzZWFyY2hcIiA9PT0gYS50eXBlIHx8IFwidGVsXCIgPT09IGEudHlwZSB8fCBcInVybFwiID09PSBhLnR5cGUgfHwgXCJwYXNzd29yZFwiID09PSBhLnR5cGUpIHx8IFwidGV4dGFyZWFcIiA9PT0gYiB8fCBcInRydWVcIiA9PT0gYS5jb250ZW50RWRpdGFibGUpO1xufVxuXG52YXIgemQgPSBcIiRcIixcbiAgICBBZCA9IFwiLyRcIixcbiAgICBCZCA9IFwiJD9cIixcbiAgICBDZCA9IFwiJCFcIixcbiAgICBEZCA9IG51bGwsXG4gICAgRWQgPSBudWxsO1xuXG5mdW5jdGlvbiBGZChhLCBiKSB7XG4gIHN3aXRjaCAoYSkge1xuICAgIGNhc2UgXCJidXR0b25cIjpcbiAgICBjYXNlIFwiaW5wdXRcIjpcbiAgICBjYXNlIFwic2VsZWN0XCI6XG4gICAgY2FzZSBcInRleHRhcmVhXCI6XG4gICAgICByZXR1cm4gISFiLmF1dG9Gb2N1cztcbiAgfVxuXG4gIHJldHVybiAhMTtcbn1cblxuZnVuY3Rpb24gR2QoYSwgYikge1xuICByZXR1cm4gXCJ0ZXh0YXJlYVwiID09PSBhIHx8IFwib3B0aW9uXCIgPT09IGEgfHwgXCJub3NjcmlwdFwiID09PSBhIHx8IFwic3RyaW5nXCIgPT09IHR5cGVvZiBiLmNoaWxkcmVuIHx8IFwibnVtYmVyXCIgPT09IHR5cGVvZiBiLmNoaWxkcmVuIHx8IFwib2JqZWN0XCIgPT09IHR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MICYmIG51bGwgIT09IGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgJiYgbnVsbCAhPSBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbDtcbn1cblxudmFyIEhkID0gXCJmdW5jdGlvblwiID09PSB0eXBlb2Ygc2V0VGltZW91dCA/IHNldFRpbWVvdXQgOiB2b2lkIDAsXG4gICAgSWQgPSBcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBjbGVhclRpbWVvdXQgPyBjbGVhclRpbWVvdXQgOiB2b2lkIDA7XG5cbmZ1bmN0aW9uIEpkKGEpIHtcbiAgZm9yICg7IG51bGwgIT0gYTsgYSA9IGEubmV4dFNpYmxpbmcpIHtcbiAgICB2YXIgYiA9IGEubm9kZVR5cGU7XG4gICAgaWYgKDEgPT09IGIgfHwgMyA9PT0gYikgYnJlYWs7XG4gIH1cblxuICByZXR1cm4gYTtcbn1cblxuZnVuY3Rpb24gS2QoYSkge1xuICBhID0gYS5wcmV2aW91c1NpYmxpbmc7XG5cbiAgZm9yICh2YXIgYiA9IDA7IGE7KSB7XG4gICAgaWYgKDggPT09IGEubm9kZVR5cGUpIHtcbiAgICAgIHZhciBjID0gYS5kYXRhO1xuXG4gICAgICBpZiAoYyA9PT0gemQgfHwgYyA9PT0gQ2QgfHwgYyA9PT0gQmQpIHtcbiAgICAgICAgaWYgKDAgPT09IGIpIHJldHVybiBhO1xuICAgICAgICBiLS07XG4gICAgICB9IGVsc2UgYyA9PT0gQWQgJiYgYisrO1xuICAgIH1cblxuICAgIGEgPSBhLnByZXZpb3VzU2libGluZztcbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuXG52YXIgTGQgPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSxcbiAgICBNZCA9IFwiX19yZWFjdEludGVybmFsSW5zdGFuY2UkXCIgKyBMZCxcbiAgICBOZCA9IFwiX19yZWFjdEV2ZW50SGFuZGxlcnMkXCIgKyBMZCxcbiAgICBPZCA9IFwiX19yZWFjdENvbnRhaW5lcmUkXCIgKyBMZDtcblxuZnVuY3Rpb24gdGMoYSkge1xuICB2YXIgYiA9IGFbTWRdO1xuICBpZiAoYikgcmV0dXJuIGI7XG5cbiAgZm9yICh2YXIgYyA9IGEucGFyZW50Tm9kZTsgYzspIHtcbiAgICBpZiAoYiA9IGNbT2RdIHx8IGNbTWRdKSB7XG4gICAgICBjID0gYi5hbHRlcm5hdGU7XG4gICAgICBpZiAobnVsbCAhPT0gYi5jaGlsZCB8fCBudWxsICE9PSBjICYmIG51bGwgIT09IGMuY2hpbGQpIGZvciAoYSA9IEtkKGEpOyBudWxsICE9PSBhOykge1xuICAgICAgICBpZiAoYyA9IGFbTWRdKSByZXR1cm4gYztcbiAgICAgICAgYSA9IEtkKGEpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGI7XG4gICAgfVxuXG4gICAgYSA9IGM7XG4gICAgYyA9IGEucGFyZW50Tm9kZTtcbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuXG5mdW5jdGlvbiBOYyhhKSB7XG4gIGEgPSBhW01kXSB8fCBhW09kXTtcbiAgcmV0dXJuICFhIHx8IDUgIT09IGEudGFnICYmIDYgIT09IGEudGFnICYmIDEzICE9PSBhLnRhZyAmJiAzICE9PSBhLnRhZyA/IG51bGwgOiBhO1xufVxuXG5mdW5jdGlvbiBQZChhKSB7XG4gIGlmICg1ID09PSBhLnRhZyB8fCA2ID09PSBhLnRhZykgcmV0dXJuIGEuc3RhdGVOb2RlO1xuICB0aHJvdyBFcnJvcih1KDMzKSk7XG59XG5cbmZ1bmN0aW9uIFFkKGEpIHtcbiAgcmV0dXJuIGFbTmRdIHx8IG51bGw7XG59XG5cbmZ1bmN0aW9uIFJkKGEpIHtcbiAgZG8ge1xuICAgIGEgPSBhLnJldHVybjtcbiAgfSB3aGlsZSAoYSAmJiA1ICE9PSBhLnRhZyk7XG5cbiAgcmV0dXJuIGEgPyBhIDogbnVsbDtcbn1cblxuZnVuY3Rpb24gU2QoYSwgYikge1xuICB2YXIgYyA9IGEuc3RhdGVOb2RlO1xuICBpZiAoIWMpIHJldHVybiBudWxsO1xuICB2YXIgZCA9IGxhKGMpO1xuICBpZiAoIWQpIHJldHVybiBudWxsO1xuICBjID0gZFtiXTtcblxuICBhOiBzd2l0Y2ggKGIpIHtcbiAgICBjYXNlIFwib25DbGlja1wiOlxuICAgIGNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOlxuICAgIGNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6XG4gICAgY2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6XG4gICAgY2FzZSBcIm9uTW91c2VEb3duXCI6XG4gICAgY2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOlxuICAgIGNhc2UgXCJvbk1vdXNlTW92ZVwiOlxuICAgIGNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpcbiAgICBjYXNlIFwib25Nb3VzZVVwXCI6XG4gICAgY2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjpcbiAgICBjYXNlIFwib25Nb3VzZUVudGVyXCI6XG4gICAgICAoZCA9ICFkLmRpc2FibGVkKSB8fCAoYSA9IGEudHlwZSwgZCA9ICEoXCJidXR0b25cIiA9PT0gYSB8fCBcImlucHV0XCIgPT09IGEgfHwgXCJzZWxlY3RcIiA9PT0gYSB8fCBcInRleHRhcmVhXCIgPT09IGEpKTtcbiAgICAgIGEgPSAhZDtcbiAgICAgIGJyZWFrIGE7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgYSA9ICExO1xuICB9XG5cbiAgaWYgKGEpIHJldHVybiBudWxsO1xuICBpZiAoYyAmJiBcImZ1bmN0aW9uXCIgIT09IHR5cGVvZiBjKSB0aHJvdyBFcnJvcih1KDIzMSwgYiwgdHlwZW9mIGMpKTtcbiAgcmV0dXJuIGM7XG59XG5cbmZ1bmN0aW9uIFRkKGEsIGIsIGMpIHtcbiAgaWYgKGIgPSBTZChhLCBjLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzW2JdKSkgYy5fZGlzcGF0Y2hMaXN0ZW5lcnMgPSBpYyhjLl9kaXNwYXRjaExpc3RlbmVycywgYiksIGMuX2Rpc3BhdGNoSW5zdGFuY2VzID0gaWMoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsIGEpO1xufVxuXG5mdW5jdGlvbiBVZChhKSB7XG4gIGlmIChhICYmIGEuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMpIHtcbiAgICBmb3IgKHZhciBiID0gYS5fdGFyZ2V0SW5zdCwgYyA9IFtdOyBiOykge1xuICAgICAgYy5wdXNoKGIpLCBiID0gUmQoYik7XG4gICAgfVxuXG4gICAgZm9yIChiID0gYy5sZW5ndGg7IDAgPCBiLS07KSB7XG4gICAgICBUZChjW2JdLCBcImNhcHR1cmVkXCIsIGEpO1xuICAgIH1cblxuICAgIGZvciAoYiA9IDA7IGIgPCBjLmxlbmd0aDsgYisrKSB7XG4gICAgICBUZChjW2JdLCBcImJ1YmJsZWRcIiwgYSk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIFZkKGEsIGIsIGMpIHtcbiAgYSAmJiBjICYmIGMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSAmJiAoYiA9IFNkKGEsIGMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSkpICYmIChjLl9kaXNwYXRjaExpc3RlbmVycyA9IGljKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLCBiKSwgYy5fZGlzcGF0Y2hJbnN0YW5jZXMgPSBpYyhjLl9kaXNwYXRjaEluc3RhbmNlcywgYSkpO1xufVxuXG5mdW5jdGlvbiBXZChhKSB7XG4gIGEgJiYgYS5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lICYmIFZkKGEuX3RhcmdldEluc3QsIG51bGwsIGEpO1xufVxuXG5mdW5jdGlvbiBYZChhKSB7XG4gIGpjKGEsIFVkKTtcbn1cblxudmFyIFlkID0gbnVsbCxcbiAgICBaZCA9IG51bGwsXG4gICAgJGQgPSBudWxsO1xuXG5mdW5jdGlvbiBhZSgpIHtcbiAgaWYgKCRkKSByZXR1cm4gJGQ7XG4gIHZhciBhLFxuICAgICAgYiA9IFpkLFxuICAgICAgYyA9IGIubGVuZ3RoLFxuICAgICAgZCxcbiAgICAgIGUgPSBcInZhbHVlXCIgaW4gWWQgPyBZZC52YWx1ZSA6IFlkLnRleHRDb250ZW50LFxuICAgICAgZiA9IGUubGVuZ3RoO1xuXG4gIGZvciAoYSA9IDA7IGEgPCBjICYmIGJbYV0gPT09IGVbYV07IGErKykge1xuICAgIDtcbiAgfVxuXG4gIHZhciBnID0gYyAtIGE7XG5cbiAgZm9yIChkID0gMTsgZCA8PSBnICYmIGJbYyAtIGRdID09PSBlW2YgLSBkXTsgZCsrKSB7XG4gICAgO1xuICB9XG5cbiAgcmV0dXJuICRkID0gZS5zbGljZShhLCAxIDwgZCA/IDEgLSBkIDogdm9pZCAwKTtcbn1cblxuZnVuY3Rpb24gYmUoKSB7XG4gIHJldHVybiAhMDtcbn1cblxuZnVuY3Rpb24gY2UoKSB7XG4gIHJldHVybiAhMTtcbn1cblxuZnVuY3Rpb24gRyhhLCBiLCBjLCBkKSB7XG4gIHRoaXMuZGlzcGF0Y2hDb25maWcgPSBhO1xuICB0aGlzLl90YXJnZXRJbnN0ID0gYjtcbiAgdGhpcy5uYXRpdmVFdmVudCA9IGM7XG4gIGEgPSB0aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZTtcblxuICBmb3IgKHZhciBlIGluIGEpIHtcbiAgICBhLmhhc093blByb3BlcnR5KGUpICYmICgoYiA9IGFbZV0pID8gdGhpc1tlXSA9IGIoYykgOiBcInRhcmdldFwiID09PSBlID8gdGhpcy50YXJnZXQgPSBkIDogdGhpc1tlXSA9IGNbZV0pO1xuICB9XG5cbiAgdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQgPSAobnVsbCAhPSBjLmRlZmF1bHRQcmV2ZW50ZWQgPyBjLmRlZmF1bHRQcmV2ZW50ZWQgOiAhMSA9PT0gYy5yZXR1cm5WYWx1ZSkgPyBiZSA6IGNlO1xuICB0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkID0gY2U7XG4gIHJldHVybiB0aGlzO1xufVxuXG5uKEcucHJvdG90eXBlLCB7XG4gIHByZXZlbnREZWZhdWx0OiBmdW5jdGlvbiBwcmV2ZW50RGVmYXVsdCgpIHtcbiAgICB0aGlzLmRlZmF1bHRQcmV2ZW50ZWQgPSAhMDtcbiAgICB2YXIgYSA9IHRoaXMubmF0aXZlRXZlbnQ7XG4gICAgYSAmJiAoYS5wcmV2ZW50RGVmYXVsdCA/IGEucHJldmVudERlZmF1bHQoKSA6IFwidW5rbm93blwiICE9PSB0eXBlb2YgYS5yZXR1cm5WYWx1ZSAmJiAoYS5yZXR1cm5WYWx1ZSA9ICExKSwgdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQgPSBiZSk7XG4gIH0sXG4gIHN0b3BQcm9wYWdhdGlvbjogZnVuY3Rpb24gc3RvcFByb3BhZ2F0aW9uKCkge1xuICAgIHZhciBhID0gdGhpcy5uYXRpdmVFdmVudDtcbiAgICBhICYmIChhLnN0b3BQcm9wYWdhdGlvbiA/IGEuc3RvcFByb3BhZ2F0aW9uKCkgOiBcInVua25vd25cIiAhPT0gdHlwZW9mIGEuY2FuY2VsQnViYmxlICYmIChhLmNhbmNlbEJ1YmJsZSA9ICEwKSwgdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZCA9IGJlKTtcbiAgfSxcbiAgcGVyc2lzdDogZnVuY3Rpb24gcGVyc2lzdCgpIHtcbiAgICB0aGlzLmlzUGVyc2lzdGVudCA9IGJlO1xuICB9LFxuICBpc1BlcnNpc3RlbnQ6IGNlLFxuICBkZXN0cnVjdG9yOiBmdW5jdGlvbiBkZXN0cnVjdG9yKCkge1xuICAgIHZhciBhID0gdGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2UsXG4gICAgICAgIGI7XG5cbiAgICBmb3IgKGIgaW4gYSkge1xuICAgICAgdGhpc1tiXSA9IG51bGw7XG4gICAgfVxuXG4gICAgdGhpcy5uYXRpdmVFdmVudCA9IHRoaXMuX3RhcmdldEluc3QgPSB0aGlzLmRpc3BhdGNoQ29uZmlnID0gbnVsbDtcbiAgICB0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkID0gdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQgPSBjZTtcbiAgICB0aGlzLl9kaXNwYXRjaEluc3RhbmNlcyA9IHRoaXMuX2Rpc3BhdGNoTGlzdGVuZXJzID0gbnVsbDtcbiAgfVxufSk7XG5HLkludGVyZmFjZSA9IHtcbiAgdHlwZTogbnVsbCxcbiAgdGFyZ2V0OiBudWxsLFxuICBjdXJyZW50VGFyZ2V0OiBmdW5jdGlvbiBjdXJyZW50VGFyZ2V0KCkge1xuICAgIHJldHVybiBudWxsO1xuICB9LFxuICBldmVudFBoYXNlOiBudWxsLFxuICBidWJibGVzOiBudWxsLFxuICBjYW5jZWxhYmxlOiBudWxsLFxuICB0aW1lU3RhbXA6IGZ1bmN0aW9uIHRpbWVTdGFtcChhKSB7XG4gICAgcmV0dXJuIGEudGltZVN0YW1wIHx8IERhdGUubm93KCk7XG4gIH0sXG4gIGRlZmF1bHRQcmV2ZW50ZWQ6IG51bGwsXG4gIGlzVHJ1c3RlZDogbnVsbFxufTtcblxuRy5leHRlbmQgPSBmdW5jdGlvbiAoYSkge1xuICBmdW5jdGlvbiBiKCkge31cblxuICBmdW5jdGlvbiBjKCkge1xuICAgIHJldHVybiBkLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH1cblxuICB2YXIgZCA9IHRoaXM7XG4gIGIucHJvdG90eXBlID0gZC5wcm90b3R5cGU7XG4gIHZhciBlID0gbmV3IGIoKTtcbiAgbihlLCBjLnByb3RvdHlwZSk7XG4gIGMucHJvdG90eXBlID0gZTtcbiAgYy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBjO1xuICBjLkludGVyZmFjZSA9IG4oe30sIGQuSW50ZXJmYWNlLCBhKTtcbiAgYy5leHRlbmQgPSBkLmV4dGVuZDtcbiAgZGUoYyk7XG4gIHJldHVybiBjO1xufTtcblxuZGUoRyk7XG5cbmZ1bmN0aW9uIGVlKGEsIGIsIGMsIGQpIHtcbiAgaWYgKHRoaXMuZXZlbnRQb29sLmxlbmd0aCkge1xuICAgIHZhciBlID0gdGhpcy5ldmVudFBvb2wucG9wKCk7XG4gICAgdGhpcy5jYWxsKGUsIGEsIGIsIGMsIGQpO1xuICAgIHJldHVybiBlO1xuICB9XG5cbiAgcmV0dXJuIG5ldyB0aGlzKGEsIGIsIGMsIGQpO1xufVxuXG5mdW5jdGlvbiBmZShhKSB7XG4gIGlmICghKGEgaW5zdGFuY2VvZiB0aGlzKSkgdGhyb3cgRXJyb3IodSgyNzkpKTtcbiAgYS5kZXN0cnVjdG9yKCk7XG4gIDEwID4gdGhpcy5ldmVudFBvb2wubGVuZ3RoICYmIHRoaXMuZXZlbnRQb29sLnB1c2goYSk7XG59XG5cbmZ1bmN0aW9uIGRlKGEpIHtcbiAgYS5ldmVudFBvb2wgPSBbXTtcbiAgYS5nZXRQb29sZWQgPSBlZTtcbiAgYS5yZWxlYXNlID0gZmU7XG59XG5cbnZhciBnZSA9IEcuZXh0ZW5kKHtcbiAgZGF0YTogbnVsbFxufSksXG4gICAgaGUgPSBHLmV4dGVuZCh7XG4gIGRhdGE6IG51bGxcbn0pLFxuICAgIGllID0gWzksIDEzLCAyNywgMzJdLFxuICAgIGplID0geWEgJiYgXCJDb21wb3NpdGlvbkV2ZW50XCIgaW4gd2luZG93LFxuICAgIGtlID0gbnVsbDtcbnlhICYmIFwiZG9jdW1lbnRNb2RlXCIgaW4gZG9jdW1lbnQgJiYgKGtlID0gZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTtcbnZhciBsZSA9IHlhICYmIFwiVGV4dEV2ZW50XCIgaW4gd2luZG93ICYmICFrZSxcbiAgICBtZSA9IHlhICYmICghamUgfHwga2UgJiYgOCA8IGtlICYmIDExID49IGtlKSxcbiAgICBuZSA9IFN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLFxuICAgIG9lID0ge1xuICBiZWZvcmVJbnB1dDoge1xuICAgIHBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOiB7XG4gICAgICBidWJibGVkOiBcIm9uQmVmb3JlSW5wdXRcIixcbiAgICAgIGNhcHR1cmVkOiBcIm9uQmVmb3JlSW5wdXRDYXB0dXJlXCJcbiAgICB9LFxuICAgIGRlcGVuZGVuY2llczogW1wiY29tcG9zaXRpb25lbmRcIiwgXCJrZXlwcmVzc1wiLCBcInRleHRJbnB1dFwiLCBcInBhc3RlXCJdXG4gIH0sXG4gIGNvbXBvc2l0aW9uRW5kOiB7XG4gICAgcGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6IHtcbiAgICAgIGJ1YmJsZWQ6IFwib25Db21wb3NpdGlvbkVuZFwiLFxuICAgICAgY2FwdHVyZWQ6IFwib25Db21wb3NpdGlvbkVuZENhcHR1cmVcIlxuICAgIH0sXG4gICAgZGVwZW5kZW5jaWVzOiBcImJsdXIgY29tcG9zaXRpb25lbmQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIilcbiAgfSxcbiAgY29tcG9zaXRpb25TdGFydDoge1xuICAgIHBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOiB7XG4gICAgICBidWJibGVkOiBcIm9uQ29tcG9zaXRpb25TdGFydFwiLFxuICAgICAgY2FwdHVyZWQ6IFwib25Db21wb3NpdGlvblN0YXJ0Q2FwdHVyZVwiXG4gICAgfSxcbiAgICBkZXBlbmRlbmNpZXM6IFwiYmx1ciBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpXG4gIH0sXG4gIGNvbXBvc2l0aW9uVXBkYXRlOiB7XG4gICAgcGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6IHtcbiAgICAgIGJ1YmJsZWQ6IFwib25Db21wb3NpdGlvblVwZGF0ZVwiLFxuICAgICAgY2FwdHVyZWQ6IFwib25Db21wb3NpdGlvblVwZGF0ZUNhcHR1cmVcIlxuICAgIH0sXG4gICAgZGVwZW5kZW5jaWVzOiBcImJsdXIgY29tcG9zaXRpb251cGRhdGUga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIilcbiAgfVxufSxcbiAgICBwZSA9ICExO1xuXG5mdW5jdGlvbiBxZShhLCBiKSB7XG4gIHN3aXRjaCAoYSkge1xuICAgIGNhc2UgXCJrZXl1cFwiOlxuICAgICAgcmV0dXJuIC0xICE9PSBpZS5pbmRleE9mKGIua2V5Q29kZSk7XG5cbiAgICBjYXNlIFwia2V5ZG93blwiOlxuICAgICAgcmV0dXJuIDIyOSAhPT0gYi5rZXlDb2RlO1xuXG4gICAgY2FzZSBcImtleXByZXNzXCI6XG4gICAgY2FzZSBcIm1vdXNlZG93blwiOlxuICAgIGNhc2UgXCJibHVyXCI6XG4gICAgICByZXR1cm4gITA7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuICExO1xuICB9XG59XG5cbmZ1bmN0aW9uIHJlKGEpIHtcbiAgYSA9IGEuZGV0YWlsO1xuICByZXR1cm4gXCJvYmplY3RcIiA9PT0gdHlwZW9mIGEgJiYgXCJkYXRhXCIgaW4gYSA/IGEuZGF0YSA6IG51bGw7XG59XG5cbnZhciBzZSA9ICExO1xuXG5mdW5jdGlvbiB0ZShhLCBiKSB7XG4gIHN3aXRjaCAoYSkge1xuICAgIGNhc2UgXCJjb21wb3NpdGlvbmVuZFwiOlxuICAgICAgcmV0dXJuIHJlKGIpO1xuXG4gICAgY2FzZSBcImtleXByZXNzXCI6XG4gICAgICBpZiAoMzIgIT09IGIud2hpY2gpIHJldHVybiBudWxsO1xuICAgICAgcGUgPSAhMDtcbiAgICAgIHJldHVybiBuZTtcblxuICAgIGNhc2UgXCJ0ZXh0SW5wdXRcIjpcbiAgICAgIHJldHVybiBhID0gYi5kYXRhLCBhID09PSBuZSAmJiBwZSA/IG51bGwgOiBhO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBudWxsO1xuICB9XG59XG5cbmZ1bmN0aW9uIHVlKGEsIGIpIHtcbiAgaWYgKHNlKSByZXR1cm4gXCJjb21wb3NpdGlvbmVuZFwiID09PSBhIHx8ICFqZSAmJiBxZShhLCBiKSA/IChhID0gYWUoKSwgJGQgPSBaZCA9IFlkID0gbnVsbCwgc2UgPSAhMSwgYSkgOiBudWxsO1xuXG4gIHN3aXRjaCAoYSkge1xuICAgIGNhc2UgXCJwYXN0ZVwiOlxuICAgICAgcmV0dXJuIG51bGw7XG5cbiAgICBjYXNlIFwia2V5cHJlc3NcIjpcbiAgICAgIGlmICghKGIuY3RybEtleSB8fCBiLmFsdEtleSB8fCBiLm1ldGFLZXkpIHx8IGIuY3RybEtleSAmJiBiLmFsdEtleSkge1xuICAgICAgICBpZiAoYi5jaGFyICYmIDEgPCBiLmNoYXIubGVuZ3RoKSByZXR1cm4gYi5jaGFyO1xuICAgICAgICBpZiAoYi53aGljaCkgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBudWxsO1xuXG4gICAgY2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6XG4gICAgICByZXR1cm4gbWUgJiYgXCJrb1wiICE9PSBiLmxvY2FsZSA/IG51bGwgOiBiLmRhdGE7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cblxudmFyIHZlID0ge1xuICBldmVudFR5cGVzOiBvZSxcbiAgZXh0cmFjdEV2ZW50czogZnVuY3Rpb24gZXh0cmFjdEV2ZW50cyhhLCBiLCBjLCBkKSB7XG4gICAgdmFyIGU7XG4gICAgaWYgKGplKSBiOiB7XG4gICAgICBzd2l0Y2ggKGEpIHtcbiAgICAgICAgY2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjpcbiAgICAgICAgICB2YXIgZiA9IG9lLmNvbXBvc2l0aW9uU3RhcnQ7XG4gICAgICAgICAgYnJlYWsgYjtcblxuICAgICAgICBjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpcbiAgICAgICAgICBmID0gb2UuY29tcG9zaXRpb25FbmQ7XG4gICAgICAgICAgYnJlYWsgYjtcblxuICAgICAgICBjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpcbiAgICAgICAgICBmID0gb2UuY29tcG9zaXRpb25VcGRhdGU7XG4gICAgICAgICAgYnJlYWsgYjtcbiAgICAgIH1cblxuICAgICAgZiA9IHZvaWQgMDtcbiAgICB9IGVsc2Ugc2UgPyBxZShhLCBjKSAmJiAoZiA9IG9lLmNvbXBvc2l0aW9uRW5kKSA6IFwia2V5ZG93blwiID09PSBhICYmIDIyOSA9PT0gYy5rZXlDb2RlICYmIChmID0gb2UuY29tcG9zaXRpb25TdGFydCk7XG4gICAgZiA/IChtZSAmJiBcImtvXCIgIT09IGMubG9jYWxlICYmIChzZSB8fCBmICE9PSBvZS5jb21wb3NpdGlvblN0YXJ0ID8gZiA9PT0gb2UuY29tcG9zaXRpb25FbmQgJiYgc2UgJiYgKGUgPSBhZSgpKSA6IChZZCA9IGQsIFpkID0gXCJ2YWx1ZVwiIGluIFlkID8gWWQudmFsdWUgOiBZZC50ZXh0Q29udGVudCwgc2UgPSAhMCkpLCBmID0gZ2UuZ2V0UG9vbGVkKGYsIGIsIGMsIGQpLCBlID8gZi5kYXRhID0gZSA6IChlID0gcmUoYyksIG51bGwgIT09IGUgJiYgKGYuZGF0YSA9IGUpKSwgWGQoZiksIGUgPSBmKSA6IGUgPSBudWxsO1xuICAgIChhID0gbGUgPyB0ZShhLCBjKSA6IHVlKGEsIGMpKSA/IChiID0gaGUuZ2V0UG9vbGVkKG9lLmJlZm9yZUlucHV0LCBiLCBjLCBkKSwgYi5kYXRhID0gYSwgWGQoYikpIDogYiA9IG51bGw7XG4gICAgcmV0dXJuIG51bGwgPT09IGUgPyBiIDogbnVsbCA9PT0gYiA/IGUgOiBbZSwgYl07XG4gIH1cbn0sXG4gICAgd2UgPSB7XG4gIGNvbG9yOiAhMCxcbiAgZGF0ZTogITAsXG4gIGRhdGV0aW1lOiAhMCxcbiAgXCJkYXRldGltZS1sb2NhbFwiOiAhMCxcbiAgZW1haWw6ICEwLFxuICBtb250aDogITAsXG4gIG51bWJlcjogITAsXG4gIHBhc3N3b3JkOiAhMCxcbiAgcmFuZ2U6ICEwLFxuICBzZWFyY2g6ICEwLFxuICB0ZWw6ICEwLFxuICB0ZXh0OiAhMCxcbiAgdGltZTogITAsXG4gIHVybDogITAsXG4gIHdlZWs6ICEwXG59O1xuXG5mdW5jdGlvbiB4ZShhKSB7XG4gIHZhciBiID0gYSAmJiBhLm5vZGVOYW1lICYmIGEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcbiAgcmV0dXJuIFwiaW5wdXRcIiA9PT0gYiA/ICEhd2VbYS50eXBlXSA6IFwidGV4dGFyZWFcIiA9PT0gYiA/ICEwIDogITE7XG59XG5cbnZhciB5ZSA9IHtcbiAgY2hhbmdlOiB7XG4gICAgcGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6IHtcbiAgICAgIGJ1YmJsZWQ6IFwib25DaGFuZ2VcIixcbiAgICAgIGNhcHR1cmVkOiBcIm9uQ2hhbmdlQ2FwdHVyZVwiXG4gICAgfSxcbiAgICBkZXBlbmRlbmNpZXM6IFwiYmx1ciBjaGFuZ2UgY2xpY2sgZm9jdXMgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIilcbiAgfVxufTtcblxuZnVuY3Rpb24gemUoYSwgYiwgYykge1xuICBhID0gRy5nZXRQb29sZWQoeWUuY2hhbmdlLCBhLCBiLCBjKTtcbiAgYS50eXBlID0gXCJjaGFuZ2VcIjtcbiAgRGEoYyk7XG4gIFhkKGEpO1xuICByZXR1cm4gYTtcbn1cblxudmFyIEFlID0gbnVsbCxcbiAgICBCZSA9IG51bGw7XG5cbmZ1bmN0aW9uIENlKGEpIHtcbiAgbWMoYSk7XG59XG5cbmZ1bmN0aW9uIERlKGEpIHtcbiAgdmFyIGIgPSBQZChhKTtcbiAgaWYgKHliKGIpKSByZXR1cm4gYTtcbn1cblxuZnVuY3Rpb24gRWUoYSwgYikge1xuICBpZiAoXCJjaGFuZ2VcIiA9PT0gYSkgcmV0dXJuIGI7XG59XG5cbnZhciBGZSA9ICExO1xueWEgJiYgKEZlID0gb2MoXCJpbnB1dFwiKSAmJiAoIWRvY3VtZW50LmRvY3VtZW50TW9kZSB8fCA5IDwgZG9jdW1lbnQuZG9jdW1lbnRNb2RlKSk7XG5cbmZ1bmN0aW9uIEdlKCkge1xuICBBZSAmJiAoQWUuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsIEhlKSwgQmUgPSBBZSA9IG51bGwpO1xufVxuXG5mdW5jdGlvbiBIZShhKSB7XG4gIGlmIChcInZhbHVlXCIgPT09IGEucHJvcGVydHlOYW1lICYmIERlKEJlKSkgaWYgKGEgPSB6ZShCZSwgYSwgbmMoYSkpLCBKYSkgbWMoYSk7ZWxzZSB7XG4gICAgSmEgPSAhMDtcblxuICAgIHRyeSB7XG4gICAgICBGYShDZSwgYSk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIEphID0gITEsIExhKCk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIEllKGEsIGIsIGMpIHtcbiAgXCJmb2N1c1wiID09PSBhID8gKEdlKCksIEFlID0gYiwgQmUgPSBjLCBBZS5hdHRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIiwgSGUpKSA6IFwiYmx1clwiID09PSBhICYmIEdlKCk7XG59XG5cbmZ1bmN0aW9uIEplKGEpIHtcbiAgaWYgKFwic2VsZWN0aW9uY2hhbmdlXCIgPT09IGEgfHwgXCJrZXl1cFwiID09PSBhIHx8IFwia2V5ZG93blwiID09PSBhKSByZXR1cm4gRGUoQmUpO1xufVxuXG5mdW5jdGlvbiBLZShhLCBiKSB7XG4gIGlmIChcImNsaWNrXCIgPT09IGEpIHJldHVybiBEZShiKTtcbn1cblxuZnVuY3Rpb24gTGUoYSwgYikge1xuICBpZiAoXCJpbnB1dFwiID09PSBhIHx8IFwiY2hhbmdlXCIgPT09IGEpIHJldHVybiBEZShiKTtcbn1cblxudmFyIE1lID0ge1xuICBldmVudFR5cGVzOiB5ZSxcbiAgX2lzSW5wdXRFdmVudFN1cHBvcnRlZDogRmUsXG4gIGV4dHJhY3RFdmVudHM6IGZ1bmN0aW9uIGV4dHJhY3RFdmVudHMoYSwgYiwgYywgZCkge1xuICAgIHZhciBlID0gYiA/IFBkKGIpIDogd2luZG93LFxuICAgICAgICBmID0gZS5ub2RlTmFtZSAmJiBlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgaWYgKFwic2VsZWN0XCIgPT09IGYgfHwgXCJpbnB1dFwiID09PSBmICYmIFwiZmlsZVwiID09PSBlLnR5cGUpIHZhciBnID0gRWU7ZWxzZSBpZiAoeGUoZSkpIHtcbiAgICAgIGlmIChGZSkgZyA9IExlO2Vsc2Uge1xuICAgICAgICBnID0gSmU7XG4gICAgICAgIHZhciBoID0gSWU7XG4gICAgICB9XG4gICAgfSBlbHNlIChmID0gZS5ub2RlTmFtZSkgJiYgXCJpbnB1dFwiID09PSBmLnRvTG93ZXJDYXNlKCkgJiYgKFwiY2hlY2tib3hcIiA9PT0gZS50eXBlIHx8IFwicmFkaW9cIiA9PT0gZS50eXBlKSAmJiAoZyA9IEtlKTtcbiAgICBpZiAoZyAmJiAoZyA9IGcoYSwgYikpKSByZXR1cm4gemUoZywgYywgZCk7XG4gICAgaCAmJiBoKGEsIGUsIGIpO1xuICAgIFwiYmx1clwiID09PSBhICYmIChhID0gZS5fd3JhcHBlclN0YXRlKSAmJiBhLmNvbnRyb2xsZWQgJiYgXCJudW1iZXJcIiA9PT0gZS50eXBlICYmIERiKGUsIFwibnVtYmVyXCIsIGUudmFsdWUpO1xuICB9XG59LFxuICAgIE5lID0gRy5leHRlbmQoe1xuICB2aWV3OiBudWxsLFxuICBkZXRhaWw6IG51bGxcbn0pLFxuICAgIE9lID0ge1xuICBBbHQ6IFwiYWx0S2V5XCIsXG4gIENvbnRyb2w6IFwiY3RybEtleVwiLFxuICBNZXRhOiBcIm1ldGFLZXlcIixcbiAgU2hpZnQ6IFwic2hpZnRLZXlcIlxufTtcblxuZnVuY3Rpb24gUGUoYSkge1xuICB2YXIgYiA9IHRoaXMubmF0aXZlRXZlbnQ7XG4gIHJldHVybiBiLmdldE1vZGlmaWVyU3RhdGUgPyBiLmdldE1vZGlmaWVyU3RhdGUoYSkgOiAoYSA9IE9lW2FdKSA/ICEhYlthXSA6ICExO1xufVxuXG5mdW5jdGlvbiBRZSgpIHtcbiAgcmV0dXJuIFBlO1xufVxuXG52YXIgUmUgPSAwLFxuICAgIFNlID0gMCxcbiAgICBUZSA9ICExLFxuICAgIFVlID0gITEsXG4gICAgVmUgPSBOZS5leHRlbmQoe1xuICBzY3JlZW5YOiBudWxsLFxuICBzY3JlZW5ZOiBudWxsLFxuICBjbGllbnRYOiBudWxsLFxuICBjbGllbnRZOiBudWxsLFxuICBwYWdlWDogbnVsbCxcbiAgcGFnZVk6IG51bGwsXG4gIGN0cmxLZXk6IG51bGwsXG4gIHNoaWZ0S2V5OiBudWxsLFxuICBhbHRLZXk6IG51bGwsXG4gIG1ldGFLZXk6IG51bGwsXG4gIGdldE1vZGlmaWVyU3RhdGU6IFFlLFxuICBidXR0b246IG51bGwsXG4gIGJ1dHRvbnM6IG51bGwsXG4gIHJlbGF0ZWRUYXJnZXQ6IGZ1bmN0aW9uIHJlbGF0ZWRUYXJnZXQoYSkge1xuICAgIHJldHVybiBhLnJlbGF0ZWRUYXJnZXQgfHwgKGEuZnJvbUVsZW1lbnQgPT09IGEuc3JjRWxlbWVudCA/IGEudG9FbGVtZW50IDogYS5mcm9tRWxlbWVudCk7XG4gIH0sXG4gIG1vdmVtZW50WDogZnVuY3Rpb24gbW92ZW1lbnRYKGEpIHtcbiAgICBpZiAoXCJtb3ZlbWVudFhcIiBpbiBhKSByZXR1cm4gYS5tb3ZlbWVudFg7XG4gICAgdmFyIGIgPSBSZTtcbiAgICBSZSA9IGEuc2NyZWVuWDtcbiAgICByZXR1cm4gVGUgPyBcIm1vdXNlbW92ZVwiID09PSBhLnR5cGUgPyBhLnNjcmVlblggLSBiIDogMCA6IChUZSA9ICEwLCAwKTtcbiAgfSxcbiAgbW92ZW1lbnRZOiBmdW5jdGlvbiBtb3ZlbWVudFkoYSkge1xuICAgIGlmIChcIm1vdmVtZW50WVwiIGluIGEpIHJldHVybiBhLm1vdmVtZW50WTtcbiAgICB2YXIgYiA9IFNlO1xuICAgIFNlID0gYS5zY3JlZW5ZO1xuICAgIHJldHVybiBVZSA/IFwibW91c2Vtb3ZlXCIgPT09IGEudHlwZSA/IGEuc2NyZWVuWSAtIGIgOiAwIDogKFVlID0gITAsIDApO1xuICB9XG59KSxcbiAgICBXZSA9IFZlLmV4dGVuZCh7XG4gIHBvaW50ZXJJZDogbnVsbCxcbiAgd2lkdGg6IG51bGwsXG4gIGhlaWdodDogbnVsbCxcbiAgcHJlc3N1cmU6IG51bGwsXG4gIHRhbmdlbnRpYWxQcmVzc3VyZTogbnVsbCxcbiAgdGlsdFg6IG51bGwsXG4gIHRpbHRZOiBudWxsLFxuICB0d2lzdDogbnVsbCxcbiAgcG9pbnRlclR5cGU6IG51bGwsXG4gIGlzUHJpbWFyeTogbnVsbFxufSksXG4gICAgWGUgPSB7XG4gIG1vdXNlRW50ZXI6IHtcbiAgICByZWdpc3RyYXRpb25OYW1lOiBcIm9uTW91c2VFbnRlclwiLFxuICAgIGRlcGVuZGVuY2llczogW1wibW91c2VvdXRcIiwgXCJtb3VzZW92ZXJcIl1cbiAgfSxcbiAgbW91c2VMZWF2ZToge1xuICAgIHJlZ2lzdHJhdGlvbk5hbWU6IFwib25Nb3VzZUxlYXZlXCIsXG4gICAgZGVwZW5kZW5jaWVzOiBbXCJtb3VzZW91dFwiLCBcIm1vdXNlb3ZlclwiXVxuICB9LFxuICBwb2ludGVyRW50ZXI6IHtcbiAgICByZWdpc3RyYXRpb25OYW1lOiBcIm9uUG9pbnRlckVudGVyXCIsXG4gICAgZGVwZW5kZW5jaWVzOiBbXCJwb2ludGVyb3V0XCIsIFwicG9pbnRlcm92ZXJcIl1cbiAgfSxcbiAgcG9pbnRlckxlYXZlOiB7XG4gICAgcmVnaXN0cmF0aW9uTmFtZTogXCJvblBvaW50ZXJMZWF2ZVwiLFxuICAgIGRlcGVuZGVuY2llczogW1wicG9pbnRlcm91dFwiLCBcInBvaW50ZXJvdmVyXCJdXG4gIH1cbn0sXG4gICAgWWUgPSB7XG4gIGV2ZW50VHlwZXM6IFhlLFxuICBleHRyYWN0RXZlbnRzOiBmdW5jdGlvbiBleHRyYWN0RXZlbnRzKGEsIGIsIGMsIGQsIGUpIHtcbiAgICB2YXIgZiA9IFwibW91c2VvdmVyXCIgPT09IGEgfHwgXCJwb2ludGVyb3ZlclwiID09PSBhLFxuICAgICAgICBnID0gXCJtb3VzZW91dFwiID09PSBhIHx8IFwicG9pbnRlcm91dFwiID09PSBhO1xuICAgIGlmIChmICYmIDAgPT09IChlICYgMzIpICYmIChjLnJlbGF0ZWRUYXJnZXQgfHwgYy5mcm9tRWxlbWVudCkgfHwgIWcgJiYgIWYpIHJldHVybiBudWxsO1xuICAgIGYgPSBkLndpbmRvdyA9PT0gZCA/IGQgOiAoZiA9IGQub3duZXJEb2N1bWVudCkgPyBmLmRlZmF1bHRWaWV3IHx8IGYucGFyZW50V2luZG93IDogd2luZG93O1xuXG4gICAgaWYgKGcpIHtcbiAgICAgIGlmIChnID0gYiwgYiA9IChiID0gYy5yZWxhdGVkVGFyZ2V0IHx8IGMudG9FbGVtZW50KSA/IHRjKGIpIDogbnVsbCwgbnVsbCAhPT0gYikge1xuICAgICAgICB2YXIgaCA9IGRjKGIpO1xuICAgICAgICBpZiAoYiAhPT0gaCB8fCA1ICE9PSBiLnRhZyAmJiA2ICE9PSBiLnRhZykgYiA9IG51bGw7XG4gICAgICB9XG4gICAgfSBlbHNlIGcgPSBudWxsO1xuXG4gICAgaWYgKGcgPT09IGIpIHJldHVybiBudWxsO1xuXG4gICAgaWYgKFwibW91c2VvdXRcIiA9PT0gYSB8fCBcIm1vdXNlb3ZlclwiID09PSBhKSB7XG4gICAgICB2YXIgayA9IFZlO1xuICAgICAgdmFyIGwgPSBYZS5tb3VzZUxlYXZlO1xuICAgICAgdmFyIG0gPSBYZS5tb3VzZUVudGVyO1xuICAgICAgdmFyIHAgPSBcIm1vdXNlXCI7XG4gICAgfSBlbHNlIGlmIChcInBvaW50ZXJvdXRcIiA9PT0gYSB8fCBcInBvaW50ZXJvdmVyXCIgPT09IGEpIGsgPSBXZSwgbCA9IFhlLnBvaW50ZXJMZWF2ZSwgbSA9IFhlLnBvaW50ZXJFbnRlciwgcCA9IFwicG9pbnRlclwiO1xuXG4gICAgYSA9IG51bGwgPT0gZyA/IGYgOiBQZChnKTtcbiAgICBmID0gbnVsbCA9PSBiID8gZiA6IFBkKGIpO1xuICAgIGwgPSBrLmdldFBvb2xlZChsLCBnLCBjLCBkKTtcbiAgICBsLnR5cGUgPSBwICsgXCJsZWF2ZVwiO1xuICAgIGwudGFyZ2V0ID0gYTtcbiAgICBsLnJlbGF0ZWRUYXJnZXQgPSBmO1xuICAgIGMgPSBrLmdldFBvb2xlZChtLCBiLCBjLCBkKTtcbiAgICBjLnR5cGUgPSBwICsgXCJlbnRlclwiO1xuICAgIGMudGFyZ2V0ID0gZjtcbiAgICBjLnJlbGF0ZWRUYXJnZXQgPSBhO1xuICAgIGQgPSBnO1xuICAgIHAgPSBiO1xuICAgIGlmIChkICYmIHApIGE6IHtcbiAgICAgIGsgPSBkO1xuICAgICAgbSA9IHA7XG4gICAgICBnID0gMDtcblxuICAgICAgZm9yIChhID0gazsgYTsgYSA9IFJkKGEpKSB7XG4gICAgICAgIGcrKztcbiAgICAgIH1cblxuICAgICAgYSA9IDA7XG5cbiAgICAgIGZvciAoYiA9IG07IGI7IGIgPSBSZChiKSkge1xuICAgICAgICBhKys7XG4gICAgICB9XG5cbiAgICAgIGZvciAoOyAwIDwgZyAtIGE7KSB7XG4gICAgICAgIGsgPSBSZChrKSwgZy0tO1xuICAgICAgfVxuXG4gICAgICBmb3IgKDsgMCA8IGEgLSBnOykge1xuICAgICAgICBtID0gUmQobSksIGEtLTtcbiAgICAgIH1cblxuICAgICAgZm9yICg7IGctLTspIHtcbiAgICAgICAgaWYgKGsgPT09IG0gfHwgayA9PT0gbS5hbHRlcm5hdGUpIGJyZWFrIGE7XG4gICAgICAgIGsgPSBSZChrKTtcbiAgICAgICAgbSA9IFJkKG0pO1xuICAgICAgfVxuXG4gICAgICBrID0gbnVsbDtcbiAgICB9IGVsc2UgayA9IG51bGw7XG4gICAgbSA9IGs7XG5cbiAgICBmb3IgKGsgPSBbXTsgZCAmJiBkICE9PSBtOykge1xuICAgICAgZyA9IGQuYWx0ZXJuYXRlO1xuICAgICAgaWYgKG51bGwgIT09IGcgJiYgZyA9PT0gbSkgYnJlYWs7XG4gICAgICBrLnB1c2goZCk7XG4gICAgICBkID0gUmQoZCk7XG4gICAgfVxuXG4gICAgZm9yIChkID0gW107IHAgJiYgcCAhPT0gbTspIHtcbiAgICAgIGcgPSBwLmFsdGVybmF0ZTtcbiAgICAgIGlmIChudWxsICE9PSBnICYmIGcgPT09IG0pIGJyZWFrO1xuICAgICAgZC5wdXNoKHApO1xuICAgICAgcCA9IFJkKHApO1xuICAgIH1cblxuICAgIGZvciAocCA9IDA7IHAgPCBrLmxlbmd0aDsgcCsrKSB7XG4gICAgICBWZChrW3BdLCBcImJ1YmJsZWRcIiwgbCk7XG4gICAgfVxuXG4gICAgZm9yIChwID0gZC5sZW5ndGg7IDAgPCBwLS07KSB7XG4gICAgICBWZChkW3BdLCBcImNhcHR1cmVkXCIsIGMpO1xuICAgIH1cblxuICAgIHJldHVybiAwID09PSAoZSAmIDY0KSA/IFtsXSA6IFtsLCBjXTtcbiAgfVxufTtcblxuZnVuY3Rpb24gWmUoYSwgYikge1xuICByZXR1cm4gYSA9PT0gYiAmJiAoMCAhPT0gYSB8fCAxIC8gYSA9PT0gMSAvIGIpIHx8IGEgIT09IGEgJiYgYiAhPT0gYjtcbn1cblxudmFyICRlID0gXCJmdW5jdGlvblwiID09PSB0eXBlb2YgT2JqZWN0LmlzID8gT2JqZWN0LmlzIDogWmUsXG4gICAgYWYgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuXG5mdW5jdGlvbiBiZihhLCBiKSB7XG4gIGlmICgkZShhLCBiKSkgcmV0dXJuICEwO1xuICBpZiAoXCJvYmplY3RcIiAhPT0gdHlwZW9mIGEgfHwgbnVsbCA9PT0gYSB8fCBcIm9iamVjdFwiICE9PSB0eXBlb2YgYiB8fCBudWxsID09PSBiKSByZXR1cm4gITE7XG4gIHZhciBjID0gT2JqZWN0LmtleXMoYSksXG4gICAgICBkID0gT2JqZWN0LmtleXMoYik7XG4gIGlmIChjLmxlbmd0aCAhPT0gZC5sZW5ndGgpIHJldHVybiAhMTtcblxuICBmb3IgKGQgPSAwOyBkIDwgYy5sZW5ndGg7IGQrKykge1xuICAgIGlmICghYWYuY2FsbChiLCBjW2RdKSB8fCAhJGUoYVtjW2RdXSwgYltjW2RdXSkpIHJldHVybiAhMTtcbiAgfVxuXG4gIHJldHVybiAhMDtcbn1cblxudmFyIGNmID0geWEgJiYgXCJkb2N1bWVudE1vZGVcIiBpbiBkb2N1bWVudCAmJiAxMSA+PSBkb2N1bWVudC5kb2N1bWVudE1vZGUsXG4gICAgZGYgPSB7XG4gIHNlbGVjdDoge1xuICAgIHBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOiB7XG4gICAgICBidWJibGVkOiBcIm9uU2VsZWN0XCIsXG4gICAgICBjYXB0dXJlZDogXCJvblNlbGVjdENhcHR1cmVcIlxuICAgIH0sXG4gICAgZGVwZW5kZW5jaWVzOiBcImJsdXIgY29udGV4dG1lbnUgZHJhZ2VuZCBmb2N1cyBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKVxuICB9XG59LFxuICAgIGVmID0gbnVsbCxcbiAgICBmZiA9IG51bGwsXG4gICAgZ2YgPSBudWxsLFxuICAgIGhmID0gITE7XG5cbmZ1bmN0aW9uIGpmKGEsIGIpIHtcbiAgdmFyIGMgPSBiLndpbmRvdyA9PT0gYiA/IGIuZG9jdW1lbnQgOiA5ID09PSBiLm5vZGVUeXBlID8gYiA6IGIub3duZXJEb2N1bWVudDtcbiAgaWYgKGhmIHx8IG51bGwgPT0gZWYgfHwgZWYgIT09IHRkKGMpKSByZXR1cm4gbnVsbDtcbiAgYyA9IGVmO1xuICBcInNlbGVjdGlvblN0YXJ0XCIgaW4gYyAmJiB5ZChjKSA/IGMgPSB7XG4gICAgc3RhcnQ6IGMuc2VsZWN0aW9uU3RhcnQsXG4gICAgZW5kOiBjLnNlbGVjdGlvbkVuZFxuICB9IDogKGMgPSAoYy5vd25lckRvY3VtZW50ICYmIGMub3duZXJEb2N1bWVudC5kZWZhdWx0VmlldyB8fCB3aW5kb3cpLmdldFNlbGVjdGlvbigpLCBjID0ge1xuICAgIGFuY2hvck5vZGU6IGMuYW5jaG9yTm9kZSxcbiAgICBhbmNob3JPZmZzZXQ6IGMuYW5jaG9yT2Zmc2V0LFxuICAgIGZvY3VzTm9kZTogYy5mb2N1c05vZGUsXG4gICAgZm9jdXNPZmZzZXQ6IGMuZm9jdXNPZmZzZXRcbiAgfSk7XG4gIHJldHVybiBnZiAmJiBiZihnZiwgYykgPyBudWxsIDogKGdmID0gYywgYSA9IEcuZ2V0UG9vbGVkKGRmLnNlbGVjdCwgZmYsIGEsIGIpLCBhLnR5cGUgPSBcInNlbGVjdFwiLCBhLnRhcmdldCA9IGVmLCBYZChhKSwgYSk7XG59XG5cbnZhciBrZiA9IHtcbiAgZXZlbnRUeXBlczogZGYsXG4gIGV4dHJhY3RFdmVudHM6IGZ1bmN0aW9uIGV4dHJhY3RFdmVudHMoYSwgYiwgYywgZCwgZSwgZikge1xuICAgIGUgPSBmIHx8IChkLndpbmRvdyA9PT0gZCA/IGQuZG9jdW1lbnQgOiA5ID09PSBkLm5vZGVUeXBlID8gZCA6IGQub3duZXJEb2N1bWVudCk7XG5cbiAgICBpZiAoIShmID0gIWUpKSB7XG4gICAgICBhOiB7XG4gICAgICAgIGUgPSBjYyhlKTtcbiAgICAgICAgZiA9IHdhLm9uU2VsZWN0O1xuXG4gICAgICAgIGZvciAodmFyIGcgPSAwOyBnIDwgZi5sZW5ndGg7IGcrKykge1xuICAgICAgICAgIGlmICghZS5oYXMoZltnXSkpIHtcbiAgICAgICAgICAgIGUgPSAhMTtcbiAgICAgICAgICAgIGJyZWFrIGE7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZSA9ICEwO1xuICAgICAgfVxuXG4gICAgICBmID0gIWU7XG4gICAgfVxuXG4gICAgaWYgKGYpIHJldHVybiBudWxsO1xuICAgIGUgPSBiID8gUGQoYikgOiB3aW5kb3c7XG5cbiAgICBzd2l0Y2ggKGEpIHtcbiAgICAgIGNhc2UgXCJmb2N1c1wiOlxuICAgICAgICBpZiAoeGUoZSkgfHwgXCJ0cnVlXCIgPT09IGUuY29udGVudEVkaXRhYmxlKSBlZiA9IGUsIGZmID0gYiwgZ2YgPSBudWxsO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBcImJsdXJcIjpcbiAgICAgICAgZ2YgPSBmZiA9IGVmID0gbnVsbDtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgXCJtb3VzZWRvd25cIjpcbiAgICAgICAgaGYgPSAhMDtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgXCJjb250ZXh0bWVudVwiOlxuICAgICAgY2FzZSBcIm1vdXNldXBcIjpcbiAgICAgIGNhc2UgXCJkcmFnZW5kXCI6XG4gICAgICAgIHJldHVybiBoZiA9ICExLCBqZihjLCBkKTtcblxuICAgICAgY2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOlxuICAgICAgICBpZiAoY2YpIGJyZWFrO1xuXG4gICAgICBjYXNlIFwia2V5ZG93blwiOlxuICAgICAgY2FzZSBcImtleXVwXCI6XG4gICAgICAgIHJldHVybiBqZihjLCBkKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufSxcbiAgICBsZiA9IEcuZXh0ZW5kKHtcbiAgYW5pbWF0aW9uTmFtZTogbnVsbCxcbiAgZWxhcHNlZFRpbWU6IG51bGwsXG4gIHBzZXVkb0VsZW1lbnQ6IG51bGxcbn0pLFxuICAgIG1mID0gRy5leHRlbmQoe1xuICBjbGlwYm9hcmREYXRhOiBmdW5jdGlvbiBjbGlwYm9hcmREYXRhKGEpIHtcbiAgICByZXR1cm4gXCJjbGlwYm9hcmREYXRhXCIgaW4gYSA/IGEuY2xpcGJvYXJkRGF0YSA6IHdpbmRvdy5jbGlwYm9hcmREYXRhO1xuICB9XG59KSxcbiAgICBuZiA9IE5lLmV4dGVuZCh7XG4gIHJlbGF0ZWRUYXJnZXQ6IG51bGxcbn0pO1xuXG5mdW5jdGlvbiBvZihhKSB7XG4gIHZhciBiID0gYS5rZXlDb2RlO1xuICBcImNoYXJDb2RlXCIgaW4gYSA/IChhID0gYS5jaGFyQ29kZSwgMCA9PT0gYSAmJiAxMyA9PT0gYiAmJiAoYSA9IDEzKSkgOiBhID0gYjtcbiAgMTAgPT09IGEgJiYgKGEgPSAxMyk7XG4gIHJldHVybiAzMiA8PSBhIHx8IDEzID09PSBhID8gYSA6IDA7XG59XG5cbnZhciBwZiA9IHtcbiAgRXNjOiBcIkVzY2FwZVwiLFxuICBTcGFjZWJhcjogXCIgXCIsXG4gIExlZnQ6IFwiQXJyb3dMZWZ0XCIsXG4gIFVwOiBcIkFycm93VXBcIixcbiAgUmlnaHQ6IFwiQXJyb3dSaWdodFwiLFxuICBEb3duOiBcIkFycm93RG93blwiLFxuICBEZWw6IFwiRGVsZXRlXCIsXG4gIFdpbjogXCJPU1wiLFxuICBNZW51OiBcIkNvbnRleHRNZW51XCIsXG4gIEFwcHM6IFwiQ29udGV4dE1lbnVcIixcbiAgU2Nyb2xsOiBcIlNjcm9sbExvY2tcIixcbiAgTW96UHJpbnRhYmxlS2V5OiBcIlVuaWRlbnRpZmllZFwiXG59LFxuICAgIHFmID0ge1xuICA4OiBcIkJhY2tzcGFjZVwiLFxuICA5OiBcIlRhYlwiLFxuICAxMjogXCJDbGVhclwiLFxuICAxMzogXCJFbnRlclwiLFxuICAxNjogXCJTaGlmdFwiLFxuICAxNzogXCJDb250cm9sXCIsXG4gIDE4OiBcIkFsdFwiLFxuICAxOTogXCJQYXVzZVwiLFxuICAyMDogXCJDYXBzTG9ja1wiLFxuICAyNzogXCJFc2NhcGVcIixcbiAgMzI6IFwiIFwiLFxuICAzMzogXCJQYWdlVXBcIixcbiAgMzQ6IFwiUGFnZURvd25cIixcbiAgMzU6IFwiRW5kXCIsXG4gIDM2OiBcIkhvbWVcIixcbiAgMzc6IFwiQXJyb3dMZWZ0XCIsXG4gIDM4OiBcIkFycm93VXBcIixcbiAgMzk6IFwiQXJyb3dSaWdodFwiLFxuICA0MDogXCJBcnJvd0Rvd25cIixcbiAgNDU6IFwiSW5zZXJ0XCIsXG4gIDQ2OiBcIkRlbGV0ZVwiLFxuICAxMTI6IFwiRjFcIixcbiAgMTEzOiBcIkYyXCIsXG4gIDExNDogXCJGM1wiLFxuICAxMTU6IFwiRjRcIixcbiAgMTE2OiBcIkY1XCIsXG4gIDExNzogXCJGNlwiLFxuICAxMTg6IFwiRjdcIixcbiAgMTE5OiBcIkY4XCIsXG4gIDEyMDogXCJGOVwiLFxuICAxMjE6IFwiRjEwXCIsXG4gIDEyMjogXCJGMTFcIixcbiAgMTIzOiBcIkYxMlwiLFxuICAxNDQ6IFwiTnVtTG9ja1wiLFxuICAxNDU6IFwiU2Nyb2xsTG9ja1wiLFxuICAyMjQ6IFwiTWV0YVwiXG59LFxuICAgIHJmID0gTmUuZXh0ZW5kKHtcbiAga2V5OiBmdW5jdGlvbiBrZXkoYSkge1xuICAgIGlmIChhLmtleSkge1xuICAgICAgdmFyIGIgPSBwZlthLmtleV0gfHwgYS5rZXk7XG4gICAgICBpZiAoXCJVbmlkZW50aWZpZWRcIiAhPT0gYikgcmV0dXJuIGI7XG4gICAgfVxuXG4gICAgcmV0dXJuIFwia2V5cHJlc3NcIiA9PT0gYS50eXBlID8gKGEgPSBvZihhKSwgMTMgPT09IGEgPyBcIkVudGVyXCIgOiBTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKSA6IFwia2V5ZG93blwiID09PSBhLnR5cGUgfHwgXCJrZXl1cFwiID09PSBhLnR5cGUgPyBxZlthLmtleUNvZGVdIHx8IFwiVW5pZGVudGlmaWVkXCIgOiBcIlwiO1xuICB9LFxuICBsb2NhdGlvbjogbnVsbCxcbiAgY3RybEtleTogbnVsbCxcbiAgc2hpZnRLZXk6IG51bGwsXG4gIGFsdEtleTogbnVsbCxcbiAgbWV0YUtleTogbnVsbCxcbiAgcmVwZWF0OiBudWxsLFxuICBsb2NhbGU6IG51bGwsXG4gIGdldE1vZGlmaWVyU3RhdGU6IFFlLFxuICBjaGFyQ29kZTogZnVuY3Rpb24gY2hhckNvZGUoYSkge1xuICAgIHJldHVybiBcImtleXByZXNzXCIgPT09IGEudHlwZSA/IG9mKGEpIDogMDtcbiAgfSxcbiAga2V5Q29kZTogZnVuY3Rpb24ga2V5Q29kZShhKSB7XG4gICAgcmV0dXJuIFwia2V5ZG93blwiID09PSBhLnR5cGUgfHwgXCJrZXl1cFwiID09PSBhLnR5cGUgPyBhLmtleUNvZGUgOiAwO1xuICB9LFxuICB3aGljaDogZnVuY3Rpb24gd2hpY2goYSkge1xuICAgIHJldHVybiBcImtleXByZXNzXCIgPT09IGEudHlwZSA/IG9mKGEpIDogXCJrZXlkb3duXCIgPT09IGEudHlwZSB8fCBcImtleXVwXCIgPT09IGEudHlwZSA/IGEua2V5Q29kZSA6IDA7XG4gIH1cbn0pLFxuICAgIHNmID0gVmUuZXh0ZW5kKHtcbiAgZGF0YVRyYW5zZmVyOiBudWxsXG59KSxcbiAgICB0ZiA9IE5lLmV4dGVuZCh7XG4gIHRvdWNoZXM6IG51bGwsXG4gIHRhcmdldFRvdWNoZXM6IG51bGwsXG4gIGNoYW5nZWRUb3VjaGVzOiBudWxsLFxuICBhbHRLZXk6IG51bGwsXG4gIG1ldGFLZXk6IG51bGwsXG4gIGN0cmxLZXk6IG51bGwsXG4gIHNoaWZ0S2V5OiBudWxsLFxuICBnZXRNb2RpZmllclN0YXRlOiBRZVxufSksXG4gICAgdWYgPSBHLmV4dGVuZCh7XG4gIHByb3BlcnR5TmFtZTogbnVsbCxcbiAgZWxhcHNlZFRpbWU6IG51bGwsXG4gIHBzZXVkb0VsZW1lbnQ6IG51bGxcbn0pLFxuICAgIHZmID0gVmUuZXh0ZW5kKHtcbiAgZGVsdGFYOiBmdW5jdGlvbiBkZWx0YVgoYSkge1xuICAgIHJldHVybiBcImRlbHRhWFwiIGluIGEgPyBhLmRlbHRhWCA6IFwid2hlZWxEZWx0YVhcIiBpbiBhID8gLWEud2hlZWxEZWx0YVggOiAwO1xuICB9LFxuICBkZWx0YVk6IGZ1bmN0aW9uIGRlbHRhWShhKSB7XG4gICAgcmV0dXJuIFwiZGVsdGFZXCIgaW4gYSA/IGEuZGVsdGFZIDogXCJ3aGVlbERlbHRhWVwiIGluIGEgPyAtYS53aGVlbERlbHRhWSA6IFwid2hlZWxEZWx0YVwiIGluIGEgPyAtYS53aGVlbERlbHRhIDogMDtcbiAgfSxcbiAgZGVsdGFaOiBudWxsLFxuICBkZWx0YU1vZGU6IG51bGxcbn0pLFxuICAgIHdmID0ge1xuICBldmVudFR5cGVzOiBXYyxcbiAgZXh0cmFjdEV2ZW50czogZnVuY3Rpb24gZXh0cmFjdEV2ZW50cyhhLCBiLCBjLCBkKSB7XG4gICAgdmFyIGUgPSBZYy5nZXQoYSk7XG4gICAgaWYgKCFlKSByZXR1cm4gbnVsbDtcblxuICAgIHN3aXRjaCAoYSkge1xuICAgICAgY2FzZSBcImtleXByZXNzXCI6XG4gICAgICAgIGlmICgwID09PSBvZihjKSkgcmV0dXJuIG51bGw7XG5cbiAgICAgIGNhc2UgXCJrZXlkb3duXCI6XG4gICAgICBjYXNlIFwia2V5dXBcIjpcbiAgICAgICAgYSA9IHJmO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBcImJsdXJcIjpcbiAgICAgIGNhc2UgXCJmb2N1c1wiOlxuICAgICAgICBhID0gbmY7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIFwiY2xpY2tcIjpcbiAgICAgICAgaWYgKDIgPT09IGMuYnV0dG9uKSByZXR1cm4gbnVsbDtcblxuICAgICAgY2FzZSBcImF1eGNsaWNrXCI6XG4gICAgICBjYXNlIFwiZGJsY2xpY2tcIjpcbiAgICAgIGNhc2UgXCJtb3VzZWRvd25cIjpcbiAgICAgIGNhc2UgXCJtb3VzZW1vdmVcIjpcbiAgICAgIGNhc2UgXCJtb3VzZXVwXCI6XG4gICAgICBjYXNlIFwibW91c2VvdXRcIjpcbiAgICAgIGNhc2UgXCJtb3VzZW92ZXJcIjpcbiAgICAgIGNhc2UgXCJjb250ZXh0bWVudVwiOlxuICAgICAgICBhID0gVmU7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIFwiZHJhZ1wiOlxuICAgICAgY2FzZSBcImRyYWdlbmRcIjpcbiAgICAgIGNhc2UgXCJkcmFnZW50ZXJcIjpcbiAgICAgIGNhc2UgXCJkcmFnZXhpdFwiOlxuICAgICAgY2FzZSBcImRyYWdsZWF2ZVwiOlxuICAgICAgY2FzZSBcImRyYWdvdmVyXCI6XG4gICAgICBjYXNlIFwiZHJhZ3N0YXJ0XCI6XG4gICAgICBjYXNlIFwiZHJvcFwiOlxuICAgICAgICBhID0gc2Y7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIFwidG91Y2hjYW5jZWxcIjpcbiAgICAgIGNhc2UgXCJ0b3VjaGVuZFwiOlxuICAgICAgY2FzZSBcInRvdWNobW92ZVwiOlxuICAgICAgY2FzZSBcInRvdWNoc3RhcnRcIjpcbiAgICAgICAgYSA9IHRmO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBYYjpcbiAgICAgIGNhc2UgWWI6XG4gICAgICBjYXNlIFpiOlxuICAgICAgICBhID0gbGY7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICRiOlxuICAgICAgICBhID0gdWY7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIFwic2Nyb2xsXCI6XG4gICAgICAgIGEgPSBOZTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgXCJ3aGVlbFwiOlxuICAgICAgICBhID0gdmY7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIFwiY29weVwiOlxuICAgICAgY2FzZSBcImN1dFwiOlxuICAgICAgY2FzZSBcInBhc3RlXCI6XG4gICAgICAgIGEgPSBtZjtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOlxuICAgICAgY2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOlxuICAgICAgY2FzZSBcInBvaW50ZXJjYW5jZWxcIjpcbiAgICAgIGNhc2UgXCJwb2ludGVyZG93blwiOlxuICAgICAgY2FzZSBcInBvaW50ZXJtb3ZlXCI6XG4gICAgICBjYXNlIFwicG9pbnRlcm91dFwiOlxuICAgICAgY2FzZSBcInBvaW50ZXJvdmVyXCI6XG4gICAgICBjYXNlIFwicG9pbnRlcnVwXCI6XG4gICAgICAgIGEgPSBXZTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGEgPSBHO1xuICAgIH1cblxuICAgIGIgPSBhLmdldFBvb2xlZChlLCBiLCBjLCBkKTtcbiAgICBYZChiKTtcbiAgICByZXR1cm4gYjtcbiAgfVxufTtcbmlmIChwYSkgdGhyb3cgRXJyb3IodSgxMDEpKTtcbnBhID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoXCJSZXNwb25kZXJFdmVudFBsdWdpbiBTaW1wbGVFdmVudFBsdWdpbiBFbnRlckxlYXZlRXZlbnRQbHVnaW4gQ2hhbmdlRXZlbnRQbHVnaW4gU2VsZWN0RXZlbnRQbHVnaW4gQmVmb3JlSW5wdXRFdmVudFBsdWdpblwiLnNwbGl0KFwiIFwiKSk7XG5yYSgpO1xudmFyIHhmID0gTmM7XG5sYSA9IFFkO1xubWEgPSB4Zjtcbm5hID0gUGQ7XG54YSh7XG4gIFNpbXBsZUV2ZW50UGx1Z2luOiB3ZixcbiAgRW50ZXJMZWF2ZUV2ZW50UGx1Z2luOiBZZSxcbiAgQ2hhbmdlRXZlbnRQbHVnaW46IE1lLFxuICBTZWxlY3RFdmVudFBsdWdpbjoga2YsXG4gIEJlZm9yZUlucHV0RXZlbnRQbHVnaW46IHZlXG59KTtcbnZhciB5ZiA9IFtdLFxuICAgIHpmID0gLTE7XG5cbmZ1bmN0aW9uIEgoYSkge1xuICAwID4gemYgfHwgKGEuY3VycmVudCA9IHlmW3pmXSwgeWZbemZdID0gbnVsbCwgemYtLSk7XG59XG5cbmZ1bmN0aW9uIEkoYSwgYikge1xuICB6ZisrO1xuICB5Zlt6Zl0gPSBhLmN1cnJlbnQ7XG4gIGEuY3VycmVudCA9IGI7XG59XG5cbnZhciBBZiA9IHt9LFxuICAgIEogPSB7XG4gIGN1cnJlbnQ6IEFmXG59LFxuICAgIEsgPSB7XG4gIGN1cnJlbnQ6ICExXG59LFxuICAgIEJmID0gQWY7XG5cbmZ1bmN0aW9uIENmKGEsIGIpIHtcbiAgdmFyIGMgPSBhLnR5cGUuY29udGV4dFR5cGVzO1xuICBpZiAoIWMpIHJldHVybiBBZjtcbiAgdmFyIGQgPSBhLnN0YXRlTm9kZTtcbiAgaWYgKGQgJiYgZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0ID09PSBiKSByZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDtcbiAgdmFyIGUgPSB7fSxcbiAgICAgIGY7XG5cbiAgZm9yIChmIGluIGMpIHtcbiAgICBlW2ZdID0gYltmXTtcbiAgfVxuXG4gIGQgJiYgKGEgPSBhLnN0YXRlTm9kZSwgYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0ID0gYiwgYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCA9IGUpO1xuICByZXR1cm4gZTtcbn1cblxuZnVuY3Rpb24gTChhKSB7XG4gIGEgPSBhLmNoaWxkQ29udGV4dFR5cGVzO1xuICByZXR1cm4gbnVsbCAhPT0gYSAmJiB2b2lkIDAgIT09IGE7XG59XG5cbmZ1bmN0aW9uIERmKCkge1xuICBIKEspO1xuICBIKEopO1xufVxuXG5mdW5jdGlvbiBFZihhLCBiLCBjKSB7XG4gIGlmIChKLmN1cnJlbnQgIT09IEFmKSB0aHJvdyBFcnJvcih1KDE2OCkpO1xuICBJKEosIGIpO1xuICBJKEssIGMpO1xufVxuXG5mdW5jdGlvbiBGZihhLCBiLCBjKSB7XG4gIHZhciBkID0gYS5zdGF0ZU5vZGU7XG4gIGEgPSBiLmNoaWxkQ29udGV4dFR5cGVzO1xuICBpZiAoXCJmdW5jdGlvblwiICE9PSB0eXBlb2YgZC5nZXRDaGlsZENvbnRleHQpIHJldHVybiBjO1xuICBkID0gZC5nZXRDaGlsZENvbnRleHQoKTtcblxuICBmb3IgKHZhciBlIGluIGQpIHtcbiAgICBpZiAoIShlIGluIGEpKSB0aHJvdyBFcnJvcih1KDEwOCwgcGIoYikgfHwgXCJVbmtub3duXCIsIGUpKTtcbiAgfVxuXG4gIHJldHVybiBuKHt9LCBjLCB7fSwgZCk7XG59XG5cbmZ1bmN0aW9uIEdmKGEpIHtcbiAgYSA9IChhID0gYS5zdGF0ZU5vZGUpICYmIGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQgfHwgQWY7XG4gIEJmID0gSi5jdXJyZW50O1xuICBJKEosIGEpO1xuICBJKEssIEsuY3VycmVudCk7XG4gIHJldHVybiAhMDtcbn1cblxuZnVuY3Rpb24gSGYoYSwgYiwgYykge1xuICB2YXIgZCA9IGEuc3RhdGVOb2RlO1xuICBpZiAoIWQpIHRocm93IEVycm9yKHUoMTY5KSk7XG4gIGMgPyAoYSA9IEZmKGEsIGIsIEJmKSwgZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dCA9IGEsIEgoSyksIEgoSiksIEkoSiwgYSkpIDogSChLKTtcbiAgSShLLCBjKTtcbn1cblxudmFyIElmID0gci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksXG4gICAgSmYgPSByLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2ssXG4gICAgS2YgPSByLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrLFxuICAgIExmID0gci51bnN0YWJsZV9yZXF1ZXN0UGFpbnQsXG4gICAgTWYgPSByLnVuc3RhYmxlX25vdyxcbiAgICBOZiA9IHIudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwsXG4gICAgT2YgPSByLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LFxuICAgIFBmID0gci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxcbiAgICBRZiA9IHIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksXG4gICAgUmYgPSByLnVuc3RhYmxlX0xvd1ByaW9yaXR5LFxuICAgIFNmID0gci51bnN0YWJsZV9JZGxlUHJpb3JpdHksXG4gICAgVGYgPSB7fSxcbiAgICBVZiA9IHIudW5zdGFibGVfc2hvdWxkWWllbGQsXG4gICAgVmYgPSB2b2lkIDAgIT09IExmID8gTGYgOiBmdW5jdGlvbiAoKSB7fSxcbiAgICBXZiA9IG51bGwsXG4gICAgWGYgPSBudWxsLFxuICAgIFlmID0gITEsXG4gICAgWmYgPSBNZigpLFxuICAgICRmID0gMUU0ID4gWmYgPyBNZiA6IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIE1mKCkgLSBaZjtcbn07XG5cbmZ1bmN0aW9uIGFnKCkge1xuICBzd2l0Y2ggKE5mKCkpIHtcbiAgICBjYXNlIE9mOlxuICAgICAgcmV0dXJuIDk5O1xuXG4gICAgY2FzZSBQZjpcbiAgICAgIHJldHVybiA5ODtcblxuICAgIGNhc2UgUWY6XG4gICAgICByZXR1cm4gOTc7XG5cbiAgICBjYXNlIFJmOlxuICAgICAgcmV0dXJuIDk2O1xuXG4gICAgY2FzZSBTZjpcbiAgICAgIHJldHVybiA5NTtcblxuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBFcnJvcih1KDMzMikpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGJnKGEpIHtcbiAgc3dpdGNoIChhKSB7XG4gICAgY2FzZSA5OTpcbiAgICAgIHJldHVybiBPZjtcblxuICAgIGNhc2UgOTg6XG4gICAgICByZXR1cm4gUGY7XG5cbiAgICBjYXNlIDk3OlxuICAgICAgcmV0dXJuIFFmO1xuXG4gICAgY2FzZSA5NjpcbiAgICAgIHJldHVybiBSZjtcblxuICAgIGNhc2UgOTU6XG4gICAgICByZXR1cm4gU2Y7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgRXJyb3IodSgzMzIpKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjZyhhLCBiKSB7XG4gIGEgPSBiZyhhKTtcbiAgcmV0dXJuIElmKGEsIGIpO1xufVxuXG5mdW5jdGlvbiBkZyhhLCBiLCBjKSB7XG4gIGEgPSBiZyhhKTtcbiAgcmV0dXJuIEpmKGEsIGIsIGMpO1xufVxuXG5mdW5jdGlvbiBlZyhhKSB7XG4gIG51bGwgPT09IFdmID8gKFdmID0gW2FdLCBYZiA9IEpmKE9mLCBmZykpIDogV2YucHVzaChhKTtcbiAgcmV0dXJuIFRmO1xufVxuXG5mdW5jdGlvbiBnZygpIHtcbiAgaWYgKG51bGwgIT09IFhmKSB7XG4gICAgdmFyIGEgPSBYZjtcbiAgICBYZiA9IG51bGw7XG4gICAgS2YoYSk7XG4gIH1cblxuICBmZygpO1xufVxuXG5mdW5jdGlvbiBmZygpIHtcbiAgaWYgKCFZZiAmJiBudWxsICE9PSBXZikge1xuICAgIFlmID0gITA7XG4gICAgdmFyIGEgPSAwO1xuXG4gICAgdHJ5IHtcbiAgICAgIHZhciBiID0gV2Y7XG4gICAgICBjZyg5OSwgZnVuY3Rpb24gKCkge1xuICAgICAgICBmb3IgKDsgYSA8IGIubGVuZ3RoOyBhKyspIHtcbiAgICAgICAgICB2YXIgYyA9IGJbYV07XG5cbiAgICAgICAgICBkbyB7XG4gICAgICAgICAgICBjID0gYyghMCk7XG4gICAgICAgICAgfSB3aGlsZSAobnVsbCAhPT0gYyk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgV2YgPSBudWxsO1xuICAgIH0gY2F0Y2ggKGMpIHtcbiAgICAgIHRocm93IG51bGwgIT09IFdmICYmIChXZiA9IFdmLnNsaWNlKGEgKyAxKSksIEpmKE9mLCBnZyksIGM7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIFlmID0gITE7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGhnKGEsIGIsIGMpIHtcbiAgYyAvPSAxMDtcbiAgcmV0dXJuIDEwNzM3NDE4MjEgLSAoKCgxMDczNzQxODIxIC0gYSArIGIgLyAxMCkgLyBjIHwgMCkgKyAxKSAqIGM7XG59XG5cbmZ1bmN0aW9uIGlnKGEsIGIpIHtcbiAgaWYgKGEgJiYgYS5kZWZhdWx0UHJvcHMpIHtcbiAgICBiID0gbih7fSwgYik7XG4gICAgYSA9IGEuZGVmYXVsdFByb3BzO1xuXG4gICAgZm9yICh2YXIgYyBpbiBhKSB7XG4gICAgICB2b2lkIDAgPT09IGJbY10gJiYgKGJbY10gPSBhW2NdKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYjtcbn1cblxudmFyIGpnID0ge1xuICBjdXJyZW50OiBudWxsXG59LFxuICAgIGtnID0gbnVsbCxcbiAgICBsZyA9IG51bGwsXG4gICAgbWcgPSBudWxsO1xuXG5mdW5jdGlvbiBuZygpIHtcbiAgbWcgPSBsZyA9IGtnID0gbnVsbDtcbn1cblxuZnVuY3Rpb24gb2coYSkge1xuICB2YXIgYiA9IGpnLmN1cnJlbnQ7XG4gIEgoamcpO1xuICBhLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZSA9IGI7XG59XG5cbmZ1bmN0aW9uIHBnKGEsIGIpIHtcbiAgZm9yICg7IG51bGwgIT09IGE7KSB7XG4gICAgdmFyIGMgPSBhLmFsdGVybmF0ZTtcbiAgICBpZiAoYS5jaGlsZEV4cGlyYXRpb25UaW1lIDwgYikgYS5jaGlsZEV4cGlyYXRpb25UaW1lID0gYiwgbnVsbCAhPT0gYyAmJiBjLmNoaWxkRXhwaXJhdGlvblRpbWUgPCBiICYmIChjLmNoaWxkRXhwaXJhdGlvblRpbWUgPSBiKTtlbHNlIGlmIChudWxsICE9PSBjICYmIGMuY2hpbGRFeHBpcmF0aW9uVGltZSA8IGIpIGMuY2hpbGRFeHBpcmF0aW9uVGltZSA9IGI7ZWxzZSBicmVhaztcbiAgICBhID0gYS5yZXR1cm47XG4gIH1cbn1cblxuZnVuY3Rpb24gcWcoYSwgYikge1xuICBrZyA9IGE7XG4gIG1nID0gbGcgPSBudWxsO1xuICBhID0gYS5kZXBlbmRlbmNpZXM7XG4gIG51bGwgIT09IGEgJiYgbnVsbCAhPT0gYS5maXJzdENvbnRleHQgJiYgKGEuZXhwaXJhdGlvblRpbWUgPj0gYiAmJiAocmcgPSAhMCksIGEuZmlyc3RDb250ZXh0ID0gbnVsbCk7XG59XG5cbmZ1bmN0aW9uIHNnKGEsIGIpIHtcbiAgaWYgKG1nICE9PSBhICYmICExICE9PSBiICYmIDAgIT09IGIpIHtcbiAgICBpZiAoXCJudW1iZXJcIiAhPT0gdHlwZW9mIGIgfHwgMTA3Mzc0MTgyMyA9PT0gYikgbWcgPSBhLCBiID0gMTA3Mzc0MTgyMztcbiAgICBiID0ge1xuICAgICAgY29udGV4dDogYSxcbiAgICAgIG9ic2VydmVkQml0czogYixcbiAgICAgIG5leHQ6IG51bGxcbiAgICB9O1xuXG4gICAgaWYgKG51bGwgPT09IGxnKSB7XG4gICAgICBpZiAobnVsbCA9PT0ga2cpIHRocm93IEVycm9yKHUoMzA4KSk7XG4gICAgICBsZyA9IGI7XG4gICAgICBrZy5kZXBlbmRlbmNpZXMgPSB7XG4gICAgICAgIGV4cGlyYXRpb25UaW1lOiAwLFxuICAgICAgICBmaXJzdENvbnRleHQ6IGIsXG4gICAgICAgIHJlc3BvbmRlcnM6IG51bGxcbiAgICAgIH07XG4gICAgfSBlbHNlIGxnID0gbGcubmV4dCA9IGI7XG4gIH1cblxuICByZXR1cm4gYS5fY3VycmVudFZhbHVlO1xufVxuXG52YXIgdGcgPSAhMTtcblxuZnVuY3Rpb24gdWcoYSkge1xuICBhLnVwZGF0ZVF1ZXVlID0ge1xuICAgIGJhc2VTdGF0ZTogYS5tZW1vaXplZFN0YXRlLFxuICAgIGJhc2VRdWV1ZTogbnVsbCxcbiAgICBzaGFyZWQ6IHtcbiAgICAgIHBlbmRpbmc6IG51bGxcbiAgICB9LFxuICAgIGVmZmVjdHM6IG51bGxcbiAgfTtcbn1cblxuZnVuY3Rpb24gdmcoYSwgYikge1xuICBhID0gYS51cGRhdGVRdWV1ZTtcbiAgYi51cGRhdGVRdWV1ZSA9PT0gYSAmJiAoYi51cGRhdGVRdWV1ZSA9IHtcbiAgICBiYXNlU3RhdGU6IGEuYmFzZVN0YXRlLFxuICAgIGJhc2VRdWV1ZTogYS5iYXNlUXVldWUsXG4gICAgc2hhcmVkOiBhLnNoYXJlZCxcbiAgICBlZmZlY3RzOiBhLmVmZmVjdHNcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHdnKGEsIGIpIHtcbiAgYSA9IHtcbiAgICBleHBpcmF0aW9uVGltZTogYSxcbiAgICBzdXNwZW5zZUNvbmZpZzogYixcbiAgICB0YWc6IDAsXG4gICAgcGF5bG9hZDogbnVsbCxcbiAgICBjYWxsYmFjazogbnVsbCxcbiAgICBuZXh0OiBudWxsXG4gIH07XG4gIHJldHVybiBhLm5leHQgPSBhO1xufVxuXG5mdW5jdGlvbiB4ZyhhLCBiKSB7XG4gIGEgPSBhLnVwZGF0ZVF1ZXVlO1xuXG4gIGlmIChudWxsICE9PSBhKSB7XG4gICAgYSA9IGEuc2hhcmVkO1xuICAgIHZhciBjID0gYS5wZW5kaW5nO1xuICAgIG51bGwgPT09IGMgPyBiLm5leHQgPSBiIDogKGIubmV4dCA9IGMubmV4dCwgYy5uZXh0ID0gYik7XG4gICAgYS5wZW5kaW5nID0gYjtcbiAgfVxufVxuXG5mdW5jdGlvbiB5ZyhhLCBiKSB7XG4gIHZhciBjID0gYS5hbHRlcm5hdGU7XG4gIG51bGwgIT09IGMgJiYgdmcoYywgYSk7XG4gIGEgPSBhLnVwZGF0ZVF1ZXVlO1xuICBjID0gYS5iYXNlUXVldWU7XG4gIG51bGwgPT09IGMgPyAoYS5iYXNlUXVldWUgPSBiLm5leHQgPSBiLCBiLm5leHQgPSBiKSA6IChiLm5leHQgPSBjLm5leHQsIGMubmV4dCA9IGIpO1xufVxuXG5mdW5jdGlvbiB6ZyhhLCBiLCBjLCBkKSB7XG4gIHZhciBlID0gYS51cGRhdGVRdWV1ZTtcbiAgdGcgPSAhMTtcbiAgdmFyIGYgPSBlLmJhc2VRdWV1ZSxcbiAgICAgIGcgPSBlLnNoYXJlZC5wZW5kaW5nO1xuXG4gIGlmIChudWxsICE9PSBnKSB7XG4gICAgaWYgKG51bGwgIT09IGYpIHtcbiAgICAgIHZhciBoID0gZi5uZXh0O1xuICAgICAgZi5uZXh0ID0gZy5uZXh0O1xuICAgICAgZy5uZXh0ID0gaDtcbiAgICB9XG5cbiAgICBmID0gZztcbiAgICBlLnNoYXJlZC5wZW5kaW5nID0gbnVsbDtcbiAgICBoID0gYS5hbHRlcm5hdGU7XG4gICAgbnVsbCAhPT0gaCAmJiAoaCA9IGgudXBkYXRlUXVldWUsIG51bGwgIT09IGggJiYgKGguYmFzZVF1ZXVlID0gZykpO1xuICB9XG5cbiAgaWYgKG51bGwgIT09IGYpIHtcbiAgICBoID0gZi5uZXh0O1xuICAgIHZhciBrID0gZS5iYXNlU3RhdGUsXG4gICAgICAgIGwgPSAwLFxuICAgICAgICBtID0gbnVsbCxcbiAgICAgICAgcCA9IG51bGwsXG4gICAgICAgIHggPSBudWxsO1xuXG4gICAgaWYgKG51bGwgIT09IGgpIHtcbiAgICAgIHZhciB6ID0gaDtcblxuICAgICAgZG8ge1xuICAgICAgICBnID0gei5leHBpcmF0aW9uVGltZTtcblxuICAgICAgICBpZiAoZyA8IGQpIHtcbiAgICAgICAgICB2YXIgY2EgPSB7XG4gICAgICAgICAgICBleHBpcmF0aW9uVGltZTogei5leHBpcmF0aW9uVGltZSxcbiAgICAgICAgICAgIHN1c3BlbnNlQ29uZmlnOiB6LnN1c3BlbnNlQ29uZmlnLFxuICAgICAgICAgICAgdGFnOiB6LnRhZyxcbiAgICAgICAgICAgIHBheWxvYWQ6IHoucGF5bG9hZCxcbiAgICAgICAgICAgIGNhbGxiYWNrOiB6LmNhbGxiYWNrLFxuICAgICAgICAgICAgbmV4dDogbnVsbFxuICAgICAgICAgIH07XG4gICAgICAgICAgbnVsbCA9PT0geCA/IChwID0geCA9IGNhLCBtID0gaykgOiB4ID0geC5uZXh0ID0gY2E7XG4gICAgICAgICAgZyA+IGwgJiYgKGwgPSBnKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBudWxsICE9PSB4ICYmICh4ID0geC5uZXh0ID0ge1xuICAgICAgICAgICAgZXhwaXJhdGlvblRpbWU6IDEwNzM3NDE4MjMsXG4gICAgICAgICAgICBzdXNwZW5zZUNvbmZpZzogei5zdXNwZW5zZUNvbmZpZyxcbiAgICAgICAgICAgIHRhZzogei50YWcsXG4gICAgICAgICAgICBwYXlsb2FkOiB6LnBheWxvYWQsXG4gICAgICAgICAgICBjYWxsYmFjazogei5jYWxsYmFjayxcbiAgICAgICAgICAgIG5leHQ6IG51bGxcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBBZyhnLCB6LnN1c3BlbnNlQ29uZmlnKTtcblxuICAgICAgICAgIGE6IHtcbiAgICAgICAgICAgIHZhciBEID0gYSxcbiAgICAgICAgICAgICAgICB0ID0gejtcbiAgICAgICAgICAgIGcgPSBiO1xuICAgICAgICAgICAgY2EgPSBjO1xuXG4gICAgICAgICAgICBzd2l0Y2ggKHQudGFnKSB7XG4gICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICBEID0gdC5wYXlsb2FkO1xuXG4gICAgICAgICAgICAgICAgaWYgKFwiZnVuY3Rpb25cIiA9PT0gdHlwZW9mIEQpIHtcbiAgICAgICAgICAgICAgICAgIGsgPSBELmNhbGwoY2EsIGssIGcpO1xuICAgICAgICAgICAgICAgICAgYnJlYWsgYTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBrID0gRDtcbiAgICAgICAgICAgICAgICBicmVhayBhO1xuXG4gICAgICAgICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgICAgICBELmVmZmVjdFRhZyA9IEQuZWZmZWN0VGFnICYgLTQwOTcgfCA2NDtcblxuICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgRCA9IHQucGF5bG9hZDtcbiAgICAgICAgICAgICAgICBnID0gXCJmdW5jdGlvblwiID09PSB0eXBlb2YgRCA/IEQuY2FsbChjYSwgaywgZykgOiBEO1xuICAgICAgICAgICAgICAgIGlmIChudWxsID09PSBnIHx8IHZvaWQgMCA9PT0gZykgYnJlYWsgYTtcbiAgICAgICAgICAgICAgICBrID0gbih7fSwgaywgZyk7XG4gICAgICAgICAgICAgICAgYnJlYWsgYTtcblxuICAgICAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICAgICAgdGcgPSAhMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICBudWxsICE9PSB6LmNhbGxiYWNrICYmIChhLmVmZmVjdFRhZyB8PSAzMiwgZyA9IGUuZWZmZWN0cywgbnVsbCA9PT0gZyA/IGUuZWZmZWN0cyA9IFt6XSA6IGcucHVzaCh6KSk7XG4gICAgICAgIH1cblxuICAgICAgICB6ID0gei5uZXh0O1xuICAgICAgICBpZiAobnVsbCA9PT0geiB8fCB6ID09PSBoKSBpZiAoZyA9IGUuc2hhcmVkLnBlbmRpbmcsIG51bGwgPT09IGcpIGJyZWFrO2Vsc2UgeiA9IGYubmV4dCA9IGcubmV4dCwgZy5uZXh0ID0gaCwgZS5iYXNlUXVldWUgPSBmID0gZywgZS5zaGFyZWQucGVuZGluZyA9IG51bGw7XG4gICAgICB9IHdoaWxlICgxKTtcbiAgICB9XG5cbiAgICBudWxsID09PSB4ID8gbSA9IGsgOiB4Lm5leHQgPSBwO1xuICAgIGUuYmFzZVN0YXRlID0gbTtcbiAgICBlLmJhc2VRdWV1ZSA9IHg7XG4gICAgQmcobCk7XG4gICAgYS5leHBpcmF0aW9uVGltZSA9IGw7XG4gICAgYS5tZW1vaXplZFN0YXRlID0gaztcbiAgfVxufVxuXG5mdW5jdGlvbiBDZyhhLCBiLCBjKSB7XG4gIGEgPSBiLmVmZmVjdHM7XG4gIGIuZWZmZWN0cyA9IG51bGw7XG4gIGlmIChudWxsICE9PSBhKSBmb3IgKGIgPSAwOyBiIDwgYS5sZW5ndGg7IGIrKykge1xuICAgIHZhciBkID0gYVtiXSxcbiAgICAgICAgZSA9IGQuY2FsbGJhY2s7XG5cbiAgICBpZiAobnVsbCAhPT0gZSkge1xuICAgICAgZC5jYWxsYmFjayA9IG51bGw7XG4gICAgICBkID0gZTtcbiAgICAgIGUgPSBjO1xuICAgICAgaWYgKFwiZnVuY3Rpb25cIiAhPT0gdHlwZW9mIGQpIHRocm93IEVycm9yKHUoMTkxLCBkKSk7XG4gICAgICBkLmNhbGwoZSk7XG4gICAgfVxuICB9XG59XG5cbnZhciBEZyA9IFdhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLFxuICAgIEVnID0gbmV3IGFhLkNvbXBvbmVudCgpLnJlZnM7XG5cbmZ1bmN0aW9uIEZnKGEsIGIsIGMsIGQpIHtcbiAgYiA9IGEubWVtb2l6ZWRTdGF0ZTtcbiAgYyA9IGMoZCwgYik7XG4gIGMgPSBudWxsID09PSBjIHx8IHZvaWQgMCA9PT0gYyA/IGIgOiBuKHt9LCBiLCBjKTtcbiAgYS5tZW1vaXplZFN0YXRlID0gYztcbiAgMCA9PT0gYS5leHBpcmF0aW9uVGltZSAmJiAoYS51cGRhdGVRdWV1ZS5iYXNlU3RhdGUgPSBjKTtcbn1cblxudmFyIEpnID0ge1xuICBpc01vdW50ZWQ6IGZ1bmN0aW9uIGlzTW91bnRlZChhKSB7XG4gICAgcmV0dXJuIChhID0gYS5fcmVhY3RJbnRlcm5hbEZpYmVyKSA/IGRjKGEpID09PSBhIDogITE7XG4gIH0sXG4gIGVucXVldWVTZXRTdGF0ZTogZnVuY3Rpb24gZW5xdWV1ZVNldFN0YXRlKGEsIGIsIGMpIHtcbiAgICBhID0gYS5fcmVhY3RJbnRlcm5hbEZpYmVyO1xuICAgIHZhciBkID0gR2coKSxcbiAgICAgICAgZSA9IERnLnN1c3BlbnNlO1xuICAgIGQgPSBIZyhkLCBhLCBlKTtcbiAgICBlID0gd2coZCwgZSk7XG4gICAgZS5wYXlsb2FkID0gYjtcbiAgICB2b2lkIDAgIT09IGMgJiYgbnVsbCAhPT0gYyAmJiAoZS5jYWxsYmFjayA9IGMpO1xuICAgIHhnKGEsIGUpO1xuICAgIElnKGEsIGQpO1xuICB9LFxuICBlbnF1ZXVlUmVwbGFjZVN0YXRlOiBmdW5jdGlvbiBlbnF1ZXVlUmVwbGFjZVN0YXRlKGEsIGIsIGMpIHtcbiAgICBhID0gYS5fcmVhY3RJbnRlcm5hbEZpYmVyO1xuICAgIHZhciBkID0gR2coKSxcbiAgICAgICAgZSA9IERnLnN1c3BlbnNlO1xuICAgIGQgPSBIZyhkLCBhLCBlKTtcbiAgICBlID0gd2coZCwgZSk7XG4gICAgZS50YWcgPSAxO1xuICAgIGUucGF5bG9hZCA9IGI7XG4gICAgdm9pZCAwICE9PSBjICYmIG51bGwgIT09IGMgJiYgKGUuY2FsbGJhY2sgPSBjKTtcbiAgICB4ZyhhLCBlKTtcbiAgICBJZyhhLCBkKTtcbiAgfSxcbiAgZW5xdWV1ZUZvcmNlVXBkYXRlOiBmdW5jdGlvbiBlbnF1ZXVlRm9yY2VVcGRhdGUoYSwgYikge1xuICAgIGEgPSBhLl9yZWFjdEludGVybmFsRmliZXI7XG4gICAgdmFyIGMgPSBHZygpLFxuICAgICAgICBkID0gRGcuc3VzcGVuc2U7XG4gICAgYyA9IEhnKGMsIGEsIGQpO1xuICAgIGQgPSB3ZyhjLCBkKTtcbiAgICBkLnRhZyA9IDI7XG4gICAgdm9pZCAwICE9PSBiICYmIG51bGwgIT09IGIgJiYgKGQuY2FsbGJhY2sgPSBiKTtcbiAgICB4ZyhhLCBkKTtcbiAgICBJZyhhLCBjKTtcbiAgfVxufTtcblxuZnVuY3Rpb24gS2coYSwgYiwgYywgZCwgZSwgZiwgZykge1xuICBhID0gYS5zdGF0ZU5vZGU7XG4gIHJldHVybiBcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZSA/IGEuc2hvdWxkQ29tcG9uZW50VXBkYXRlKGQsIGYsIGcpIDogYi5wcm90b3R5cGUgJiYgYi5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQgPyAhYmYoYywgZCkgfHwgIWJmKGUsIGYpIDogITA7XG59XG5cbmZ1bmN0aW9uIExnKGEsIGIsIGMpIHtcbiAgdmFyIGQgPSAhMSxcbiAgICAgIGUgPSBBZjtcbiAgdmFyIGYgPSBiLmNvbnRleHRUeXBlO1xuICBcIm9iamVjdFwiID09PSB0eXBlb2YgZiAmJiBudWxsICE9PSBmID8gZiA9IHNnKGYpIDogKGUgPSBMKGIpID8gQmYgOiBKLmN1cnJlbnQsIGQgPSBiLmNvbnRleHRUeXBlcywgZiA9IChkID0gbnVsbCAhPT0gZCAmJiB2b2lkIDAgIT09IGQpID8gQ2YoYSwgZSkgOiBBZik7XG4gIGIgPSBuZXcgYihjLCBmKTtcbiAgYS5tZW1vaXplZFN0YXRlID0gbnVsbCAhPT0gYi5zdGF0ZSAmJiB2b2lkIDAgIT09IGIuc3RhdGUgPyBiLnN0YXRlIDogbnVsbDtcbiAgYi51cGRhdGVyID0gSmc7XG4gIGEuc3RhdGVOb2RlID0gYjtcbiAgYi5fcmVhY3RJbnRlcm5hbEZpYmVyID0gYTtcbiAgZCAmJiAoYSA9IGEuc3RhdGVOb2RlLCBhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQgPSBlLCBhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0ID0gZik7XG4gIHJldHVybiBiO1xufVxuXG5mdW5jdGlvbiBNZyhhLCBiLCBjLCBkKSB7XG4gIGEgPSBiLnN0YXRlO1xuICBcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgJiYgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsIGQpO1xuICBcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzICYmIGIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYywgZCk7XG4gIGIuc3RhdGUgIT09IGEgJiYgSmcuZW5xdWV1ZVJlcGxhY2VTdGF0ZShiLCBiLnN0YXRlLCBudWxsKTtcbn1cblxuZnVuY3Rpb24gTmcoYSwgYiwgYywgZCkge1xuICB2YXIgZSA9IGEuc3RhdGVOb2RlO1xuICBlLnByb3BzID0gYztcbiAgZS5zdGF0ZSA9IGEubWVtb2l6ZWRTdGF0ZTtcbiAgZS5yZWZzID0gRWc7XG4gIHVnKGEpO1xuICB2YXIgZiA9IGIuY29udGV4dFR5cGU7XG4gIFwib2JqZWN0XCIgPT09IHR5cGVvZiBmICYmIG51bGwgIT09IGYgPyBlLmNvbnRleHQgPSBzZyhmKSA6IChmID0gTChiKSA/IEJmIDogSi5jdXJyZW50LCBlLmNvbnRleHQgPSBDZihhLCBmKSk7XG4gIHpnKGEsIGMsIGUsIGQpO1xuICBlLnN0YXRlID0gYS5tZW1vaXplZFN0YXRlO1xuICBmID0gYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XG4gIFwiZnVuY3Rpb25cIiA9PT0gdHlwZW9mIGYgJiYgKEZnKGEsIGIsIGYsIGMpLCBlLnN0YXRlID0gYS5tZW1vaXplZFN0YXRlKTtcbiAgXCJmdW5jdGlvblwiID09PSB0eXBlb2YgYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMgfHwgXCJmdW5jdGlvblwiID09PSB0eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSB8fCBcImZ1bmN0aW9uXCIgIT09IHR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQgJiYgXCJmdW5jdGlvblwiICE9PSB0eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnQgfHwgKGIgPSBlLnN0YXRlLCBcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudCAmJiBlLmNvbXBvbmVudFdpbGxNb3VudCgpLCBcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQgJiYgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksIGIgIT09IGUuc3RhdGUgJiYgSmcuZW5xdWV1ZVJlcGxhY2VTdGF0ZShlLCBlLnN0YXRlLCBudWxsKSwgemcoYSwgYywgZSwgZCksIGUuc3RhdGUgPSBhLm1lbW9pemVkU3RhdGUpO1xuICBcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBlLmNvbXBvbmVudERpZE1vdW50ICYmIChhLmVmZmVjdFRhZyB8PSA0KTtcbn1cblxudmFyIE9nID0gQXJyYXkuaXNBcnJheTtcblxuZnVuY3Rpb24gUGcoYSwgYiwgYykge1xuICBhID0gYy5yZWY7XG5cbiAgaWYgKG51bGwgIT09IGEgJiYgXCJmdW5jdGlvblwiICE9PSB0eXBlb2YgYSAmJiBcIm9iamVjdFwiICE9PSB0eXBlb2YgYSkge1xuICAgIGlmIChjLl9vd25lcikge1xuICAgICAgYyA9IGMuX293bmVyO1xuXG4gICAgICBpZiAoYykge1xuICAgICAgICBpZiAoMSAhPT0gYy50YWcpIHRocm93IEVycm9yKHUoMzA5KSk7XG4gICAgICAgIHZhciBkID0gYy5zdGF0ZU5vZGU7XG4gICAgICB9XG5cbiAgICAgIGlmICghZCkgdGhyb3cgRXJyb3IodSgxNDcsIGEpKTtcbiAgICAgIHZhciBlID0gXCJcIiArIGE7XG4gICAgICBpZiAobnVsbCAhPT0gYiAmJiBudWxsICE9PSBiLnJlZiAmJiBcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBiLnJlZiAmJiBiLnJlZi5fc3RyaW5nUmVmID09PSBlKSByZXR1cm4gYi5yZWY7XG5cbiAgICAgIGIgPSBmdW5jdGlvbiBiKGEpIHtcbiAgICAgICAgdmFyIGIgPSBkLnJlZnM7XG4gICAgICAgIGIgPT09IEVnICYmIChiID0gZC5yZWZzID0ge30pO1xuICAgICAgICBudWxsID09PSBhID8gZGVsZXRlIGJbZV0gOiBiW2VdID0gYTtcbiAgICAgIH07XG5cbiAgICAgIGIuX3N0cmluZ1JlZiA9IGU7XG4gICAgICByZXR1cm4gYjtcbiAgICB9XG5cbiAgICBpZiAoXCJzdHJpbmdcIiAhPT0gdHlwZW9mIGEpIHRocm93IEVycm9yKHUoMjg0KSk7XG4gICAgaWYgKCFjLl9vd25lcikgdGhyb3cgRXJyb3IodSgyOTAsIGEpKTtcbiAgfVxuXG4gIHJldHVybiBhO1xufVxuXG5mdW5jdGlvbiBRZyhhLCBiKSB7XG4gIGlmIChcInRleHRhcmVhXCIgIT09IGEudHlwZSkgdGhyb3cgRXJyb3IodSgzMSwgXCJbb2JqZWN0IE9iamVjdF1cIiA9PT0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpID8gXCJvYmplY3Qgd2l0aCBrZXlzIHtcIiArIE9iamVjdC5rZXlzKGIpLmpvaW4oXCIsIFwiKSArIFwifVwiIDogYiwgXCJcIikpO1xufVxuXG5mdW5jdGlvbiBSZyhhKSB7XG4gIGZ1bmN0aW9uIGIoYiwgYykge1xuICAgIGlmIChhKSB7XG4gICAgICB2YXIgZCA9IGIubGFzdEVmZmVjdDtcbiAgICAgIG51bGwgIT09IGQgPyAoZC5uZXh0RWZmZWN0ID0gYywgYi5sYXN0RWZmZWN0ID0gYykgOiBiLmZpcnN0RWZmZWN0ID0gYi5sYXN0RWZmZWN0ID0gYztcbiAgICAgIGMubmV4dEVmZmVjdCA9IG51bGw7XG4gICAgICBjLmVmZmVjdFRhZyA9IDg7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gYyhjLCBkKSB7XG4gICAgaWYgKCFhKSByZXR1cm4gbnVsbDtcblxuICAgIGZvciAoOyBudWxsICE9PSBkOykge1xuICAgICAgYihjLCBkKSwgZCA9IGQuc2libGluZztcbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGQoYSwgYikge1xuICAgIGZvciAoYSA9IG5ldyBNYXAoKTsgbnVsbCAhPT0gYjspIHtcbiAgICAgIG51bGwgIT09IGIua2V5ID8gYS5zZXQoYi5rZXksIGIpIDogYS5zZXQoYi5pbmRleCwgYiksIGIgPSBiLnNpYmxpbmc7XG4gICAgfVxuXG4gICAgcmV0dXJuIGE7XG4gIH1cblxuICBmdW5jdGlvbiBlKGEsIGIpIHtcbiAgICBhID0gU2coYSwgYik7XG4gICAgYS5pbmRleCA9IDA7XG4gICAgYS5zaWJsaW5nID0gbnVsbDtcbiAgICByZXR1cm4gYTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGYoYiwgYywgZCkge1xuICAgIGIuaW5kZXggPSBkO1xuICAgIGlmICghYSkgcmV0dXJuIGM7XG4gICAgZCA9IGIuYWx0ZXJuYXRlO1xuICAgIGlmIChudWxsICE9PSBkKSByZXR1cm4gZCA9IGQuaW5kZXgsIGQgPCBjID8gKGIuZWZmZWN0VGFnID0gMiwgYykgOiBkO1xuICAgIGIuZWZmZWN0VGFnID0gMjtcbiAgICByZXR1cm4gYztcbiAgfVxuXG4gIGZ1bmN0aW9uIGcoYikge1xuICAgIGEgJiYgbnVsbCA9PT0gYi5hbHRlcm5hdGUgJiYgKGIuZWZmZWN0VGFnID0gMik7XG4gICAgcmV0dXJuIGI7XG4gIH1cblxuICBmdW5jdGlvbiBoKGEsIGIsIGMsIGQpIHtcbiAgICBpZiAobnVsbCA9PT0gYiB8fCA2ICE9PSBiLnRhZykgcmV0dXJuIGIgPSBUZyhjLCBhLm1vZGUsIGQpLCBiLnJldHVybiA9IGEsIGI7XG4gICAgYiA9IGUoYiwgYyk7XG4gICAgYi5yZXR1cm4gPSBhO1xuICAgIHJldHVybiBiO1xuICB9XG5cbiAgZnVuY3Rpb24gayhhLCBiLCBjLCBkKSB7XG4gICAgaWYgKG51bGwgIT09IGIgJiYgYi5lbGVtZW50VHlwZSA9PT0gYy50eXBlKSByZXR1cm4gZCA9IGUoYiwgYy5wcm9wcyksIGQucmVmID0gUGcoYSwgYiwgYyksIGQucmV0dXJuID0gYSwgZDtcbiAgICBkID0gVWcoYy50eXBlLCBjLmtleSwgYy5wcm9wcywgbnVsbCwgYS5tb2RlLCBkKTtcbiAgICBkLnJlZiA9IFBnKGEsIGIsIGMpO1xuICAgIGQucmV0dXJuID0gYTtcbiAgICByZXR1cm4gZDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGwoYSwgYiwgYywgZCkge1xuICAgIGlmIChudWxsID09PSBiIHx8IDQgIT09IGIudGFnIHx8IGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8gIT09IGMuY29udGFpbmVySW5mbyB8fCBiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiAhPT0gYy5pbXBsZW1lbnRhdGlvbikgcmV0dXJuIGIgPSBWZyhjLCBhLm1vZGUsIGQpLCBiLnJldHVybiA9IGEsIGI7XG4gICAgYiA9IGUoYiwgYy5jaGlsZHJlbiB8fCBbXSk7XG4gICAgYi5yZXR1cm4gPSBhO1xuICAgIHJldHVybiBiO1xuICB9XG5cbiAgZnVuY3Rpb24gbShhLCBiLCBjLCBkLCBmKSB7XG4gICAgaWYgKG51bGwgPT09IGIgfHwgNyAhPT0gYi50YWcpIHJldHVybiBiID0gV2coYywgYS5tb2RlLCBkLCBmKSwgYi5yZXR1cm4gPSBhLCBiO1xuICAgIGIgPSBlKGIsIGMpO1xuICAgIGIucmV0dXJuID0gYTtcbiAgICByZXR1cm4gYjtcbiAgfVxuXG4gIGZ1bmN0aW9uIHAoYSwgYiwgYykge1xuICAgIGlmIChcInN0cmluZ1wiID09PSB0eXBlb2YgYiB8fCBcIm51bWJlclwiID09PSB0eXBlb2YgYikgcmV0dXJuIGIgPSBUZyhcIlwiICsgYiwgYS5tb2RlLCBjKSwgYi5yZXR1cm4gPSBhLCBiO1xuXG4gICAgaWYgKFwib2JqZWN0XCIgPT09IHR5cGVvZiBiICYmIG51bGwgIT09IGIpIHtcbiAgICAgIHN3aXRjaCAoYi4kJHR5cGVvZikge1xuICAgICAgICBjYXNlIFphOlxuICAgICAgICAgIHJldHVybiBjID0gVWcoYi50eXBlLCBiLmtleSwgYi5wcm9wcywgbnVsbCwgYS5tb2RlLCBjKSwgYy5yZWYgPSBQZyhhLCBudWxsLCBiKSwgYy5yZXR1cm4gPSBhLCBjO1xuXG4gICAgICAgIGNhc2UgJGE6XG4gICAgICAgICAgcmV0dXJuIGIgPSBWZyhiLCBhLm1vZGUsIGMpLCBiLnJldHVybiA9IGEsIGI7XG4gICAgICB9XG5cbiAgICAgIGlmIChPZyhiKSB8fCBuYihiKSkgcmV0dXJuIGIgPSBXZyhiLCBhLm1vZGUsIGMsIG51bGwpLCBiLnJldHVybiA9IGEsIGI7XG4gICAgICBRZyhhLCBiKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGZ1bmN0aW9uIHgoYSwgYiwgYywgZCkge1xuICAgIHZhciBlID0gbnVsbCAhPT0gYiA/IGIua2V5IDogbnVsbDtcbiAgICBpZiAoXCJzdHJpbmdcIiA9PT0gdHlwZW9mIGMgfHwgXCJudW1iZXJcIiA9PT0gdHlwZW9mIGMpIHJldHVybiBudWxsICE9PSBlID8gbnVsbCA6IGgoYSwgYiwgXCJcIiArIGMsIGQpO1xuXG4gICAgaWYgKFwib2JqZWN0XCIgPT09IHR5cGVvZiBjICYmIG51bGwgIT09IGMpIHtcbiAgICAgIHN3aXRjaCAoYy4kJHR5cGVvZikge1xuICAgICAgICBjYXNlIFphOlxuICAgICAgICAgIHJldHVybiBjLmtleSA9PT0gZSA/IGMudHlwZSA9PT0gYWIgPyBtKGEsIGIsIGMucHJvcHMuY2hpbGRyZW4sIGQsIGUpIDogayhhLCBiLCBjLCBkKSA6IG51bGw7XG5cbiAgICAgICAgY2FzZSAkYTpcbiAgICAgICAgICByZXR1cm4gYy5rZXkgPT09IGUgPyBsKGEsIGIsIGMsIGQpIDogbnVsbDtcbiAgICAgIH1cblxuICAgICAgaWYgKE9nKGMpIHx8IG5iKGMpKSByZXR1cm4gbnVsbCAhPT0gZSA/IG51bGwgOiBtKGEsIGIsIGMsIGQsIG51bGwpO1xuICAgICAgUWcoYSwgYyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBmdW5jdGlvbiB6KGEsIGIsIGMsIGQsIGUpIHtcbiAgICBpZiAoXCJzdHJpbmdcIiA9PT0gdHlwZW9mIGQgfHwgXCJudW1iZXJcIiA9PT0gdHlwZW9mIGQpIHJldHVybiBhID0gYS5nZXQoYykgfHwgbnVsbCwgaChiLCBhLCBcIlwiICsgZCwgZSk7XG5cbiAgICBpZiAoXCJvYmplY3RcIiA9PT0gdHlwZW9mIGQgJiYgbnVsbCAhPT0gZCkge1xuICAgICAgc3dpdGNoIChkLiQkdHlwZW9mKSB7XG4gICAgICAgIGNhc2UgWmE6XG4gICAgICAgICAgcmV0dXJuIGEgPSBhLmdldChudWxsID09PSBkLmtleSA/IGMgOiBkLmtleSkgfHwgbnVsbCwgZC50eXBlID09PSBhYiA/IG0oYiwgYSwgZC5wcm9wcy5jaGlsZHJlbiwgZSwgZC5rZXkpIDogayhiLCBhLCBkLCBlKTtcblxuICAgICAgICBjYXNlICRhOlxuICAgICAgICAgIHJldHVybiBhID0gYS5nZXQobnVsbCA9PT0gZC5rZXkgPyBjIDogZC5rZXkpIHx8IG51bGwsIGwoYiwgYSwgZCwgZSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChPZyhkKSB8fCBuYihkKSkgcmV0dXJuIGEgPSBhLmdldChjKSB8fCBudWxsLCBtKGIsIGEsIGQsIGUsIG51bGwpO1xuICAgICAgUWcoYiwgZCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBmdW5jdGlvbiBjYShlLCBnLCBoLCBrKSB7XG4gICAgZm9yICh2YXIgbCA9IG51bGwsIHQgPSBudWxsLCBtID0gZywgeSA9IGcgPSAwLCBBID0gbnVsbDsgbnVsbCAhPT0gbSAmJiB5IDwgaC5sZW5ndGg7IHkrKykge1xuICAgICAgbS5pbmRleCA+IHkgPyAoQSA9IG0sIG0gPSBudWxsKSA6IEEgPSBtLnNpYmxpbmc7XG4gICAgICB2YXIgcSA9IHgoZSwgbSwgaFt5XSwgayk7XG5cbiAgICAgIGlmIChudWxsID09PSBxKSB7XG4gICAgICAgIG51bGwgPT09IG0gJiYgKG0gPSBBKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG5cbiAgICAgIGEgJiYgbSAmJiBudWxsID09PSBxLmFsdGVybmF0ZSAmJiBiKGUsIG0pO1xuICAgICAgZyA9IGYocSwgZywgeSk7XG4gICAgICBudWxsID09PSB0ID8gbCA9IHEgOiB0LnNpYmxpbmcgPSBxO1xuICAgICAgdCA9IHE7XG4gICAgICBtID0gQTtcbiAgICB9XG5cbiAgICBpZiAoeSA9PT0gaC5sZW5ndGgpIHJldHVybiBjKGUsIG0pLCBsO1xuXG4gICAgaWYgKG51bGwgPT09IG0pIHtcbiAgICAgIGZvciAoOyB5IDwgaC5sZW5ndGg7IHkrKykge1xuICAgICAgICBtID0gcChlLCBoW3ldLCBrKSwgbnVsbCAhPT0gbSAmJiAoZyA9IGYobSwgZywgeSksIG51bGwgPT09IHQgPyBsID0gbSA6IHQuc2libGluZyA9IG0sIHQgPSBtKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGw7XG4gICAgfVxuXG4gICAgZm9yIChtID0gZChlLCBtKTsgeSA8IGgubGVuZ3RoOyB5KyspIHtcbiAgICAgIEEgPSB6KG0sIGUsIHksIGhbeV0sIGspLCBudWxsICE9PSBBICYmIChhICYmIG51bGwgIT09IEEuYWx0ZXJuYXRlICYmIG0uZGVsZXRlKG51bGwgPT09IEEua2V5ID8geSA6IEEua2V5KSwgZyA9IGYoQSwgZywgeSksIG51bGwgPT09IHQgPyBsID0gQSA6IHQuc2libGluZyA9IEEsIHQgPSBBKTtcbiAgICB9XG5cbiAgICBhICYmIG0uZm9yRWFjaChmdW5jdGlvbiAoYSkge1xuICAgICAgcmV0dXJuIGIoZSwgYSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGw7XG4gIH1cblxuICBmdW5jdGlvbiBEKGUsIGcsIGgsIGwpIHtcbiAgICB2YXIgayA9IG5iKGgpO1xuICAgIGlmIChcImZ1bmN0aW9uXCIgIT09IHR5cGVvZiBrKSB0aHJvdyBFcnJvcih1KDE1MCkpO1xuICAgIGggPSBrLmNhbGwoaCk7XG4gICAgaWYgKG51bGwgPT0gaCkgdGhyb3cgRXJyb3IodSgxNTEpKTtcblxuICAgIGZvciAodmFyIG0gPSBrID0gbnVsbCwgdCA9IGcsIHkgPSBnID0gMCwgQSA9IG51bGwsIHEgPSBoLm5leHQoKTsgbnVsbCAhPT0gdCAmJiAhcS5kb25lOyB5KyssIHEgPSBoLm5leHQoKSkge1xuICAgICAgdC5pbmRleCA+IHkgPyAoQSA9IHQsIHQgPSBudWxsKSA6IEEgPSB0LnNpYmxpbmc7XG4gICAgICB2YXIgRCA9IHgoZSwgdCwgcS52YWx1ZSwgbCk7XG5cbiAgICAgIGlmIChudWxsID09PSBEKSB7XG4gICAgICAgIG51bGwgPT09IHQgJiYgKHQgPSBBKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG5cbiAgICAgIGEgJiYgdCAmJiBudWxsID09PSBELmFsdGVybmF0ZSAmJiBiKGUsIHQpO1xuICAgICAgZyA9IGYoRCwgZywgeSk7XG4gICAgICBudWxsID09PSBtID8gayA9IEQgOiBtLnNpYmxpbmcgPSBEO1xuICAgICAgbSA9IEQ7XG4gICAgICB0ID0gQTtcbiAgICB9XG5cbiAgICBpZiAocS5kb25lKSByZXR1cm4gYyhlLCB0KSwgaztcblxuICAgIGlmIChudWxsID09PSB0KSB7XG4gICAgICBmb3IgKDsgIXEuZG9uZTsgeSsrLCBxID0gaC5uZXh0KCkpIHtcbiAgICAgICAgcSA9IHAoZSwgcS52YWx1ZSwgbCksIG51bGwgIT09IHEgJiYgKGcgPSBmKHEsIGcsIHkpLCBudWxsID09PSBtID8gayA9IHEgOiBtLnNpYmxpbmcgPSBxLCBtID0gcSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBrO1xuICAgIH1cblxuICAgIGZvciAodCA9IGQoZSwgdCk7ICFxLmRvbmU7IHkrKywgcSA9IGgubmV4dCgpKSB7XG4gICAgICBxID0geih0LCBlLCB5LCBxLnZhbHVlLCBsKSwgbnVsbCAhPT0gcSAmJiAoYSAmJiBudWxsICE9PSBxLmFsdGVybmF0ZSAmJiB0LmRlbGV0ZShudWxsID09PSBxLmtleSA/IHkgOiBxLmtleSksIGcgPSBmKHEsIGcsIHkpLCBudWxsID09PSBtID8gayA9IHEgOiBtLnNpYmxpbmcgPSBxLCBtID0gcSk7XG4gICAgfVxuXG4gICAgYSAmJiB0LmZvckVhY2goZnVuY3Rpb24gKGEpIHtcbiAgICAgIHJldHVybiBiKGUsIGEpO1xuICAgIH0pO1xuICAgIHJldHVybiBrO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChhLCBkLCBmLCBoKSB7XG4gICAgdmFyIGsgPSBcIm9iamVjdFwiID09PSB0eXBlb2YgZiAmJiBudWxsICE9PSBmICYmIGYudHlwZSA9PT0gYWIgJiYgbnVsbCA9PT0gZi5rZXk7XG4gICAgayAmJiAoZiA9IGYucHJvcHMuY2hpbGRyZW4pO1xuICAgIHZhciBsID0gXCJvYmplY3RcIiA9PT0gdHlwZW9mIGYgJiYgbnVsbCAhPT0gZjtcbiAgICBpZiAobCkgc3dpdGNoIChmLiQkdHlwZW9mKSB7XG4gICAgICBjYXNlIFphOlxuICAgICAgICBhOiB7XG4gICAgICAgICAgbCA9IGYua2V5O1xuXG4gICAgICAgICAgZm9yIChrID0gZDsgbnVsbCAhPT0gazspIHtcbiAgICAgICAgICAgIGlmIChrLmtleSA9PT0gbCkge1xuICAgICAgICAgICAgICBzd2l0Y2ggKGsudGFnKSB7XG4gICAgICAgICAgICAgICAgY2FzZSA3OlxuICAgICAgICAgICAgICAgICAgaWYgKGYudHlwZSA9PT0gYWIpIHtcbiAgICAgICAgICAgICAgICAgICAgYyhhLCBrLnNpYmxpbmcpO1xuICAgICAgICAgICAgICAgICAgICBkID0gZShrLCBmLnByb3BzLmNoaWxkcmVuKTtcbiAgICAgICAgICAgICAgICAgICAgZC5yZXR1cm4gPSBhO1xuICAgICAgICAgICAgICAgICAgICBhID0gZDtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWsgYTtcbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgaWYgKGsuZWxlbWVudFR5cGUgPT09IGYudHlwZSkge1xuICAgICAgICAgICAgICAgICAgICBjKGEsIGsuc2libGluZyk7XG4gICAgICAgICAgICAgICAgICAgIGQgPSBlKGssIGYucHJvcHMpO1xuICAgICAgICAgICAgICAgICAgICBkLnJlZiA9IFBnKGEsIGssIGYpO1xuICAgICAgICAgICAgICAgICAgICBkLnJldHVybiA9IGE7XG4gICAgICAgICAgICAgICAgICAgIGEgPSBkO1xuICAgICAgICAgICAgICAgICAgICBicmVhayBhO1xuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBjKGEsIGspO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH0gZWxzZSBiKGEsIGspO1xuXG4gICAgICAgICAgICBrID0gay5zaWJsaW5nO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGYudHlwZSA9PT0gYWIgPyAoZCA9IFdnKGYucHJvcHMuY2hpbGRyZW4sIGEubW9kZSwgaCwgZi5rZXkpLCBkLnJldHVybiA9IGEsIGEgPSBkKSA6IChoID0gVWcoZi50eXBlLCBmLmtleSwgZi5wcm9wcywgbnVsbCwgYS5tb2RlLCBoKSwgaC5yZWYgPSBQZyhhLCBkLCBmKSwgaC5yZXR1cm4gPSBhLCBhID0gaCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZyhhKTtcblxuICAgICAgY2FzZSAkYTpcbiAgICAgICAgYToge1xuICAgICAgICAgIGZvciAoayA9IGYua2V5OyBudWxsICE9PSBkOykge1xuICAgICAgICAgICAgaWYgKGQua2V5ID09PSBrKSB7XG4gICAgICAgICAgICAgIGlmICg0ID09PSBkLnRhZyAmJiBkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvID09PSBmLmNvbnRhaW5lckluZm8gJiYgZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24gPT09IGYuaW1wbGVtZW50YXRpb24pIHtcbiAgICAgICAgICAgICAgICBjKGEsIGQuc2libGluZyk7XG4gICAgICAgICAgICAgICAgZCA9IGUoZCwgZi5jaGlsZHJlbiB8fCBbXSk7XG4gICAgICAgICAgICAgICAgZC5yZXR1cm4gPSBhO1xuICAgICAgICAgICAgICAgIGEgPSBkO1xuICAgICAgICAgICAgICAgIGJyZWFrIGE7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgYyhhLCBkKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIGIoYSwgZCk7XG4gICAgICAgICAgICBkID0gZC5zaWJsaW5nO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGQgPSBWZyhmLCBhLm1vZGUsIGgpO1xuICAgICAgICAgIGQucmV0dXJuID0gYTtcbiAgICAgICAgICBhID0gZDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBnKGEpO1xuICAgIH1cbiAgICBpZiAoXCJzdHJpbmdcIiA9PT0gdHlwZW9mIGYgfHwgXCJudW1iZXJcIiA9PT0gdHlwZW9mIGYpIHJldHVybiBmID0gXCJcIiArIGYsIG51bGwgIT09IGQgJiYgNiA9PT0gZC50YWcgPyAoYyhhLCBkLnNpYmxpbmcpLCBkID0gZShkLCBmKSwgZC5yZXR1cm4gPSBhLCBhID0gZCkgOiAoYyhhLCBkKSwgZCA9IFRnKGYsIGEubW9kZSwgaCksIGQucmV0dXJuID0gYSwgYSA9IGQpLCBnKGEpO1xuICAgIGlmIChPZyhmKSkgcmV0dXJuIGNhKGEsIGQsIGYsIGgpO1xuICAgIGlmIChuYihmKSkgcmV0dXJuIEQoYSwgZCwgZiwgaCk7XG4gICAgbCAmJiBRZyhhLCBmKTtcbiAgICBpZiAoXCJ1bmRlZmluZWRcIiA9PT0gdHlwZW9mIGYgJiYgIWspIHN3aXRjaCAoYS50YWcpIHtcbiAgICAgIGNhc2UgMTpcbiAgICAgIGNhc2UgMDpcbiAgICAgICAgdGhyb3cgYSA9IGEudHlwZSwgRXJyb3IodSgxNTIsIGEuZGlzcGxheU5hbWUgfHwgYS5uYW1lIHx8IFwiQ29tcG9uZW50XCIpKTtcbiAgICB9XG4gICAgcmV0dXJuIGMoYSwgZCk7XG4gIH07XG59XG5cbnZhciBYZyA9IFJnKCEwKSxcbiAgICBZZyA9IFJnKCExKSxcbiAgICBaZyA9IHt9LFxuICAgICRnID0ge1xuICBjdXJyZW50OiBaZ1xufSxcbiAgICBhaCA9IHtcbiAgY3VycmVudDogWmdcbn0sXG4gICAgYmggPSB7XG4gIGN1cnJlbnQ6IFpnXG59O1xuXG5mdW5jdGlvbiBjaChhKSB7XG4gIGlmIChhID09PSBaZykgdGhyb3cgRXJyb3IodSgxNzQpKTtcbiAgcmV0dXJuIGE7XG59XG5cbmZ1bmN0aW9uIGRoKGEsIGIpIHtcbiAgSShiaCwgYik7XG4gIEkoYWgsIGEpO1xuICBJKCRnLCBaZyk7XG4gIGEgPSBiLm5vZGVUeXBlO1xuXG4gIHN3aXRjaCAoYSkge1xuICAgIGNhc2UgOTpcbiAgICBjYXNlIDExOlxuICAgICAgYiA9IChiID0gYi5kb2N1bWVudEVsZW1lbnQpID8gYi5uYW1lc3BhY2VVUkkgOiBPYihudWxsLCBcIlwiKTtcbiAgICAgIGJyZWFrO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIGEgPSA4ID09PSBhID8gYi5wYXJlbnROb2RlIDogYiwgYiA9IGEubmFtZXNwYWNlVVJJIHx8IG51bGwsIGEgPSBhLnRhZ05hbWUsIGIgPSBPYihiLCBhKTtcbiAgfVxuXG4gIEgoJGcpO1xuICBJKCRnLCBiKTtcbn1cblxuZnVuY3Rpb24gZWgoKSB7XG4gIEgoJGcpO1xuICBIKGFoKTtcbiAgSChiaCk7XG59XG5cbmZ1bmN0aW9uIGZoKGEpIHtcbiAgY2goYmguY3VycmVudCk7XG4gIHZhciBiID0gY2goJGcuY3VycmVudCk7XG4gIHZhciBjID0gT2IoYiwgYS50eXBlKTtcbiAgYiAhPT0gYyAmJiAoSShhaCwgYSksIEkoJGcsIGMpKTtcbn1cblxuZnVuY3Rpb24gZ2goYSkge1xuICBhaC5jdXJyZW50ID09PSBhICYmIChIKCRnKSwgSChhaCkpO1xufVxuXG52YXIgTSA9IHtcbiAgY3VycmVudDogMFxufTtcblxuZnVuY3Rpb24gaGgoYSkge1xuICBmb3IgKHZhciBiID0gYTsgbnVsbCAhPT0gYjspIHtcbiAgICBpZiAoMTMgPT09IGIudGFnKSB7XG4gICAgICB2YXIgYyA9IGIubWVtb2l6ZWRTdGF0ZTtcbiAgICAgIGlmIChudWxsICE9PSBjICYmIChjID0gYy5kZWh5ZHJhdGVkLCBudWxsID09PSBjIHx8IGMuZGF0YSA9PT0gQmQgfHwgYy5kYXRhID09PSBDZCkpIHJldHVybiBiO1xuICAgIH0gZWxzZSBpZiAoMTkgPT09IGIudGFnICYmIHZvaWQgMCAhPT0gYi5tZW1vaXplZFByb3BzLnJldmVhbE9yZGVyKSB7XG4gICAgICBpZiAoMCAhPT0gKGIuZWZmZWN0VGFnICYgNjQpKSByZXR1cm4gYjtcbiAgICB9IGVsc2UgaWYgKG51bGwgIT09IGIuY2hpbGQpIHtcbiAgICAgIGIuY2hpbGQucmV0dXJuID0gYjtcbiAgICAgIGIgPSBiLmNoaWxkO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgaWYgKGIgPT09IGEpIGJyZWFrO1xuXG4gICAgZm9yICg7IG51bGwgPT09IGIuc2libGluZzspIHtcbiAgICAgIGlmIChudWxsID09PSBiLnJldHVybiB8fCBiLnJldHVybiA9PT0gYSkgcmV0dXJuIG51bGw7XG4gICAgICBiID0gYi5yZXR1cm47XG4gICAgfVxuXG4gICAgYi5zaWJsaW5nLnJldHVybiA9IGIucmV0dXJuO1xuICAgIGIgPSBiLnNpYmxpbmc7XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn1cblxuZnVuY3Rpb24gaWgoYSwgYikge1xuICByZXR1cm4ge1xuICAgIHJlc3BvbmRlcjogYSxcbiAgICBwcm9wczogYlxuICB9O1xufVxuXG52YXIgamggPSBXYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLFxuICAgIGtoID0gV2EuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsXG4gICAgbGggPSAwLFxuICAgIE4gPSBudWxsLFxuICAgIE8gPSBudWxsLFxuICAgIFAgPSBudWxsLFxuICAgIG1oID0gITE7XG5cbmZ1bmN0aW9uIFEoKSB7XG4gIHRocm93IEVycm9yKHUoMzIxKSk7XG59XG5cbmZ1bmN0aW9uIG5oKGEsIGIpIHtcbiAgaWYgKG51bGwgPT09IGIpIHJldHVybiAhMTtcblxuICBmb3IgKHZhciBjID0gMDsgYyA8IGIubGVuZ3RoICYmIGMgPCBhLmxlbmd0aDsgYysrKSB7XG4gICAgaWYgKCEkZShhW2NdLCBiW2NdKSkgcmV0dXJuICExO1xuICB9XG5cbiAgcmV0dXJuICEwO1xufVxuXG5mdW5jdGlvbiBvaChhLCBiLCBjLCBkLCBlLCBmKSB7XG4gIGxoID0gZjtcbiAgTiA9IGI7XG4gIGIubWVtb2l6ZWRTdGF0ZSA9IG51bGw7XG4gIGIudXBkYXRlUXVldWUgPSBudWxsO1xuICBiLmV4cGlyYXRpb25UaW1lID0gMDtcbiAgamguY3VycmVudCA9IG51bGwgPT09IGEgfHwgbnVsbCA9PT0gYS5tZW1vaXplZFN0YXRlID8gcGggOiBxaDtcbiAgYSA9IGMoZCwgZSk7XG5cbiAgaWYgKGIuZXhwaXJhdGlvblRpbWUgPT09IGxoKSB7XG4gICAgZiA9IDA7XG5cbiAgICBkbyB7XG4gICAgICBiLmV4cGlyYXRpb25UaW1lID0gMDtcbiAgICAgIGlmICghKDI1ID4gZikpIHRocm93IEVycm9yKHUoMzAxKSk7XG4gICAgICBmICs9IDE7XG4gICAgICBQID0gTyA9IG51bGw7XG4gICAgICBiLnVwZGF0ZVF1ZXVlID0gbnVsbDtcbiAgICAgIGpoLmN1cnJlbnQgPSByaDtcbiAgICAgIGEgPSBjKGQsIGUpO1xuICAgIH0gd2hpbGUgKGIuZXhwaXJhdGlvblRpbWUgPT09IGxoKTtcbiAgfVxuXG4gIGpoLmN1cnJlbnQgPSBzaDtcbiAgYiA9IG51bGwgIT09IE8gJiYgbnVsbCAhPT0gTy5uZXh0O1xuICBsaCA9IDA7XG4gIFAgPSBPID0gTiA9IG51bGw7XG4gIG1oID0gITE7XG4gIGlmIChiKSB0aHJvdyBFcnJvcih1KDMwMCkpO1xuICByZXR1cm4gYTtcbn1cblxuZnVuY3Rpb24gdGgoKSB7XG4gIHZhciBhID0ge1xuICAgIG1lbW9pemVkU3RhdGU6IG51bGwsXG4gICAgYmFzZVN0YXRlOiBudWxsLFxuICAgIGJhc2VRdWV1ZTogbnVsbCxcbiAgICBxdWV1ZTogbnVsbCxcbiAgICBuZXh0OiBudWxsXG4gIH07XG4gIG51bGwgPT09IFAgPyBOLm1lbW9pemVkU3RhdGUgPSBQID0gYSA6IFAgPSBQLm5leHQgPSBhO1xuICByZXR1cm4gUDtcbn1cblxuZnVuY3Rpb24gdWgoKSB7XG4gIGlmIChudWxsID09PSBPKSB7XG4gICAgdmFyIGEgPSBOLmFsdGVybmF0ZTtcbiAgICBhID0gbnVsbCAhPT0gYSA/IGEubWVtb2l6ZWRTdGF0ZSA6IG51bGw7XG4gIH0gZWxzZSBhID0gTy5uZXh0O1xuXG4gIHZhciBiID0gbnVsbCA9PT0gUCA/IE4ubWVtb2l6ZWRTdGF0ZSA6IFAubmV4dDtcbiAgaWYgKG51bGwgIT09IGIpIFAgPSBiLCBPID0gYTtlbHNlIHtcbiAgICBpZiAobnVsbCA9PT0gYSkgdGhyb3cgRXJyb3IodSgzMTApKTtcbiAgICBPID0gYTtcbiAgICBhID0ge1xuICAgICAgbWVtb2l6ZWRTdGF0ZTogTy5tZW1vaXplZFN0YXRlLFxuICAgICAgYmFzZVN0YXRlOiBPLmJhc2VTdGF0ZSxcbiAgICAgIGJhc2VRdWV1ZTogTy5iYXNlUXVldWUsXG4gICAgICBxdWV1ZTogTy5xdWV1ZSxcbiAgICAgIG5leHQ6IG51bGxcbiAgICB9O1xuICAgIG51bGwgPT09IFAgPyBOLm1lbW9pemVkU3RhdGUgPSBQID0gYSA6IFAgPSBQLm5leHQgPSBhO1xuICB9XG4gIHJldHVybiBQO1xufVxuXG5mdW5jdGlvbiB2aChhLCBiKSB7XG4gIHJldHVybiBcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBiID8gYihhKSA6IGI7XG59XG5cbmZ1bmN0aW9uIHdoKGEpIHtcbiAgdmFyIGIgPSB1aCgpLFxuICAgICAgYyA9IGIucXVldWU7XG4gIGlmIChudWxsID09PSBjKSB0aHJvdyBFcnJvcih1KDMxMSkpO1xuICBjLmxhc3RSZW5kZXJlZFJlZHVjZXIgPSBhO1xuICB2YXIgZCA9IE8sXG4gICAgICBlID0gZC5iYXNlUXVldWUsXG4gICAgICBmID0gYy5wZW5kaW5nO1xuXG4gIGlmIChudWxsICE9PSBmKSB7XG4gICAgaWYgKG51bGwgIT09IGUpIHtcbiAgICAgIHZhciBnID0gZS5uZXh0O1xuICAgICAgZS5uZXh0ID0gZi5uZXh0O1xuICAgICAgZi5uZXh0ID0gZztcbiAgICB9XG5cbiAgICBkLmJhc2VRdWV1ZSA9IGUgPSBmO1xuICAgIGMucGVuZGluZyA9IG51bGw7XG4gIH1cblxuICBpZiAobnVsbCAhPT0gZSkge1xuICAgIGUgPSBlLm5leHQ7XG4gICAgZCA9IGQuYmFzZVN0YXRlO1xuICAgIHZhciBoID0gZyA9IGYgPSBudWxsLFxuICAgICAgICBrID0gZTtcblxuICAgIGRvIHtcbiAgICAgIHZhciBsID0gay5leHBpcmF0aW9uVGltZTtcblxuICAgICAgaWYgKGwgPCBsaCkge1xuICAgICAgICB2YXIgbSA9IHtcbiAgICAgICAgICBleHBpcmF0aW9uVGltZTogay5leHBpcmF0aW9uVGltZSxcbiAgICAgICAgICBzdXNwZW5zZUNvbmZpZzogay5zdXNwZW5zZUNvbmZpZyxcbiAgICAgICAgICBhY3Rpb246IGsuYWN0aW9uLFxuICAgICAgICAgIGVhZ2VyUmVkdWNlcjogay5lYWdlclJlZHVjZXIsXG4gICAgICAgICAgZWFnZXJTdGF0ZTogay5lYWdlclN0YXRlLFxuICAgICAgICAgIG5leHQ6IG51bGxcbiAgICAgICAgfTtcbiAgICAgICAgbnVsbCA9PT0gaCA/IChnID0gaCA9IG0sIGYgPSBkKSA6IGggPSBoLm5leHQgPSBtO1xuICAgICAgICBsID4gTi5leHBpcmF0aW9uVGltZSAmJiAoTi5leHBpcmF0aW9uVGltZSA9IGwsIEJnKGwpKTtcbiAgICAgIH0gZWxzZSBudWxsICE9PSBoICYmIChoID0gaC5uZXh0ID0ge1xuICAgICAgICBleHBpcmF0aW9uVGltZTogMTA3Mzc0MTgyMyxcbiAgICAgICAgc3VzcGVuc2VDb25maWc6IGsuc3VzcGVuc2VDb25maWcsXG4gICAgICAgIGFjdGlvbjogay5hY3Rpb24sXG4gICAgICAgIGVhZ2VyUmVkdWNlcjogay5lYWdlclJlZHVjZXIsXG4gICAgICAgIGVhZ2VyU3RhdGU6IGsuZWFnZXJTdGF0ZSxcbiAgICAgICAgbmV4dDogbnVsbFxuICAgICAgfSksIEFnKGwsIGsuc3VzcGVuc2VDb25maWcpLCBkID0gay5lYWdlclJlZHVjZXIgPT09IGEgPyBrLmVhZ2VyU3RhdGUgOiBhKGQsIGsuYWN0aW9uKTtcblxuICAgICAgayA9IGsubmV4dDtcbiAgICB9IHdoaWxlIChudWxsICE9PSBrICYmIGsgIT09IGUpO1xuXG4gICAgbnVsbCA9PT0gaCA/IGYgPSBkIDogaC5uZXh0ID0gZztcbiAgICAkZShkLCBiLm1lbW9pemVkU3RhdGUpIHx8IChyZyA9ICEwKTtcbiAgICBiLm1lbW9pemVkU3RhdGUgPSBkO1xuICAgIGIuYmFzZVN0YXRlID0gZjtcbiAgICBiLmJhc2VRdWV1ZSA9IGg7XG4gICAgYy5sYXN0UmVuZGVyZWRTdGF0ZSA9IGQ7XG4gIH1cblxuICByZXR1cm4gW2IubWVtb2l6ZWRTdGF0ZSwgYy5kaXNwYXRjaF07XG59XG5cbmZ1bmN0aW9uIHhoKGEpIHtcbiAgdmFyIGIgPSB1aCgpLFxuICAgICAgYyA9IGIucXVldWU7XG4gIGlmIChudWxsID09PSBjKSB0aHJvdyBFcnJvcih1KDMxMSkpO1xuICBjLmxhc3RSZW5kZXJlZFJlZHVjZXIgPSBhO1xuICB2YXIgZCA9IGMuZGlzcGF0Y2gsXG4gICAgICBlID0gYy5wZW5kaW5nLFxuICAgICAgZiA9IGIubWVtb2l6ZWRTdGF0ZTtcblxuICBpZiAobnVsbCAhPT0gZSkge1xuICAgIGMucGVuZGluZyA9IG51bGw7XG4gICAgdmFyIGcgPSBlID0gZS5uZXh0O1xuXG4gICAgZG8ge1xuICAgICAgZiA9IGEoZiwgZy5hY3Rpb24pLCBnID0gZy5uZXh0O1xuICAgIH0gd2hpbGUgKGcgIT09IGUpO1xuXG4gICAgJGUoZiwgYi5tZW1vaXplZFN0YXRlKSB8fCAocmcgPSAhMCk7XG4gICAgYi5tZW1vaXplZFN0YXRlID0gZjtcbiAgICBudWxsID09PSBiLmJhc2VRdWV1ZSAmJiAoYi5iYXNlU3RhdGUgPSBmKTtcbiAgICBjLmxhc3RSZW5kZXJlZFN0YXRlID0gZjtcbiAgfVxuXG4gIHJldHVybiBbZiwgZF07XG59XG5cbmZ1bmN0aW9uIHloKGEpIHtcbiAgdmFyIGIgPSB0aCgpO1xuICBcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBhICYmIChhID0gYSgpKTtcbiAgYi5tZW1vaXplZFN0YXRlID0gYi5iYXNlU3RhdGUgPSBhO1xuICBhID0gYi5xdWV1ZSA9IHtcbiAgICBwZW5kaW5nOiBudWxsLFxuICAgIGRpc3BhdGNoOiBudWxsLFxuICAgIGxhc3RSZW5kZXJlZFJlZHVjZXI6IHZoLFxuICAgIGxhc3RSZW5kZXJlZFN0YXRlOiBhXG4gIH07XG4gIGEgPSBhLmRpc3BhdGNoID0gemguYmluZChudWxsLCBOLCBhKTtcbiAgcmV0dXJuIFtiLm1lbW9pemVkU3RhdGUsIGFdO1xufVxuXG5mdW5jdGlvbiBBaChhLCBiLCBjLCBkKSB7XG4gIGEgPSB7XG4gICAgdGFnOiBhLFxuICAgIGNyZWF0ZTogYixcbiAgICBkZXN0cm95OiBjLFxuICAgIGRlcHM6IGQsXG4gICAgbmV4dDogbnVsbFxuICB9O1xuICBiID0gTi51cGRhdGVRdWV1ZTtcbiAgbnVsbCA9PT0gYiA/IChiID0ge1xuICAgIGxhc3RFZmZlY3Q6IG51bGxcbiAgfSwgTi51cGRhdGVRdWV1ZSA9IGIsIGIubGFzdEVmZmVjdCA9IGEubmV4dCA9IGEpIDogKGMgPSBiLmxhc3RFZmZlY3QsIG51bGwgPT09IGMgPyBiLmxhc3RFZmZlY3QgPSBhLm5leHQgPSBhIDogKGQgPSBjLm5leHQsIGMubmV4dCA9IGEsIGEubmV4dCA9IGQsIGIubGFzdEVmZmVjdCA9IGEpKTtcbiAgcmV0dXJuIGE7XG59XG5cbmZ1bmN0aW9uIEJoKCkge1xuICByZXR1cm4gdWgoKS5tZW1vaXplZFN0YXRlO1xufVxuXG5mdW5jdGlvbiBDaChhLCBiLCBjLCBkKSB7XG4gIHZhciBlID0gdGgoKTtcbiAgTi5lZmZlY3RUYWcgfD0gYTtcbiAgZS5tZW1vaXplZFN0YXRlID0gQWgoMSB8IGIsIGMsIHZvaWQgMCwgdm9pZCAwID09PSBkID8gbnVsbCA6IGQpO1xufVxuXG5mdW5jdGlvbiBEaChhLCBiLCBjLCBkKSB7XG4gIHZhciBlID0gdWgoKTtcbiAgZCA9IHZvaWQgMCA9PT0gZCA/IG51bGwgOiBkO1xuICB2YXIgZiA9IHZvaWQgMDtcblxuICBpZiAobnVsbCAhPT0gTykge1xuICAgIHZhciBnID0gTy5tZW1vaXplZFN0YXRlO1xuICAgIGYgPSBnLmRlc3Ryb3k7XG5cbiAgICBpZiAobnVsbCAhPT0gZCAmJiBuaChkLCBnLmRlcHMpKSB7XG4gICAgICBBaChiLCBjLCBmLCBkKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gIH1cblxuICBOLmVmZmVjdFRhZyB8PSBhO1xuICBlLm1lbW9pemVkU3RhdGUgPSBBaCgxIHwgYiwgYywgZiwgZCk7XG59XG5cbmZ1bmN0aW9uIEVoKGEsIGIpIHtcbiAgcmV0dXJuIENoKDUxNiwgNCwgYSwgYik7XG59XG5cbmZ1bmN0aW9uIEZoKGEsIGIpIHtcbiAgcmV0dXJuIERoKDUxNiwgNCwgYSwgYik7XG59XG5cbmZ1bmN0aW9uIEdoKGEsIGIpIHtcbiAgcmV0dXJuIERoKDQsIDIsIGEsIGIpO1xufVxuXG5mdW5jdGlvbiBIaChhLCBiKSB7XG4gIGlmIChcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBiKSByZXR1cm4gYSA9IGEoKSwgYihhKSwgZnVuY3Rpb24gKCkge1xuICAgIGIobnVsbCk7XG4gIH07XG4gIGlmIChudWxsICE9PSBiICYmIHZvaWQgMCAhPT0gYikgcmV0dXJuIGEgPSBhKCksIGIuY3VycmVudCA9IGEsIGZ1bmN0aW9uICgpIHtcbiAgICBiLmN1cnJlbnQgPSBudWxsO1xuICB9O1xufVxuXG5mdW5jdGlvbiBJaChhLCBiLCBjKSB7XG4gIGMgPSBudWxsICE9PSBjICYmIHZvaWQgMCAhPT0gYyA/IGMuY29uY2F0KFthXSkgOiBudWxsO1xuICByZXR1cm4gRGgoNCwgMiwgSGguYmluZChudWxsLCBiLCBhKSwgYyk7XG59XG5cbmZ1bmN0aW9uIEpoKCkge31cblxuZnVuY3Rpb24gS2goYSwgYikge1xuICB0aCgpLm1lbW9pemVkU3RhdGUgPSBbYSwgdm9pZCAwID09PSBiID8gbnVsbCA6IGJdO1xuICByZXR1cm4gYTtcbn1cblxuZnVuY3Rpb24gTGgoYSwgYikge1xuICB2YXIgYyA9IHVoKCk7XG4gIGIgPSB2b2lkIDAgPT09IGIgPyBudWxsIDogYjtcbiAgdmFyIGQgPSBjLm1lbW9pemVkU3RhdGU7XG4gIGlmIChudWxsICE9PSBkICYmIG51bGwgIT09IGIgJiYgbmgoYiwgZFsxXSkpIHJldHVybiBkWzBdO1xuICBjLm1lbW9pemVkU3RhdGUgPSBbYSwgYl07XG4gIHJldHVybiBhO1xufVxuXG5mdW5jdGlvbiBNaChhLCBiKSB7XG4gIHZhciBjID0gdWgoKTtcbiAgYiA9IHZvaWQgMCA9PT0gYiA/IG51bGwgOiBiO1xuICB2YXIgZCA9IGMubWVtb2l6ZWRTdGF0ZTtcbiAgaWYgKG51bGwgIT09IGQgJiYgbnVsbCAhPT0gYiAmJiBuaChiLCBkWzFdKSkgcmV0dXJuIGRbMF07XG4gIGEgPSBhKCk7XG4gIGMubWVtb2l6ZWRTdGF0ZSA9IFthLCBiXTtcbiAgcmV0dXJuIGE7XG59XG5cbmZ1bmN0aW9uIE5oKGEsIGIsIGMpIHtcbiAgdmFyIGQgPSBhZygpO1xuICBjZyg5OCA+IGQgPyA5OCA6IGQsIGZ1bmN0aW9uICgpIHtcbiAgICBhKCEwKTtcbiAgfSk7XG4gIGNnKDk3IDwgZCA/IDk3IDogZCwgZnVuY3Rpb24gKCkge1xuICAgIHZhciBkID0ga2guc3VzcGVuc2U7XG4gICAga2guc3VzcGVuc2UgPSB2b2lkIDAgPT09IGIgPyBudWxsIDogYjtcblxuICAgIHRyeSB7XG4gICAgICBhKCExKSwgYygpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBraC5zdXNwZW5zZSA9IGQ7XG4gICAgfVxuICB9KTtcbn1cblxuZnVuY3Rpb24gemgoYSwgYiwgYykge1xuICB2YXIgZCA9IEdnKCksXG4gICAgICBlID0gRGcuc3VzcGVuc2U7XG4gIGQgPSBIZyhkLCBhLCBlKTtcbiAgZSA9IHtcbiAgICBleHBpcmF0aW9uVGltZTogZCxcbiAgICBzdXNwZW5zZUNvbmZpZzogZSxcbiAgICBhY3Rpb246IGMsXG4gICAgZWFnZXJSZWR1Y2VyOiBudWxsLFxuICAgIGVhZ2VyU3RhdGU6IG51bGwsXG4gICAgbmV4dDogbnVsbFxuICB9O1xuICB2YXIgZiA9IGIucGVuZGluZztcbiAgbnVsbCA9PT0gZiA/IGUubmV4dCA9IGUgOiAoZS5uZXh0ID0gZi5uZXh0LCBmLm5leHQgPSBlKTtcbiAgYi5wZW5kaW5nID0gZTtcbiAgZiA9IGEuYWx0ZXJuYXRlO1xuICBpZiAoYSA9PT0gTiB8fCBudWxsICE9PSBmICYmIGYgPT09IE4pIG1oID0gITAsIGUuZXhwaXJhdGlvblRpbWUgPSBsaCwgTi5leHBpcmF0aW9uVGltZSA9IGxoO2Vsc2Uge1xuICAgIGlmICgwID09PSBhLmV4cGlyYXRpb25UaW1lICYmIChudWxsID09PSBmIHx8IDAgPT09IGYuZXhwaXJhdGlvblRpbWUpICYmIChmID0gYi5sYXN0UmVuZGVyZWRSZWR1Y2VyLCBudWxsICE9PSBmKSkgdHJ5IHtcbiAgICAgIHZhciBnID0gYi5sYXN0UmVuZGVyZWRTdGF0ZSxcbiAgICAgICAgICBoID0gZihnLCBjKTtcbiAgICAgIGUuZWFnZXJSZWR1Y2VyID0gZjtcbiAgICAgIGUuZWFnZXJTdGF0ZSA9IGg7XG4gICAgICBpZiAoJGUoaCwgZykpIHJldHVybjtcbiAgICB9IGNhdGNoIChrKSB7fSBmaW5hbGx5IHt9XG4gICAgSWcoYSwgZCk7XG4gIH1cbn1cblxudmFyIHNoID0ge1xuICByZWFkQ29udGV4dDogc2csXG4gIHVzZUNhbGxiYWNrOiBRLFxuICB1c2VDb250ZXh0OiBRLFxuICB1c2VFZmZlY3Q6IFEsXG4gIHVzZUltcGVyYXRpdmVIYW5kbGU6IFEsXG4gIHVzZUxheW91dEVmZmVjdDogUSxcbiAgdXNlTWVtbzogUSxcbiAgdXNlUmVkdWNlcjogUSxcbiAgdXNlUmVmOiBRLFxuICB1c2VTdGF0ZTogUSxcbiAgdXNlRGVidWdWYWx1ZTogUSxcbiAgdXNlUmVzcG9uZGVyOiBRLFxuICB1c2VEZWZlcnJlZFZhbHVlOiBRLFxuICB1c2VUcmFuc2l0aW9uOiBRXG59LFxuICAgIHBoID0ge1xuICByZWFkQ29udGV4dDogc2csXG4gIHVzZUNhbGxiYWNrOiBLaCxcbiAgdXNlQ29udGV4dDogc2csXG4gIHVzZUVmZmVjdDogRWgsXG4gIHVzZUltcGVyYXRpdmVIYW5kbGU6IGZ1bmN0aW9uIHVzZUltcGVyYXRpdmVIYW5kbGUoYSwgYiwgYykge1xuICAgIGMgPSBudWxsICE9PSBjICYmIHZvaWQgMCAhPT0gYyA/IGMuY29uY2F0KFthXSkgOiBudWxsO1xuICAgIHJldHVybiBDaCg0LCAyLCBIaC5iaW5kKG51bGwsIGIsIGEpLCBjKTtcbiAgfSxcbiAgdXNlTGF5b3V0RWZmZWN0OiBmdW5jdGlvbiB1c2VMYXlvdXRFZmZlY3QoYSwgYikge1xuICAgIHJldHVybiBDaCg0LCAyLCBhLCBiKTtcbiAgfSxcbiAgdXNlTWVtbzogZnVuY3Rpb24gdXNlTWVtbyhhLCBiKSB7XG4gICAgdmFyIGMgPSB0aCgpO1xuICAgIGIgPSB2b2lkIDAgPT09IGIgPyBudWxsIDogYjtcbiAgICBhID0gYSgpO1xuICAgIGMubWVtb2l6ZWRTdGF0ZSA9IFthLCBiXTtcbiAgICByZXR1cm4gYTtcbiAgfSxcbiAgdXNlUmVkdWNlcjogZnVuY3Rpb24gdXNlUmVkdWNlcihhLCBiLCBjKSB7XG4gICAgdmFyIGQgPSB0aCgpO1xuICAgIGIgPSB2b2lkIDAgIT09IGMgPyBjKGIpIDogYjtcbiAgICBkLm1lbW9pemVkU3RhdGUgPSBkLmJhc2VTdGF0ZSA9IGI7XG4gICAgYSA9IGQucXVldWUgPSB7XG4gICAgICBwZW5kaW5nOiBudWxsLFxuICAgICAgZGlzcGF0Y2g6IG51bGwsXG4gICAgICBsYXN0UmVuZGVyZWRSZWR1Y2VyOiBhLFxuICAgICAgbGFzdFJlbmRlcmVkU3RhdGU6IGJcbiAgICB9O1xuICAgIGEgPSBhLmRpc3BhdGNoID0gemguYmluZChudWxsLCBOLCBhKTtcbiAgICByZXR1cm4gW2QubWVtb2l6ZWRTdGF0ZSwgYV07XG4gIH0sXG4gIHVzZVJlZjogZnVuY3Rpb24gdXNlUmVmKGEpIHtcbiAgICB2YXIgYiA9IHRoKCk7XG4gICAgYSA9IHtcbiAgICAgIGN1cnJlbnQ6IGFcbiAgICB9O1xuICAgIHJldHVybiBiLm1lbW9pemVkU3RhdGUgPSBhO1xuICB9LFxuICB1c2VTdGF0ZTogeWgsXG4gIHVzZURlYnVnVmFsdWU6IEpoLFxuICB1c2VSZXNwb25kZXI6IGloLFxuICB1c2VEZWZlcnJlZFZhbHVlOiBmdW5jdGlvbiB1c2VEZWZlcnJlZFZhbHVlKGEsIGIpIHtcbiAgICB2YXIgYyA9IHloKGEpLFxuICAgICAgICBkID0gY1swXSxcbiAgICAgICAgZSA9IGNbMV07XG4gICAgRWgoZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGMgPSBraC5zdXNwZW5zZTtcbiAgICAgIGtoLnN1c3BlbnNlID0gdm9pZCAwID09PSBiID8gbnVsbCA6IGI7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGUoYSk7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICBraC5zdXNwZW5zZSA9IGM7XG4gICAgICB9XG4gICAgfSwgW2EsIGJdKTtcbiAgICByZXR1cm4gZDtcbiAgfSxcbiAgdXNlVHJhbnNpdGlvbjogZnVuY3Rpb24gdXNlVHJhbnNpdGlvbihhKSB7XG4gICAgdmFyIGIgPSB5aCghMSksXG4gICAgICAgIGMgPSBiWzBdO1xuICAgIGIgPSBiWzFdO1xuICAgIHJldHVybiBbS2goTmguYmluZChudWxsLCBiLCBhKSwgW2IsIGFdKSwgY107XG4gIH1cbn0sXG4gICAgcWggPSB7XG4gIHJlYWRDb250ZXh0OiBzZyxcbiAgdXNlQ2FsbGJhY2s6IExoLFxuICB1c2VDb250ZXh0OiBzZyxcbiAgdXNlRWZmZWN0OiBGaCxcbiAgdXNlSW1wZXJhdGl2ZUhhbmRsZTogSWgsXG4gIHVzZUxheW91dEVmZmVjdDogR2gsXG4gIHVzZU1lbW86IE1oLFxuICB1c2VSZWR1Y2VyOiB3aCxcbiAgdXNlUmVmOiBCaCxcbiAgdXNlU3RhdGU6IGZ1bmN0aW9uIHVzZVN0YXRlKCkge1xuICAgIHJldHVybiB3aCh2aCk7XG4gIH0sXG4gIHVzZURlYnVnVmFsdWU6IEpoLFxuICB1c2VSZXNwb25kZXI6IGloLFxuICB1c2VEZWZlcnJlZFZhbHVlOiBmdW5jdGlvbiB1c2VEZWZlcnJlZFZhbHVlKGEsIGIpIHtcbiAgICB2YXIgYyA9IHdoKHZoKSxcbiAgICAgICAgZCA9IGNbMF0sXG4gICAgICAgIGUgPSBjWzFdO1xuICAgIEZoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBjID0ga2guc3VzcGVuc2U7XG4gICAgICBraC5zdXNwZW5zZSA9IHZvaWQgMCA9PT0gYiA/IG51bGwgOiBiO1xuXG4gICAgICB0cnkge1xuICAgICAgICBlKGEpO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAga2guc3VzcGVuc2UgPSBjO1xuICAgICAgfVxuICAgIH0sIFthLCBiXSk7XG4gICAgcmV0dXJuIGQ7XG4gIH0sXG4gIHVzZVRyYW5zaXRpb246IGZ1bmN0aW9uIHVzZVRyYW5zaXRpb24oYSkge1xuICAgIHZhciBiID0gd2godmgpLFxuICAgICAgICBjID0gYlswXTtcbiAgICBiID0gYlsxXTtcbiAgICByZXR1cm4gW0xoKE5oLmJpbmQobnVsbCwgYiwgYSksIFtiLCBhXSksIGNdO1xuICB9XG59LFxuICAgIHJoID0ge1xuICByZWFkQ29udGV4dDogc2csXG4gIHVzZUNhbGxiYWNrOiBMaCxcbiAgdXNlQ29udGV4dDogc2csXG4gIHVzZUVmZmVjdDogRmgsXG4gIHVzZUltcGVyYXRpdmVIYW5kbGU6IEloLFxuICB1c2VMYXlvdXRFZmZlY3Q6IEdoLFxuICB1c2VNZW1vOiBNaCxcbiAgdXNlUmVkdWNlcjogeGgsXG4gIHVzZVJlZjogQmgsXG4gIHVzZVN0YXRlOiBmdW5jdGlvbiB1c2VTdGF0ZSgpIHtcbiAgICByZXR1cm4geGgodmgpO1xuICB9LFxuICB1c2VEZWJ1Z1ZhbHVlOiBKaCxcbiAgdXNlUmVzcG9uZGVyOiBpaCxcbiAgdXNlRGVmZXJyZWRWYWx1ZTogZnVuY3Rpb24gdXNlRGVmZXJyZWRWYWx1ZShhLCBiKSB7XG4gICAgdmFyIGMgPSB4aCh2aCksXG4gICAgICAgIGQgPSBjWzBdLFxuICAgICAgICBlID0gY1sxXTtcbiAgICBGaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgYyA9IGtoLnN1c3BlbnNlO1xuICAgICAga2guc3VzcGVuc2UgPSB2b2lkIDAgPT09IGIgPyBudWxsIDogYjtcblxuICAgICAgdHJ5IHtcbiAgICAgICAgZShhKTtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIGtoLnN1c3BlbnNlID0gYztcbiAgICAgIH1cbiAgICB9LCBbYSwgYl0pO1xuICAgIHJldHVybiBkO1xuICB9LFxuICB1c2VUcmFuc2l0aW9uOiBmdW5jdGlvbiB1c2VUcmFuc2l0aW9uKGEpIHtcbiAgICB2YXIgYiA9IHhoKHZoKSxcbiAgICAgICAgYyA9IGJbMF07XG4gICAgYiA9IGJbMV07XG4gICAgcmV0dXJuIFtMaChOaC5iaW5kKG51bGwsIGIsIGEpLCBbYiwgYV0pLCBjXTtcbiAgfVxufSxcbiAgICBPaCA9IG51bGwsXG4gICAgUGggPSBudWxsLFxuICAgIFFoID0gITE7XG5cbmZ1bmN0aW9uIFJoKGEsIGIpIHtcbiAgdmFyIGMgPSBTaCg1LCBudWxsLCBudWxsLCAwKTtcbiAgYy5lbGVtZW50VHlwZSA9IFwiREVMRVRFRFwiO1xuICBjLnR5cGUgPSBcIkRFTEVURURcIjtcbiAgYy5zdGF0ZU5vZGUgPSBiO1xuICBjLnJldHVybiA9IGE7XG4gIGMuZWZmZWN0VGFnID0gODtcbiAgbnVsbCAhPT0gYS5sYXN0RWZmZWN0ID8gKGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0ID0gYywgYS5sYXN0RWZmZWN0ID0gYykgOiBhLmZpcnN0RWZmZWN0ID0gYS5sYXN0RWZmZWN0ID0gYztcbn1cblxuZnVuY3Rpb24gVGgoYSwgYikge1xuICBzd2l0Y2ggKGEudGFnKSB7XG4gICAgY2FzZSA1OlxuICAgICAgdmFyIGMgPSBhLnR5cGU7XG4gICAgICBiID0gMSAhPT0gYi5ub2RlVHlwZSB8fCBjLnRvTG93ZXJDYXNlKCkgIT09IGIubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA/IG51bGwgOiBiO1xuICAgICAgcmV0dXJuIG51bGwgIT09IGIgPyAoYS5zdGF0ZU5vZGUgPSBiLCAhMCkgOiAhMTtcblxuICAgIGNhc2UgNjpcbiAgICAgIHJldHVybiBiID0gXCJcIiA9PT0gYS5wZW5kaW5nUHJvcHMgfHwgMyAhPT0gYi5ub2RlVHlwZSA/IG51bGwgOiBiLCBudWxsICE9PSBiID8gKGEuc3RhdGVOb2RlID0gYiwgITApIDogITE7XG5cbiAgICBjYXNlIDEzOlxuICAgICAgcmV0dXJuICExO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiAhMTtcbiAgfVxufVxuXG5mdW5jdGlvbiBVaChhKSB7XG4gIGlmIChRaCkge1xuICAgIHZhciBiID0gUGg7XG5cbiAgICBpZiAoYikge1xuICAgICAgdmFyIGMgPSBiO1xuXG4gICAgICBpZiAoIVRoKGEsIGIpKSB7XG4gICAgICAgIGIgPSBKZChjLm5leHRTaWJsaW5nKTtcblxuICAgICAgICBpZiAoIWIgfHwgIVRoKGEsIGIpKSB7XG4gICAgICAgICAgYS5lZmZlY3RUYWcgPSBhLmVmZmVjdFRhZyAmIC0xMDI1IHwgMjtcbiAgICAgICAgICBRaCA9ICExO1xuICAgICAgICAgIE9oID0gYTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBSaChPaCwgYyk7XG4gICAgICB9XG5cbiAgICAgIE9oID0gYTtcbiAgICAgIFBoID0gSmQoYi5maXJzdENoaWxkKTtcbiAgICB9IGVsc2UgYS5lZmZlY3RUYWcgPSBhLmVmZmVjdFRhZyAmIC0xMDI1IHwgMiwgUWggPSAhMSwgT2ggPSBhO1xuICB9XG59XG5cbmZ1bmN0aW9uIFZoKGEpIHtcbiAgZm9yIChhID0gYS5yZXR1cm47IG51bGwgIT09IGEgJiYgNSAhPT0gYS50YWcgJiYgMyAhPT0gYS50YWcgJiYgMTMgIT09IGEudGFnOykge1xuICAgIGEgPSBhLnJldHVybjtcbiAgfVxuXG4gIE9oID0gYTtcbn1cblxuZnVuY3Rpb24gV2goYSkge1xuICBpZiAoYSAhPT0gT2gpIHJldHVybiAhMTtcbiAgaWYgKCFRaCkgcmV0dXJuIFZoKGEpLCBRaCA9ICEwLCAhMTtcbiAgdmFyIGIgPSBhLnR5cGU7XG4gIGlmICg1ICE9PSBhLnRhZyB8fCBcImhlYWRcIiAhPT0gYiAmJiBcImJvZHlcIiAhPT0gYiAmJiAhR2QoYiwgYS5tZW1vaXplZFByb3BzKSkgZm9yIChiID0gUGg7IGI7KSB7XG4gICAgUmgoYSwgYiksIGIgPSBKZChiLm5leHRTaWJsaW5nKTtcbiAgfVxuICBWaChhKTtcblxuICBpZiAoMTMgPT09IGEudGFnKSB7XG4gICAgYSA9IGEubWVtb2l6ZWRTdGF0ZTtcbiAgICBhID0gbnVsbCAhPT0gYSA/IGEuZGVoeWRyYXRlZCA6IG51bGw7XG4gICAgaWYgKCFhKSB0aHJvdyBFcnJvcih1KDMxNykpO1xuXG4gICAgYToge1xuICAgICAgYSA9IGEubmV4dFNpYmxpbmc7XG5cbiAgICAgIGZvciAoYiA9IDA7IGE7KSB7XG4gICAgICAgIGlmICg4ID09PSBhLm5vZGVUeXBlKSB7XG4gICAgICAgICAgdmFyIGMgPSBhLmRhdGE7XG5cbiAgICAgICAgICBpZiAoYyA9PT0gQWQpIHtcbiAgICAgICAgICAgIGlmICgwID09PSBiKSB7XG4gICAgICAgICAgICAgIFBoID0gSmQoYS5uZXh0U2libGluZyk7XG4gICAgICAgICAgICAgIGJyZWFrIGE7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGItLTtcbiAgICAgICAgICB9IGVsc2UgYyAhPT0gemQgJiYgYyAhPT0gQ2QgJiYgYyAhPT0gQmQgfHwgYisrO1xuICAgICAgICB9XG5cbiAgICAgICAgYSA9IGEubmV4dFNpYmxpbmc7XG4gICAgICB9XG5cbiAgICAgIFBoID0gbnVsbDtcbiAgICB9XG4gIH0gZWxzZSBQaCA9IE9oID8gSmQoYS5zdGF0ZU5vZGUubmV4dFNpYmxpbmcpIDogbnVsbDtcblxuICByZXR1cm4gITA7XG59XG5cbmZ1bmN0aW9uIFhoKCkge1xuICBQaCA9IE9oID0gbnVsbDtcbiAgUWggPSAhMTtcbn1cblxudmFyIFloID0gV2EuUmVhY3RDdXJyZW50T3duZXIsXG4gICAgcmcgPSAhMTtcblxuZnVuY3Rpb24gUihhLCBiLCBjLCBkKSB7XG4gIGIuY2hpbGQgPSBudWxsID09PSBhID8gWWcoYiwgbnVsbCwgYywgZCkgOiBYZyhiLCBhLmNoaWxkLCBjLCBkKTtcbn1cblxuZnVuY3Rpb24gWmgoYSwgYiwgYywgZCwgZSkge1xuICBjID0gYy5yZW5kZXI7XG4gIHZhciBmID0gYi5yZWY7XG4gIHFnKGIsIGUpO1xuICBkID0gb2goYSwgYiwgYywgZCwgZiwgZSk7XG4gIGlmIChudWxsICE9PSBhICYmICFyZykgcmV0dXJuIGIudXBkYXRlUXVldWUgPSBhLnVwZGF0ZVF1ZXVlLCBiLmVmZmVjdFRhZyAmPSAtNTE3LCBhLmV4cGlyYXRpb25UaW1lIDw9IGUgJiYgKGEuZXhwaXJhdGlvblRpbWUgPSAwKSwgJGgoYSwgYiwgZSk7XG4gIGIuZWZmZWN0VGFnIHw9IDE7XG4gIFIoYSwgYiwgZCwgZSk7XG4gIHJldHVybiBiLmNoaWxkO1xufVxuXG5mdW5jdGlvbiBhaShhLCBiLCBjLCBkLCBlLCBmKSB7XG4gIGlmIChudWxsID09PSBhKSB7XG4gICAgdmFyIGcgPSBjLnR5cGU7XG4gICAgaWYgKFwiZnVuY3Rpb25cIiA9PT0gdHlwZW9mIGcgJiYgIWJpKGcpICYmIHZvaWQgMCA9PT0gZy5kZWZhdWx0UHJvcHMgJiYgbnVsbCA9PT0gYy5jb21wYXJlICYmIHZvaWQgMCA9PT0gYy5kZWZhdWx0UHJvcHMpIHJldHVybiBiLnRhZyA9IDE1LCBiLnR5cGUgPSBnLCBjaShhLCBiLCBnLCBkLCBlLCBmKTtcbiAgICBhID0gVWcoYy50eXBlLCBudWxsLCBkLCBudWxsLCBiLm1vZGUsIGYpO1xuICAgIGEucmVmID0gYi5yZWY7XG4gICAgYS5yZXR1cm4gPSBiO1xuICAgIHJldHVybiBiLmNoaWxkID0gYTtcbiAgfVxuXG4gIGcgPSBhLmNoaWxkO1xuICBpZiAoZSA8IGYgJiYgKGUgPSBnLm1lbW9pemVkUHJvcHMsIGMgPSBjLmNvbXBhcmUsIGMgPSBudWxsICE9PSBjID8gYyA6IGJmLCBjKGUsIGQpICYmIGEucmVmID09PSBiLnJlZikpIHJldHVybiAkaChhLCBiLCBmKTtcbiAgYi5lZmZlY3RUYWcgfD0gMTtcbiAgYSA9IFNnKGcsIGQpO1xuICBhLnJlZiA9IGIucmVmO1xuICBhLnJldHVybiA9IGI7XG4gIHJldHVybiBiLmNoaWxkID0gYTtcbn1cblxuZnVuY3Rpb24gY2koYSwgYiwgYywgZCwgZSwgZikge1xuICByZXR1cm4gbnVsbCAhPT0gYSAmJiBiZihhLm1lbW9pemVkUHJvcHMsIGQpICYmIGEucmVmID09PSBiLnJlZiAmJiAocmcgPSAhMSwgZSA8IGYpID8gKGIuZXhwaXJhdGlvblRpbWUgPSBhLmV4cGlyYXRpb25UaW1lLCAkaChhLCBiLCBmKSkgOiBkaShhLCBiLCBjLCBkLCBmKTtcbn1cblxuZnVuY3Rpb24gZWkoYSwgYikge1xuICB2YXIgYyA9IGIucmVmO1xuICBpZiAobnVsbCA9PT0gYSAmJiBudWxsICE9PSBjIHx8IG51bGwgIT09IGEgJiYgYS5yZWYgIT09IGMpIGIuZWZmZWN0VGFnIHw9IDEyODtcbn1cblxuZnVuY3Rpb24gZGkoYSwgYiwgYywgZCwgZSkge1xuICB2YXIgZiA9IEwoYykgPyBCZiA6IEouY3VycmVudDtcbiAgZiA9IENmKGIsIGYpO1xuICBxZyhiLCBlKTtcbiAgYyA9IG9oKGEsIGIsIGMsIGQsIGYsIGUpO1xuICBpZiAobnVsbCAhPT0gYSAmJiAhcmcpIHJldHVybiBiLnVwZGF0ZVF1ZXVlID0gYS51cGRhdGVRdWV1ZSwgYi5lZmZlY3RUYWcgJj0gLTUxNywgYS5leHBpcmF0aW9uVGltZSA8PSBlICYmIChhLmV4cGlyYXRpb25UaW1lID0gMCksICRoKGEsIGIsIGUpO1xuICBiLmVmZmVjdFRhZyB8PSAxO1xuICBSKGEsIGIsIGMsIGUpO1xuICByZXR1cm4gYi5jaGlsZDtcbn1cblxuZnVuY3Rpb24gZmkoYSwgYiwgYywgZCwgZSkge1xuICBpZiAoTChjKSkge1xuICAgIHZhciBmID0gITA7XG4gICAgR2YoYik7XG4gIH0gZWxzZSBmID0gITE7XG5cbiAgcWcoYiwgZSk7XG4gIGlmIChudWxsID09PSBiLnN0YXRlTm9kZSkgbnVsbCAhPT0gYSAmJiAoYS5hbHRlcm5hdGUgPSBudWxsLCBiLmFsdGVybmF0ZSA9IG51bGwsIGIuZWZmZWN0VGFnIHw9IDIpLCBMZyhiLCBjLCBkKSwgTmcoYiwgYywgZCwgZSksIGQgPSAhMDtlbHNlIGlmIChudWxsID09PSBhKSB7XG4gICAgdmFyIGcgPSBiLnN0YXRlTm9kZSxcbiAgICAgICAgaCA9IGIubWVtb2l6ZWRQcm9wcztcbiAgICBnLnByb3BzID0gaDtcbiAgICB2YXIgayA9IGcuY29udGV4dCxcbiAgICAgICAgbCA9IGMuY29udGV4dFR5cGU7XG4gICAgXCJvYmplY3RcIiA9PT0gdHlwZW9mIGwgJiYgbnVsbCAhPT0gbCA/IGwgPSBzZyhsKSA6IChsID0gTChjKSA/IEJmIDogSi5jdXJyZW50LCBsID0gQ2YoYiwgbCkpO1xuICAgIHZhciBtID0gYy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMsXG4gICAgICAgIHAgPSBcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBtIHx8IFwiZnVuY3Rpb25cIiA9PT0gdHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGU7XG4gICAgcCB8fCBcImZ1bmN0aW9uXCIgIT09IHR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzICYmIFwiZnVuY3Rpb25cIiAhPT0gdHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyB8fCAoaCAhPT0gZCB8fCBrICE9PSBsKSAmJiBNZyhiLCBnLCBkLCBsKTtcbiAgICB0ZyA9ICExO1xuICAgIHZhciB4ID0gYi5tZW1vaXplZFN0YXRlO1xuICAgIGcuc3RhdGUgPSB4O1xuICAgIHpnKGIsIGQsIGcsIGUpO1xuICAgIGsgPSBiLm1lbW9pemVkU3RhdGU7XG4gICAgaCAhPT0gZCB8fCB4ICE9PSBrIHx8IEsuY3VycmVudCB8fCB0ZyA/IChcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBtICYmIChGZyhiLCBjLCBtLCBkKSwgayA9IGIubWVtb2l6ZWRTdGF0ZSksIChoID0gdGcgfHwgS2coYiwgYywgaCwgZCwgeCwgaywgbCkpID8gKHAgfHwgXCJmdW5jdGlvblwiICE9PSB0eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50ICYmIFwiZnVuY3Rpb25cIiAhPT0gdHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50IHx8IChcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudCAmJiBnLmNvbXBvbmVudFdpbGxNb3VudCgpLCBcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQgJiYgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLCBcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50ICYmIChiLmVmZmVjdFRhZyB8PSA0KSkgOiAoXCJmdW5jdGlvblwiID09PSB0eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCAmJiAoYi5lZmZlY3RUYWcgfD0gNCksIGIubWVtb2l6ZWRQcm9wcyA9IGQsIGIubWVtb2l6ZWRTdGF0ZSA9IGspLCBnLnByb3BzID0gZCwgZy5zdGF0ZSA9IGssIGcuY29udGV4dCA9IGwsIGQgPSBoKSA6IChcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50ICYmIChiLmVmZmVjdFRhZyB8PSA0KSwgZCA9ICExKTtcbiAgfSBlbHNlIGcgPSBiLnN0YXRlTm9kZSwgdmcoYSwgYiksIGggPSBiLm1lbW9pemVkUHJvcHMsIGcucHJvcHMgPSBiLnR5cGUgPT09IGIuZWxlbWVudFR5cGUgPyBoIDogaWcoYi50eXBlLCBoKSwgayA9IGcuY29udGV4dCwgbCA9IGMuY29udGV4dFR5cGUsIFwib2JqZWN0XCIgPT09IHR5cGVvZiBsICYmIG51bGwgIT09IGwgPyBsID0gc2cobCkgOiAobCA9IEwoYykgPyBCZiA6IEouY3VycmVudCwgbCA9IENmKGIsIGwpKSwgbSA9IGMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLCAocCA9IFwiZnVuY3Rpb25cIiA9PT0gdHlwZW9mIG0gfHwgXCJmdW5jdGlvblwiID09PSB0eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSkgfHwgXCJmdW5jdGlvblwiICE9PSB0eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyAmJiBcImZ1bmN0aW9uXCIgIT09IHR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgfHwgKGggIT09IGQgfHwgayAhPT0gbCkgJiYgTWcoYiwgZywgZCwgbCksIHRnID0gITEsIGsgPSBiLm1lbW9pemVkU3RhdGUsIGcuc3RhdGUgPSBrLCB6ZyhiLCBkLCBnLCBlKSwgeCA9IGIubWVtb2l6ZWRTdGF0ZSwgaCAhPT0gZCB8fCBrICE9PSB4IHx8IEsuY3VycmVudCB8fCB0ZyA/IChcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBtICYmIChGZyhiLCBjLCBtLCBkKSwgeCA9IGIubWVtb2l6ZWRTdGF0ZSksIChtID0gdGcgfHwgS2coYiwgYywgaCwgZCwgaywgeCwgbCkpID8gKHAgfHwgXCJmdW5jdGlvblwiICE9PSB0eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSAmJiBcImZ1bmN0aW9uXCIgIT09IHR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGUgfHwgKFwiZnVuY3Rpb25cIiA9PT0gdHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSAmJiBnLmNvbXBvbmVudFdpbGxVcGRhdGUoZCwgeCwgbCksIFwiZnVuY3Rpb25cIiA9PT0gdHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUgJiYgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLCB4LCBsKSksIFwiZnVuY3Rpb25cIiA9PT0gdHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlICYmIChiLmVmZmVjdFRhZyB8PSA0KSwgXCJmdW5jdGlvblwiID09PSB0eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSAmJiAoYi5lZmZlY3RUYWcgfD0gMjU2KSkgOiAoXCJmdW5jdGlvblwiICE9PSB0eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUgfHwgaCA9PT0gYS5tZW1vaXplZFByb3BzICYmIGsgPT09IGEubWVtb2l6ZWRTdGF0ZSB8fCAoYi5lZmZlY3RUYWcgfD0gNCksIFwiZnVuY3Rpb25cIiAhPT0gdHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUgfHwgaCA9PT0gYS5tZW1vaXplZFByb3BzICYmIGsgPT09IGEubWVtb2l6ZWRTdGF0ZSB8fCAoYi5lZmZlY3RUYWcgfD0gMjU2KSwgYi5tZW1vaXplZFByb3BzID0gZCwgYi5tZW1vaXplZFN0YXRlID0geCksIGcucHJvcHMgPSBkLCBnLnN0YXRlID0geCwgZy5jb250ZXh0ID0gbCwgZCA9IG0pIDogKFwiZnVuY3Rpb25cIiAhPT0gdHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlIHx8IGggPT09IGEubWVtb2l6ZWRQcm9wcyAmJiBrID09PSBhLm1lbW9pemVkU3RhdGUgfHwgKGIuZWZmZWN0VGFnIHw9IDQpLCBcImZ1bmN0aW9uXCIgIT09IHR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlIHx8IGggPT09IGEubWVtb2l6ZWRQcm9wcyAmJiBrID09PSBhLm1lbW9pemVkU3RhdGUgfHwgKGIuZWZmZWN0VGFnIHw9IDI1NiksIGQgPSAhMSk7XG4gIHJldHVybiBnaShhLCBiLCBjLCBkLCBmLCBlKTtcbn1cblxuZnVuY3Rpb24gZ2koYSwgYiwgYywgZCwgZSwgZikge1xuICBlaShhLCBiKTtcbiAgdmFyIGcgPSAwICE9PSAoYi5lZmZlY3RUYWcgJiA2NCk7XG4gIGlmICghZCAmJiAhZykgcmV0dXJuIGUgJiYgSGYoYiwgYywgITEpLCAkaChhLCBiLCBmKTtcbiAgZCA9IGIuc3RhdGVOb2RlO1xuICBZaC5jdXJyZW50ID0gYjtcbiAgdmFyIGggPSBnICYmIFwiZnVuY3Rpb25cIiAhPT0gdHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yID8gbnVsbCA6IGQucmVuZGVyKCk7XG4gIGIuZWZmZWN0VGFnIHw9IDE7XG4gIG51bGwgIT09IGEgJiYgZyA/IChiLmNoaWxkID0gWGcoYiwgYS5jaGlsZCwgbnVsbCwgZiksIGIuY2hpbGQgPSBYZyhiLCBudWxsLCBoLCBmKSkgOiBSKGEsIGIsIGgsIGYpO1xuICBiLm1lbW9pemVkU3RhdGUgPSBkLnN0YXRlO1xuICBlICYmIEhmKGIsIGMsICEwKTtcbiAgcmV0dXJuIGIuY2hpbGQ7XG59XG5cbmZ1bmN0aW9uIGhpKGEpIHtcbiAgdmFyIGIgPSBhLnN0YXRlTm9kZTtcbiAgYi5wZW5kaW5nQ29udGV4dCA/IEVmKGEsIGIucGVuZGluZ0NvbnRleHQsIGIucGVuZGluZ0NvbnRleHQgIT09IGIuY29udGV4dCkgOiBiLmNvbnRleHQgJiYgRWYoYSwgYi5jb250ZXh0LCAhMSk7XG4gIGRoKGEsIGIuY29udGFpbmVySW5mbyk7XG59XG5cbnZhciBpaSA9IHtcbiAgZGVoeWRyYXRlZDogbnVsbCxcbiAgcmV0cnlUaW1lOiAwXG59O1xuXG5mdW5jdGlvbiBqaShhLCBiLCBjKSB7XG4gIHZhciBkID0gYi5tb2RlLFxuICAgICAgZSA9IGIucGVuZGluZ1Byb3BzLFxuICAgICAgZiA9IE0uY3VycmVudCxcbiAgICAgIGcgPSAhMSxcbiAgICAgIGg7XG4gIChoID0gMCAhPT0gKGIuZWZmZWN0VGFnICYgNjQpKSB8fCAoaCA9IDAgIT09IChmICYgMikgJiYgKG51bGwgPT09IGEgfHwgbnVsbCAhPT0gYS5tZW1vaXplZFN0YXRlKSk7XG4gIGggPyAoZyA9ICEwLCBiLmVmZmVjdFRhZyAmPSAtNjUpIDogbnVsbCAhPT0gYSAmJiBudWxsID09PSBhLm1lbW9pemVkU3RhdGUgfHwgdm9pZCAwID09PSBlLmZhbGxiYWNrIHx8ICEwID09PSBlLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrIHx8IChmIHw9IDEpO1xuICBJKE0sIGYgJiAxKTtcblxuICBpZiAobnVsbCA9PT0gYSkge1xuICAgIHZvaWQgMCAhPT0gZS5mYWxsYmFjayAmJiBVaChiKTtcblxuICAgIGlmIChnKSB7XG4gICAgICBnID0gZS5mYWxsYmFjaztcbiAgICAgIGUgPSBXZyhudWxsLCBkLCAwLCBudWxsKTtcbiAgICAgIGUucmV0dXJuID0gYjtcbiAgICAgIGlmICgwID09PSAoYi5tb2RlICYgMikpIGZvciAoYSA9IG51bGwgIT09IGIubWVtb2l6ZWRTdGF0ZSA/IGIuY2hpbGQuY2hpbGQgOiBiLmNoaWxkLCBlLmNoaWxkID0gYTsgbnVsbCAhPT0gYTspIHtcbiAgICAgICAgYS5yZXR1cm4gPSBlLCBhID0gYS5zaWJsaW5nO1xuICAgICAgfVxuICAgICAgYyA9IFdnKGcsIGQsIGMsIG51bGwpO1xuICAgICAgYy5yZXR1cm4gPSBiO1xuICAgICAgZS5zaWJsaW5nID0gYztcbiAgICAgIGIubWVtb2l6ZWRTdGF0ZSA9IGlpO1xuICAgICAgYi5jaGlsZCA9IGU7XG4gICAgICByZXR1cm4gYztcbiAgICB9XG5cbiAgICBkID0gZS5jaGlsZHJlbjtcbiAgICBiLm1lbW9pemVkU3RhdGUgPSBudWxsO1xuICAgIHJldHVybiBiLmNoaWxkID0gWWcoYiwgbnVsbCwgZCwgYyk7XG4gIH1cblxuICBpZiAobnVsbCAhPT0gYS5tZW1vaXplZFN0YXRlKSB7XG4gICAgYSA9IGEuY2hpbGQ7XG4gICAgZCA9IGEuc2libGluZztcblxuICAgIGlmIChnKSB7XG4gICAgICBlID0gZS5mYWxsYmFjaztcbiAgICAgIGMgPSBTZyhhLCBhLnBlbmRpbmdQcm9wcyk7XG4gICAgICBjLnJldHVybiA9IGI7XG4gICAgICBpZiAoMCA9PT0gKGIubW9kZSAmIDIpICYmIChnID0gbnVsbCAhPT0gYi5tZW1vaXplZFN0YXRlID8gYi5jaGlsZC5jaGlsZCA6IGIuY2hpbGQsIGcgIT09IGEuY2hpbGQpKSBmb3IgKGMuY2hpbGQgPSBnOyBudWxsICE9PSBnOykge1xuICAgICAgICBnLnJldHVybiA9IGMsIGcgPSBnLnNpYmxpbmc7XG4gICAgICB9XG4gICAgICBkID0gU2coZCwgZSk7XG4gICAgICBkLnJldHVybiA9IGI7XG4gICAgICBjLnNpYmxpbmcgPSBkO1xuICAgICAgYy5jaGlsZEV4cGlyYXRpb25UaW1lID0gMDtcbiAgICAgIGIubWVtb2l6ZWRTdGF0ZSA9IGlpO1xuICAgICAgYi5jaGlsZCA9IGM7XG4gICAgICByZXR1cm4gZDtcbiAgICB9XG5cbiAgICBjID0gWGcoYiwgYS5jaGlsZCwgZS5jaGlsZHJlbiwgYyk7XG4gICAgYi5tZW1vaXplZFN0YXRlID0gbnVsbDtcbiAgICByZXR1cm4gYi5jaGlsZCA9IGM7XG4gIH1cblxuICBhID0gYS5jaGlsZDtcblxuICBpZiAoZykge1xuICAgIGcgPSBlLmZhbGxiYWNrO1xuICAgIGUgPSBXZyhudWxsLCBkLCAwLCBudWxsKTtcbiAgICBlLnJldHVybiA9IGI7XG4gICAgZS5jaGlsZCA9IGE7XG4gICAgbnVsbCAhPT0gYSAmJiAoYS5yZXR1cm4gPSBlKTtcbiAgICBpZiAoMCA9PT0gKGIubW9kZSAmIDIpKSBmb3IgKGEgPSBudWxsICE9PSBiLm1lbW9pemVkU3RhdGUgPyBiLmNoaWxkLmNoaWxkIDogYi5jaGlsZCwgZS5jaGlsZCA9IGE7IG51bGwgIT09IGE7KSB7XG4gICAgICBhLnJldHVybiA9IGUsIGEgPSBhLnNpYmxpbmc7XG4gICAgfVxuICAgIGMgPSBXZyhnLCBkLCBjLCBudWxsKTtcbiAgICBjLnJldHVybiA9IGI7XG4gICAgZS5zaWJsaW5nID0gYztcbiAgICBjLmVmZmVjdFRhZyB8PSAyO1xuICAgIGUuY2hpbGRFeHBpcmF0aW9uVGltZSA9IDA7XG4gICAgYi5tZW1vaXplZFN0YXRlID0gaWk7XG4gICAgYi5jaGlsZCA9IGU7XG4gICAgcmV0dXJuIGM7XG4gIH1cblxuICBiLm1lbW9pemVkU3RhdGUgPSBudWxsO1xuICByZXR1cm4gYi5jaGlsZCA9IFhnKGIsIGEsIGUuY2hpbGRyZW4sIGMpO1xufVxuXG5mdW5jdGlvbiBraShhLCBiKSB7XG4gIGEuZXhwaXJhdGlvblRpbWUgPCBiICYmIChhLmV4cGlyYXRpb25UaW1lID0gYik7XG4gIHZhciBjID0gYS5hbHRlcm5hdGU7XG4gIG51bGwgIT09IGMgJiYgYy5leHBpcmF0aW9uVGltZSA8IGIgJiYgKGMuZXhwaXJhdGlvblRpbWUgPSBiKTtcbiAgcGcoYS5yZXR1cm4sIGIpO1xufVxuXG5mdW5jdGlvbiBsaShhLCBiLCBjLCBkLCBlLCBmKSB7XG4gIHZhciBnID0gYS5tZW1vaXplZFN0YXRlO1xuICBudWxsID09PSBnID8gYS5tZW1vaXplZFN0YXRlID0ge1xuICAgIGlzQmFja3dhcmRzOiBiLFxuICAgIHJlbmRlcmluZzogbnVsbCxcbiAgICByZW5kZXJpbmdTdGFydFRpbWU6IDAsXG4gICAgbGFzdDogZCxcbiAgICB0YWlsOiBjLFxuICAgIHRhaWxFeHBpcmF0aW9uOiAwLFxuICAgIHRhaWxNb2RlOiBlLFxuICAgIGxhc3RFZmZlY3Q6IGZcbiAgfSA6IChnLmlzQmFja3dhcmRzID0gYiwgZy5yZW5kZXJpbmcgPSBudWxsLCBnLnJlbmRlcmluZ1N0YXJ0VGltZSA9IDAsIGcubGFzdCA9IGQsIGcudGFpbCA9IGMsIGcudGFpbEV4cGlyYXRpb24gPSAwLCBnLnRhaWxNb2RlID0gZSwgZy5sYXN0RWZmZWN0ID0gZik7XG59XG5cbmZ1bmN0aW9uIG1pKGEsIGIsIGMpIHtcbiAgdmFyIGQgPSBiLnBlbmRpbmdQcm9wcyxcbiAgICAgIGUgPSBkLnJldmVhbE9yZGVyLFxuICAgICAgZiA9IGQudGFpbDtcbiAgUihhLCBiLCBkLmNoaWxkcmVuLCBjKTtcbiAgZCA9IE0uY3VycmVudDtcbiAgaWYgKDAgIT09IChkICYgMikpIGQgPSBkICYgMSB8IDIsIGIuZWZmZWN0VGFnIHw9IDY0O2Vsc2Uge1xuICAgIGlmIChudWxsICE9PSBhICYmIDAgIT09IChhLmVmZmVjdFRhZyAmIDY0KSkgYTogZm9yIChhID0gYi5jaGlsZDsgbnVsbCAhPT0gYTspIHtcbiAgICAgIGlmICgxMyA9PT0gYS50YWcpIG51bGwgIT09IGEubWVtb2l6ZWRTdGF0ZSAmJiBraShhLCBjKTtlbHNlIGlmICgxOSA9PT0gYS50YWcpIGtpKGEsIGMpO2Vsc2UgaWYgKG51bGwgIT09IGEuY2hpbGQpIHtcbiAgICAgICAgYS5jaGlsZC5yZXR1cm4gPSBhO1xuICAgICAgICBhID0gYS5jaGlsZDtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAoYSA9PT0gYikgYnJlYWsgYTtcblxuICAgICAgZm9yICg7IG51bGwgPT09IGEuc2libGluZzspIHtcbiAgICAgICAgaWYgKG51bGwgPT09IGEucmV0dXJuIHx8IGEucmV0dXJuID09PSBiKSBicmVhayBhO1xuICAgICAgICBhID0gYS5yZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGEuc2libGluZy5yZXR1cm4gPSBhLnJldHVybjtcbiAgICAgIGEgPSBhLnNpYmxpbmc7XG4gICAgfVxuICAgIGQgJj0gMTtcbiAgfVxuICBJKE0sIGQpO1xuICBpZiAoMCA9PT0gKGIubW9kZSAmIDIpKSBiLm1lbW9pemVkU3RhdGUgPSBudWxsO2Vsc2Ugc3dpdGNoIChlKSB7XG4gICAgY2FzZSBcImZvcndhcmRzXCI6XG4gICAgICBjID0gYi5jaGlsZDtcblxuICAgICAgZm9yIChlID0gbnVsbDsgbnVsbCAhPT0gYzspIHtcbiAgICAgICAgYSA9IGMuYWx0ZXJuYXRlLCBudWxsICE9PSBhICYmIG51bGwgPT09IGhoKGEpICYmIChlID0gYyksIGMgPSBjLnNpYmxpbmc7XG4gICAgICB9XG5cbiAgICAgIGMgPSBlO1xuICAgICAgbnVsbCA9PT0gYyA/IChlID0gYi5jaGlsZCwgYi5jaGlsZCA9IG51bGwpIDogKGUgPSBjLnNpYmxpbmcsIGMuc2libGluZyA9IG51bGwpO1xuICAgICAgbGkoYiwgITEsIGUsIGMsIGYsIGIubGFzdEVmZmVjdCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgXCJiYWNrd2FyZHNcIjpcbiAgICAgIGMgPSBudWxsO1xuICAgICAgZSA9IGIuY2hpbGQ7XG5cbiAgICAgIGZvciAoYi5jaGlsZCA9IG51bGw7IG51bGwgIT09IGU7KSB7XG4gICAgICAgIGEgPSBlLmFsdGVybmF0ZTtcblxuICAgICAgICBpZiAobnVsbCAhPT0gYSAmJiBudWxsID09PSBoaChhKSkge1xuICAgICAgICAgIGIuY2hpbGQgPSBlO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgICAgYSA9IGUuc2libGluZztcbiAgICAgICAgZS5zaWJsaW5nID0gYztcbiAgICAgICAgYyA9IGU7XG4gICAgICAgIGUgPSBhO1xuICAgICAgfVxuXG4gICAgICBsaShiLCAhMCwgYywgbnVsbCwgZiwgYi5sYXN0RWZmZWN0KTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSBcInRvZ2V0aGVyXCI6XG4gICAgICBsaShiLCAhMSwgbnVsbCwgbnVsbCwgdm9pZCAwLCBiLmxhc3RFZmZlY3QpO1xuICAgICAgYnJlYWs7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgYi5tZW1vaXplZFN0YXRlID0gbnVsbDtcbiAgfVxuICByZXR1cm4gYi5jaGlsZDtcbn1cblxuZnVuY3Rpb24gJGgoYSwgYiwgYykge1xuICBudWxsICE9PSBhICYmIChiLmRlcGVuZGVuY2llcyA9IGEuZGVwZW5kZW5jaWVzKTtcbiAgdmFyIGQgPSBiLmV4cGlyYXRpb25UaW1lO1xuICAwICE9PSBkICYmIEJnKGQpO1xuICBpZiAoYi5jaGlsZEV4cGlyYXRpb25UaW1lIDwgYykgcmV0dXJuIG51bGw7XG4gIGlmIChudWxsICE9PSBhICYmIGIuY2hpbGQgIT09IGEuY2hpbGQpIHRocm93IEVycm9yKHUoMTUzKSk7XG5cbiAgaWYgKG51bGwgIT09IGIuY2hpbGQpIHtcbiAgICBhID0gYi5jaGlsZDtcbiAgICBjID0gU2coYSwgYS5wZW5kaW5nUHJvcHMpO1xuICAgIGIuY2hpbGQgPSBjO1xuXG4gICAgZm9yIChjLnJldHVybiA9IGI7IG51bGwgIT09IGEuc2libGluZzspIHtcbiAgICAgIGEgPSBhLnNpYmxpbmcsIGMgPSBjLnNpYmxpbmcgPSBTZyhhLCBhLnBlbmRpbmdQcm9wcyksIGMucmV0dXJuID0gYjtcbiAgICB9XG5cbiAgICBjLnNpYmxpbmcgPSBudWxsO1xuICB9XG5cbiAgcmV0dXJuIGIuY2hpbGQ7XG59XG5cbnZhciBuaSwgb2ksIHBpLCBxaTtcblxubmkgPSBmdW5jdGlvbiBuaShhLCBiKSB7XG4gIGZvciAodmFyIGMgPSBiLmNoaWxkOyBudWxsICE9PSBjOykge1xuICAgIGlmICg1ID09PSBjLnRhZyB8fCA2ID09PSBjLnRhZykgYS5hcHBlbmRDaGlsZChjLnN0YXRlTm9kZSk7ZWxzZSBpZiAoNCAhPT0gYy50YWcgJiYgbnVsbCAhPT0gYy5jaGlsZCkge1xuICAgICAgYy5jaGlsZC5yZXR1cm4gPSBjO1xuICAgICAgYyA9IGMuY2hpbGQ7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgaWYgKGMgPT09IGIpIGJyZWFrO1xuXG4gICAgZm9yICg7IG51bGwgPT09IGMuc2libGluZzspIHtcbiAgICAgIGlmIChudWxsID09PSBjLnJldHVybiB8fCBjLnJldHVybiA9PT0gYikgcmV0dXJuO1xuICAgICAgYyA9IGMucmV0dXJuO1xuICAgIH1cblxuICAgIGMuc2libGluZy5yZXR1cm4gPSBjLnJldHVybjtcbiAgICBjID0gYy5zaWJsaW5nO1xuICB9XG59O1xuXG5vaSA9IGZ1bmN0aW9uIG9pKCkge307XG5cbnBpID0gZnVuY3Rpb24gcGkoYSwgYiwgYywgZCwgZSkge1xuICB2YXIgZiA9IGEubWVtb2l6ZWRQcm9wcztcblxuICBpZiAoZiAhPT0gZCkge1xuICAgIHZhciBnID0gYi5zdGF0ZU5vZGU7XG4gICAgY2goJGcuY3VycmVudCk7XG4gICAgYSA9IG51bGw7XG5cbiAgICBzd2l0Y2ggKGMpIHtcbiAgICAgIGNhc2UgXCJpbnB1dFwiOlxuICAgICAgICBmID0gemIoZywgZik7XG4gICAgICAgIGQgPSB6YihnLCBkKTtcbiAgICAgICAgYSA9IFtdO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBcIm9wdGlvblwiOlxuICAgICAgICBmID0gR2IoZywgZik7XG4gICAgICAgIGQgPSBHYihnLCBkKTtcbiAgICAgICAgYSA9IFtdO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBcInNlbGVjdFwiOlxuICAgICAgICBmID0gbih7fSwgZiwge1xuICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIGQgPSBuKHt9LCBkLCB7XG4gICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgYSA9IFtdO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBcInRleHRhcmVhXCI6XG4gICAgICAgIGYgPSBJYihnLCBmKTtcbiAgICAgICAgZCA9IEliKGcsIGQpO1xuICAgICAgICBhID0gW107XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBcImZ1bmN0aW9uXCIgIT09IHR5cGVvZiBmLm9uQ2xpY2sgJiYgXCJmdW5jdGlvblwiID09PSB0eXBlb2YgZC5vbkNsaWNrICYmIChnLm9uY2xpY2sgPSBzZCk7XG4gICAgfVxuXG4gICAgb2QoYywgZCk7XG4gICAgdmFyIGgsIGs7XG4gICAgYyA9IG51bGw7XG5cbiAgICBmb3IgKGggaW4gZikge1xuICAgICAgaWYgKCFkLmhhc093blByb3BlcnR5KGgpICYmIGYuaGFzT3duUHJvcGVydHkoaCkgJiYgbnVsbCAhPSBmW2hdKSBpZiAoXCJzdHlsZVwiID09PSBoKSBmb3IgKGsgaW4gZyA9IGZbaF0sIGcpIHtcbiAgICAgICAgZy5oYXNPd25Qcm9wZXJ0eShrKSAmJiAoYyB8fCAoYyA9IHt9KSwgY1trXSA9IFwiXCIpO1xuICAgICAgfSBlbHNlIFwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIiAhPT0gaCAmJiBcImNoaWxkcmVuXCIgIT09IGggJiYgXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiAhPT0gaCAmJiBcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiICE9PSBoICYmIFwiYXV0b0ZvY3VzXCIgIT09IGggJiYgKHZhLmhhc093blByb3BlcnR5KGgpID8gYSB8fCAoYSA9IFtdKSA6IChhID0gYSB8fCBbXSkucHVzaChoLCBudWxsKSk7XG4gICAgfVxuXG4gICAgZm9yIChoIGluIGQpIHtcbiAgICAgIHZhciBsID0gZFtoXTtcbiAgICAgIGcgPSBudWxsICE9IGYgPyBmW2hdIDogdm9pZCAwO1xuICAgICAgaWYgKGQuaGFzT3duUHJvcGVydHkoaCkgJiYgbCAhPT0gZyAmJiAobnVsbCAhPSBsIHx8IG51bGwgIT0gZykpIGlmIChcInN0eWxlXCIgPT09IGgpIHtcbiAgICAgICAgaWYgKGcpIHtcbiAgICAgICAgICBmb3IgKGsgaW4gZykge1xuICAgICAgICAgICAgIWcuaGFzT3duUHJvcGVydHkoaykgfHwgbCAmJiBsLmhhc093blByb3BlcnR5KGspIHx8IChjIHx8IChjID0ge30pLCBjW2tdID0gXCJcIik7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgZm9yIChrIGluIGwpIHtcbiAgICAgICAgICAgIGwuaGFzT3duUHJvcGVydHkoaykgJiYgZ1trXSAhPT0gbFtrXSAmJiAoYyB8fCAoYyA9IHt9KSwgY1trXSA9IGxba10pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGMgfHwgKGEgfHwgKGEgPSBbXSksIGEucHVzaChoLCBjKSksIGMgPSBsO1xuICAgICAgfSBlbHNlIFwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIiA9PT0gaCA/IChsID0gbCA/IGwuX19odG1sIDogdm9pZCAwLCBnID0gZyA/IGcuX19odG1sIDogdm9pZCAwLCBudWxsICE9IGwgJiYgZyAhPT0gbCAmJiAoYSA9IGEgfHwgW10pLnB1c2goaCwgbCkpIDogXCJjaGlsZHJlblwiID09PSBoID8gZyA9PT0gbCB8fCBcInN0cmluZ1wiICE9PSB0eXBlb2YgbCAmJiBcIm51bWJlclwiICE9PSB0eXBlb2YgbCB8fCAoYSA9IGEgfHwgW10pLnB1c2goaCwgXCJcIiArIGwpIDogXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiAhPT0gaCAmJiBcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiICE9PSBoICYmICh2YS5oYXNPd25Qcm9wZXJ0eShoKSA/IChudWxsICE9IGwgJiYgcmQoZSwgaCksIGEgfHwgZyA9PT0gbCB8fCAoYSA9IFtdKSkgOiAoYSA9IGEgfHwgW10pLnB1c2goaCwgbCkpO1xuICAgIH1cblxuICAgIGMgJiYgKGEgPSBhIHx8IFtdKS5wdXNoKFwic3R5bGVcIiwgYyk7XG4gICAgZSA9IGE7XG4gICAgaWYgKGIudXBkYXRlUXVldWUgPSBlKSBiLmVmZmVjdFRhZyB8PSA0O1xuICB9XG59O1xuXG5xaSA9IGZ1bmN0aW9uIHFpKGEsIGIsIGMsIGQpIHtcbiAgYyAhPT0gZCAmJiAoYi5lZmZlY3RUYWcgfD0gNCk7XG59O1xuXG5mdW5jdGlvbiByaShhLCBiKSB7XG4gIHN3aXRjaCAoYS50YWlsTW9kZSkge1xuICAgIGNhc2UgXCJoaWRkZW5cIjpcbiAgICAgIGIgPSBhLnRhaWw7XG5cbiAgICAgIGZvciAodmFyIGMgPSBudWxsOyBudWxsICE9PSBiOykge1xuICAgICAgICBudWxsICE9PSBiLmFsdGVybmF0ZSAmJiAoYyA9IGIpLCBiID0gYi5zaWJsaW5nO1xuICAgICAgfVxuXG4gICAgICBudWxsID09PSBjID8gYS50YWlsID0gbnVsbCA6IGMuc2libGluZyA9IG51bGw7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgXCJjb2xsYXBzZWRcIjpcbiAgICAgIGMgPSBhLnRhaWw7XG5cbiAgICAgIGZvciAodmFyIGQgPSBudWxsOyBudWxsICE9PSBjOykge1xuICAgICAgICBudWxsICE9PSBjLmFsdGVybmF0ZSAmJiAoZCA9IGMpLCBjID0gYy5zaWJsaW5nO1xuICAgICAgfVxuXG4gICAgICBudWxsID09PSBkID8gYiB8fCBudWxsID09PSBhLnRhaWwgPyBhLnRhaWwgPSBudWxsIDogYS50YWlsLnNpYmxpbmcgPSBudWxsIDogZC5zaWJsaW5nID0gbnVsbDtcbiAgfVxufVxuXG5mdW5jdGlvbiBzaShhLCBiLCBjKSB7XG4gIHZhciBkID0gYi5wZW5kaW5nUHJvcHM7XG5cbiAgc3dpdGNoIChiLnRhZykge1xuICAgIGNhc2UgMjpcbiAgICBjYXNlIDE2OlxuICAgIGNhc2UgMTU6XG4gICAgY2FzZSAwOlxuICAgIGNhc2UgMTE6XG4gICAgY2FzZSA3OlxuICAgIGNhc2UgODpcbiAgICBjYXNlIDEyOlxuICAgIGNhc2UgOTpcbiAgICBjYXNlIDE0OlxuICAgICAgcmV0dXJuIG51bGw7XG5cbiAgICBjYXNlIDE6XG4gICAgICByZXR1cm4gTChiLnR5cGUpICYmIERmKCksIG51bGw7XG5cbiAgICBjYXNlIDM6XG4gICAgICByZXR1cm4gZWgoKSwgSChLKSwgSChKKSwgYyA9IGIuc3RhdGVOb2RlLCBjLnBlbmRpbmdDb250ZXh0ICYmIChjLmNvbnRleHQgPSBjLnBlbmRpbmdDb250ZXh0LCBjLnBlbmRpbmdDb250ZXh0ID0gbnVsbCksIG51bGwgIT09IGEgJiYgbnVsbCAhPT0gYS5jaGlsZCB8fCAhV2goYikgfHwgKGIuZWZmZWN0VGFnIHw9IDQpLCBvaShiKSwgbnVsbDtcblxuICAgIGNhc2UgNTpcbiAgICAgIGdoKGIpO1xuICAgICAgYyA9IGNoKGJoLmN1cnJlbnQpO1xuICAgICAgdmFyIGUgPSBiLnR5cGU7XG4gICAgICBpZiAobnVsbCAhPT0gYSAmJiBudWxsICE9IGIuc3RhdGVOb2RlKSBwaShhLCBiLCBlLCBkLCBjKSwgYS5yZWYgIT09IGIucmVmICYmIChiLmVmZmVjdFRhZyB8PSAxMjgpO2Vsc2Uge1xuICAgICAgICBpZiAoIWQpIHtcbiAgICAgICAgICBpZiAobnVsbCA9PT0gYi5zdGF0ZU5vZGUpIHRocm93IEVycm9yKHUoMTY2KSk7XG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICBhID0gY2goJGcuY3VycmVudCk7XG5cbiAgICAgICAgaWYgKFdoKGIpKSB7XG4gICAgICAgICAgZCA9IGIuc3RhdGVOb2RlO1xuICAgICAgICAgIGUgPSBiLnR5cGU7XG4gICAgICAgICAgdmFyIGYgPSBiLm1lbW9pemVkUHJvcHM7XG4gICAgICAgICAgZFtNZF0gPSBiO1xuICAgICAgICAgIGRbTmRdID0gZjtcblxuICAgICAgICAgIHN3aXRjaCAoZSkge1xuICAgICAgICAgICAgY2FzZSBcImlmcmFtZVwiOlxuICAgICAgICAgICAgY2FzZSBcIm9iamVjdFwiOlxuICAgICAgICAgICAgY2FzZSBcImVtYmVkXCI6XG4gICAgICAgICAgICAgIEYoXCJsb2FkXCIsIGQpO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSBcInZpZGVvXCI6XG4gICAgICAgICAgICBjYXNlIFwiYXVkaW9cIjpcbiAgICAgICAgICAgICAgZm9yIChhID0gMDsgYSA8IGFjLmxlbmd0aDsgYSsrKSB7XG4gICAgICAgICAgICAgICAgRihhY1thXSwgZCk7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSBcInNvdXJjZVwiOlxuICAgICAgICAgICAgICBGKFwiZXJyb3JcIiwgZCk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIFwiaW1nXCI6XG4gICAgICAgICAgICBjYXNlIFwiaW1hZ2VcIjpcbiAgICAgICAgICAgIGNhc2UgXCJsaW5rXCI6XG4gICAgICAgICAgICAgIEYoXCJlcnJvclwiLCBkKTtcbiAgICAgICAgICAgICAgRihcImxvYWRcIiwgZCk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIFwiZm9ybVwiOlxuICAgICAgICAgICAgICBGKFwicmVzZXRcIiwgZCk7XG4gICAgICAgICAgICAgIEYoXCJzdWJtaXRcIiwgZCk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIFwiZGV0YWlsc1wiOlxuICAgICAgICAgICAgICBGKFwidG9nZ2xlXCIsIGQpO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSBcImlucHV0XCI6XG4gICAgICAgICAgICAgIEFiKGQsIGYpO1xuICAgICAgICAgICAgICBGKFwiaW52YWxpZFwiLCBkKTtcbiAgICAgICAgICAgICAgcmQoYywgXCJvbkNoYW5nZVwiKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgXCJzZWxlY3RcIjpcbiAgICAgICAgICAgICAgZC5fd3JhcHBlclN0YXRlID0ge1xuICAgICAgICAgICAgICAgIHdhc011bHRpcGxlOiAhIWYubXVsdGlwbGVcbiAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgRihcImludmFsaWRcIiwgZCk7XG4gICAgICAgICAgICAgIHJkKGMsIFwib25DaGFuZ2VcIik7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIFwidGV4dGFyZWFcIjpcbiAgICAgICAgICAgICAgSmIoZCwgZiksIEYoXCJpbnZhbGlkXCIsIGQpLCByZChjLCBcIm9uQ2hhbmdlXCIpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIG9kKGUsIGYpO1xuICAgICAgICAgIGEgPSBudWxsO1xuXG4gICAgICAgICAgZm9yICh2YXIgZyBpbiBmKSB7XG4gICAgICAgICAgICBpZiAoZi5oYXNPd25Qcm9wZXJ0eShnKSkge1xuICAgICAgICAgICAgICB2YXIgaCA9IGZbZ107XG4gICAgICAgICAgICAgIFwiY2hpbGRyZW5cIiA9PT0gZyA/IFwic3RyaW5nXCIgPT09IHR5cGVvZiBoID8gZC50ZXh0Q29udGVudCAhPT0gaCAmJiAoYSA9IFtcImNoaWxkcmVuXCIsIGhdKSA6IFwibnVtYmVyXCIgPT09IHR5cGVvZiBoICYmIGQudGV4dENvbnRlbnQgIT09IFwiXCIgKyBoICYmIChhID0gW1wiY2hpbGRyZW5cIiwgXCJcIiArIGhdKSA6IHZhLmhhc093blByb3BlcnR5KGcpICYmIG51bGwgIT0gaCAmJiByZChjLCBnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICBzd2l0Y2ggKGUpIHtcbiAgICAgICAgICAgIGNhc2UgXCJpbnB1dFwiOlxuICAgICAgICAgICAgICB4YihkKTtcbiAgICAgICAgICAgICAgRWIoZCwgZiwgITApO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSBcInRleHRhcmVhXCI6XG4gICAgICAgICAgICAgIHhiKGQpO1xuICAgICAgICAgICAgICBMYihkKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgXCJzZWxlY3RcIjpcbiAgICAgICAgICAgIGNhc2UgXCJvcHRpb25cIjpcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgIFwiZnVuY3Rpb25cIiA9PT0gdHlwZW9mIGYub25DbGljayAmJiAoZC5vbmNsaWNrID0gc2QpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGMgPSBhO1xuICAgICAgICAgIGIudXBkYXRlUXVldWUgPSBjO1xuICAgICAgICAgIG51bGwgIT09IGMgJiYgKGIuZWZmZWN0VGFnIHw9IDQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGcgPSA5ID09PSBjLm5vZGVUeXBlID8gYyA6IGMub3duZXJEb2N1bWVudDtcbiAgICAgICAgICBhID09PSBxZCAmJiAoYSA9IE5iKGUpKTtcbiAgICAgICAgICBhID09PSBxZCA/IFwic2NyaXB0XCIgPT09IGUgPyAoYSA9IGcuY3JlYXRlRWxlbWVudChcImRpdlwiKSwgYS5pbm5lckhUTUwgPSBcIjxzY3JpcHQ+XFx4M2Mvc2NyaXB0PlwiLCBhID0gYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpKSA6IFwic3RyaW5nXCIgPT09IHR5cGVvZiBkLmlzID8gYSA9IGcuY3JlYXRlRWxlbWVudChlLCB7XG4gICAgICAgICAgICBpczogZC5pc1xuICAgICAgICAgIH0pIDogKGEgPSBnLmNyZWF0ZUVsZW1lbnQoZSksIFwic2VsZWN0XCIgPT09IGUgJiYgKGcgPSBhLCBkLm11bHRpcGxlID8gZy5tdWx0aXBsZSA9ICEwIDogZC5zaXplICYmIChnLnNpemUgPSBkLnNpemUpKSkgOiBhID0gZy5jcmVhdGVFbGVtZW50TlMoYSwgZSk7XG4gICAgICAgICAgYVtNZF0gPSBiO1xuICAgICAgICAgIGFbTmRdID0gZDtcbiAgICAgICAgICBuaShhLCBiLCAhMSwgITEpO1xuICAgICAgICAgIGIuc3RhdGVOb2RlID0gYTtcbiAgICAgICAgICBnID0gcGQoZSwgZCk7XG5cbiAgICAgICAgICBzd2l0Y2ggKGUpIHtcbiAgICAgICAgICAgIGNhc2UgXCJpZnJhbWVcIjpcbiAgICAgICAgICAgIGNhc2UgXCJvYmplY3RcIjpcbiAgICAgICAgICAgIGNhc2UgXCJlbWJlZFwiOlxuICAgICAgICAgICAgICBGKFwibG9hZFwiLCBhKTtcbiAgICAgICAgICAgICAgaCA9IGQ7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIFwidmlkZW9cIjpcbiAgICAgICAgICAgIGNhc2UgXCJhdWRpb1wiOlxuICAgICAgICAgICAgICBmb3IgKGggPSAwOyBoIDwgYWMubGVuZ3RoOyBoKyspIHtcbiAgICAgICAgICAgICAgICBGKGFjW2hdLCBhKTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGggPSBkO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSBcInNvdXJjZVwiOlxuICAgICAgICAgICAgICBGKFwiZXJyb3JcIiwgYSk7XG4gICAgICAgICAgICAgIGggPSBkO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSBcImltZ1wiOlxuICAgICAgICAgICAgY2FzZSBcImltYWdlXCI6XG4gICAgICAgICAgICBjYXNlIFwibGlua1wiOlxuICAgICAgICAgICAgICBGKFwiZXJyb3JcIiwgYSk7XG4gICAgICAgICAgICAgIEYoXCJsb2FkXCIsIGEpO1xuICAgICAgICAgICAgICBoID0gZDtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgXCJmb3JtXCI6XG4gICAgICAgICAgICAgIEYoXCJyZXNldFwiLCBhKTtcbiAgICAgICAgICAgICAgRihcInN1Ym1pdFwiLCBhKTtcbiAgICAgICAgICAgICAgaCA9IGQ7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIFwiZGV0YWlsc1wiOlxuICAgICAgICAgICAgICBGKFwidG9nZ2xlXCIsIGEpO1xuICAgICAgICAgICAgICBoID0gZDtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgXCJpbnB1dFwiOlxuICAgICAgICAgICAgICBBYihhLCBkKTtcbiAgICAgICAgICAgICAgaCA9IHpiKGEsIGQpO1xuICAgICAgICAgICAgICBGKFwiaW52YWxpZFwiLCBhKTtcbiAgICAgICAgICAgICAgcmQoYywgXCJvbkNoYW5nZVwiKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgXCJvcHRpb25cIjpcbiAgICAgICAgICAgICAgaCA9IEdiKGEsIGQpO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSBcInNlbGVjdFwiOlxuICAgICAgICAgICAgICBhLl93cmFwcGVyU3RhdGUgPSB7XG4gICAgICAgICAgICAgICAgd2FzTXVsdGlwbGU6ICEhZC5tdWx0aXBsZVxuICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICBoID0gbih7fSwgZCwge1xuICAgICAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIEYoXCJpbnZhbGlkXCIsIGEpO1xuICAgICAgICAgICAgICByZChjLCBcIm9uQ2hhbmdlXCIpO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSBcInRleHRhcmVhXCI6XG4gICAgICAgICAgICAgIEpiKGEsIGQpO1xuICAgICAgICAgICAgICBoID0gSWIoYSwgZCk7XG4gICAgICAgICAgICAgIEYoXCJpbnZhbGlkXCIsIGEpO1xuICAgICAgICAgICAgICByZChjLCBcIm9uQ2hhbmdlXCIpO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgaCA9IGQ7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgb2QoZSwgaCk7XG4gICAgICAgICAgdmFyIGsgPSBoO1xuXG4gICAgICAgICAgZm9yIChmIGluIGspIHtcbiAgICAgICAgICAgIGlmIChrLmhhc093blByb3BlcnR5KGYpKSB7XG4gICAgICAgICAgICAgIHZhciBsID0ga1tmXTtcbiAgICAgICAgICAgICAgXCJzdHlsZVwiID09PSBmID8gbWQoYSwgbCkgOiBcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIgPT09IGYgPyAobCA9IGwgPyBsLl9faHRtbCA6IHZvaWQgMCwgbnVsbCAhPSBsICYmIFFiKGEsIGwpKSA6IFwiY2hpbGRyZW5cIiA9PT0gZiA/IFwic3RyaW5nXCIgPT09IHR5cGVvZiBsID8gKFwidGV4dGFyZWFcIiAhPT0gZSB8fCBcIlwiICE9PSBsKSAmJiBSYihhLCBsKSA6IFwibnVtYmVyXCIgPT09IHR5cGVvZiBsICYmIFJiKGEsIFwiXCIgKyBsKSA6IFwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIgIT09IGYgJiYgXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiAhPT0gZiAmJiBcImF1dG9Gb2N1c1wiICE9PSBmICYmICh2YS5oYXNPd25Qcm9wZXJ0eShmKSA/IG51bGwgIT0gbCAmJiByZChjLCBmKSA6IG51bGwgIT0gbCAmJiBYYShhLCBmLCBsLCBnKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgc3dpdGNoIChlKSB7XG4gICAgICAgICAgICBjYXNlIFwiaW5wdXRcIjpcbiAgICAgICAgICAgICAgeGIoYSk7XG4gICAgICAgICAgICAgIEViKGEsIGQsICExKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgXCJ0ZXh0YXJlYVwiOlxuICAgICAgICAgICAgICB4YihhKTtcbiAgICAgICAgICAgICAgTGIoYSk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIFwib3B0aW9uXCI6XG4gICAgICAgICAgICAgIG51bGwgIT0gZC52YWx1ZSAmJiBhLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIFwiXCIgKyByYihkLnZhbHVlKSk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIFwic2VsZWN0XCI6XG4gICAgICAgICAgICAgIGEubXVsdGlwbGUgPSAhIWQubXVsdGlwbGU7XG4gICAgICAgICAgICAgIGMgPSBkLnZhbHVlO1xuICAgICAgICAgICAgICBudWxsICE9IGMgPyBIYihhLCAhIWQubXVsdGlwbGUsIGMsICExKSA6IG51bGwgIT0gZC5kZWZhdWx0VmFsdWUgJiYgSGIoYSwgISFkLm11bHRpcGxlLCBkLmRlZmF1bHRWYWx1ZSwgITApO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgXCJmdW5jdGlvblwiID09PSB0eXBlb2YgaC5vbkNsaWNrICYmIChhLm9uY2xpY2sgPSBzZCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgRmQoZSwgZCkgJiYgKGIuZWZmZWN0VGFnIHw9IDQpO1xuICAgICAgICB9XG5cbiAgICAgICAgbnVsbCAhPT0gYi5yZWYgJiYgKGIuZWZmZWN0VGFnIHw9IDEyOCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gbnVsbDtcblxuICAgIGNhc2UgNjpcbiAgICAgIGlmIChhICYmIG51bGwgIT0gYi5zdGF0ZU5vZGUpIHFpKGEsIGIsIGEubWVtb2l6ZWRQcm9wcywgZCk7ZWxzZSB7XG4gICAgICAgIGlmIChcInN0cmluZ1wiICE9PSB0eXBlb2YgZCAmJiBudWxsID09PSBiLnN0YXRlTm9kZSkgdGhyb3cgRXJyb3IodSgxNjYpKTtcbiAgICAgICAgYyA9IGNoKGJoLmN1cnJlbnQpO1xuICAgICAgICBjaCgkZy5jdXJyZW50KTtcbiAgICAgICAgV2goYikgPyAoYyA9IGIuc3RhdGVOb2RlLCBkID0gYi5tZW1vaXplZFByb3BzLCBjW01kXSA9IGIsIGMubm9kZVZhbHVlICE9PSBkICYmIChiLmVmZmVjdFRhZyB8PSA0KSkgOiAoYyA9ICg5ID09PSBjLm5vZGVUeXBlID8gYyA6IGMub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZCksIGNbTWRdID0gYiwgYi5zdGF0ZU5vZGUgPSBjKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBudWxsO1xuXG4gICAgY2FzZSAxMzpcbiAgICAgIEgoTSk7XG4gICAgICBkID0gYi5tZW1vaXplZFN0YXRlO1xuICAgICAgaWYgKDAgIT09IChiLmVmZmVjdFRhZyAmIDY0KSkgcmV0dXJuIGIuZXhwaXJhdGlvblRpbWUgPSBjLCBiO1xuICAgICAgYyA9IG51bGwgIT09IGQ7XG4gICAgICBkID0gITE7XG4gICAgICBudWxsID09PSBhID8gdm9pZCAwICE9PSBiLm1lbW9pemVkUHJvcHMuZmFsbGJhY2sgJiYgV2goYikgOiAoZSA9IGEubWVtb2l6ZWRTdGF0ZSwgZCA9IG51bGwgIT09IGUsIGMgfHwgbnVsbCA9PT0gZSB8fCAoZSA9IGEuY2hpbGQuc2libGluZywgbnVsbCAhPT0gZSAmJiAoZiA9IGIuZmlyc3RFZmZlY3QsIG51bGwgIT09IGYgPyAoYi5maXJzdEVmZmVjdCA9IGUsIGUubmV4dEVmZmVjdCA9IGYpIDogKGIuZmlyc3RFZmZlY3QgPSBiLmxhc3RFZmZlY3QgPSBlLCBlLm5leHRFZmZlY3QgPSBudWxsKSwgZS5lZmZlY3RUYWcgPSA4KSkpO1xuICAgICAgaWYgKGMgJiYgIWQgJiYgMCAhPT0gKGIubW9kZSAmIDIpKSBpZiAobnVsbCA9PT0gYSAmJiAhMCAhPT0gYi5tZW1vaXplZFByb3BzLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrIHx8IDAgIT09IChNLmN1cnJlbnQgJiAxKSkgUyA9PT0gdGkgJiYgKFMgPSB1aSk7ZWxzZSB7XG4gICAgICAgIGlmIChTID09PSB0aSB8fCBTID09PSB1aSkgUyA9IHZpO1xuICAgICAgICAwICE9PSB3aSAmJiBudWxsICE9PSBUICYmICh4aShULCBVKSwgeWkoVCwgd2kpKTtcbiAgICAgIH1cbiAgICAgIGlmIChjIHx8IGQpIGIuZWZmZWN0VGFnIHw9IDQ7XG4gICAgICByZXR1cm4gbnVsbDtcblxuICAgIGNhc2UgNDpcbiAgICAgIHJldHVybiBlaCgpLCBvaShiKSwgbnVsbDtcblxuICAgIGNhc2UgMTA6XG4gICAgICByZXR1cm4gb2coYiksIG51bGw7XG5cbiAgICBjYXNlIDE3OlxuICAgICAgcmV0dXJuIEwoYi50eXBlKSAmJiBEZigpLCBudWxsO1xuXG4gICAgY2FzZSAxOTpcbiAgICAgIEgoTSk7XG4gICAgICBkID0gYi5tZW1vaXplZFN0YXRlO1xuICAgICAgaWYgKG51bGwgPT09IGQpIHJldHVybiBudWxsO1xuICAgICAgZSA9IDAgIT09IChiLmVmZmVjdFRhZyAmIDY0KTtcbiAgICAgIGYgPSBkLnJlbmRlcmluZztcbiAgICAgIGlmIChudWxsID09PSBmKSB7XG4gICAgICAgIGlmIChlKSByaShkLCAhMSk7ZWxzZSB7XG4gICAgICAgICAgaWYgKFMgIT09IHRpIHx8IG51bGwgIT09IGEgJiYgMCAhPT0gKGEuZWZmZWN0VGFnICYgNjQpKSBmb3IgKGYgPSBiLmNoaWxkOyBudWxsICE9PSBmOykge1xuICAgICAgICAgICAgYSA9IGhoKGYpO1xuXG4gICAgICAgICAgICBpZiAobnVsbCAhPT0gYSkge1xuICAgICAgICAgICAgICBiLmVmZmVjdFRhZyB8PSA2NDtcbiAgICAgICAgICAgICAgcmkoZCwgITEpO1xuICAgICAgICAgICAgICBlID0gYS51cGRhdGVRdWV1ZTtcbiAgICAgICAgICAgICAgbnVsbCAhPT0gZSAmJiAoYi51cGRhdGVRdWV1ZSA9IGUsIGIuZWZmZWN0VGFnIHw9IDQpO1xuICAgICAgICAgICAgICBudWxsID09PSBkLmxhc3RFZmZlY3QgJiYgKGIuZmlyc3RFZmZlY3QgPSBudWxsKTtcbiAgICAgICAgICAgICAgYi5sYXN0RWZmZWN0ID0gZC5sYXN0RWZmZWN0O1xuXG4gICAgICAgICAgICAgIGZvciAoZCA9IGIuY2hpbGQ7IG51bGwgIT09IGQ7KSB7XG4gICAgICAgICAgICAgICAgZSA9IGQsIGYgPSBjLCBlLmVmZmVjdFRhZyAmPSAyLCBlLm5leHRFZmZlY3QgPSBudWxsLCBlLmZpcnN0RWZmZWN0ID0gbnVsbCwgZS5sYXN0RWZmZWN0ID0gbnVsbCwgYSA9IGUuYWx0ZXJuYXRlLCBudWxsID09PSBhID8gKGUuY2hpbGRFeHBpcmF0aW9uVGltZSA9IDAsIGUuZXhwaXJhdGlvblRpbWUgPSBmLCBlLmNoaWxkID0gbnVsbCwgZS5tZW1vaXplZFByb3BzID0gbnVsbCwgZS5tZW1vaXplZFN0YXRlID0gbnVsbCwgZS51cGRhdGVRdWV1ZSA9IG51bGwsIGUuZGVwZW5kZW5jaWVzID0gbnVsbCkgOiAoZS5jaGlsZEV4cGlyYXRpb25UaW1lID0gYS5jaGlsZEV4cGlyYXRpb25UaW1lLCBlLmV4cGlyYXRpb25UaW1lID0gYS5leHBpcmF0aW9uVGltZSwgZS5jaGlsZCA9IGEuY2hpbGQsIGUubWVtb2l6ZWRQcm9wcyA9IGEubWVtb2l6ZWRQcm9wcywgZS5tZW1vaXplZFN0YXRlID0gYS5tZW1vaXplZFN0YXRlLCBlLnVwZGF0ZVF1ZXVlID0gYS51cGRhdGVRdWV1ZSwgZiA9IGEuZGVwZW5kZW5jaWVzLCBlLmRlcGVuZGVuY2llcyA9IG51bGwgPT09IGYgPyBudWxsIDoge1xuICAgICAgICAgICAgICAgICAgZXhwaXJhdGlvblRpbWU6IGYuZXhwaXJhdGlvblRpbWUsXG4gICAgICAgICAgICAgICAgICBmaXJzdENvbnRleHQ6IGYuZmlyc3RDb250ZXh0LFxuICAgICAgICAgICAgICAgICAgcmVzcG9uZGVyczogZi5yZXNwb25kZXJzXG4gICAgICAgICAgICAgICAgfSksIGQgPSBkLnNpYmxpbmc7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBJKE0sIE0uY3VycmVudCAmIDEgfCAyKTtcbiAgICAgICAgICAgICAgcmV0dXJuIGIuY2hpbGQ7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGYgPSBmLnNpYmxpbmc7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoIWUpIGlmIChhID0gaGgoZiksIG51bGwgIT09IGEpIHtcbiAgICAgICAgICBpZiAoYi5lZmZlY3RUYWcgfD0gNjQsIGUgPSAhMCwgYyA9IGEudXBkYXRlUXVldWUsIG51bGwgIT09IGMgJiYgKGIudXBkYXRlUXVldWUgPSBjLCBiLmVmZmVjdFRhZyB8PSA0KSwgcmkoZCwgITApLCBudWxsID09PSBkLnRhaWwgJiYgXCJoaWRkZW5cIiA9PT0gZC50YWlsTW9kZSAmJiAhZi5hbHRlcm5hdGUpIHJldHVybiBiID0gYi5sYXN0RWZmZWN0ID0gZC5sYXN0RWZmZWN0LCBudWxsICE9PSBiICYmIChiLm5leHRFZmZlY3QgPSBudWxsKSwgbnVsbDtcbiAgICAgICAgfSBlbHNlIDIgKiAkZigpIC0gZC5yZW5kZXJpbmdTdGFydFRpbWUgPiBkLnRhaWxFeHBpcmF0aW9uICYmIDEgPCBjICYmIChiLmVmZmVjdFRhZyB8PSA2NCwgZSA9ICEwLCByaShkLCAhMSksIGIuZXhwaXJhdGlvblRpbWUgPSBiLmNoaWxkRXhwaXJhdGlvblRpbWUgPSBjIC0gMSk7XG4gICAgICAgIGQuaXNCYWNrd2FyZHMgPyAoZi5zaWJsaW5nID0gYi5jaGlsZCwgYi5jaGlsZCA9IGYpIDogKGMgPSBkLmxhc3QsIG51bGwgIT09IGMgPyBjLnNpYmxpbmcgPSBmIDogYi5jaGlsZCA9IGYsIGQubGFzdCA9IGYpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG51bGwgIT09IGQudGFpbCA/ICgwID09PSBkLnRhaWxFeHBpcmF0aW9uICYmIChkLnRhaWxFeHBpcmF0aW9uID0gJGYoKSArIDUwMCksIGMgPSBkLnRhaWwsIGQucmVuZGVyaW5nID0gYywgZC50YWlsID0gYy5zaWJsaW5nLCBkLmxhc3RFZmZlY3QgPSBiLmxhc3RFZmZlY3QsIGQucmVuZGVyaW5nU3RhcnRUaW1lID0gJGYoKSwgYy5zaWJsaW5nID0gbnVsbCwgYiA9IE0uY3VycmVudCwgSShNLCBlID8gYiAmIDEgfCAyIDogYiAmIDEpLCBjKSA6IG51bGw7XG4gIH1cblxuICB0aHJvdyBFcnJvcih1KDE1NiwgYi50YWcpKTtcbn1cblxuZnVuY3Rpb24gemkoYSkge1xuICBzd2l0Y2ggKGEudGFnKSB7XG4gICAgY2FzZSAxOlxuICAgICAgTChhLnR5cGUpICYmIERmKCk7XG4gICAgICB2YXIgYiA9IGEuZWZmZWN0VGFnO1xuICAgICAgcmV0dXJuIGIgJiA0MDk2ID8gKGEuZWZmZWN0VGFnID0gYiAmIC00MDk3IHwgNjQsIGEpIDogbnVsbDtcblxuICAgIGNhc2UgMzpcbiAgICAgIGVoKCk7XG4gICAgICBIKEspO1xuICAgICAgSChKKTtcbiAgICAgIGIgPSBhLmVmZmVjdFRhZztcbiAgICAgIGlmICgwICE9PSAoYiAmIDY0KSkgdGhyb3cgRXJyb3IodSgyODUpKTtcbiAgICAgIGEuZWZmZWN0VGFnID0gYiAmIC00MDk3IHwgNjQ7XG4gICAgICByZXR1cm4gYTtcblxuICAgIGNhc2UgNTpcbiAgICAgIHJldHVybiBnaChhKSwgbnVsbDtcblxuICAgIGNhc2UgMTM6XG4gICAgICByZXR1cm4gSChNKSwgYiA9IGEuZWZmZWN0VGFnLCBiICYgNDA5NiA/IChhLmVmZmVjdFRhZyA9IGIgJiAtNDA5NyB8IDY0LCBhKSA6IG51bGw7XG5cbiAgICBjYXNlIDE5OlxuICAgICAgcmV0dXJuIEgoTSksIG51bGw7XG5cbiAgICBjYXNlIDQ6XG4gICAgICByZXR1cm4gZWgoKSwgbnVsbDtcblxuICAgIGNhc2UgMTA6XG4gICAgICByZXR1cm4gb2coYSksIG51bGw7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cblxuZnVuY3Rpb24gQWkoYSwgYikge1xuICByZXR1cm4ge1xuICAgIHZhbHVlOiBhLFxuICAgIHNvdXJjZTogYixcbiAgICBzdGFjazogcWIoYilcbiAgfTtcbn1cblxudmFyIEJpID0gXCJmdW5jdGlvblwiID09PSB0eXBlb2YgV2Vha1NldCA/IFdlYWtTZXQgOiBTZXQ7XG5cbmZ1bmN0aW9uIENpKGEsIGIpIHtcbiAgdmFyIGMgPSBiLnNvdXJjZSxcbiAgICAgIGQgPSBiLnN0YWNrO1xuICBudWxsID09PSBkICYmIG51bGwgIT09IGMgJiYgKGQgPSBxYihjKSk7XG4gIG51bGwgIT09IGMgJiYgcGIoYy50eXBlKTtcbiAgYiA9IGIudmFsdWU7XG4gIG51bGwgIT09IGEgJiYgMSA9PT0gYS50YWcgJiYgcGIoYS50eXBlKTtcblxuICB0cnkge1xuICAgIGNvbnNvbGUuZXJyb3IoYik7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgIHRocm93IGU7XG4gICAgfSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gRGkoYSwgYikge1xuICB0cnkge1xuICAgIGIucHJvcHMgPSBhLm1lbW9pemVkUHJvcHMsIGIuc3RhdGUgPSBhLm1lbW9pemVkU3RhdGUsIGIuY29tcG9uZW50V2lsbFVubW91bnQoKTtcbiAgfSBjYXRjaCAoYykge1xuICAgIEVpKGEsIGMpO1xuICB9XG59XG5cbmZ1bmN0aW9uIEZpKGEpIHtcbiAgdmFyIGIgPSBhLnJlZjtcbiAgaWYgKG51bGwgIT09IGIpIGlmIChcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBiKSB0cnkge1xuICAgIGIobnVsbCk7XG4gIH0gY2F0Y2ggKGMpIHtcbiAgICBFaShhLCBjKTtcbiAgfSBlbHNlIGIuY3VycmVudCA9IG51bGw7XG59XG5cbmZ1bmN0aW9uIEdpKGEsIGIpIHtcbiAgc3dpdGNoIChiLnRhZykge1xuICAgIGNhc2UgMDpcbiAgICBjYXNlIDExOlxuICAgIGNhc2UgMTU6XG4gICAgY2FzZSAyMjpcbiAgICAgIHJldHVybjtcblxuICAgIGNhc2UgMTpcbiAgICAgIGlmIChiLmVmZmVjdFRhZyAmIDI1NiAmJiBudWxsICE9PSBhKSB7XG4gICAgICAgIHZhciBjID0gYS5tZW1vaXplZFByb3BzLFxuICAgICAgICAgICAgZCA9IGEubWVtb2l6ZWRTdGF0ZTtcbiAgICAgICAgYSA9IGIuc3RhdGVOb2RlO1xuICAgICAgICBiID0gYS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShiLmVsZW1lbnRUeXBlID09PSBiLnR5cGUgPyBjIDogaWcoYi50eXBlLCBjKSwgZCk7XG4gICAgICAgIGEuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUgPSBiO1xuICAgICAgfVxuXG4gICAgICByZXR1cm47XG5cbiAgICBjYXNlIDM6XG4gICAgY2FzZSA1OlxuICAgIGNhc2UgNjpcbiAgICBjYXNlIDQ6XG4gICAgY2FzZSAxNzpcbiAgICAgIHJldHVybjtcbiAgfVxuXG4gIHRocm93IEVycm9yKHUoMTYzKSk7XG59XG5cbmZ1bmN0aW9uIEhpKGEsIGIpIHtcbiAgYiA9IGIudXBkYXRlUXVldWU7XG4gIGIgPSBudWxsICE9PSBiID8gYi5sYXN0RWZmZWN0IDogbnVsbDtcblxuICBpZiAobnVsbCAhPT0gYikge1xuICAgIHZhciBjID0gYiA9IGIubmV4dDtcblxuICAgIGRvIHtcbiAgICAgIGlmICgoYy50YWcgJiBhKSA9PT0gYSkge1xuICAgICAgICB2YXIgZCA9IGMuZGVzdHJveTtcbiAgICAgICAgYy5kZXN0cm95ID0gdm9pZCAwO1xuICAgICAgICB2b2lkIDAgIT09IGQgJiYgZCgpO1xuICAgICAgfVxuXG4gICAgICBjID0gYy5uZXh0O1xuICAgIH0gd2hpbGUgKGMgIT09IGIpO1xuICB9XG59XG5cbmZ1bmN0aW9uIElpKGEsIGIpIHtcbiAgYiA9IGIudXBkYXRlUXVldWU7XG4gIGIgPSBudWxsICE9PSBiID8gYi5sYXN0RWZmZWN0IDogbnVsbDtcblxuICBpZiAobnVsbCAhPT0gYikge1xuICAgIHZhciBjID0gYiA9IGIubmV4dDtcblxuICAgIGRvIHtcbiAgICAgIGlmICgoYy50YWcgJiBhKSA9PT0gYSkge1xuICAgICAgICB2YXIgZCA9IGMuY3JlYXRlO1xuICAgICAgICBjLmRlc3Ryb3kgPSBkKCk7XG4gICAgICB9XG5cbiAgICAgIGMgPSBjLm5leHQ7XG4gICAgfSB3aGlsZSAoYyAhPT0gYik7XG4gIH1cbn1cblxuZnVuY3Rpb24gSmkoYSwgYiwgYykge1xuICBzd2l0Y2ggKGMudGFnKSB7XG4gICAgY2FzZSAwOlxuICAgIGNhc2UgMTE6XG4gICAgY2FzZSAxNTpcbiAgICBjYXNlIDIyOlxuICAgICAgSWkoMywgYyk7XG4gICAgICByZXR1cm47XG5cbiAgICBjYXNlIDE6XG4gICAgICBhID0gYy5zdGF0ZU5vZGU7XG4gICAgICBpZiAoYy5lZmZlY3RUYWcgJiA0KSBpZiAobnVsbCA9PT0gYikgYS5jb21wb25lbnREaWRNb3VudCgpO2Vsc2Uge1xuICAgICAgICB2YXIgZCA9IGMuZWxlbWVudFR5cGUgPT09IGMudHlwZSA/IGIubWVtb2l6ZWRQcm9wcyA6IGlnKGMudHlwZSwgYi5tZW1vaXplZFByb3BzKTtcbiAgICAgICAgYS5jb21wb25lbnREaWRVcGRhdGUoZCwgYi5tZW1vaXplZFN0YXRlLCBhLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKTtcbiAgICAgIH1cbiAgICAgIGIgPSBjLnVwZGF0ZVF1ZXVlO1xuICAgICAgbnVsbCAhPT0gYiAmJiBDZyhjLCBiLCBhKTtcbiAgICAgIHJldHVybjtcblxuICAgIGNhc2UgMzpcbiAgICAgIGIgPSBjLnVwZGF0ZVF1ZXVlO1xuXG4gICAgICBpZiAobnVsbCAhPT0gYikge1xuICAgICAgICBhID0gbnVsbDtcbiAgICAgICAgaWYgKG51bGwgIT09IGMuY2hpbGQpIHN3aXRjaCAoYy5jaGlsZC50YWcpIHtcbiAgICAgICAgICBjYXNlIDU6XG4gICAgICAgICAgICBhID0gYy5jaGlsZC5zdGF0ZU5vZGU7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgIGEgPSBjLmNoaWxkLnN0YXRlTm9kZTtcbiAgICAgICAgfVxuICAgICAgICBDZyhjLCBiLCBhKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuO1xuXG4gICAgY2FzZSA1OlxuICAgICAgYSA9IGMuc3RhdGVOb2RlO1xuICAgICAgbnVsbCA9PT0gYiAmJiBjLmVmZmVjdFRhZyAmIDQgJiYgRmQoYy50eXBlLCBjLm1lbW9pemVkUHJvcHMpICYmIGEuZm9jdXMoKTtcbiAgICAgIHJldHVybjtcblxuICAgIGNhc2UgNjpcbiAgICAgIHJldHVybjtcblxuICAgIGNhc2UgNDpcbiAgICAgIHJldHVybjtcblxuICAgIGNhc2UgMTI6XG4gICAgICByZXR1cm47XG5cbiAgICBjYXNlIDEzOlxuICAgICAgbnVsbCA9PT0gYy5tZW1vaXplZFN0YXRlICYmIChjID0gYy5hbHRlcm5hdGUsIG51bGwgIT09IGMgJiYgKGMgPSBjLm1lbW9pemVkU3RhdGUsIG51bGwgIT09IGMgJiYgKGMgPSBjLmRlaHlkcmF0ZWQsIG51bGwgIT09IGMgJiYgVmMoYykpKSk7XG4gICAgICByZXR1cm47XG5cbiAgICBjYXNlIDE5OlxuICAgIGNhc2UgMTc6XG4gICAgY2FzZSAyMDpcbiAgICBjYXNlIDIxOlxuICAgICAgcmV0dXJuO1xuICB9XG5cbiAgdGhyb3cgRXJyb3IodSgxNjMpKTtcbn1cblxuZnVuY3Rpb24gS2koYSwgYiwgYykge1xuICBcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBMaSAmJiBMaShiKTtcblxuICBzd2l0Y2ggKGIudGFnKSB7XG4gICAgY2FzZSAwOlxuICAgIGNhc2UgMTE6XG4gICAgY2FzZSAxNDpcbiAgICBjYXNlIDE1OlxuICAgIGNhc2UgMjI6XG4gICAgICBhID0gYi51cGRhdGVRdWV1ZTtcblxuICAgICAgaWYgKG51bGwgIT09IGEgJiYgKGEgPSBhLmxhc3RFZmZlY3QsIG51bGwgIT09IGEpKSB7XG4gICAgICAgIHZhciBkID0gYS5uZXh0O1xuICAgICAgICBjZyg5NyA8IGMgPyA5NyA6IGMsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICB2YXIgYSA9IGQ7XG5cbiAgICAgICAgICBkbyB7XG4gICAgICAgICAgICB2YXIgYyA9IGEuZGVzdHJveTtcblxuICAgICAgICAgICAgaWYgKHZvaWQgMCAhPT0gYykge1xuICAgICAgICAgICAgICB2YXIgZyA9IGI7XG5cbiAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjKCk7XG4gICAgICAgICAgICAgIH0gY2F0Y2ggKGgpIHtcbiAgICAgICAgICAgICAgICBFaShnLCBoKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBhID0gYS5uZXh0O1xuICAgICAgICAgIH0gd2hpbGUgKGEgIT09IGQpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlIDE6XG4gICAgICBGaShiKTtcbiAgICAgIGMgPSBiLnN0YXRlTm9kZTtcbiAgICAgIFwiZnVuY3Rpb25cIiA9PT0gdHlwZW9mIGMuY29tcG9uZW50V2lsbFVubW91bnQgJiYgRGkoYiwgYyk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgNTpcbiAgICAgIEZpKGIpO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlIDQ6XG4gICAgICBNaShhLCBiLCBjKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBOaShhKSB7XG4gIHZhciBiID0gYS5hbHRlcm5hdGU7XG4gIGEucmV0dXJuID0gbnVsbDtcbiAgYS5jaGlsZCA9IG51bGw7XG4gIGEubWVtb2l6ZWRTdGF0ZSA9IG51bGw7XG4gIGEudXBkYXRlUXVldWUgPSBudWxsO1xuICBhLmRlcGVuZGVuY2llcyA9IG51bGw7XG4gIGEuYWx0ZXJuYXRlID0gbnVsbDtcbiAgYS5maXJzdEVmZmVjdCA9IG51bGw7XG4gIGEubGFzdEVmZmVjdCA9IG51bGw7XG4gIGEucGVuZGluZ1Byb3BzID0gbnVsbDtcbiAgYS5tZW1vaXplZFByb3BzID0gbnVsbDtcbiAgYS5zdGF0ZU5vZGUgPSBudWxsO1xuICBudWxsICE9PSBiICYmIE5pKGIpO1xufVxuXG5mdW5jdGlvbiBPaShhKSB7XG4gIHJldHVybiA1ID09PSBhLnRhZyB8fCAzID09PSBhLnRhZyB8fCA0ID09PSBhLnRhZztcbn1cblxuZnVuY3Rpb24gUGkoYSkge1xuICBhOiB7XG4gICAgZm9yICh2YXIgYiA9IGEucmV0dXJuOyBudWxsICE9PSBiOykge1xuICAgICAgaWYgKE9pKGIpKSB7XG4gICAgICAgIHZhciBjID0gYjtcbiAgICAgICAgYnJlYWsgYTtcbiAgICAgIH1cblxuICAgICAgYiA9IGIucmV0dXJuO1xuICAgIH1cblxuICAgIHRocm93IEVycm9yKHUoMTYwKSk7XG4gIH1cblxuICBiID0gYy5zdGF0ZU5vZGU7XG5cbiAgc3dpdGNoIChjLnRhZykge1xuICAgIGNhc2UgNTpcbiAgICAgIHZhciBkID0gITE7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgMzpcbiAgICAgIGIgPSBiLmNvbnRhaW5lckluZm87XG4gICAgICBkID0gITA7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgNDpcbiAgICAgIGIgPSBiLmNvbnRhaW5lckluZm87XG4gICAgICBkID0gITA7XG4gICAgICBicmVhaztcblxuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBFcnJvcih1KDE2MSkpO1xuICB9XG5cbiAgYy5lZmZlY3RUYWcgJiAxNiAmJiAoUmIoYiwgXCJcIiksIGMuZWZmZWN0VGFnICY9IC0xNyk7XG5cbiAgYTogYjogZm9yIChjID0gYTs7KSB7XG4gICAgZm9yICg7IG51bGwgPT09IGMuc2libGluZzspIHtcbiAgICAgIGlmIChudWxsID09PSBjLnJldHVybiB8fCBPaShjLnJldHVybikpIHtcbiAgICAgICAgYyA9IG51bGw7XG4gICAgICAgIGJyZWFrIGE7XG4gICAgICB9XG5cbiAgICAgIGMgPSBjLnJldHVybjtcbiAgICB9XG5cbiAgICBjLnNpYmxpbmcucmV0dXJuID0gYy5yZXR1cm47XG5cbiAgICBmb3IgKGMgPSBjLnNpYmxpbmc7IDUgIT09IGMudGFnICYmIDYgIT09IGMudGFnICYmIDE4ICE9PSBjLnRhZzspIHtcbiAgICAgIGlmIChjLmVmZmVjdFRhZyAmIDIpIGNvbnRpbnVlIGI7XG4gICAgICBpZiAobnVsbCA9PT0gYy5jaGlsZCB8fCA0ID09PSBjLnRhZykgY29udGludWUgYjtlbHNlIGMuY2hpbGQucmV0dXJuID0gYywgYyA9IGMuY2hpbGQ7XG4gICAgfVxuXG4gICAgaWYgKCEoYy5lZmZlY3RUYWcgJiAyKSkge1xuICAgICAgYyA9IGMuc3RhdGVOb2RlO1xuICAgICAgYnJlYWsgYTtcbiAgICB9XG4gIH1cblxuICBkID8gUWkoYSwgYywgYikgOiBSaShhLCBjLCBiKTtcbn1cblxuZnVuY3Rpb24gUWkoYSwgYiwgYykge1xuICB2YXIgZCA9IGEudGFnLFxuICAgICAgZSA9IDUgPT09IGQgfHwgNiA9PT0gZDtcbiAgaWYgKGUpIGEgPSBlID8gYS5zdGF0ZU5vZGUgOiBhLnN0YXRlTm9kZS5pbnN0YW5jZSwgYiA/IDggPT09IGMubm9kZVR5cGUgPyBjLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGEsIGIpIDogYy5pbnNlcnRCZWZvcmUoYSwgYikgOiAoOCA9PT0gYy5ub2RlVHlwZSA/IChiID0gYy5wYXJlbnROb2RlLCBiLmluc2VydEJlZm9yZShhLCBjKSkgOiAoYiA9IGMsIGIuYXBwZW5kQ2hpbGQoYSkpLCBjID0gYy5fcmVhY3RSb290Q29udGFpbmVyLCBudWxsICE9PSBjICYmIHZvaWQgMCAhPT0gYyB8fCBudWxsICE9PSBiLm9uY2xpY2sgfHwgKGIub25jbGljayA9IHNkKSk7ZWxzZSBpZiAoNCAhPT0gZCAmJiAoYSA9IGEuY2hpbGQsIG51bGwgIT09IGEpKSBmb3IgKFFpKGEsIGIsIGMpLCBhID0gYS5zaWJsaW5nOyBudWxsICE9PSBhOykge1xuICAgIFFpKGEsIGIsIGMpLCBhID0gYS5zaWJsaW5nO1xuICB9XG59XG5cbmZ1bmN0aW9uIFJpKGEsIGIsIGMpIHtcbiAgdmFyIGQgPSBhLnRhZyxcbiAgICAgIGUgPSA1ID09PSBkIHx8IDYgPT09IGQ7XG4gIGlmIChlKSBhID0gZSA/IGEuc3RhdGVOb2RlIDogYS5zdGF0ZU5vZGUuaW5zdGFuY2UsIGIgPyBjLmluc2VydEJlZm9yZShhLCBiKSA6IGMuYXBwZW5kQ2hpbGQoYSk7ZWxzZSBpZiAoNCAhPT0gZCAmJiAoYSA9IGEuY2hpbGQsIG51bGwgIT09IGEpKSBmb3IgKFJpKGEsIGIsIGMpLCBhID0gYS5zaWJsaW5nOyBudWxsICE9PSBhOykge1xuICAgIFJpKGEsIGIsIGMpLCBhID0gYS5zaWJsaW5nO1xuICB9XG59XG5cbmZ1bmN0aW9uIE1pKGEsIGIsIGMpIHtcbiAgZm9yICh2YXIgZCA9IGIsIGUgPSAhMSwgZiwgZzs7KSB7XG4gICAgaWYgKCFlKSB7XG4gICAgICBlID0gZC5yZXR1cm47XG5cbiAgICAgIGE6IGZvciAoOzspIHtcbiAgICAgICAgaWYgKG51bGwgPT09IGUpIHRocm93IEVycm9yKHUoMTYwKSk7XG4gICAgICAgIGYgPSBlLnN0YXRlTm9kZTtcblxuICAgICAgICBzd2l0Y2ggKGUudGFnKSB7XG4gICAgICAgICAgY2FzZSA1OlxuICAgICAgICAgICAgZyA9ICExO1xuICAgICAgICAgICAgYnJlYWsgYTtcblxuICAgICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgIGYgPSBmLmNvbnRhaW5lckluZm87XG4gICAgICAgICAgICBnID0gITA7XG4gICAgICAgICAgICBicmVhayBhO1xuXG4gICAgICAgICAgY2FzZSA0OlxuICAgICAgICAgICAgZiA9IGYuY29udGFpbmVySW5mbztcbiAgICAgICAgICAgIGcgPSAhMDtcbiAgICAgICAgICAgIGJyZWFrIGE7XG4gICAgICAgIH1cblxuICAgICAgICBlID0gZS5yZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGUgPSAhMDtcbiAgICB9XG5cbiAgICBpZiAoNSA9PT0gZC50YWcgfHwgNiA9PT0gZC50YWcpIHtcbiAgICAgIGE6IGZvciAodmFyIGggPSBhLCBrID0gZCwgbCA9IGMsIG0gPSBrOzspIHtcbiAgICAgICAgaWYgKEtpKGgsIG0sIGwpLCBudWxsICE9PSBtLmNoaWxkICYmIDQgIT09IG0udGFnKSBtLmNoaWxkLnJldHVybiA9IG0sIG0gPSBtLmNoaWxkO2Vsc2Uge1xuICAgICAgICAgIGlmIChtID09PSBrKSBicmVhayBhO1xuXG4gICAgICAgICAgZm9yICg7IG51bGwgPT09IG0uc2libGluZzspIHtcbiAgICAgICAgICAgIGlmIChudWxsID09PSBtLnJldHVybiB8fCBtLnJldHVybiA9PT0gaykgYnJlYWsgYTtcbiAgICAgICAgICAgIG0gPSBtLnJldHVybjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBtLnNpYmxpbmcucmV0dXJuID0gbS5yZXR1cm47XG4gICAgICAgICAgbSA9IG0uc2libGluZztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBnID8gKGggPSBmLCBrID0gZC5zdGF0ZU5vZGUsIDggPT09IGgubm9kZVR5cGUgPyBoLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoaykgOiBoLnJlbW92ZUNoaWxkKGspKSA6IGYucmVtb3ZlQ2hpbGQoZC5zdGF0ZU5vZGUpO1xuICAgIH0gZWxzZSBpZiAoNCA9PT0gZC50YWcpIHtcbiAgICAgIGlmIChudWxsICE9PSBkLmNoaWxkKSB7XG4gICAgICAgIGYgPSBkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO1xuICAgICAgICBnID0gITA7XG4gICAgICAgIGQuY2hpbGQucmV0dXJuID0gZDtcbiAgICAgICAgZCA9IGQuY2hpbGQ7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoS2koYSwgZCwgYyksIG51bGwgIT09IGQuY2hpbGQpIHtcbiAgICAgIGQuY2hpbGQucmV0dXJuID0gZDtcbiAgICAgIGQgPSBkLmNoaWxkO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgaWYgKGQgPT09IGIpIGJyZWFrO1xuXG4gICAgZm9yICg7IG51bGwgPT09IGQuc2libGluZzspIHtcbiAgICAgIGlmIChudWxsID09PSBkLnJldHVybiB8fCBkLnJldHVybiA9PT0gYikgcmV0dXJuO1xuICAgICAgZCA9IGQucmV0dXJuO1xuICAgICAgNCA9PT0gZC50YWcgJiYgKGUgPSAhMSk7XG4gICAgfVxuXG4gICAgZC5zaWJsaW5nLnJldHVybiA9IGQucmV0dXJuO1xuICAgIGQgPSBkLnNpYmxpbmc7XG4gIH1cbn1cblxuZnVuY3Rpb24gU2koYSwgYikge1xuICBzd2l0Y2ggKGIudGFnKSB7XG4gICAgY2FzZSAwOlxuICAgIGNhc2UgMTE6XG4gICAgY2FzZSAxNDpcbiAgICBjYXNlIDE1OlxuICAgIGNhc2UgMjI6XG4gICAgICBIaSgzLCBiKTtcbiAgICAgIHJldHVybjtcblxuICAgIGNhc2UgMTpcbiAgICAgIHJldHVybjtcblxuICAgIGNhc2UgNTpcbiAgICAgIHZhciBjID0gYi5zdGF0ZU5vZGU7XG5cbiAgICAgIGlmIChudWxsICE9IGMpIHtcbiAgICAgICAgdmFyIGQgPSBiLm1lbW9pemVkUHJvcHMsXG4gICAgICAgICAgICBlID0gbnVsbCAhPT0gYSA/IGEubWVtb2l6ZWRQcm9wcyA6IGQ7XG4gICAgICAgIGEgPSBiLnR5cGU7XG4gICAgICAgIHZhciBmID0gYi51cGRhdGVRdWV1ZTtcbiAgICAgICAgYi51cGRhdGVRdWV1ZSA9IG51bGw7XG5cbiAgICAgICAgaWYgKG51bGwgIT09IGYpIHtcbiAgICAgICAgICBjW05kXSA9IGQ7XG4gICAgICAgICAgXCJpbnB1dFwiID09PSBhICYmIFwicmFkaW9cIiA9PT0gZC50eXBlICYmIG51bGwgIT0gZC5uYW1lICYmIEJiKGMsIGQpO1xuICAgICAgICAgIHBkKGEsIGUpO1xuICAgICAgICAgIGIgPSBwZChhLCBkKTtcblxuICAgICAgICAgIGZvciAoZSA9IDA7IGUgPCBmLmxlbmd0aDsgZSArPSAyKSB7XG4gICAgICAgICAgICB2YXIgZyA9IGZbZV0sXG4gICAgICAgICAgICAgICAgaCA9IGZbZSArIDFdO1xuICAgICAgICAgICAgXCJzdHlsZVwiID09PSBnID8gbWQoYywgaCkgOiBcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIgPT09IGcgPyBRYihjLCBoKSA6IFwiY2hpbGRyZW5cIiA9PT0gZyA/IFJiKGMsIGgpIDogWGEoYywgZywgaCwgYik7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgc3dpdGNoIChhKSB7XG4gICAgICAgICAgICBjYXNlIFwiaW5wdXRcIjpcbiAgICAgICAgICAgICAgQ2IoYywgZCk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIFwidGV4dGFyZWFcIjpcbiAgICAgICAgICAgICAgS2IoYywgZCk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIFwic2VsZWN0XCI6XG4gICAgICAgICAgICAgIGIgPSBjLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGUsIGMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSA9ICEhZC5tdWx0aXBsZSwgYSA9IGQudmFsdWUsIG51bGwgIT0gYSA/IEhiKGMsICEhZC5tdWx0aXBsZSwgYSwgITEpIDogYiAhPT0gISFkLm11bHRpcGxlICYmIChudWxsICE9IGQuZGVmYXVsdFZhbHVlID8gSGIoYywgISFkLm11bHRpcGxlLCBkLmRlZmF1bHRWYWx1ZSwgITApIDogSGIoYywgISFkLm11bHRpcGxlLCBkLm11bHRpcGxlID8gW10gOiBcIlwiLCAhMSkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm47XG5cbiAgICBjYXNlIDY6XG4gICAgICBpZiAobnVsbCA9PT0gYi5zdGF0ZU5vZGUpIHRocm93IEVycm9yKHUoMTYyKSk7XG4gICAgICBiLnN0YXRlTm9kZS5ub2RlVmFsdWUgPSBiLm1lbW9pemVkUHJvcHM7XG4gICAgICByZXR1cm47XG5cbiAgICBjYXNlIDM6XG4gICAgICBiID0gYi5zdGF0ZU5vZGU7XG4gICAgICBiLmh5ZHJhdGUgJiYgKGIuaHlkcmF0ZSA9ICExLCBWYyhiLmNvbnRhaW5lckluZm8pKTtcbiAgICAgIHJldHVybjtcblxuICAgIGNhc2UgMTI6XG4gICAgICByZXR1cm47XG5cbiAgICBjYXNlIDEzOlxuICAgICAgYyA9IGI7XG4gICAgICBudWxsID09PSBiLm1lbW9pemVkU3RhdGUgPyBkID0gITEgOiAoZCA9ICEwLCBjID0gYi5jaGlsZCwgVGkgPSAkZigpKTtcbiAgICAgIGlmIChudWxsICE9PSBjKSBhOiBmb3IgKGEgPSBjOzspIHtcbiAgICAgICAgaWYgKDUgPT09IGEudGFnKSBmID0gYS5zdGF0ZU5vZGUsIGQgPyAoZiA9IGYuc3R5bGUsIFwiZnVuY3Rpb25cIiA9PT0gdHlwZW9mIGYuc2V0UHJvcGVydHkgPyBmLnNldFByb3BlcnR5KFwiZGlzcGxheVwiLCBcIm5vbmVcIiwgXCJpbXBvcnRhbnRcIikgOiBmLmRpc3BsYXkgPSBcIm5vbmVcIikgOiAoZiA9IGEuc3RhdGVOb2RlLCBlID0gYS5tZW1vaXplZFByb3BzLnN0eWxlLCBlID0gdm9pZCAwICE9PSBlICYmIG51bGwgIT09IGUgJiYgZS5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIikgPyBlLmRpc3BsYXkgOiBudWxsLCBmLnN0eWxlLmRpc3BsYXkgPSBsZChcImRpc3BsYXlcIiwgZSkpO2Vsc2UgaWYgKDYgPT09IGEudGFnKSBhLnN0YXRlTm9kZS5ub2RlVmFsdWUgPSBkID8gXCJcIiA6IGEubWVtb2l6ZWRQcm9wcztlbHNlIGlmICgxMyA9PT0gYS50YWcgJiYgbnVsbCAhPT0gYS5tZW1vaXplZFN0YXRlICYmIG51bGwgPT09IGEubWVtb2l6ZWRTdGF0ZS5kZWh5ZHJhdGVkKSB7XG4gICAgICAgICAgZiA9IGEuY2hpbGQuc2libGluZztcbiAgICAgICAgICBmLnJldHVybiA9IGE7XG4gICAgICAgICAgYSA9IGY7XG4gICAgICAgICAgY29udGludWU7XG4gICAgICAgIH0gZWxzZSBpZiAobnVsbCAhPT0gYS5jaGlsZCkge1xuICAgICAgICAgIGEuY2hpbGQucmV0dXJuID0gYTtcbiAgICAgICAgICBhID0gYS5jaGlsZDtcbiAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYSA9PT0gYykgYnJlYWs7XG5cbiAgICAgICAgZm9yICg7IG51bGwgPT09IGEuc2libGluZzspIHtcbiAgICAgICAgICBpZiAobnVsbCA9PT0gYS5yZXR1cm4gfHwgYS5yZXR1cm4gPT09IGMpIGJyZWFrIGE7XG4gICAgICAgICAgYSA9IGEucmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgYS5zaWJsaW5nLnJldHVybiA9IGEucmV0dXJuO1xuICAgICAgICBhID0gYS5zaWJsaW5nO1xuICAgICAgfVxuICAgICAgVWkoYik7XG4gICAgICByZXR1cm47XG5cbiAgICBjYXNlIDE5OlxuICAgICAgVWkoYik7XG4gICAgICByZXR1cm47XG5cbiAgICBjYXNlIDE3OlxuICAgICAgcmV0dXJuO1xuICB9XG5cbiAgdGhyb3cgRXJyb3IodSgxNjMpKTtcbn1cblxuZnVuY3Rpb24gVWkoYSkge1xuICB2YXIgYiA9IGEudXBkYXRlUXVldWU7XG5cbiAgaWYgKG51bGwgIT09IGIpIHtcbiAgICBhLnVwZGF0ZVF1ZXVlID0gbnVsbDtcbiAgICB2YXIgYyA9IGEuc3RhdGVOb2RlO1xuICAgIG51bGwgPT09IGMgJiYgKGMgPSBhLnN0YXRlTm9kZSA9IG5ldyBCaSgpKTtcbiAgICBiLmZvckVhY2goZnVuY3Rpb24gKGIpIHtcbiAgICAgIHZhciBkID0gVmkuYmluZChudWxsLCBhLCBiKTtcbiAgICAgIGMuaGFzKGIpIHx8IChjLmFkZChiKSwgYi50aGVuKGQsIGQpKTtcbiAgICB9KTtcbiAgfVxufVxuXG52YXIgV2kgPSBcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBXZWFrTWFwID8gV2Vha01hcCA6IE1hcDtcblxuZnVuY3Rpb24gWGkoYSwgYiwgYykge1xuICBjID0gd2coYywgbnVsbCk7XG4gIGMudGFnID0gMztcbiAgYy5wYXlsb2FkID0ge1xuICAgIGVsZW1lbnQ6IG51bGxcbiAgfTtcbiAgdmFyIGQgPSBiLnZhbHVlO1xuXG4gIGMuY2FsbGJhY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgWWkgfHwgKFlpID0gITAsIFppID0gZCk7XG4gICAgQ2koYSwgYik7XG4gIH07XG5cbiAgcmV0dXJuIGM7XG59XG5cbmZ1bmN0aW9uICRpKGEsIGIsIGMpIHtcbiAgYyA9IHdnKGMsIG51bGwpO1xuICBjLnRhZyA9IDM7XG4gIHZhciBkID0gYS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtcblxuICBpZiAoXCJmdW5jdGlvblwiID09PSB0eXBlb2YgZCkge1xuICAgIHZhciBlID0gYi52YWx1ZTtcblxuICAgIGMucGF5bG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIENpKGEsIGIpO1xuICAgICAgcmV0dXJuIGQoZSk7XG4gICAgfTtcbiAgfVxuXG4gIHZhciBmID0gYS5zdGF0ZU5vZGU7XG4gIG51bGwgIT09IGYgJiYgXCJmdW5jdGlvblwiID09PSB0eXBlb2YgZi5jb21wb25lbnREaWRDYXRjaCAmJiAoYy5jYWxsYmFjayA9IGZ1bmN0aW9uICgpIHtcbiAgICBcImZ1bmN0aW9uXCIgIT09IHR5cGVvZiBkICYmIChudWxsID09PSBhaiA/IGFqID0gbmV3IFNldChbdGhpc10pIDogYWouYWRkKHRoaXMpLCBDaShhLCBiKSk7XG4gICAgdmFyIGMgPSBiLnN0YWNrO1xuICAgIHRoaXMuY29tcG9uZW50RGlkQ2F0Y2goYi52YWx1ZSwge1xuICAgICAgY29tcG9uZW50U3RhY2s6IG51bGwgIT09IGMgPyBjIDogXCJcIlxuICAgIH0pO1xuICB9KTtcbiAgcmV0dXJuIGM7XG59XG5cbnZhciBiaiA9IE1hdGguY2VpbCxcbiAgICBjaiA9IFdhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsXG4gICAgZGogPSBXYS5SZWFjdEN1cnJlbnRPd25lcixcbiAgICBWID0gMCxcbiAgICBlaiA9IDgsXG4gICAgZmogPSAxNixcbiAgICBnaiA9IDMyLFxuICAgIHRpID0gMCxcbiAgICBoaiA9IDEsXG4gICAgaWogPSAyLFxuICAgIHVpID0gMyxcbiAgICB2aSA9IDQsXG4gICAgamogPSA1LFxuICAgIFcgPSBWLFxuICAgIFQgPSBudWxsLFxuICAgIFggPSBudWxsLFxuICAgIFUgPSAwLFxuICAgIFMgPSB0aSxcbiAgICBraiA9IG51bGwsXG4gICAgbGogPSAxMDczNzQxODIzLFxuICAgIG1qID0gMTA3Mzc0MTgyMyxcbiAgICBuaiA9IG51bGwsXG4gICAgd2kgPSAwLFxuICAgIG9qID0gITEsXG4gICAgVGkgPSAwLFxuICAgIHBqID0gNTAwLFxuICAgIFkgPSBudWxsLFxuICAgIFlpID0gITEsXG4gICAgWmkgPSBudWxsLFxuICAgIGFqID0gbnVsbCxcbiAgICBxaiA9ICExLFxuICAgIHJqID0gbnVsbCxcbiAgICBzaiA9IDkwLFxuICAgIHRqID0gbnVsbCxcbiAgICB1aiA9IDAsXG4gICAgdmogPSBudWxsLFxuICAgIHdqID0gMDtcblxuZnVuY3Rpb24gR2coKSB7XG4gIHJldHVybiAoVyAmIChmaiB8IGdqKSkgIT09IFYgPyAxMDczNzQxODIxIC0gKCRmKCkgLyAxMCB8IDApIDogMCAhPT0gd2ogPyB3aiA6IHdqID0gMTA3Mzc0MTgyMSAtICgkZigpIC8gMTAgfCAwKTtcbn1cblxuZnVuY3Rpb24gSGcoYSwgYiwgYykge1xuICBiID0gYi5tb2RlO1xuICBpZiAoMCA9PT0gKGIgJiAyKSkgcmV0dXJuIDEwNzM3NDE4MjM7XG4gIHZhciBkID0gYWcoKTtcbiAgaWYgKDAgPT09IChiICYgNCkpIHJldHVybiA5OSA9PT0gZCA/IDEwNzM3NDE4MjMgOiAxMDczNzQxODIyO1xuICBpZiAoKFcgJiBmaikgIT09IFYpIHJldHVybiBVO1xuICBpZiAobnVsbCAhPT0gYykgYSA9IGhnKGEsIGMudGltZW91dE1zIHwgMCB8fCA1RTMsIDI1MCk7ZWxzZSBzd2l0Y2ggKGQpIHtcbiAgICBjYXNlIDk5OlxuICAgICAgYSA9IDEwNzM3NDE4MjM7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgOTg6XG4gICAgICBhID0gaGcoYSwgMTUwLCAxMDApO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlIDk3OlxuICAgIGNhc2UgOTY6XG4gICAgICBhID0gaGcoYSwgNUUzLCAyNTApO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlIDk1OlxuICAgICAgYSA9IDI7XG4gICAgICBicmVhaztcblxuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBFcnJvcih1KDMyNikpO1xuICB9XG4gIG51bGwgIT09IFQgJiYgYSA9PT0gVSAmJiAtLWE7XG4gIHJldHVybiBhO1xufVxuXG5mdW5jdGlvbiBJZyhhLCBiKSB7XG4gIGlmICg1MCA8IHVqKSB0aHJvdyB1aiA9IDAsIHZqID0gbnVsbCwgRXJyb3IodSgxODUpKTtcbiAgYSA9IHhqKGEsIGIpO1xuXG4gIGlmIChudWxsICE9PSBhKSB7XG4gICAgdmFyIGMgPSBhZygpO1xuICAgIDEwNzM3NDE4MjMgPT09IGIgPyAoVyAmIGVqKSAhPT0gViAmJiAoVyAmIChmaiB8IGdqKSkgPT09IFYgPyB5aihhKSA6IChaKGEpLCBXID09PSBWICYmIGdnKCkpIDogWihhKTtcbiAgICAoVyAmIDQpID09PSBWIHx8IDk4ICE9PSBjICYmIDk5ICE9PSBjIHx8IChudWxsID09PSB0aiA/IHRqID0gbmV3IE1hcChbW2EsIGJdXSkgOiAoYyA9IHRqLmdldChhKSwgKHZvaWQgMCA9PT0gYyB8fCBjID4gYikgJiYgdGouc2V0KGEsIGIpKSk7XG4gIH1cbn1cblxuZnVuY3Rpb24geGooYSwgYikge1xuICBhLmV4cGlyYXRpb25UaW1lIDwgYiAmJiAoYS5leHBpcmF0aW9uVGltZSA9IGIpO1xuICB2YXIgYyA9IGEuYWx0ZXJuYXRlO1xuICBudWxsICE9PSBjICYmIGMuZXhwaXJhdGlvblRpbWUgPCBiICYmIChjLmV4cGlyYXRpb25UaW1lID0gYik7XG4gIHZhciBkID0gYS5yZXR1cm4sXG4gICAgICBlID0gbnVsbDtcbiAgaWYgKG51bGwgPT09IGQgJiYgMyA9PT0gYS50YWcpIGUgPSBhLnN0YXRlTm9kZTtlbHNlIGZvciAoOyBudWxsICE9PSBkOykge1xuICAgIGMgPSBkLmFsdGVybmF0ZTtcbiAgICBkLmNoaWxkRXhwaXJhdGlvblRpbWUgPCBiICYmIChkLmNoaWxkRXhwaXJhdGlvblRpbWUgPSBiKTtcbiAgICBudWxsICE9PSBjICYmIGMuY2hpbGRFeHBpcmF0aW9uVGltZSA8IGIgJiYgKGMuY2hpbGRFeHBpcmF0aW9uVGltZSA9IGIpO1xuXG4gICAgaWYgKG51bGwgPT09IGQucmV0dXJuICYmIDMgPT09IGQudGFnKSB7XG4gICAgICBlID0gZC5zdGF0ZU5vZGU7XG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICBkID0gZC5yZXR1cm47XG4gIH1cbiAgbnVsbCAhPT0gZSAmJiAoVCA9PT0gZSAmJiAoQmcoYiksIFMgPT09IHZpICYmIHhpKGUsIFUpKSwgeWkoZSwgYikpO1xuICByZXR1cm4gZTtcbn1cblxuZnVuY3Rpb24gemooYSkge1xuICB2YXIgYiA9IGEubGFzdEV4cGlyZWRUaW1lO1xuICBpZiAoMCAhPT0gYikgcmV0dXJuIGI7XG4gIGIgPSBhLmZpcnN0UGVuZGluZ1RpbWU7XG4gIGlmICghQWooYSwgYikpIHJldHVybiBiO1xuICB2YXIgYyA9IGEubGFzdFBpbmdlZFRpbWU7XG4gIGEgPSBhLm5leHRLbm93blBlbmRpbmdMZXZlbDtcbiAgYSA9IGMgPiBhID8gYyA6IGE7XG4gIHJldHVybiAyID49IGEgJiYgYiAhPT0gYSA/IDAgOiBhO1xufVxuXG5mdW5jdGlvbiBaKGEpIHtcbiAgaWYgKDAgIT09IGEubGFzdEV4cGlyZWRUaW1lKSBhLmNhbGxiYWNrRXhwaXJhdGlvblRpbWUgPSAxMDczNzQxODIzLCBhLmNhbGxiYWNrUHJpb3JpdHkgPSA5OSwgYS5jYWxsYmFja05vZGUgPSBlZyh5ai5iaW5kKG51bGwsIGEpKTtlbHNlIHtcbiAgICB2YXIgYiA9IHpqKGEpLFxuICAgICAgICBjID0gYS5jYWxsYmFja05vZGU7XG4gICAgaWYgKDAgPT09IGIpIG51bGwgIT09IGMgJiYgKGEuY2FsbGJhY2tOb2RlID0gbnVsbCwgYS5jYWxsYmFja0V4cGlyYXRpb25UaW1lID0gMCwgYS5jYWxsYmFja1ByaW9yaXR5ID0gOTApO2Vsc2Uge1xuICAgICAgdmFyIGQgPSBHZygpO1xuICAgICAgMTA3Mzc0MTgyMyA9PT0gYiA/IGQgPSA5OSA6IDEgPT09IGIgfHwgMiA9PT0gYiA/IGQgPSA5NSA6IChkID0gMTAgKiAoMTA3Mzc0MTgyMSAtIGIpIC0gMTAgKiAoMTA3Mzc0MTgyMSAtIGQpLCBkID0gMCA+PSBkID8gOTkgOiAyNTAgPj0gZCA/IDk4IDogNTI1MCA+PSBkID8gOTcgOiA5NSk7XG5cbiAgICAgIGlmIChudWxsICE9PSBjKSB7XG4gICAgICAgIHZhciBlID0gYS5jYWxsYmFja1ByaW9yaXR5O1xuICAgICAgICBpZiAoYS5jYWxsYmFja0V4cGlyYXRpb25UaW1lID09PSBiICYmIGUgPj0gZCkgcmV0dXJuO1xuICAgICAgICBjICE9PSBUZiAmJiBLZihjKTtcbiAgICAgIH1cblxuICAgICAgYS5jYWxsYmFja0V4cGlyYXRpb25UaW1lID0gYjtcbiAgICAgIGEuY2FsbGJhY2tQcmlvcml0eSA9IGQ7XG4gICAgICBiID0gMTA3Mzc0MTgyMyA9PT0gYiA/IGVnKHlqLmJpbmQobnVsbCwgYSkpIDogZGcoZCwgQmouYmluZChudWxsLCBhKSwge1xuICAgICAgICB0aW1lb3V0OiAxMCAqICgxMDczNzQxODIxIC0gYikgLSAkZigpXG4gICAgICB9KTtcbiAgICAgIGEuY2FsbGJhY2tOb2RlID0gYjtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gQmooYSwgYikge1xuICB3aiA9IDA7XG4gIGlmIChiKSByZXR1cm4gYiA9IEdnKCksIENqKGEsIGIpLCBaKGEpLCBudWxsO1xuICB2YXIgYyA9IHpqKGEpO1xuXG4gIGlmICgwICE9PSBjKSB7XG4gICAgYiA9IGEuY2FsbGJhY2tOb2RlO1xuICAgIGlmICgoVyAmIChmaiB8IGdqKSkgIT09IFYpIHRocm93IEVycm9yKHUoMzI3KSk7XG4gICAgRGooKTtcbiAgICBhID09PSBUICYmIGMgPT09IFUgfHwgRWooYSwgYyk7XG5cbiAgICBpZiAobnVsbCAhPT0gWCkge1xuICAgICAgdmFyIGQgPSBXO1xuICAgICAgVyB8PSBmajtcbiAgICAgIHZhciBlID0gRmooKTtcblxuICAgICAgZG8ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIEdqKCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH0gY2F0Y2ggKGgpIHtcbiAgICAgICAgICBIaihhLCBoKTtcbiAgICAgICAgfVxuICAgICAgfSB3aGlsZSAoMSk7XG5cbiAgICAgIG5nKCk7XG4gICAgICBXID0gZDtcbiAgICAgIGNqLmN1cnJlbnQgPSBlO1xuICAgICAgaWYgKFMgPT09IGhqKSB0aHJvdyBiID0ga2osIEVqKGEsIGMpLCB4aShhLCBjKSwgWihhKSwgYjtcbiAgICAgIGlmIChudWxsID09PSBYKSBzd2l0Y2ggKGUgPSBhLmZpbmlzaGVkV29yayA9IGEuY3VycmVudC5hbHRlcm5hdGUsIGEuZmluaXNoZWRFeHBpcmF0aW9uVGltZSA9IGMsIGQgPSBTLCBUID0gbnVsbCwgZCkge1xuICAgICAgICBjYXNlIHRpOlxuICAgICAgICBjYXNlIGhqOlxuICAgICAgICAgIHRocm93IEVycm9yKHUoMzQ1KSk7XG5cbiAgICAgICAgY2FzZSBpajpcbiAgICAgICAgICBDaihhLCAyIDwgYyA/IDIgOiBjKTtcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlIHVpOlxuICAgICAgICAgIHhpKGEsIGMpO1xuICAgICAgICAgIGQgPSBhLmxhc3RTdXNwZW5kZWRUaW1lO1xuICAgICAgICAgIGMgPT09IGQgJiYgKGEubmV4dEtub3duUGVuZGluZ0xldmVsID0gSWooZSkpO1xuXG4gICAgICAgICAgaWYgKDEwNzM3NDE4MjMgPT09IGxqICYmIChlID0gVGkgKyBwaiAtICRmKCksIDEwIDwgZSkpIHtcbiAgICAgICAgICAgIGlmIChvaikge1xuICAgICAgICAgICAgICB2YXIgZiA9IGEubGFzdFBpbmdlZFRpbWU7XG5cbiAgICAgICAgICAgICAgaWYgKDAgPT09IGYgfHwgZiA+PSBjKSB7XG4gICAgICAgICAgICAgICAgYS5sYXN0UGluZ2VkVGltZSA9IGM7XG4gICAgICAgICAgICAgICAgRWooYSwgYyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZiA9IHpqKGEpO1xuICAgICAgICAgICAgaWYgKDAgIT09IGYgJiYgZiAhPT0gYykgYnJlYWs7XG5cbiAgICAgICAgICAgIGlmICgwICE9PSBkICYmIGQgIT09IGMpIHtcbiAgICAgICAgICAgICAgYS5sYXN0UGluZ2VkVGltZSA9IGQ7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBhLnRpbWVvdXRIYW5kbGUgPSBIZChKai5iaW5kKG51bGwsIGEpLCBlKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIEpqKGEpO1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2Ugdmk6XG4gICAgICAgICAgeGkoYSwgYyk7XG4gICAgICAgICAgZCA9IGEubGFzdFN1c3BlbmRlZFRpbWU7XG4gICAgICAgICAgYyA9PT0gZCAmJiAoYS5uZXh0S25vd25QZW5kaW5nTGV2ZWwgPSBJaihlKSk7XG5cbiAgICAgICAgICBpZiAob2ogJiYgKGUgPSBhLmxhc3RQaW5nZWRUaW1lLCAwID09PSBlIHx8IGUgPj0gYykpIHtcbiAgICAgICAgICAgIGEubGFzdFBpbmdlZFRpbWUgPSBjO1xuICAgICAgICAgICAgRWooYSwgYyk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBlID0gemooYSk7XG4gICAgICAgICAgaWYgKDAgIT09IGUgJiYgZSAhPT0gYykgYnJlYWs7XG5cbiAgICAgICAgICBpZiAoMCAhPT0gZCAmJiBkICE9PSBjKSB7XG4gICAgICAgICAgICBhLmxhc3RQaW5nZWRUaW1lID0gZDtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIDEwNzM3NDE4MjMgIT09IG1qID8gZCA9IDEwICogKDEwNzM3NDE4MjEgLSBtaikgLSAkZigpIDogMTA3Mzc0MTgyMyA9PT0gbGogPyBkID0gMCA6IChkID0gMTAgKiAoMTA3Mzc0MTgyMSAtIGxqKSAtIDVFMywgZSA9ICRmKCksIGMgPSAxMCAqICgxMDczNzQxODIxIC0gYykgLSBlLCBkID0gZSAtIGQsIDAgPiBkICYmIChkID0gMCksIGQgPSAoMTIwID4gZCA/IDEyMCA6IDQ4MCA+IGQgPyA0ODAgOiAxMDgwID4gZCA/IDEwODAgOiAxOTIwID4gZCA/IDE5MjAgOiAzRTMgPiBkID8gM0UzIDogNDMyMCA+IGQgPyA0MzIwIDogMTk2MCAqIGJqKGQgLyAxOTYwKSkgLSBkLCBjIDwgZCAmJiAoZCA9IGMpKTtcblxuICAgICAgICAgIGlmICgxMCA8IGQpIHtcbiAgICAgICAgICAgIGEudGltZW91dEhhbmRsZSA9IEhkKEpqLmJpbmQobnVsbCwgYSksIGQpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgSmooYSk7XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSBqajpcbiAgICAgICAgICBpZiAoMTA3Mzc0MTgyMyAhPT0gbGogJiYgbnVsbCAhPT0gbmopIHtcbiAgICAgICAgICAgIGYgPSBsajtcbiAgICAgICAgICAgIHZhciBnID0gbmo7XG4gICAgICAgICAgICBkID0gZy5idXN5TWluRHVyYXRpb25NcyB8IDA7XG4gICAgICAgICAgICAwID49IGQgPyBkID0gMCA6IChlID0gZy5idXN5RGVsYXlNcyB8IDAsIGYgPSAkZigpIC0gKDEwICogKDEwNzM3NDE4MjEgLSBmKSAtIChnLnRpbWVvdXRNcyB8IDAgfHwgNUUzKSksIGQgPSBmIDw9IGUgPyAwIDogZSArIGQgLSBmKTtcblxuICAgICAgICAgICAgaWYgKDEwIDwgZCkge1xuICAgICAgICAgICAgICB4aShhLCBjKTtcbiAgICAgICAgICAgICAgYS50aW1lb3V0SGFuZGxlID0gSGQoSmouYmluZChudWxsLCBhKSwgZCk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIEpqKGEpO1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgdGhyb3cgRXJyb3IodSgzMjkpKTtcbiAgICAgIH1cbiAgICAgIFooYSk7XG4gICAgICBpZiAoYS5jYWxsYmFja05vZGUgPT09IGIpIHJldHVybiBCai5iaW5kKG51bGwsIGEpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuXG5mdW5jdGlvbiB5aihhKSB7XG4gIHZhciBiID0gYS5sYXN0RXhwaXJlZFRpbWU7XG4gIGIgPSAwICE9PSBiID8gYiA6IDEwNzM3NDE4MjM7XG4gIGlmICgoVyAmIChmaiB8IGdqKSkgIT09IFYpIHRocm93IEVycm9yKHUoMzI3KSk7XG4gIERqKCk7XG4gIGEgPT09IFQgJiYgYiA9PT0gVSB8fCBFaihhLCBiKTtcblxuICBpZiAobnVsbCAhPT0gWCkge1xuICAgIHZhciBjID0gVztcbiAgICBXIHw9IGZqO1xuICAgIHZhciBkID0gRmooKTtcblxuICAgIGRvIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIEtqKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBIaihhLCBlKTtcbiAgICAgIH1cbiAgICB9IHdoaWxlICgxKTtcblxuICAgIG5nKCk7XG4gICAgVyA9IGM7XG4gICAgY2ouY3VycmVudCA9IGQ7XG4gICAgaWYgKFMgPT09IGhqKSB0aHJvdyBjID0ga2osIEVqKGEsIGIpLCB4aShhLCBiKSwgWihhKSwgYztcbiAgICBpZiAobnVsbCAhPT0gWCkgdGhyb3cgRXJyb3IodSgyNjEpKTtcbiAgICBhLmZpbmlzaGVkV29yayA9IGEuY3VycmVudC5hbHRlcm5hdGU7XG4gICAgYS5maW5pc2hlZEV4cGlyYXRpb25UaW1lID0gYjtcbiAgICBUID0gbnVsbDtcbiAgICBKaihhKTtcbiAgICBaKGEpO1xuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59XG5cbmZ1bmN0aW9uIExqKCkge1xuICBpZiAobnVsbCAhPT0gdGopIHtcbiAgICB2YXIgYSA9IHRqO1xuICAgIHRqID0gbnVsbDtcbiAgICBhLmZvckVhY2goZnVuY3Rpb24gKGEsIGMpIHtcbiAgICAgIENqKGMsIGEpO1xuICAgICAgWihjKTtcbiAgICB9KTtcbiAgICBnZygpO1xuICB9XG59XG5cbmZ1bmN0aW9uIE1qKGEsIGIpIHtcbiAgdmFyIGMgPSBXO1xuICBXIHw9IDE7XG5cbiAgdHJ5IHtcbiAgICByZXR1cm4gYShiKTtcbiAgfSBmaW5hbGx5IHtcbiAgICBXID0gYywgVyA9PT0gViAmJiBnZygpO1xuICB9XG59XG5cbmZ1bmN0aW9uIE5qKGEsIGIpIHtcbiAgdmFyIGMgPSBXO1xuICBXICY9IC0yO1xuICBXIHw9IGVqO1xuXG4gIHRyeSB7XG4gICAgcmV0dXJuIGEoYik7XG4gIH0gZmluYWxseSB7XG4gICAgVyA9IGMsIFcgPT09IFYgJiYgZ2coKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBFaihhLCBiKSB7XG4gIGEuZmluaXNoZWRXb3JrID0gbnVsbDtcbiAgYS5maW5pc2hlZEV4cGlyYXRpb25UaW1lID0gMDtcbiAgdmFyIGMgPSBhLnRpbWVvdXRIYW5kbGU7XG4gIC0xICE9PSBjICYmIChhLnRpbWVvdXRIYW5kbGUgPSAtMSwgSWQoYykpO1xuICBpZiAobnVsbCAhPT0gWCkgZm9yIChjID0gWC5yZXR1cm47IG51bGwgIT09IGM7KSB7XG4gICAgdmFyIGQgPSBjO1xuXG4gICAgc3dpdGNoIChkLnRhZykge1xuICAgICAgY2FzZSAxOlxuICAgICAgICBkID0gZC50eXBlLmNoaWxkQ29udGV4dFR5cGVzO1xuICAgICAgICBudWxsICE9PSBkICYmIHZvaWQgMCAhPT0gZCAmJiBEZigpO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAzOlxuICAgICAgICBlaCgpO1xuICAgICAgICBIKEspO1xuICAgICAgICBIKEopO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSA1OlxuICAgICAgICBnaChkKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgNDpcbiAgICAgICAgZWgoKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgMTM6XG4gICAgICAgIEgoTSk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIDE5OlxuICAgICAgICBIKE0pO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAxMDpcbiAgICAgICAgb2coZCk7XG4gICAgfVxuXG4gICAgYyA9IGMucmV0dXJuO1xuICB9XG4gIFQgPSBhO1xuICBYID0gU2coYS5jdXJyZW50LCBudWxsKTtcbiAgVSA9IGI7XG4gIFMgPSB0aTtcbiAga2ogPSBudWxsO1xuICBtaiA9IGxqID0gMTA3Mzc0MTgyMztcbiAgbmogPSBudWxsO1xuICB3aSA9IDA7XG4gIG9qID0gITE7XG59XG5cbmZ1bmN0aW9uIEhqKGEsIGIpIHtcbiAgZG8ge1xuICAgIHRyeSB7XG4gICAgICBuZygpO1xuICAgICAgamguY3VycmVudCA9IHNoO1xuICAgICAgaWYgKG1oKSBmb3IgKHZhciBjID0gTi5tZW1vaXplZFN0YXRlOyBudWxsICE9PSBjOykge1xuICAgICAgICB2YXIgZCA9IGMucXVldWU7XG4gICAgICAgIG51bGwgIT09IGQgJiYgKGQucGVuZGluZyA9IG51bGwpO1xuICAgICAgICBjID0gYy5uZXh0O1xuICAgICAgfVxuICAgICAgbGggPSAwO1xuICAgICAgUCA9IE8gPSBOID0gbnVsbDtcbiAgICAgIG1oID0gITE7XG4gICAgICBpZiAobnVsbCA9PT0gWCB8fCBudWxsID09PSBYLnJldHVybikgcmV0dXJuIFMgPSBoaiwga2ogPSBiLCBYID0gbnVsbDtcblxuICAgICAgYToge1xuICAgICAgICB2YXIgZSA9IGEsXG4gICAgICAgICAgICBmID0gWC5yZXR1cm4sXG4gICAgICAgICAgICBnID0gWCxcbiAgICAgICAgICAgIGggPSBiO1xuICAgICAgICBiID0gVTtcbiAgICAgICAgZy5lZmZlY3RUYWcgfD0gMjA0ODtcbiAgICAgICAgZy5maXJzdEVmZmVjdCA9IGcubGFzdEVmZmVjdCA9IG51bGw7XG5cbiAgICAgICAgaWYgKG51bGwgIT09IGggJiYgXCJvYmplY3RcIiA9PT0gdHlwZW9mIGggJiYgXCJmdW5jdGlvblwiID09PSB0eXBlb2YgaC50aGVuKSB7XG4gICAgICAgICAgdmFyIGsgPSBoO1xuXG4gICAgICAgICAgaWYgKDAgPT09IChnLm1vZGUgJiAyKSkge1xuICAgICAgICAgICAgdmFyIGwgPSBnLmFsdGVybmF0ZTtcbiAgICAgICAgICAgIGwgPyAoZy51cGRhdGVRdWV1ZSA9IGwudXBkYXRlUXVldWUsIGcubWVtb2l6ZWRTdGF0ZSA9IGwubWVtb2l6ZWRTdGF0ZSwgZy5leHBpcmF0aW9uVGltZSA9IGwuZXhwaXJhdGlvblRpbWUpIDogKGcudXBkYXRlUXVldWUgPSBudWxsLCBnLm1lbW9pemVkU3RhdGUgPSBudWxsKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB2YXIgbSA9IDAgIT09IChNLmN1cnJlbnQgJiAxKSxcbiAgICAgICAgICAgICAgcCA9IGY7XG5cbiAgICAgICAgICBkbyB7XG4gICAgICAgICAgICB2YXIgeDtcblxuICAgICAgICAgICAgaWYgKHggPSAxMyA9PT0gcC50YWcpIHtcbiAgICAgICAgICAgICAgdmFyIHogPSBwLm1lbW9pemVkU3RhdGU7XG4gICAgICAgICAgICAgIGlmIChudWxsICE9PSB6KSB4ID0gbnVsbCAhPT0gei5kZWh5ZHJhdGVkID8gITAgOiAhMTtlbHNlIHtcbiAgICAgICAgICAgICAgICB2YXIgY2EgPSBwLm1lbW9pemVkUHJvcHM7XG4gICAgICAgICAgICAgICAgeCA9IHZvaWQgMCA9PT0gY2EuZmFsbGJhY2sgPyAhMSA6ICEwICE9PSBjYS51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjayA/ICEwIDogbSA/ICExIDogITA7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHgpIHtcbiAgICAgICAgICAgICAgdmFyIEQgPSBwLnVwZGF0ZVF1ZXVlO1xuXG4gICAgICAgICAgICAgIGlmIChudWxsID09PSBEKSB7XG4gICAgICAgICAgICAgICAgdmFyIHQgPSBuZXcgU2V0KCk7XG4gICAgICAgICAgICAgICAgdC5hZGQoayk7XG4gICAgICAgICAgICAgICAgcC51cGRhdGVRdWV1ZSA9IHQ7XG4gICAgICAgICAgICAgIH0gZWxzZSBELmFkZChrKTtcblxuICAgICAgICAgICAgICBpZiAoMCA9PT0gKHAubW9kZSAmIDIpKSB7XG4gICAgICAgICAgICAgICAgcC5lZmZlY3RUYWcgfD0gNjQ7XG4gICAgICAgICAgICAgICAgZy5lZmZlY3RUYWcgJj0gLTI5ODE7XG4gICAgICAgICAgICAgICAgaWYgKDEgPT09IGcudGFnKSBpZiAobnVsbCA9PT0gZy5hbHRlcm5hdGUpIGcudGFnID0gMTc7ZWxzZSB7XG4gICAgICAgICAgICAgICAgICB2YXIgeSA9IHdnKDEwNzM3NDE4MjMsIG51bGwpO1xuICAgICAgICAgICAgICAgICAgeS50YWcgPSAyO1xuICAgICAgICAgICAgICAgICAgeGcoZywgeSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGcuZXhwaXJhdGlvblRpbWUgPSAxMDczNzQxODIzO1xuICAgICAgICAgICAgICAgIGJyZWFrIGE7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBoID0gdm9pZCAwO1xuICAgICAgICAgICAgICBnID0gYjtcbiAgICAgICAgICAgICAgdmFyIEEgPSBlLnBpbmdDYWNoZTtcbiAgICAgICAgICAgICAgbnVsbCA9PT0gQSA/IChBID0gZS5waW5nQ2FjaGUgPSBuZXcgV2koKSwgaCA9IG5ldyBTZXQoKSwgQS5zZXQoaywgaCkpIDogKGggPSBBLmdldChrKSwgdm9pZCAwID09PSBoICYmIChoID0gbmV3IFNldCgpLCBBLnNldChrLCBoKSkpO1xuXG4gICAgICAgICAgICAgIGlmICghaC5oYXMoZykpIHtcbiAgICAgICAgICAgICAgICBoLmFkZChnKTtcbiAgICAgICAgICAgICAgICB2YXIgcSA9IE9qLmJpbmQobnVsbCwgZSwgaywgZyk7XG4gICAgICAgICAgICAgICAgay50aGVuKHEsIHEpO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgcC5lZmZlY3RUYWcgfD0gNDA5NjtcbiAgICAgICAgICAgICAgcC5leHBpcmF0aW9uVGltZSA9IGI7XG4gICAgICAgICAgICAgIGJyZWFrIGE7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHAgPSBwLnJldHVybjtcbiAgICAgICAgICB9IHdoaWxlIChudWxsICE9PSBwKTtcblxuICAgICAgICAgIGggPSBFcnJvcigocGIoZy50eXBlKSB8fCBcIkEgUmVhY3QgY29tcG9uZW50XCIpICsgXCIgc3VzcGVuZGVkIHdoaWxlIHJlbmRlcmluZywgYnV0IG5vIGZhbGxiYWNrIFVJIHdhcyBzcGVjaWZpZWQuXFxuXFxuQWRkIGEgPFN1c3BlbnNlIGZhbGxiYWNrPS4uLj4gY29tcG9uZW50IGhpZ2hlciBpbiB0aGUgdHJlZSB0byBwcm92aWRlIGEgbG9hZGluZyBpbmRpY2F0b3Igb3IgcGxhY2Vob2xkZXIgdG8gZGlzcGxheS5cIiArIHFiKGcpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIFMgIT09IGpqICYmIChTID0gaWopO1xuICAgICAgICBoID0gQWkoaCwgZyk7XG4gICAgICAgIHAgPSBmO1xuXG4gICAgICAgIGRvIHtcbiAgICAgICAgICBzd2l0Y2ggKHAudGFnKSB7XG4gICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICAgIGsgPSBoO1xuICAgICAgICAgICAgICBwLmVmZmVjdFRhZyB8PSA0MDk2O1xuICAgICAgICAgICAgICBwLmV4cGlyYXRpb25UaW1lID0gYjtcbiAgICAgICAgICAgICAgdmFyIEIgPSBYaShwLCBrLCBiKTtcbiAgICAgICAgICAgICAgeWcocCwgQik7XG4gICAgICAgICAgICAgIGJyZWFrIGE7XG5cbiAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgayA9IGg7XG4gICAgICAgICAgICAgIHZhciB3ID0gcC50eXBlLFxuICAgICAgICAgICAgICAgICAgdWIgPSBwLnN0YXRlTm9kZTtcblxuICAgICAgICAgICAgICBpZiAoMCA9PT0gKHAuZWZmZWN0VGFnICYgNjQpICYmIChcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiB3LmdldERlcml2ZWRTdGF0ZUZyb21FcnJvciB8fCBudWxsICE9PSB1YiAmJiBcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiB1Yi5jb21wb25lbnREaWRDYXRjaCAmJiAobnVsbCA9PT0gYWogfHwgIWFqLmhhcyh1YikpKSkge1xuICAgICAgICAgICAgICAgIHAuZWZmZWN0VGFnIHw9IDQwOTY7XG4gICAgICAgICAgICAgICAgcC5leHBpcmF0aW9uVGltZSA9IGI7XG4gICAgICAgICAgICAgICAgdmFyIHZiID0gJGkocCwgaywgYik7XG4gICAgICAgICAgICAgICAgeWcocCwgdmIpO1xuICAgICAgICAgICAgICAgIGJyZWFrIGE7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgIH1cblxuICAgICAgICAgIHAgPSBwLnJldHVybjtcbiAgICAgICAgfSB3aGlsZSAobnVsbCAhPT0gcCk7XG4gICAgICB9XG5cbiAgICAgIFggPSBQaihYKTtcbiAgICB9IGNhdGNoIChYYykge1xuICAgICAgYiA9IFhjO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgYnJlYWs7XG4gIH0gd2hpbGUgKDEpO1xufVxuXG5mdW5jdGlvbiBGaigpIHtcbiAgdmFyIGEgPSBjai5jdXJyZW50O1xuICBjai5jdXJyZW50ID0gc2g7XG4gIHJldHVybiBudWxsID09PSBhID8gc2ggOiBhO1xufVxuXG5mdW5jdGlvbiBBZyhhLCBiKSB7XG4gIGEgPCBsaiAmJiAyIDwgYSAmJiAobGogPSBhKTtcbiAgbnVsbCAhPT0gYiAmJiBhIDwgbWogJiYgMiA8IGEgJiYgKG1qID0gYSwgbmogPSBiKTtcbn1cblxuZnVuY3Rpb24gQmcoYSkge1xuICBhID4gd2kgJiYgKHdpID0gYSk7XG59XG5cbmZ1bmN0aW9uIEtqKCkge1xuICBmb3IgKDsgbnVsbCAhPT0gWDspIHtcbiAgICBYID0gUWooWCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gR2ooKSB7XG4gIGZvciAoOyBudWxsICE9PSBYICYmICFVZigpOykge1xuICAgIFggPSBRaihYKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBRaihhKSB7XG4gIHZhciBiID0gUmooYS5hbHRlcm5hdGUsIGEsIFUpO1xuICBhLm1lbW9pemVkUHJvcHMgPSBhLnBlbmRpbmdQcm9wcztcbiAgbnVsbCA9PT0gYiAmJiAoYiA9IFBqKGEpKTtcbiAgZGouY3VycmVudCA9IG51bGw7XG4gIHJldHVybiBiO1xufVxuXG5mdW5jdGlvbiBQaihhKSB7XG4gIFggPSBhO1xuXG4gIGRvIHtcbiAgICB2YXIgYiA9IFguYWx0ZXJuYXRlO1xuICAgIGEgPSBYLnJldHVybjtcblxuICAgIGlmICgwID09PSAoWC5lZmZlY3RUYWcgJiAyMDQ4KSkge1xuICAgICAgYiA9IHNpKGIsIFgsIFUpO1xuXG4gICAgICBpZiAoMSA9PT0gVSB8fCAxICE9PSBYLmNoaWxkRXhwaXJhdGlvblRpbWUpIHtcbiAgICAgICAgZm9yICh2YXIgYyA9IDAsIGQgPSBYLmNoaWxkOyBudWxsICE9PSBkOykge1xuICAgICAgICAgIHZhciBlID0gZC5leHBpcmF0aW9uVGltZSxcbiAgICAgICAgICAgICAgZiA9IGQuY2hpbGRFeHBpcmF0aW9uVGltZTtcbiAgICAgICAgICBlID4gYyAmJiAoYyA9IGUpO1xuICAgICAgICAgIGYgPiBjICYmIChjID0gZik7XG4gICAgICAgICAgZCA9IGQuc2libGluZztcbiAgICAgICAgfVxuXG4gICAgICAgIFguY2hpbGRFeHBpcmF0aW9uVGltZSA9IGM7XG4gICAgICB9XG5cbiAgICAgIGlmIChudWxsICE9PSBiKSByZXR1cm4gYjtcbiAgICAgIG51bGwgIT09IGEgJiYgMCA9PT0gKGEuZWZmZWN0VGFnICYgMjA0OCkgJiYgKG51bGwgPT09IGEuZmlyc3RFZmZlY3QgJiYgKGEuZmlyc3RFZmZlY3QgPSBYLmZpcnN0RWZmZWN0KSwgbnVsbCAhPT0gWC5sYXN0RWZmZWN0ICYmIChudWxsICE9PSBhLmxhc3RFZmZlY3QgJiYgKGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0ID0gWC5maXJzdEVmZmVjdCksIGEubGFzdEVmZmVjdCA9IFgubGFzdEVmZmVjdCksIDEgPCBYLmVmZmVjdFRhZyAmJiAobnVsbCAhPT0gYS5sYXN0RWZmZWN0ID8gYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3QgPSBYIDogYS5maXJzdEVmZmVjdCA9IFgsIGEubGFzdEVmZmVjdCA9IFgpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYiA9IHppKFgpO1xuICAgICAgaWYgKG51bGwgIT09IGIpIHJldHVybiBiLmVmZmVjdFRhZyAmPSAyMDQ3LCBiO1xuICAgICAgbnVsbCAhPT0gYSAmJiAoYS5maXJzdEVmZmVjdCA9IGEubGFzdEVmZmVjdCA9IG51bGwsIGEuZWZmZWN0VGFnIHw9IDIwNDgpO1xuICAgIH1cblxuICAgIGIgPSBYLnNpYmxpbmc7XG4gICAgaWYgKG51bGwgIT09IGIpIHJldHVybiBiO1xuICAgIFggPSBhO1xuICB9IHdoaWxlIChudWxsICE9PSBYKTtcblxuICBTID09PSB0aSAmJiAoUyA9IGpqKTtcbiAgcmV0dXJuIG51bGw7XG59XG5cbmZ1bmN0aW9uIElqKGEpIHtcbiAgdmFyIGIgPSBhLmV4cGlyYXRpb25UaW1lO1xuICBhID0gYS5jaGlsZEV4cGlyYXRpb25UaW1lO1xuICByZXR1cm4gYiA+IGEgPyBiIDogYTtcbn1cblxuZnVuY3Rpb24gSmooYSkge1xuICB2YXIgYiA9IGFnKCk7XG4gIGNnKDk5LCBTai5iaW5kKG51bGwsIGEsIGIpKTtcbiAgcmV0dXJuIG51bGw7XG59XG5cbmZ1bmN0aW9uIFNqKGEsIGIpIHtcbiAgZG8ge1xuICAgIERqKCk7XG4gIH0gd2hpbGUgKG51bGwgIT09IHJqKTtcblxuICBpZiAoKFcgJiAoZmogfCBnaikpICE9PSBWKSB0aHJvdyBFcnJvcih1KDMyNykpO1xuICB2YXIgYyA9IGEuZmluaXNoZWRXb3JrLFxuICAgICAgZCA9IGEuZmluaXNoZWRFeHBpcmF0aW9uVGltZTtcbiAgaWYgKG51bGwgPT09IGMpIHJldHVybiBudWxsO1xuICBhLmZpbmlzaGVkV29yayA9IG51bGw7XG4gIGEuZmluaXNoZWRFeHBpcmF0aW9uVGltZSA9IDA7XG4gIGlmIChjID09PSBhLmN1cnJlbnQpIHRocm93IEVycm9yKHUoMTc3KSk7XG4gIGEuY2FsbGJhY2tOb2RlID0gbnVsbDtcbiAgYS5jYWxsYmFja0V4cGlyYXRpb25UaW1lID0gMDtcbiAgYS5jYWxsYmFja1ByaW9yaXR5ID0gOTA7XG4gIGEubmV4dEtub3duUGVuZGluZ0xldmVsID0gMDtcbiAgdmFyIGUgPSBJaihjKTtcbiAgYS5maXJzdFBlbmRpbmdUaW1lID0gZTtcbiAgZCA8PSBhLmxhc3RTdXNwZW5kZWRUaW1lID8gYS5maXJzdFN1c3BlbmRlZFRpbWUgPSBhLmxhc3RTdXNwZW5kZWRUaW1lID0gYS5uZXh0S25vd25QZW5kaW5nTGV2ZWwgPSAwIDogZCA8PSBhLmZpcnN0U3VzcGVuZGVkVGltZSAmJiAoYS5maXJzdFN1c3BlbmRlZFRpbWUgPSBkIC0gMSk7XG4gIGQgPD0gYS5sYXN0UGluZ2VkVGltZSAmJiAoYS5sYXN0UGluZ2VkVGltZSA9IDApO1xuICBkIDw9IGEubGFzdEV4cGlyZWRUaW1lICYmIChhLmxhc3RFeHBpcmVkVGltZSA9IDApO1xuICBhID09PSBUICYmIChYID0gVCA9IG51bGwsIFUgPSAwKTtcbiAgMSA8IGMuZWZmZWN0VGFnID8gbnVsbCAhPT0gYy5sYXN0RWZmZWN0ID8gKGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0ID0gYywgZSA9IGMuZmlyc3RFZmZlY3QpIDogZSA9IGMgOiBlID0gYy5maXJzdEVmZmVjdDtcblxuICBpZiAobnVsbCAhPT0gZSkge1xuICAgIHZhciBmID0gVztcbiAgICBXIHw9IGdqO1xuICAgIGRqLmN1cnJlbnQgPSBudWxsO1xuICAgIERkID0gZmQ7XG4gICAgdmFyIGcgPSB4ZCgpO1xuXG4gICAgaWYgKHlkKGcpKSB7XG4gICAgICBpZiAoXCJzZWxlY3Rpb25TdGFydFwiIGluIGcpIHZhciBoID0ge1xuICAgICAgICBzdGFydDogZy5zZWxlY3Rpb25TdGFydCxcbiAgICAgICAgZW5kOiBnLnNlbGVjdGlvbkVuZFxuICAgICAgfTtlbHNlIGE6IHtcbiAgICAgICAgaCA9IChoID0gZy5vd25lckRvY3VtZW50KSAmJiBoLmRlZmF1bHRWaWV3IHx8IHdpbmRvdztcbiAgICAgICAgdmFyIGsgPSBoLmdldFNlbGVjdGlvbiAmJiBoLmdldFNlbGVjdGlvbigpO1xuXG4gICAgICAgIGlmIChrICYmIDAgIT09IGsucmFuZ2VDb3VudCkge1xuICAgICAgICAgIGggPSBrLmFuY2hvck5vZGU7XG4gICAgICAgICAgdmFyIGwgPSBrLmFuY2hvck9mZnNldCxcbiAgICAgICAgICAgICAgbSA9IGsuZm9jdXNOb2RlO1xuICAgICAgICAgIGsgPSBrLmZvY3VzT2Zmc2V0O1xuXG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGgubm9kZVR5cGUsIG0ubm9kZVR5cGU7XG4gICAgICAgICAgfSBjYXRjaCAod2IpIHtcbiAgICAgICAgICAgIGggPSBudWxsO1xuICAgICAgICAgICAgYnJlYWsgYTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB2YXIgcCA9IDAsXG4gICAgICAgICAgICAgIHggPSAtMSxcbiAgICAgICAgICAgICAgeiA9IC0xLFxuICAgICAgICAgICAgICBjYSA9IDAsXG4gICAgICAgICAgICAgIEQgPSAwLFxuICAgICAgICAgICAgICB0ID0gZyxcbiAgICAgICAgICAgICAgeSA9IG51bGw7XG5cbiAgICAgICAgICBiOiBmb3IgKDs7KSB7XG4gICAgICAgICAgICBmb3IgKHZhciBBOzspIHtcbiAgICAgICAgICAgICAgdCAhPT0gaCB8fCAwICE9PSBsICYmIDMgIT09IHQubm9kZVR5cGUgfHwgKHggPSBwICsgbCk7XG4gICAgICAgICAgICAgIHQgIT09IG0gfHwgMCAhPT0gayAmJiAzICE9PSB0Lm5vZGVUeXBlIHx8ICh6ID0gcCArIGspO1xuICAgICAgICAgICAgICAzID09PSB0Lm5vZGVUeXBlICYmIChwICs9IHQubm9kZVZhbHVlLmxlbmd0aCk7XG4gICAgICAgICAgICAgIGlmIChudWxsID09PSAoQSA9IHQuZmlyc3RDaGlsZCkpIGJyZWFrO1xuICAgICAgICAgICAgICB5ID0gdDtcbiAgICAgICAgICAgICAgdCA9IEE7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGZvciAoOzspIHtcbiAgICAgICAgICAgICAgaWYgKHQgPT09IGcpIGJyZWFrIGI7XG4gICAgICAgICAgICAgIHkgPT09IGggJiYgKytjYSA9PT0gbCAmJiAoeCA9IHApO1xuICAgICAgICAgICAgICB5ID09PSBtICYmICsrRCA9PT0gayAmJiAoeiA9IHApO1xuICAgICAgICAgICAgICBpZiAobnVsbCAhPT0gKEEgPSB0Lm5leHRTaWJsaW5nKSkgYnJlYWs7XG4gICAgICAgICAgICAgIHQgPSB5O1xuICAgICAgICAgICAgICB5ID0gdC5wYXJlbnROb2RlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0ID0gQTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBoID0gLTEgPT09IHggfHwgLTEgPT09IHogPyBudWxsIDoge1xuICAgICAgICAgICAgc3RhcnQ6IHgsXG4gICAgICAgICAgICBlbmQ6IHpcbiAgICAgICAgICB9O1xuICAgICAgICB9IGVsc2UgaCA9IG51bGw7XG4gICAgICB9XG4gICAgICBoID0gaCB8fCB7XG4gICAgICAgIHN0YXJ0OiAwLFxuICAgICAgICBlbmQ6IDBcbiAgICAgIH07XG4gICAgfSBlbHNlIGggPSBudWxsO1xuXG4gICAgRWQgPSB7XG4gICAgICBhY3RpdmVFbGVtZW50RGV0YWNoZWQ6IG51bGwsXG4gICAgICBmb2N1c2VkRWxlbTogZyxcbiAgICAgIHNlbGVjdGlvblJhbmdlOiBoXG4gICAgfTtcbiAgICBmZCA9ICExO1xuICAgIFkgPSBlO1xuXG4gICAgZG8ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgVGooKTtcbiAgICAgIH0gY2F0Y2ggKHdiKSB7XG4gICAgICAgIGlmIChudWxsID09PSBZKSB0aHJvdyBFcnJvcih1KDMzMCkpO1xuICAgICAgICBFaShZLCB3Yik7XG4gICAgICAgIFkgPSBZLm5leHRFZmZlY3Q7XG4gICAgICB9XG4gICAgfSB3aGlsZSAobnVsbCAhPT0gWSk7XG5cbiAgICBZID0gZTtcblxuICAgIGRvIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGZvciAoZyA9IGEsIGggPSBiOyBudWxsICE9PSBZOykge1xuICAgICAgICAgIHZhciBxID0gWS5lZmZlY3RUYWc7XG4gICAgICAgICAgcSAmIDE2ICYmIFJiKFkuc3RhdGVOb2RlLCBcIlwiKTtcblxuICAgICAgICAgIGlmIChxICYgMTI4KSB7XG4gICAgICAgICAgICB2YXIgQiA9IFkuYWx0ZXJuYXRlO1xuXG4gICAgICAgICAgICBpZiAobnVsbCAhPT0gQikge1xuICAgICAgICAgICAgICB2YXIgdyA9IEIucmVmO1xuICAgICAgICAgICAgICBudWxsICE9PSB3ICYmIChcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiB3ID8gdyhudWxsKSA6IHcuY3VycmVudCA9IG51bGwpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIHN3aXRjaCAocSAmIDEwMzgpIHtcbiAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgICAgUGkoWSk7XG4gICAgICAgICAgICAgIFkuZWZmZWN0VGFnICY9IC0zO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA2OlxuICAgICAgICAgICAgICBQaShZKTtcbiAgICAgICAgICAgICAgWS5lZmZlY3RUYWcgJj0gLTM7XG4gICAgICAgICAgICAgIFNpKFkuYWx0ZXJuYXRlLCBZKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgMTAyNDpcbiAgICAgICAgICAgICAgWS5lZmZlY3RUYWcgJj0gLTEwMjU7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDEwMjg6XG4gICAgICAgICAgICAgIFkuZWZmZWN0VGFnICY9IC0xMDI1O1xuICAgICAgICAgICAgICBTaShZLmFsdGVybmF0ZSwgWSk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDQ6XG4gICAgICAgICAgICAgIFNpKFkuYWx0ZXJuYXRlLCBZKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgODpcbiAgICAgICAgICAgICAgbCA9IFksIE1pKGcsIGwsIGgpLCBOaShsKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBZID0gWS5uZXh0RWZmZWN0O1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoICh3Yikge1xuICAgICAgICBpZiAobnVsbCA9PT0gWSkgdGhyb3cgRXJyb3IodSgzMzApKTtcbiAgICAgICAgRWkoWSwgd2IpO1xuICAgICAgICBZID0gWS5uZXh0RWZmZWN0O1xuICAgICAgfVxuICAgIH0gd2hpbGUgKG51bGwgIT09IFkpO1xuXG4gICAgdyA9IEVkO1xuICAgIEIgPSB4ZCgpO1xuICAgIHEgPSB3LmZvY3VzZWRFbGVtO1xuICAgIGggPSB3LnNlbGVjdGlvblJhbmdlO1xuXG4gICAgaWYgKEIgIT09IHEgJiYgcSAmJiBxLm93bmVyRG9jdW1lbnQgJiYgd2QocS5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudCwgcSkpIHtcbiAgICAgIG51bGwgIT09IGggJiYgeWQocSkgJiYgKEIgPSBoLnN0YXJ0LCB3ID0gaC5lbmQsIHZvaWQgMCA9PT0gdyAmJiAodyA9IEIpLCBcInNlbGVjdGlvblN0YXJ0XCIgaW4gcSA/IChxLnNlbGVjdGlvblN0YXJ0ID0gQiwgcS5zZWxlY3Rpb25FbmQgPSBNYXRoLm1pbih3LCBxLnZhbHVlLmxlbmd0aCkpIDogKHcgPSAoQiA9IHEub3duZXJEb2N1bWVudCB8fCBkb2N1bWVudCkgJiYgQi5kZWZhdWx0VmlldyB8fCB3aW5kb3csIHcuZ2V0U2VsZWN0aW9uICYmICh3ID0gdy5nZXRTZWxlY3Rpb24oKSwgbCA9IHEudGV4dENvbnRlbnQubGVuZ3RoLCBnID0gTWF0aC5taW4oaC5zdGFydCwgbCksIGggPSB2b2lkIDAgPT09IGguZW5kID8gZyA6IE1hdGgubWluKGguZW5kLCBsKSwgIXcuZXh0ZW5kICYmIGcgPiBoICYmIChsID0gaCwgaCA9IGcsIGcgPSBsKSwgbCA9IHZkKHEsIGcpLCBtID0gdmQocSwgaCksIGwgJiYgbSAmJiAoMSAhPT0gdy5yYW5nZUNvdW50IHx8IHcuYW5jaG9yTm9kZSAhPT0gbC5ub2RlIHx8IHcuYW5jaG9yT2Zmc2V0ICE9PSBsLm9mZnNldCB8fCB3LmZvY3VzTm9kZSAhPT0gbS5ub2RlIHx8IHcuZm9jdXNPZmZzZXQgIT09IG0ub2Zmc2V0KSAmJiAoQiA9IEIuY3JlYXRlUmFuZ2UoKSwgQi5zZXRTdGFydChsLm5vZGUsIGwub2Zmc2V0KSwgdy5yZW1vdmVBbGxSYW5nZXMoKSwgZyA+IGggPyAody5hZGRSYW5nZShCKSwgdy5leHRlbmQobS5ub2RlLCBtLm9mZnNldCkpIDogKEIuc2V0RW5kKG0ubm9kZSwgbS5vZmZzZXQpLCB3LmFkZFJhbmdlKEIpKSkpKSk7XG4gICAgICBCID0gW107XG5cbiAgICAgIGZvciAodyA9IHE7IHcgPSB3LnBhcmVudE5vZGU7KSB7XG4gICAgICAgIDEgPT09IHcubm9kZVR5cGUgJiYgQi5wdXNoKHtcbiAgICAgICAgICBlbGVtZW50OiB3LFxuICAgICAgICAgIGxlZnQ6IHcuc2Nyb2xsTGVmdCxcbiAgICAgICAgICB0b3A6IHcuc2Nyb2xsVG9wXG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBxLmZvY3VzICYmIHEuZm9jdXMoKTtcblxuICAgICAgZm9yIChxID0gMDsgcSA8IEIubGVuZ3RoOyBxKyspIHtcbiAgICAgICAgdyA9IEJbcV0sIHcuZWxlbWVudC5zY3JvbGxMZWZ0ID0gdy5sZWZ0LCB3LmVsZW1lbnQuc2Nyb2xsVG9wID0gdy50b3A7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZmQgPSAhIURkO1xuICAgIEVkID0gRGQgPSBudWxsO1xuICAgIGEuY3VycmVudCA9IGM7XG4gICAgWSA9IGU7XG5cbiAgICBkbyB7XG4gICAgICB0cnkge1xuICAgICAgICBmb3IgKHEgPSBhOyBudWxsICE9PSBZOykge1xuICAgICAgICAgIHZhciB1YiA9IFkuZWZmZWN0VGFnO1xuICAgICAgICAgIHViICYgMzYgJiYgSmkocSwgWS5hbHRlcm5hdGUsIFkpO1xuXG4gICAgICAgICAgaWYgKHViICYgMTI4KSB7XG4gICAgICAgICAgICBCID0gdm9pZCAwO1xuICAgICAgICAgICAgdmFyIHZiID0gWS5yZWY7XG5cbiAgICAgICAgICAgIGlmIChudWxsICE9PSB2Yikge1xuICAgICAgICAgICAgICB2YXIgWGMgPSBZLnN0YXRlTm9kZTtcblxuICAgICAgICAgICAgICBzd2l0Y2ggKFkudGFnKSB7XG4gICAgICAgICAgICAgICAgY2FzZSA1OlxuICAgICAgICAgICAgICAgICAgQiA9IFhjO1xuICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgQiA9IFhjO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgXCJmdW5jdGlvblwiID09PSB0eXBlb2YgdmIgPyB2YihCKSA6IHZiLmN1cnJlbnQgPSBCO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIFkgPSBZLm5leHRFZmZlY3Q7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKHdiKSB7XG4gICAgICAgIGlmIChudWxsID09PSBZKSB0aHJvdyBFcnJvcih1KDMzMCkpO1xuICAgICAgICBFaShZLCB3Yik7XG4gICAgICAgIFkgPSBZLm5leHRFZmZlY3Q7XG4gICAgICB9XG4gICAgfSB3aGlsZSAobnVsbCAhPT0gWSk7XG5cbiAgICBZID0gbnVsbDtcbiAgICBWZigpO1xuICAgIFcgPSBmO1xuICB9IGVsc2UgYS5jdXJyZW50ID0gYztcblxuICBpZiAocWopIHFqID0gITEsIHJqID0gYSwgc2ogPSBiO2Vsc2UgZm9yIChZID0gZTsgbnVsbCAhPT0gWTspIHtcbiAgICBiID0gWS5uZXh0RWZmZWN0LCBZLm5leHRFZmZlY3QgPSBudWxsLCBZID0gYjtcbiAgfVxuICBiID0gYS5maXJzdFBlbmRpbmdUaW1lO1xuICAwID09PSBiICYmIChhaiA9IG51bGwpO1xuICAxMDczNzQxODIzID09PSBiID8gYSA9PT0gdmogPyB1aisrIDogKHVqID0gMCwgdmogPSBhKSA6IHVqID0gMDtcbiAgXCJmdW5jdGlvblwiID09PSB0eXBlb2YgVWogJiYgVWooYy5zdGF0ZU5vZGUsIGQpO1xuICBaKGEpO1xuICBpZiAoWWkpIHRocm93IFlpID0gITEsIGEgPSBaaSwgWmkgPSBudWxsLCBhO1xuICBpZiAoKFcgJiBlaikgIT09IFYpIHJldHVybiBudWxsO1xuICBnZygpO1xuICByZXR1cm4gbnVsbDtcbn1cblxuZnVuY3Rpb24gVGooKSB7XG4gIGZvciAoOyBudWxsICE9PSBZOykge1xuICAgIHZhciBhID0gWS5lZmZlY3RUYWc7XG4gICAgMCAhPT0gKGEgJiAyNTYpICYmIEdpKFkuYWx0ZXJuYXRlLCBZKTtcbiAgICAwID09PSAoYSAmIDUxMikgfHwgcWogfHwgKHFqID0gITAsIGRnKDk3LCBmdW5jdGlvbiAoKSB7XG4gICAgICBEaigpO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSkpO1xuICAgIFkgPSBZLm5leHRFZmZlY3Q7XG4gIH1cbn1cblxuZnVuY3Rpb24gRGooKSB7XG4gIGlmICg5MCAhPT0gc2opIHtcbiAgICB2YXIgYSA9IDk3IDwgc2ogPyA5NyA6IHNqO1xuICAgIHNqID0gOTA7XG4gICAgcmV0dXJuIGNnKGEsIFZqKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBWaigpIHtcbiAgaWYgKG51bGwgPT09IHJqKSByZXR1cm4gITE7XG4gIHZhciBhID0gcmo7XG4gIHJqID0gbnVsbDtcbiAgaWYgKChXICYgKGZqIHwgZ2opKSAhPT0gVikgdGhyb3cgRXJyb3IodSgzMzEpKTtcbiAgdmFyIGIgPSBXO1xuICBXIHw9IGdqO1xuXG4gIGZvciAoYSA9IGEuY3VycmVudC5maXJzdEVmZmVjdDsgbnVsbCAhPT0gYTspIHtcbiAgICB0cnkge1xuICAgICAgdmFyIGMgPSBhO1xuICAgICAgaWYgKDAgIT09IChjLmVmZmVjdFRhZyAmIDUxMikpIHN3aXRjaCAoYy50YWcpIHtcbiAgICAgICAgY2FzZSAwOlxuICAgICAgICBjYXNlIDExOlxuICAgICAgICBjYXNlIDE1OlxuICAgICAgICBjYXNlIDIyOlxuICAgICAgICAgIEhpKDUsIGMpLCBJaSg1LCBjKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChkKSB7XG4gICAgICBpZiAobnVsbCA9PT0gYSkgdGhyb3cgRXJyb3IodSgzMzApKTtcbiAgICAgIEVpKGEsIGQpO1xuICAgIH1cblxuICAgIGMgPSBhLm5leHRFZmZlY3Q7XG4gICAgYS5uZXh0RWZmZWN0ID0gbnVsbDtcbiAgICBhID0gYztcbiAgfVxuXG4gIFcgPSBiO1xuICBnZygpO1xuICByZXR1cm4gITA7XG59XG5cbmZ1bmN0aW9uIFdqKGEsIGIsIGMpIHtcbiAgYiA9IEFpKGMsIGIpO1xuICBiID0gWGkoYSwgYiwgMTA3Mzc0MTgyMyk7XG4gIHhnKGEsIGIpO1xuICBhID0geGooYSwgMTA3Mzc0MTgyMyk7XG4gIG51bGwgIT09IGEgJiYgWihhKTtcbn1cblxuZnVuY3Rpb24gRWkoYSwgYikge1xuICBpZiAoMyA9PT0gYS50YWcpIFdqKGEsIGEsIGIpO2Vsc2UgZm9yICh2YXIgYyA9IGEucmV0dXJuOyBudWxsICE9PSBjOykge1xuICAgIGlmICgzID09PSBjLnRhZykge1xuICAgICAgV2ooYywgYSwgYik7XG4gICAgICBicmVhaztcbiAgICB9IGVsc2UgaWYgKDEgPT09IGMudGFnKSB7XG4gICAgICB2YXIgZCA9IGMuc3RhdGVOb2RlO1xuXG4gICAgICBpZiAoXCJmdW5jdGlvblwiID09PSB0eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvciB8fCBcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoICYmIChudWxsID09PSBhaiB8fCAhYWouaGFzKGQpKSkge1xuICAgICAgICBhID0gQWkoYiwgYSk7XG4gICAgICAgIGEgPSAkaShjLCBhLCAxMDczNzQxODIzKTtcbiAgICAgICAgeGcoYywgYSk7XG4gICAgICAgIGMgPSB4aihjLCAxMDczNzQxODIzKTtcbiAgICAgICAgbnVsbCAhPT0gYyAmJiBaKGMpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBjID0gYy5yZXR1cm47XG4gIH1cbn1cblxuZnVuY3Rpb24gT2ooYSwgYiwgYykge1xuICB2YXIgZCA9IGEucGluZ0NhY2hlO1xuICBudWxsICE9PSBkICYmIGQuZGVsZXRlKGIpO1xuICBUID09PSBhICYmIFUgPT09IGMgPyBTID09PSB2aSB8fCBTID09PSB1aSAmJiAxMDczNzQxODIzID09PSBsaiAmJiAkZigpIC0gVGkgPCBwaiA/IEVqKGEsIFUpIDogb2ogPSAhMCA6IEFqKGEsIGMpICYmIChiID0gYS5sYXN0UGluZ2VkVGltZSwgMCAhPT0gYiAmJiBiIDwgYyB8fCAoYS5sYXN0UGluZ2VkVGltZSA9IGMsIFooYSkpKTtcbn1cblxuZnVuY3Rpb24gVmkoYSwgYikge1xuICB2YXIgYyA9IGEuc3RhdGVOb2RlO1xuICBudWxsICE9PSBjICYmIGMuZGVsZXRlKGIpO1xuICBiID0gMDtcbiAgMCA9PT0gYiAmJiAoYiA9IEdnKCksIGIgPSBIZyhiLCBhLCBudWxsKSk7XG4gIGEgPSB4aihhLCBiKTtcbiAgbnVsbCAhPT0gYSAmJiBaKGEpO1xufVxuXG52YXIgUmo7XG5cblJqID0gZnVuY3Rpb24gUmooYSwgYiwgYykge1xuICB2YXIgZCA9IGIuZXhwaXJhdGlvblRpbWU7XG5cbiAgaWYgKG51bGwgIT09IGEpIHtcbiAgICB2YXIgZSA9IGIucGVuZGluZ1Byb3BzO1xuICAgIGlmIChhLm1lbW9pemVkUHJvcHMgIT09IGUgfHwgSy5jdXJyZW50KSByZyA9ICEwO2Vsc2Uge1xuICAgICAgaWYgKGQgPCBjKSB7XG4gICAgICAgIHJnID0gITE7XG5cbiAgICAgICAgc3dpdGNoIChiLnRhZykge1xuICAgICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgIGhpKGIpO1xuICAgICAgICAgICAgWGgoKTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSA1OlxuICAgICAgICAgICAgZmgoYik7XG4gICAgICAgICAgICBpZiAoYi5tb2RlICYgNCAmJiAxICE9PSBjICYmIGUuaGlkZGVuKSByZXR1cm4gYi5leHBpcmF0aW9uVGltZSA9IGIuY2hpbGRFeHBpcmF0aW9uVGltZSA9IDEsIG51bGw7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgIEwoYi50eXBlKSAmJiBHZihiKTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSA0OlxuICAgICAgICAgICAgZGgoYiwgYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgMTA6XG4gICAgICAgICAgICBkID0gYi5tZW1vaXplZFByb3BzLnZhbHVlO1xuICAgICAgICAgICAgZSA9IGIudHlwZS5fY29udGV4dDtcbiAgICAgICAgICAgIEkoamcsIGUuX2N1cnJlbnRWYWx1ZSk7XG4gICAgICAgICAgICBlLl9jdXJyZW50VmFsdWUgPSBkO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlIDEzOlxuICAgICAgICAgICAgaWYgKG51bGwgIT09IGIubWVtb2l6ZWRTdGF0ZSkge1xuICAgICAgICAgICAgICBkID0gYi5jaGlsZC5jaGlsZEV4cGlyYXRpb25UaW1lO1xuICAgICAgICAgICAgICBpZiAoMCAhPT0gZCAmJiBkID49IGMpIHJldHVybiBqaShhLCBiLCBjKTtcbiAgICAgICAgICAgICAgSShNLCBNLmN1cnJlbnQgJiAxKTtcbiAgICAgICAgICAgICAgYiA9ICRoKGEsIGIsIGMpO1xuICAgICAgICAgICAgICByZXR1cm4gbnVsbCAhPT0gYiA/IGIuc2libGluZyA6IG51bGw7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIEkoTSwgTS5jdXJyZW50ICYgMSk7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgMTk6XG4gICAgICAgICAgICBkID0gYi5jaGlsZEV4cGlyYXRpb25UaW1lID49IGM7XG5cbiAgICAgICAgICAgIGlmICgwICE9PSAoYS5lZmZlY3RUYWcgJiA2NCkpIHtcbiAgICAgICAgICAgICAgaWYgKGQpIHJldHVybiBtaShhLCBiLCBjKTtcbiAgICAgICAgICAgICAgYi5lZmZlY3RUYWcgfD0gNjQ7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGUgPSBiLm1lbW9pemVkU3RhdGU7XG4gICAgICAgICAgICBudWxsICE9PSBlICYmIChlLnJlbmRlcmluZyA9IG51bGwsIGUudGFpbCA9IG51bGwpO1xuICAgICAgICAgICAgSShNLCBNLmN1cnJlbnQpO1xuICAgICAgICAgICAgaWYgKCFkKSByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiAkaChhLCBiLCBjKTtcbiAgICAgIH1cblxuICAgICAgcmcgPSAhMTtcbiAgICB9XG4gIH0gZWxzZSByZyA9ICExO1xuXG4gIGIuZXhwaXJhdGlvblRpbWUgPSAwO1xuXG4gIHN3aXRjaCAoYi50YWcpIHtcbiAgICBjYXNlIDI6XG4gICAgICBkID0gYi50eXBlO1xuICAgICAgbnVsbCAhPT0gYSAmJiAoYS5hbHRlcm5hdGUgPSBudWxsLCBiLmFsdGVybmF0ZSA9IG51bGwsIGIuZWZmZWN0VGFnIHw9IDIpO1xuICAgICAgYSA9IGIucGVuZGluZ1Byb3BzO1xuICAgICAgZSA9IENmKGIsIEouY3VycmVudCk7XG4gICAgICBxZyhiLCBjKTtcbiAgICAgIGUgPSBvaChudWxsLCBiLCBkLCBhLCBlLCBjKTtcbiAgICAgIGIuZWZmZWN0VGFnIHw9IDE7XG5cbiAgICAgIGlmIChcIm9iamVjdFwiID09PSB0eXBlb2YgZSAmJiBudWxsICE9PSBlICYmIFwiZnVuY3Rpb25cIiA9PT0gdHlwZW9mIGUucmVuZGVyICYmIHZvaWQgMCA9PT0gZS4kJHR5cGVvZikge1xuICAgICAgICBiLnRhZyA9IDE7XG4gICAgICAgIGIubWVtb2l6ZWRTdGF0ZSA9IG51bGw7XG4gICAgICAgIGIudXBkYXRlUXVldWUgPSBudWxsO1xuXG4gICAgICAgIGlmIChMKGQpKSB7XG4gICAgICAgICAgdmFyIGYgPSAhMDtcbiAgICAgICAgICBHZihiKTtcbiAgICAgICAgfSBlbHNlIGYgPSAhMTtcblxuICAgICAgICBiLm1lbW9pemVkU3RhdGUgPSBudWxsICE9PSBlLnN0YXRlICYmIHZvaWQgMCAhPT0gZS5zdGF0ZSA/IGUuc3RhdGUgOiBudWxsO1xuICAgICAgICB1ZyhiKTtcbiAgICAgICAgdmFyIGcgPSBkLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcbiAgICAgICAgXCJmdW5jdGlvblwiID09PSB0eXBlb2YgZyAmJiBGZyhiLCBkLCBnLCBhKTtcbiAgICAgICAgZS51cGRhdGVyID0gSmc7XG4gICAgICAgIGIuc3RhdGVOb2RlID0gZTtcbiAgICAgICAgZS5fcmVhY3RJbnRlcm5hbEZpYmVyID0gYjtcbiAgICAgICAgTmcoYiwgZCwgYSwgYyk7XG4gICAgICAgIGIgPSBnaShudWxsLCBiLCBkLCAhMCwgZiwgYyk7XG4gICAgICB9IGVsc2UgYi50YWcgPSAwLCBSKG51bGwsIGIsIGUsIGMpLCBiID0gYi5jaGlsZDtcblxuICAgICAgcmV0dXJuIGI7XG5cbiAgICBjYXNlIDE2OlxuICAgICAgYToge1xuICAgICAgICBlID0gYi5lbGVtZW50VHlwZTtcbiAgICAgICAgbnVsbCAhPT0gYSAmJiAoYS5hbHRlcm5hdGUgPSBudWxsLCBiLmFsdGVybmF0ZSA9IG51bGwsIGIuZWZmZWN0VGFnIHw9IDIpO1xuICAgICAgICBhID0gYi5wZW5kaW5nUHJvcHM7XG4gICAgICAgIG9iKGUpO1xuICAgICAgICBpZiAoMSAhPT0gZS5fc3RhdHVzKSB0aHJvdyBlLl9yZXN1bHQ7XG4gICAgICAgIGUgPSBlLl9yZXN1bHQ7XG4gICAgICAgIGIudHlwZSA9IGU7XG4gICAgICAgIGYgPSBiLnRhZyA9IFhqKGUpO1xuICAgICAgICBhID0gaWcoZSwgYSk7XG5cbiAgICAgICAgc3dpdGNoIChmKSB7XG4gICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgYiA9IGRpKG51bGwsIGIsIGUsIGEsIGMpO1xuICAgICAgICAgICAgYnJlYWsgYTtcblxuICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgIGIgPSBmaShudWxsLCBiLCBlLCBhLCBjKTtcbiAgICAgICAgICAgIGJyZWFrIGE7XG5cbiAgICAgICAgICBjYXNlIDExOlxuICAgICAgICAgICAgYiA9IFpoKG51bGwsIGIsIGUsIGEsIGMpO1xuICAgICAgICAgICAgYnJlYWsgYTtcblxuICAgICAgICAgIGNhc2UgMTQ6XG4gICAgICAgICAgICBiID0gYWkobnVsbCwgYiwgZSwgaWcoZS50eXBlLCBhKSwgZCwgYyk7XG4gICAgICAgICAgICBicmVhayBhO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhyb3cgRXJyb3IodSgzMDYsIGUsIFwiXCIpKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGI7XG5cbiAgICBjYXNlIDA6XG4gICAgICByZXR1cm4gZCA9IGIudHlwZSwgZSA9IGIucGVuZGluZ1Byb3BzLCBlID0gYi5lbGVtZW50VHlwZSA9PT0gZCA/IGUgOiBpZyhkLCBlKSwgZGkoYSwgYiwgZCwgZSwgYyk7XG5cbiAgICBjYXNlIDE6XG4gICAgICByZXR1cm4gZCA9IGIudHlwZSwgZSA9IGIucGVuZGluZ1Byb3BzLCBlID0gYi5lbGVtZW50VHlwZSA9PT0gZCA/IGUgOiBpZyhkLCBlKSwgZmkoYSwgYiwgZCwgZSwgYyk7XG5cbiAgICBjYXNlIDM6XG4gICAgICBoaShiKTtcbiAgICAgIGQgPSBiLnVwZGF0ZVF1ZXVlO1xuICAgICAgaWYgKG51bGwgPT09IGEgfHwgbnVsbCA9PT0gZCkgdGhyb3cgRXJyb3IodSgyODIpKTtcbiAgICAgIGQgPSBiLnBlbmRpbmdQcm9wcztcbiAgICAgIGUgPSBiLm1lbW9pemVkU3RhdGU7XG4gICAgICBlID0gbnVsbCAhPT0gZSA/IGUuZWxlbWVudCA6IG51bGw7XG4gICAgICB2ZyhhLCBiKTtcbiAgICAgIHpnKGIsIGQsIG51bGwsIGMpO1xuICAgICAgZCA9IGIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50O1xuICAgICAgaWYgKGQgPT09IGUpIFhoKCksIGIgPSAkaChhLCBiLCBjKTtlbHNlIHtcbiAgICAgICAgaWYgKGUgPSBiLnN0YXRlTm9kZS5oeWRyYXRlKSBQaCA9IEpkKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8uZmlyc3RDaGlsZCksIE9oID0gYiwgZSA9IFFoID0gITA7XG4gICAgICAgIGlmIChlKSBmb3IgKGMgPSBZZyhiLCBudWxsLCBkLCBjKSwgYi5jaGlsZCA9IGM7IGM7KSB7XG4gICAgICAgICAgYy5lZmZlY3RUYWcgPSBjLmVmZmVjdFRhZyAmIC0zIHwgMTAyNCwgYyA9IGMuc2libGluZztcbiAgICAgICAgfSBlbHNlIFIoYSwgYiwgZCwgYyksIFhoKCk7XG4gICAgICAgIGIgPSBiLmNoaWxkO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGI7XG5cbiAgICBjYXNlIDU6XG4gICAgICByZXR1cm4gZmgoYiksIG51bGwgPT09IGEgJiYgVWgoYiksIGQgPSBiLnR5cGUsIGUgPSBiLnBlbmRpbmdQcm9wcywgZiA9IG51bGwgIT09IGEgPyBhLm1lbW9pemVkUHJvcHMgOiBudWxsLCBnID0gZS5jaGlsZHJlbiwgR2QoZCwgZSkgPyBnID0gbnVsbCA6IG51bGwgIT09IGYgJiYgR2QoZCwgZikgJiYgKGIuZWZmZWN0VGFnIHw9IDE2KSwgZWkoYSwgYiksIGIubW9kZSAmIDQgJiYgMSAhPT0gYyAmJiBlLmhpZGRlbiA/IChiLmV4cGlyYXRpb25UaW1lID0gYi5jaGlsZEV4cGlyYXRpb25UaW1lID0gMSwgYiA9IG51bGwpIDogKFIoYSwgYiwgZywgYyksIGIgPSBiLmNoaWxkKSwgYjtcblxuICAgIGNhc2UgNjpcbiAgICAgIHJldHVybiBudWxsID09PSBhICYmIFVoKGIpLCBudWxsO1xuXG4gICAgY2FzZSAxMzpcbiAgICAgIHJldHVybiBqaShhLCBiLCBjKTtcblxuICAgIGNhc2UgNDpcbiAgICAgIHJldHVybiBkaChiLCBiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSwgZCA9IGIucGVuZGluZ1Byb3BzLCBudWxsID09PSBhID8gYi5jaGlsZCA9IFhnKGIsIG51bGwsIGQsIGMpIDogUihhLCBiLCBkLCBjKSwgYi5jaGlsZDtcblxuICAgIGNhc2UgMTE6XG4gICAgICByZXR1cm4gZCA9IGIudHlwZSwgZSA9IGIucGVuZGluZ1Byb3BzLCBlID0gYi5lbGVtZW50VHlwZSA9PT0gZCA/IGUgOiBpZyhkLCBlKSwgWmgoYSwgYiwgZCwgZSwgYyk7XG5cbiAgICBjYXNlIDc6XG4gICAgICByZXR1cm4gUihhLCBiLCBiLnBlbmRpbmdQcm9wcywgYyksIGIuY2hpbGQ7XG5cbiAgICBjYXNlIDg6XG4gICAgICByZXR1cm4gUihhLCBiLCBiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbiwgYyksIGIuY2hpbGQ7XG5cbiAgICBjYXNlIDEyOlxuICAgICAgcmV0dXJuIFIoYSwgYiwgYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sIGMpLCBiLmNoaWxkO1xuXG4gICAgY2FzZSAxMDpcbiAgICAgIGE6IHtcbiAgICAgICAgZCA9IGIudHlwZS5fY29udGV4dDtcbiAgICAgICAgZSA9IGIucGVuZGluZ1Byb3BzO1xuICAgICAgICBnID0gYi5tZW1vaXplZFByb3BzO1xuICAgICAgICBmID0gZS52YWx1ZTtcbiAgICAgICAgdmFyIGggPSBiLnR5cGUuX2NvbnRleHQ7XG4gICAgICAgIEkoamcsIGguX2N1cnJlbnRWYWx1ZSk7XG4gICAgICAgIGguX2N1cnJlbnRWYWx1ZSA9IGY7XG4gICAgICAgIGlmIChudWxsICE9PSBnKSBpZiAoaCA9IGcudmFsdWUsIGYgPSAkZShoLCBmKSA/IDAgOiAoXCJmdW5jdGlvblwiID09PSB0eXBlb2YgZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHMgPyBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhoLCBmKSA6IDEwNzM3NDE4MjMpIHwgMCwgMCA9PT0gZikge1xuICAgICAgICAgIGlmIChnLmNoaWxkcmVuID09PSBlLmNoaWxkcmVuICYmICFLLmN1cnJlbnQpIHtcbiAgICAgICAgICAgIGIgPSAkaChhLCBiLCBjKTtcbiAgICAgICAgICAgIGJyZWFrIGE7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgZm9yIChoID0gYi5jaGlsZCwgbnVsbCAhPT0gaCAmJiAoaC5yZXR1cm4gPSBiKTsgbnVsbCAhPT0gaDspIHtcbiAgICAgICAgICB2YXIgayA9IGguZGVwZW5kZW5jaWVzO1xuXG4gICAgICAgICAgaWYgKG51bGwgIT09IGspIHtcbiAgICAgICAgICAgIGcgPSBoLmNoaWxkO1xuXG4gICAgICAgICAgICBmb3IgKHZhciBsID0gay5maXJzdENvbnRleHQ7IG51bGwgIT09IGw7KSB7XG4gICAgICAgICAgICAgIGlmIChsLmNvbnRleHQgPT09IGQgJiYgMCAhPT0gKGwub2JzZXJ2ZWRCaXRzICYgZikpIHtcbiAgICAgICAgICAgICAgICAxID09PSBoLnRhZyAmJiAobCA9IHdnKGMsIG51bGwpLCBsLnRhZyA9IDIsIHhnKGgsIGwpKTtcbiAgICAgICAgICAgICAgICBoLmV4cGlyYXRpb25UaW1lIDwgYyAmJiAoaC5leHBpcmF0aW9uVGltZSA9IGMpO1xuICAgICAgICAgICAgICAgIGwgPSBoLmFsdGVybmF0ZTtcbiAgICAgICAgICAgICAgICBudWxsICE9PSBsICYmIGwuZXhwaXJhdGlvblRpbWUgPCBjICYmIChsLmV4cGlyYXRpb25UaW1lID0gYyk7XG4gICAgICAgICAgICAgICAgcGcoaC5yZXR1cm4sIGMpO1xuICAgICAgICAgICAgICAgIGsuZXhwaXJhdGlvblRpbWUgPCBjICYmIChrLmV4cGlyYXRpb25UaW1lID0gYyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBsID0gbC5uZXh0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSBnID0gMTAgPT09IGgudGFnID8gaC50eXBlID09PSBiLnR5cGUgPyBudWxsIDogaC5jaGlsZCA6IGguY2hpbGQ7XG5cbiAgICAgICAgICBpZiAobnVsbCAhPT0gZykgZy5yZXR1cm4gPSBoO2Vsc2UgZm9yIChnID0gaDsgbnVsbCAhPT0gZzspIHtcbiAgICAgICAgICAgIGlmIChnID09PSBiKSB7XG4gICAgICAgICAgICAgIGcgPSBudWxsO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaCA9IGcuc2libGluZztcblxuICAgICAgICAgICAgaWYgKG51bGwgIT09IGgpIHtcbiAgICAgICAgICAgICAgaC5yZXR1cm4gPSBnLnJldHVybjtcbiAgICAgICAgICAgICAgZyA9IGg7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBnID0gZy5yZXR1cm47XG4gICAgICAgICAgfVxuICAgICAgICAgIGggPSBnO1xuICAgICAgICB9XG4gICAgICAgIFIoYSwgYiwgZS5jaGlsZHJlbiwgYyk7XG4gICAgICAgIGIgPSBiLmNoaWxkO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gYjtcblxuICAgIGNhc2UgOTpcbiAgICAgIHJldHVybiBlID0gYi50eXBlLCBmID0gYi5wZW5kaW5nUHJvcHMsIGQgPSBmLmNoaWxkcmVuLCBxZyhiLCBjKSwgZSA9IHNnKGUsIGYudW5zdGFibGVfb2JzZXJ2ZWRCaXRzKSwgZCA9IGQoZSksIGIuZWZmZWN0VGFnIHw9IDEsIFIoYSwgYiwgZCwgYyksIGIuY2hpbGQ7XG5cbiAgICBjYXNlIDE0OlxuICAgICAgcmV0dXJuIGUgPSBiLnR5cGUsIGYgPSBpZyhlLCBiLnBlbmRpbmdQcm9wcyksIGYgPSBpZyhlLnR5cGUsIGYpLCBhaShhLCBiLCBlLCBmLCBkLCBjKTtcblxuICAgIGNhc2UgMTU6XG4gICAgICByZXR1cm4gY2koYSwgYiwgYi50eXBlLCBiLnBlbmRpbmdQcm9wcywgZCwgYyk7XG5cbiAgICBjYXNlIDE3OlxuICAgICAgcmV0dXJuIGQgPSBiLnR5cGUsIGUgPSBiLnBlbmRpbmdQcm9wcywgZSA9IGIuZWxlbWVudFR5cGUgPT09IGQgPyBlIDogaWcoZCwgZSksIG51bGwgIT09IGEgJiYgKGEuYWx0ZXJuYXRlID0gbnVsbCwgYi5hbHRlcm5hdGUgPSBudWxsLCBiLmVmZmVjdFRhZyB8PSAyKSwgYi50YWcgPSAxLCBMKGQpID8gKGEgPSAhMCwgR2YoYikpIDogYSA9ICExLCBxZyhiLCBjKSwgTGcoYiwgZCwgZSksIE5nKGIsIGQsIGUsIGMpLCBnaShudWxsLCBiLCBkLCAhMCwgYSwgYyk7XG5cbiAgICBjYXNlIDE5OlxuICAgICAgcmV0dXJuIG1pKGEsIGIsIGMpO1xuICB9XG5cbiAgdGhyb3cgRXJyb3IodSgxNTYsIGIudGFnKSk7XG59O1xuXG52YXIgVWogPSBudWxsLFxuICAgIExpID0gbnVsbDtcblxuZnVuY3Rpb24gWWooYSkge1xuICBpZiAoXCJ1bmRlZmluZWRcIiA9PT0gdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXykgcmV0dXJuICExO1xuICB2YXIgYiA9IF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztcbiAgaWYgKGIuaXNEaXNhYmxlZCB8fCAhYi5zdXBwb3J0c0ZpYmVyKSByZXR1cm4gITA7XG5cbiAgdHJ5IHtcbiAgICB2YXIgYyA9IGIuaW5qZWN0KGEpO1xuXG4gICAgVWogPSBmdW5jdGlvbiBVaihhKSB7XG4gICAgICB0cnkge1xuICAgICAgICBiLm9uQ29tbWl0RmliZXJSb290KGMsIGEsIHZvaWQgMCwgNjQgPT09IChhLmN1cnJlbnQuZWZmZWN0VGFnICYgNjQpKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgfTtcblxuICAgIExpID0gZnVuY3Rpb24gTGkoYSkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgYi5vbkNvbW1pdEZpYmVyVW5tb3VudChjLCBhKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgfTtcbiAgfSBjYXRjaCAoZCkge31cblxuICByZXR1cm4gITA7XG59XG5cbmZ1bmN0aW9uIFpqKGEsIGIsIGMsIGQpIHtcbiAgdGhpcy50YWcgPSBhO1xuICB0aGlzLmtleSA9IGM7XG4gIHRoaXMuc2libGluZyA9IHRoaXMuY2hpbGQgPSB0aGlzLnJldHVybiA9IHRoaXMuc3RhdGVOb2RlID0gdGhpcy50eXBlID0gdGhpcy5lbGVtZW50VHlwZSA9IG51bGw7XG4gIHRoaXMuaW5kZXggPSAwO1xuICB0aGlzLnJlZiA9IG51bGw7XG4gIHRoaXMucGVuZGluZ1Byb3BzID0gYjtcbiAgdGhpcy5kZXBlbmRlbmNpZXMgPSB0aGlzLm1lbW9pemVkU3RhdGUgPSB0aGlzLnVwZGF0ZVF1ZXVlID0gdGhpcy5tZW1vaXplZFByb3BzID0gbnVsbDtcbiAgdGhpcy5tb2RlID0gZDtcbiAgdGhpcy5lZmZlY3RUYWcgPSAwO1xuICB0aGlzLmxhc3RFZmZlY3QgPSB0aGlzLmZpcnN0RWZmZWN0ID0gdGhpcy5uZXh0RWZmZWN0ID0gbnVsbDtcbiAgdGhpcy5jaGlsZEV4cGlyYXRpb25UaW1lID0gdGhpcy5leHBpcmF0aW9uVGltZSA9IDA7XG4gIHRoaXMuYWx0ZXJuYXRlID0gbnVsbDtcbn1cblxuZnVuY3Rpb24gU2goYSwgYiwgYywgZCkge1xuICByZXR1cm4gbmV3IFpqKGEsIGIsIGMsIGQpO1xufVxuXG5mdW5jdGlvbiBiaShhKSB7XG4gIGEgPSBhLnByb3RvdHlwZTtcbiAgcmV0dXJuICEoIWEgfHwgIWEuaXNSZWFjdENvbXBvbmVudCk7XG59XG5cbmZ1bmN0aW9uIFhqKGEpIHtcbiAgaWYgKFwiZnVuY3Rpb25cIiA9PT0gdHlwZW9mIGEpIHJldHVybiBiaShhKSA/IDEgOiAwO1xuXG4gIGlmICh2b2lkIDAgIT09IGEgJiYgbnVsbCAhPT0gYSkge1xuICAgIGEgPSBhLiQkdHlwZW9mO1xuICAgIGlmIChhID09PSBnYikgcmV0dXJuIDExO1xuICAgIGlmIChhID09PSBqYikgcmV0dXJuIDE0O1xuICB9XG5cbiAgcmV0dXJuIDI7XG59XG5cbmZ1bmN0aW9uIFNnKGEsIGIpIHtcbiAgdmFyIGMgPSBhLmFsdGVybmF0ZTtcbiAgbnVsbCA9PT0gYyA/IChjID0gU2goYS50YWcsIGIsIGEua2V5LCBhLm1vZGUpLCBjLmVsZW1lbnRUeXBlID0gYS5lbGVtZW50VHlwZSwgYy50eXBlID0gYS50eXBlLCBjLnN0YXRlTm9kZSA9IGEuc3RhdGVOb2RlLCBjLmFsdGVybmF0ZSA9IGEsIGEuYWx0ZXJuYXRlID0gYykgOiAoYy5wZW5kaW5nUHJvcHMgPSBiLCBjLmVmZmVjdFRhZyA9IDAsIGMubmV4dEVmZmVjdCA9IG51bGwsIGMuZmlyc3RFZmZlY3QgPSBudWxsLCBjLmxhc3RFZmZlY3QgPSBudWxsKTtcbiAgYy5jaGlsZEV4cGlyYXRpb25UaW1lID0gYS5jaGlsZEV4cGlyYXRpb25UaW1lO1xuICBjLmV4cGlyYXRpb25UaW1lID0gYS5leHBpcmF0aW9uVGltZTtcbiAgYy5jaGlsZCA9IGEuY2hpbGQ7XG4gIGMubWVtb2l6ZWRQcm9wcyA9IGEubWVtb2l6ZWRQcm9wcztcbiAgYy5tZW1vaXplZFN0YXRlID0gYS5tZW1vaXplZFN0YXRlO1xuICBjLnVwZGF0ZVF1ZXVlID0gYS51cGRhdGVRdWV1ZTtcbiAgYiA9IGEuZGVwZW5kZW5jaWVzO1xuICBjLmRlcGVuZGVuY2llcyA9IG51bGwgPT09IGIgPyBudWxsIDoge1xuICAgIGV4cGlyYXRpb25UaW1lOiBiLmV4cGlyYXRpb25UaW1lLFxuICAgIGZpcnN0Q29udGV4dDogYi5maXJzdENvbnRleHQsXG4gICAgcmVzcG9uZGVyczogYi5yZXNwb25kZXJzXG4gIH07XG4gIGMuc2libGluZyA9IGEuc2libGluZztcbiAgYy5pbmRleCA9IGEuaW5kZXg7XG4gIGMucmVmID0gYS5yZWY7XG4gIHJldHVybiBjO1xufVxuXG5mdW5jdGlvbiBVZyhhLCBiLCBjLCBkLCBlLCBmKSB7XG4gIHZhciBnID0gMjtcbiAgZCA9IGE7XG4gIGlmIChcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBhKSBiaShhKSAmJiAoZyA9IDEpO2Vsc2UgaWYgKFwic3RyaW5nXCIgPT09IHR5cGVvZiBhKSBnID0gNTtlbHNlIGE6IHN3aXRjaCAoYSkge1xuICAgIGNhc2UgYWI6XG4gICAgICByZXR1cm4gV2coYy5jaGlsZHJlbiwgZSwgZiwgYik7XG5cbiAgICBjYXNlIGZiOlxuICAgICAgZyA9IDg7XG4gICAgICBlIHw9IDc7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgYmI6XG4gICAgICBnID0gODtcbiAgICAgIGUgfD0gMTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSBjYjpcbiAgICAgIHJldHVybiBhID0gU2goMTIsIGMsIGIsIGUgfCA4KSwgYS5lbGVtZW50VHlwZSA9IGNiLCBhLnR5cGUgPSBjYiwgYS5leHBpcmF0aW9uVGltZSA9IGYsIGE7XG5cbiAgICBjYXNlIGhiOlxuICAgICAgcmV0dXJuIGEgPSBTaCgxMywgYywgYiwgZSksIGEudHlwZSA9IGhiLCBhLmVsZW1lbnRUeXBlID0gaGIsIGEuZXhwaXJhdGlvblRpbWUgPSBmLCBhO1xuXG4gICAgY2FzZSBpYjpcbiAgICAgIHJldHVybiBhID0gU2goMTksIGMsIGIsIGUpLCBhLmVsZW1lbnRUeXBlID0gaWIsIGEuZXhwaXJhdGlvblRpbWUgPSBmLCBhO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIGlmIChcIm9iamVjdFwiID09PSB0eXBlb2YgYSAmJiBudWxsICE9PSBhKSBzd2l0Y2ggKGEuJCR0eXBlb2YpIHtcbiAgICAgICAgY2FzZSBkYjpcbiAgICAgICAgICBnID0gMTA7XG4gICAgICAgICAgYnJlYWsgYTtcblxuICAgICAgICBjYXNlIGViOlxuICAgICAgICAgIGcgPSA5O1xuICAgICAgICAgIGJyZWFrIGE7XG5cbiAgICAgICAgY2FzZSBnYjpcbiAgICAgICAgICBnID0gMTE7XG4gICAgICAgICAgYnJlYWsgYTtcblxuICAgICAgICBjYXNlIGpiOlxuICAgICAgICAgIGcgPSAxNDtcbiAgICAgICAgICBicmVhayBhO1xuXG4gICAgICAgIGNhc2Uga2I6XG4gICAgICAgICAgZyA9IDE2O1xuICAgICAgICAgIGQgPSBudWxsO1xuICAgICAgICAgIGJyZWFrIGE7XG5cbiAgICAgICAgY2FzZSBsYjpcbiAgICAgICAgICBnID0gMjI7XG4gICAgICAgICAgYnJlYWsgYTtcbiAgICAgIH1cbiAgICAgIHRocm93IEVycm9yKHUoMTMwLCBudWxsID09IGEgPyBhIDogdHlwZW9mIGEsIFwiXCIpKTtcbiAgfVxuICBiID0gU2goZywgYywgYiwgZSk7XG4gIGIuZWxlbWVudFR5cGUgPSBhO1xuICBiLnR5cGUgPSBkO1xuICBiLmV4cGlyYXRpb25UaW1lID0gZjtcbiAgcmV0dXJuIGI7XG59XG5cbmZ1bmN0aW9uIFdnKGEsIGIsIGMsIGQpIHtcbiAgYSA9IFNoKDcsIGEsIGQsIGIpO1xuICBhLmV4cGlyYXRpb25UaW1lID0gYztcbiAgcmV0dXJuIGE7XG59XG5cbmZ1bmN0aW9uIFRnKGEsIGIsIGMpIHtcbiAgYSA9IFNoKDYsIGEsIG51bGwsIGIpO1xuICBhLmV4cGlyYXRpb25UaW1lID0gYztcbiAgcmV0dXJuIGE7XG59XG5cbmZ1bmN0aW9uIFZnKGEsIGIsIGMpIHtcbiAgYiA9IFNoKDQsIG51bGwgIT09IGEuY2hpbGRyZW4gPyBhLmNoaWxkcmVuIDogW10sIGEua2V5LCBiKTtcbiAgYi5leHBpcmF0aW9uVGltZSA9IGM7XG4gIGIuc3RhdGVOb2RlID0ge1xuICAgIGNvbnRhaW5lckluZm86IGEuY29udGFpbmVySW5mbyxcbiAgICBwZW5kaW5nQ2hpbGRyZW46IG51bGwsXG4gICAgaW1wbGVtZW50YXRpb246IGEuaW1wbGVtZW50YXRpb25cbiAgfTtcbiAgcmV0dXJuIGI7XG59XG5cbmZ1bmN0aW9uIGFrKGEsIGIsIGMpIHtcbiAgdGhpcy50YWcgPSBiO1xuICB0aGlzLmN1cnJlbnQgPSBudWxsO1xuICB0aGlzLmNvbnRhaW5lckluZm8gPSBhO1xuICB0aGlzLnBpbmdDYWNoZSA9IHRoaXMucGVuZGluZ0NoaWxkcmVuID0gbnVsbDtcbiAgdGhpcy5maW5pc2hlZEV4cGlyYXRpb25UaW1lID0gMDtcbiAgdGhpcy5maW5pc2hlZFdvcmsgPSBudWxsO1xuICB0aGlzLnRpbWVvdXRIYW5kbGUgPSAtMTtcbiAgdGhpcy5wZW5kaW5nQ29udGV4dCA9IHRoaXMuY29udGV4dCA9IG51bGw7XG4gIHRoaXMuaHlkcmF0ZSA9IGM7XG4gIHRoaXMuY2FsbGJhY2tOb2RlID0gbnVsbDtcbiAgdGhpcy5jYWxsYmFja1ByaW9yaXR5ID0gOTA7XG4gIHRoaXMubGFzdEV4cGlyZWRUaW1lID0gdGhpcy5sYXN0UGluZ2VkVGltZSA9IHRoaXMubmV4dEtub3duUGVuZGluZ0xldmVsID0gdGhpcy5sYXN0U3VzcGVuZGVkVGltZSA9IHRoaXMuZmlyc3RTdXNwZW5kZWRUaW1lID0gdGhpcy5maXJzdFBlbmRpbmdUaW1lID0gMDtcbn1cblxuZnVuY3Rpb24gQWooYSwgYikge1xuICB2YXIgYyA9IGEuZmlyc3RTdXNwZW5kZWRUaW1lO1xuICBhID0gYS5sYXN0U3VzcGVuZGVkVGltZTtcbiAgcmV0dXJuIDAgIT09IGMgJiYgYyA+PSBiICYmIGEgPD0gYjtcbn1cblxuZnVuY3Rpb24geGkoYSwgYikge1xuICB2YXIgYyA9IGEuZmlyc3RTdXNwZW5kZWRUaW1lLFxuICAgICAgZCA9IGEubGFzdFN1c3BlbmRlZFRpbWU7XG4gIGMgPCBiICYmIChhLmZpcnN0U3VzcGVuZGVkVGltZSA9IGIpO1xuICBpZiAoZCA+IGIgfHwgMCA9PT0gYykgYS5sYXN0U3VzcGVuZGVkVGltZSA9IGI7XG4gIGIgPD0gYS5sYXN0UGluZ2VkVGltZSAmJiAoYS5sYXN0UGluZ2VkVGltZSA9IDApO1xuICBiIDw9IGEubGFzdEV4cGlyZWRUaW1lICYmIChhLmxhc3RFeHBpcmVkVGltZSA9IDApO1xufVxuXG5mdW5jdGlvbiB5aShhLCBiKSB7XG4gIGIgPiBhLmZpcnN0UGVuZGluZ1RpbWUgJiYgKGEuZmlyc3RQZW5kaW5nVGltZSA9IGIpO1xuICB2YXIgYyA9IGEuZmlyc3RTdXNwZW5kZWRUaW1lO1xuICAwICE9PSBjICYmIChiID49IGMgPyBhLmZpcnN0U3VzcGVuZGVkVGltZSA9IGEubGFzdFN1c3BlbmRlZFRpbWUgPSBhLm5leHRLbm93blBlbmRpbmdMZXZlbCA9IDAgOiBiID49IGEubGFzdFN1c3BlbmRlZFRpbWUgJiYgKGEubGFzdFN1c3BlbmRlZFRpbWUgPSBiICsgMSksIGIgPiBhLm5leHRLbm93blBlbmRpbmdMZXZlbCAmJiAoYS5uZXh0S25vd25QZW5kaW5nTGV2ZWwgPSBiKSk7XG59XG5cbmZ1bmN0aW9uIENqKGEsIGIpIHtcbiAgdmFyIGMgPSBhLmxhc3RFeHBpcmVkVGltZTtcbiAgaWYgKDAgPT09IGMgfHwgYyA+IGIpIGEubGFzdEV4cGlyZWRUaW1lID0gYjtcbn1cblxuZnVuY3Rpb24gYmsoYSwgYiwgYywgZCkge1xuICB2YXIgZSA9IGIuY3VycmVudCxcbiAgICAgIGYgPSBHZygpLFxuICAgICAgZyA9IERnLnN1c3BlbnNlO1xuICBmID0gSGcoZiwgZSwgZyk7XG5cbiAgYTogaWYgKGMpIHtcbiAgICBjID0gYy5fcmVhY3RJbnRlcm5hbEZpYmVyO1xuXG4gICAgYjoge1xuICAgICAgaWYgKGRjKGMpICE9PSBjIHx8IDEgIT09IGMudGFnKSB0aHJvdyBFcnJvcih1KDE3MCkpO1xuICAgICAgdmFyIGggPSBjO1xuXG4gICAgICBkbyB7XG4gICAgICAgIHN3aXRjaCAoaC50YWcpIHtcbiAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICBoID0gaC5zdGF0ZU5vZGUuY29udGV4dDtcbiAgICAgICAgICAgIGJyZWFrIGI7XG5cbiAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICBpZiAoTChoLnR5cGUpKSB7XG4gICAgICAgICAgICAgIGggPSBoLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDtcbiAgICAgICAgICAgICAgYnJlYWsgYjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICB9XG5cbiAgICAgICAgaCA9IGgucmV0dXJuO1xuICAgICAgfSB3aGlsZSAobnVsbCAhPT0gaCk7XG5cbiAgICAgIHRocm93IEVycm9yKHUoMTcxKSk7XG4gICAgfVxuXG4gICAgaWYgKDEgPT09IGMudGFnKSB7XG4gICAgICB2YXIgayA9IGMudHlwZTtcblxuICAgICAgaWYgKEwoaykpIHtcbiAgICAgICAgYyA9IEZmKGMsIGssIGgpO1xuICAgICAgICBicmVhayBhO1xuICAgICAgfVxuICAgIH1cblxuICAgIGMgPSBoO1xuICB9IGVsc2UgYyA9IEFmO1xuXG4gIG51bGwgPT09IGIuY29udGV4dCA/IGIuY29udGV4dCA9IGMgOiBiLnBlbmRpbmdDb250ZXh0ID0gYztcbiAgYiA9IHdnKGYsIGcpO1xuICBiLnBheWxvYWQgPSB7XG4gICAgZWxlbWVudDogYVxuICB9O1xuICBkID0gdm9pZCAwID09PSBkID8gbnVsbCA6IGQ7XG4gIG51bGwgIT09IGQgJiYgKGIuY2FsbGJhY2sgPSBkKTtcbiAgeGcoZSwgYik7XG4gIElnKGUsIGYpO1xuICByZXR1cm4gZjtcbn1cblxuZnVuY3Rpb24gY2soYSkge1xuICBhID0gYS5jdXJyZW50O1xuICBpZiAoIWEuY2hpbGQpIHJldHVybiBudWxsO1xuXG4gIHN3aXRjaCAoYS5jaGlsZC50YWcpIHtcbiAgICBjYXNlIDU6XG4gICAgICByZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlO1xuICB9XG59XG5cbmZ1bmN0aW9uIGRrKGEsIGIpIHtcbiAgYSA9IGEubWVtb2l6ZWRTdGF0ZTtcbiAgbnVsbCAhPT0gYSAmJiBudWxsICE9PSBhLmRlaHlkcmF0ZWQgJiYgYS5yZXRyeVRpbWUgPCBiICYmIChhLnJldHJ5VGltZSA9IGIpO1xufVxuXG5mdW5jdGlvbiBlayhhLCBiKSB7XG4gIGRrKGEsIGIpO1xuICAoYSA9IGEuYWx0ZXJuYXRlKSAmJiBkayhhLCBiKTtcbn1cblxuZnVuY3Rpb24gZmsoYSwgYiwgYykge1xuICBjID0gbnVsbCAhPSBjICYmICEwID09PSBjLmh5ZHJhdGU7XG4gIHZhciBkID0gbmV3IGFrKGEsIGIsIGMpLFxuICAgICAgZSA9IFNoKDMsIG51bGwsIG51bGwsIDIgPT09IGIgPyA3IDogMSA9PT0gYiA/IDMgOiAwKTtcbiAgZC5jdXJyZW50ID0gZTtcbiAgZS5zdGF0ZU5vZGUgPSBkO1xuICB1ZyhlKTtcbiAgYVtPZF0gPSBkLmN1cnJlbnQ7XG4gIGMgJiYgMCAhPT0gYiAmJiBKYyhhLCA5ID09PSBhLm5vZGVUeXBlID8gYSA6IGEub3duZXJEb2N1bWVudCk7XG4gIHRoaXMuX2ludGVybmFsUm9vdCA9IGQ7XG59XG5cbmZrLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiAoYSkge1xuICBiayhhLCB0aGlzLl9pbnRlcm5hbFJvb3QsIG51bGwsIG51bGwpO1xufTtcblxuZmsucHJvdG90eXBlLnVubW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBhID0gdGhpcy5faW50ZXJuYWxSb290LFxuICAgICAgYiA9IGEuY29udGFpbmVySW5mbztcbiAgYmsobnVsbCwgYSwgbnVsbCwgZnVuY3Rpb24gKCkge1xuICAgIGJbT2RdID0gbnVsbDtcbiAgfSk7XG59O1xuXG5mdW5jdGlvbiBnayhhKSB7XG4gIHJldHVybiAhKCFhIHx8IDEgIT09IGEubm9kZVR5cGUgJiYgOSAhPT0gYS5ub2RlVHlwZSAmJiAxMSAhPT0gYS5ub2RlVHlwZSAmJiAoOCAhPT0gYS5ub2RlVHlwZSB8fCBcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiAhPT0gYS5ub2RlVmFsdWUpKTtcbn1cblxuZnVuY3Rpb24gaGsoYSwgYikge1xuICBiIHx8IChiID0gYSA/IDkgPT09IGEubm9kZVR5cGUgPyBhLmRvY3VtZW50RWxlbWVudCA6IGEuZmlyc3RDaGlsZCA6IG51bGwsIGIgPSAhKCFiIHx8IDEgIT09IGIubm9kZVR5cGUgfHwgIWIuaGFzQXR0cmlidXRlKFwiZGF0YS1yZWFjdHJvb3RcIikpKTtcbiAgaWYgKCFiKSBmb3IgKHZhciBjOyBjID0gYS5sYXN0Q2hpbGQ7KSB7XG4gICAgYS5yZW1vdmVDaGlsZChjKTtcbiAgfVxuICByZXR1cm4gbmV3IGZrKGEsIDAsIGIgPyB7XG4gICAgaHlkcmF0ZTogITBcbiAgfSA6IHZvaWQgMCk7XG59XG5cbmZ1bmN0aW9uIGlrKGEsIGIsIGMsIGQsIGUpIHtcbiAgdmFyIGYgPSBjLl9yZWFjdFJvb3RDb250YWluZXI7XG5cbiAgaWYgKGYpIHtcbiAgICB2YXIgZyA9IGYuX2ludGVybmFsUm9vdDtcblxuICAgIGlmIChcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBlKSB7XG4gICAgICB2YXIgaCA9IGU7XG5cbiAgICAgIGUgPSBmdW5jdGlvbiBlKCkge1xuICAgICAgICB2YXIgYSA9IGNrKGcpO1xuICAgICAgICBoLmNhbGwoYSk7XG4gICAgICB9O1xuICAgIH1cblxuICAgIGJrKGIsIGcsIGEsIGUpO1xuICB9IGVsc2Uge1xuICAgIGYgPSBjLl9yZWFjdFJvb3RDb250YWluZXIgPSBoayhjLCBkKTtcbiAgICBnID0gZi5faW50ZXJuYWxSb290O1xuXG4gICAgaWYgKFwiZnVuY3Rpb25cIiA9PT0gdHlwZW9mIGUpIHtcbiAgICAgIHZhciBrID0gZTtcblxuICAgICAgZSA9IGZ1bmN0aW9uIGUoKSB7XG4gICAgICAgIHZhciBhID0gY2soZyk7XG4gICAgICAgIGsuY2FsbChhKTtcbiAgICAgIH07XG4gICAgfVxuXG4gICAgTmooZnVuY3Rpb24gKCkge1xuICAgICAgYmsoYiwgZywgYSwgZSk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gY2soZyk7XG59XG5cbmZ1bmN0aW9uIGprKGEsIGIsIGMpIHtcbiAgdmFyIGQgPSAzIDwgYXJndW1lbnRzLmxlbmd0aCAmJiB2b2lkIDAgIT09IGFyZ3VtZW50c1szXSA/IGFyZ3VtZW50c1szXSA6IG51bGw7XG4gIHJldHVybiB7XG4gICAgJCR0eXBlb2Y6ICRhLFxuICAgIGtleTogbnVsbCA9PSBkID8gbnVsbCA6IFwiXCIgKyBkLFxuICAgIGNoaWxkcmVuOiBhLFxuICAgIGNvbnRhaW5lckluZm86IGIsXG4gICAgaW1wbGVtZW50YXRpb246IGNcbiAgfTtcbn1cblxud2MgPSBmdW5jdGlvbiB3YyhhKSB7XG4gIGlmICgxMyA9PT0gYS50YWcpIHtcbiAgICB2YXIgYiA9IGhnKEdnKCksIDE1MCwgMTAwKTtcbiAgICBJZyhhLCBiKTtcbiAgICBlayhhLCBiKTtcbiAgfVxufTtcblxueGMgPSBmdW5jdGlvbiB4YyhhKSB7XG4gIDEzID09PSBhLnRhZyAmJiAoSWcoYSwgMyksIGVrKGEsIDMpKTtcbn07XG5cbnljID0gZnVuY3Rpb24geWMoYSkge1xuICBpZiAoMTMgPT09IGEudGFnKSB7XG4gICAgdmFyIGIgPSBHZygpO1xuICAgIGIgPSBIZyhiLCBhLCBudWxsKTtcbiAgICBJZyhhLCBiKTtcbiAgICBlayhhLCBiKTtcbiAgfVxufTtcblxuemEgPSBmdW5jdGlvbiB6YShhLCBiLCBjKSB7XG4gIHN3aXRjaCAoYikge1xuICAgIGNhc2UgXCJpbnB1dFwiOlxuICAgICAgQ2IoYSwgYyk7XG4gICAgICBiID0gYy5uYW1lO1xuXG4gICAgICBpZiAoXCJyYWRpb1wiID09PSBjLnR5cGUgJiYgbnVsbCAhPSBiKSB7XG4gICAgICAgIGZvciAoYyA9IGE7IGMucGFyZW50Tm9kZTspIHtcbiAgICAgICAgICBjID0gYy5wYXJlbnROb2RlO1xuICAgICAgICB9XG5cbiAgICAgICAgYyA9IGMucXVlcnlTZWxlY3RvckFsbChcImlucHV0W25hbWU9XCIgKyBKU09OLnN0cmluZ2lmeShcIlwiICsgYikgKyAnXVt0eXBlPVwicmFkaW9cIl0nKTtcblxuICAgICAgICBmb3IgKGIgPSAwOyBiIDwgYy5sZW5ndGg7IGIrKykge1xuICAgICAgICAgIHZhciBkID0gY1tiXTtcblxuICAgICAgICAgIGlmIChkICE9PSBhICYmIGQuZm9ybSA9PT0gYS5mb3JtKSB7XG4gICAgICAgICAgICB2YXIgZSA9IFFkKGQpO1xuICAgICAgICAgICAgaWYgKCFlKSB0aHJvdyBFcnJvcih1KDkwKSk7XG4gICAgICAgICAgICB5YihkKTtcbiAgICAgICAgICAgIENiKGQsIGUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBicmVhaztcblxuICAgIGNhc2UgXCJ0ZXh0YXJlYVwiOlxuICAgICAgS2IoYSwgYyk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgXCJzZWxlY3RcIjpcbiAgICAgIGIgPSBjLnZhbHVlLCBudWxsICE9IGIgJiYgSGIoYSwgISFjLm11bHRpcGxlLCBiLCAhMSk7XG4gIH1cbn07XG5cbkZhID0gTWo7XG5cbkdhID0gZnVuY3Rpb24gR2EoYSwgYiwgYywgZCwgZSkge1xuICB2YXIgZiA9IFc7XG4gIFcgfD0gNDtcblxuICB0cnkge1xuICAgIHJldHVybiBjZyg5OCwgYS5iaW5kKG51bGwsIGIsIGMsIGQsIGUpKTtcbiAgfSBmaW5hbGx5IHtcbiAgICBXID0gZiwgVyA9PT0gViAmJiBnZygpO1xuICB9XG59O1xuXG5IYSA9IGZ1bmN0aW9uIEhhKCkge1xuICAoVyAmICgxIHwgZmogfCBnaikpID09PSBWICYmIChMaigpLCBEaigpKTtcbn07XG5cbklhID0gZnVuY3Rpb24gSWEoYSwgYikge1xuICB2YXIgYyA9IFc7XG4gIFcgfD0gMjtcblxuICB0cnkge1xuICAgIHJldHVybiBhKGIpO1xuICB9IGZpbmFsbHkge1xuICAgIFcgPSBjLCBXID09PSBWICYmIGdnKCk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGtrKGEsIGIpIHtcbiAgdmFyIGMgPSAyIDwgYXJndW1lbnRzLmxlbmd0aCAmJiB2b2lkIDAgIT09IGFyZ3VtZW50c1syXSA/IGFyZ3VtZW50c1syXSA6IG51bGw7XG4gIGlmICghZ2soYikpIHRocm93IEVycm9yKHUoMjAwKSk7XG4gIHJldHVybiBqayhhLCBiLCBudWxsLCBjKTtcbn1cblxudmFyIGxrID0ge1xuICBFdmVudHM6IFtOYywgUGQsIFFkLCB4YSwgdGEsIFhkLCBmdW5jdGlvbiAoYSkge1xuICAgIGpjKGEsIFdkKTtcbiAgfSwgRGEsIEVhLCBpZCwgbWMsIERqLCB7XG4gICAgY3VycmVudDogITFcbiAgfV1cbn07XG5cbihmdW5jdGlvbiAoYSkge1xuICB2YXIgYiA9IGEuZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U7XG4gIHJldHVybiBZaihuKHt9LCBhLCB7XG4gICAgb3ZlcnJpZGVIb29rU3RhdGU6IG51bGwsXG4gICAgb3ZlcnJpZGVQcm9wczogbnVsbCxcbiAgICBzZXRTdXNwZW5zZUhhbmRsZXI6IG51bGwsXG4gICAgc2NoZWR1bGVVcGRhdGU6IG51bGwsXG4gICAgY3VycmVudERpc3BhdGNoZXJSZWY6IFdhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsXG4gICAgZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6IGZ1bmN0aW9uIGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyKGEpIHtcbiAgICAgIGEgPSBoYyhhKTtcbiAgICAgIHJldHVybiBudWxsID09PSBhID8gbnVsbCA6IGEuc3RhdGVOb2RlO1xuICAgIH0sXG4gICAgZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6IGZ1bmN0aW9uIGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlKGEpIHtcbiAgICAgIHJldHVybiBiID8gYihhKSA6IG51bGw7XG4gICAgfSxcbiAgICBmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2g6IG51bGwsXG4gICAgc2NoZWR1bGVSZWZyZXNoOiBudWxsLFxuICAgIHNjaGVkdWxlUm9vdDogbnVsbCxcbiAgICBzZXRSZWZyZXNoSGFuZGxlcjogbnVsbCxcbiAgICBnZXRDdXJyZW50RmliZXI6IG51bGxcbiAgfSkpO1xufSkoe1xuICBmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTogdGMsXG4gIGJ1bmRsZVR5cGU6IDAsXG4gIHZlcnNpb246IFwiMTYuMTMuMVwiLFxuICByZW5kZXJlclBhY2thZ2VOYW1lOiBcInJlYWN0LWRvbVwiXG59KTtcblxuZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCA9IGxrO1xuZXhwb3J0cy5jcmVhdGVQb3J0YWwgPSBraztcblxuZXhwb3J0cy5maW5kRE9NTm9kZSA9IGZ1bmN0aW9uIChhKSB7XG4gIGlmIChudWxsID09IGEpIHJldHVybiBudWxsO1xuICBpZiAoMSA9PT0gYS5ub2RlVHlwZSkgcmV0dXJuIGE7XG4gIHZhciBiID0gYS5fcmVhY3RJbnRlcm5hbEZpYmVyO1xuXG4gIGlmICh2b2lkIDAgPT09IGIpIHtcbiAgICBpZiAoXCJmdW5jdGlvblwiID09PSB0eXBlb2YgYS5yZW5kZXIpIHRocm93IEVycm9yKHUoMTg4KSk7XG4gICAgdGhyb3cgRXJyb3IodSgyNjgsIE9iamVjdC5rZXlzKGEpKSk7XG4gIH1cblxuICBhID0gaGMoYik7XG4gIGEgPSBudWxsID09PSBhID8gbnVsbCA6IGEuc3RhdGVOb2RlO1xuICByZXR1cm4gYTtcbn07XG5cbmV4cG9ydHMuZmx1c2hTeW5jID0gZnVuY3Rpb24gKGEsIGIpIHtcbiAgaWYgKChXICYgKGZqIHwgZ2opKSAhPT0gVikgdGhyb3cgRXJyb3IodSgxODcpKTtcbiAgdmFyIGMgPSBXO1xuICBXIHw9IDE7XG5cbiAgdHJ5IHtcbiAgICByZXR1cm4gY2coOTksIGEuYmluZChudWxsLCBiKSk7XG4gIH0gZmluYWxseSB7XG4gICAgVyA9IGMsIGdnKCk7XG4gIH1cbn07XG5cbmV4cG9ydHMuaHlkcmF0ZSA9IGZ1bmN0aW9uIChhLCBiLCBjKSB7XG4gIGlmICghZ2soYikpIHRocm93IEVycm9yKHUoMjAwKSk7XG4gIHJldHVybiBpayhudWxsLCBhLCBiLCAhMCwgYyk7XG59O1xuXG5leHBvcnRzLnJlbmRlciA9IGZ1bmN0aW9uIChhLCBiLCBjKSB7XG4gIGlmICghZ2soYikpIHRocm93IEVycm9yKHUoMjAwKSk7XG4gIHJldHVybiBpayhudWxsLCBhLCBiLCAhMSwgYyk7XG59O1xuXG5leHBvcnRzLnVubW91bnRDb21wb25lbnRBdE5vZGUgPSBmdW5jdGlvbiAoYSkge1xuICBpZiAoIWdrKGEpKSB0aHJvdyBFcnJvcih1KDQwKSk7XG4gIHJldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXIgPyAoTmooZnVuY3Rpb24gKCkge1xuICAgIGlrKG51bGwsIG51bGwsIGEsICExLCBmdW5jdGlvbiAoKSB7XG4gICAgICBhLl9yZWFjdFJvb3RDb250YWluZXIgPSBudWxsO1xuICAgICAgYVtPZF0gPSBudWxsO1xuICAgIH0pO1xuICB9KSwgITApIDogITE7XG59O1xuXG5leHBvcnRzLnVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzID0gTWo7XG5cbmV4cG9ydHMudW5zdGFibGVfY3JlYXRlUG9ydGFsID0gZnVuY3Rpb24gKGEsIGIpIHtcbiAgcmV0dXJuIGtrKGEsIGIsIDIgPCBhcmd1bWVudHMubGVuZ3RoICYmIHZvaWQgMCAhPT0gYXJndW1lbnRzWzJdID8gYXJndW1lbnRzWzJdIDogbnVsbCk7XG59O1xuXG5leHBvcnRzLnVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyID0gZnVuY3Rpb24gKGEsIGIsIGMsIGQpIHtcbiAgaWYgKCFnayhjKSkgdGhyb3cgRXJyb3IodSgyMDApKTtcbiAgaWYgKG51bGwgPT0gYSB8fCB2b2lkIDAgPT09IGEuX3JlYWN0SW50ZXJuYWxGaWJlcikgdGhyb3cgRXJyb3IodSgzOCkpO1xuICByZXR1cm4gaWsoYSwgYiwgYywgITEsIGQpO1xufTtcblxuZXhwb3J0cy52ZXJzaW9uID0gXCIxNi4xMy4xXCI7IiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn0iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjAuMTkuMVxuICogc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIF9mLCBnLCBoLCBrLCBsO1xuXG5pZiAoXCJ1bmRlZmluZWRcIiA9PT0gdHlwZW9mIHdpbmRvdyB8fCBcImZ1bmN0aW9uXCIgIT09IHR5cGVvZiBNZXNzYWdlQ2hhbm5lbCkge1xuICB2YXIgcCA9IG51bGwsXG4gICAgICBxID0gbnVsbCxcbiAgICAgIHQgPSBmdW5jdGlvbiB0KCkge1xuICAgIGlmIChudWxsICE9PSBwKSB0cnkge1xuICAgICAgdmFyIGEgPSBleHBvcnRzLnVuc3RhYmxlX25vdygpO1xuICAgICAgcCghMCwgYSk7XG4gICAgICBwID0gbnVsbDtcbiAgICB9IGNhdGNoIChiKSB7XG4gICAgICB0aHJvdyBzZXRUaW1lb3V0KHQsIDApLCBiO1xuICAgIH1cbiAgfSxcbiAgICAgIHUgPSBEYXRlLm5vdygpO1xuXG4gIGV4cG9ydHMudW5zdGFibGVfbm93ID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBEYXRlLm5vdygpIC0gdTtcbiAgfTtcblxuICBfZiA9IGZ1bmN0aW9uIGYoYSkge1xuICAgIG51bGwgIT09IHAgPyBzZXRUaW1lb3V0KF9mLCAwLCBhKSA6IChwID0gYSwgc2V0VGltZW91dCh0LCAwKSk7XG4gIH07XG5cbiAgZyA9IGZ1bmN0aW9uIGcoYSwgYikge1xuICAgIHEgPSBzZXRUaW1lb3V0KGEsIGIpO1xuICB9O1xuXG4gIGggPSBmdW5jdGlvbiBoKCkge1xuICAgIGNsZWFyVGltZW91dChxKTtcbiAgfTtcblxuICBrID0gZnVuY3Rpb24gaygpIHtcbiAgICByZXR1cm4gITE7XG4gIH07XG5cbiAgbCA9IGV4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGUgPSBmdW5jdGlvbiAoKSB7fTtcbn0gZWxzZSB7XG4gIHZhciB3ID0gd2luZG93LnBlcmZvcm1hbmNlLFxuICAgICAgeCA9IHdpbmRvdy5EYXRlLFxuICAgICAgeSA9IHdpbmRvdy5zZXRUaW1lb3V0LFxuICAgICAgeiA9IHdpbmRvdy5jbGVhclRpbWVvdXQ7XG5cbiAgaWYgKFwidW5kZWZpbmVkXCIgIT09IHR5cGVvZiBjb25zb2xlKSB7XG4gICAgdmFyIEEgPSB3aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWU7XG4gICAgXCJmdW5jdGlvblwiICE9PSB0eXBlb2Ygd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSAmJiBjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpO1xuICAgIFwiZnVuY3Rpb25cIiAhPT0gdHlwZW9mIEEgJiYgY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgY2FuY2VsQW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpO1xuICB9XG5cbiAgaWYgKFwib2JqZWN0XCIgPT09IHR5cGVvZiB3ICYmIFwiZnVuY3Rpb25cIiA9PT0gdHlwZW9mIHcubm93KSBleHBvcnRzLnVuc3RhYmxlX25vdyA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdy5ub3coKTtcbiAgfTtlbHNlIHtcbiAgICB2YXIgQiA9IHgubm93KCk7XG5cbiAgICBleHBvcnRzLnVuc3RhYmxlX25vdyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB4Lm5vdygpIC0gQjtcbiAgICB9O1xuICB9XG4gIHZhciBDID0gITEsXG4gICAgICBEID0gbnVsbCxcbiAgICAgIEUgPSAtMSxcbiAgICAgIEYgPSA1LFxuICAgICAgRyA9IDA7XG5cbiAgayA9IGZ1bmN0aW9uIGsoKSB7XG4gICAgcmV0dXJuIGV4cG9ydHMudW5zdGFibGVfbm93KCkgPj0gRztcbiAgfTtcblxuICBsID0gZnVuY3Rpb24gbCgpIHt9O1xuXG4gIGV4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGUgPSBmdW5jdGlvbiAoYSkge1xuICAgIDAgPiBhIHx8IDEyNSA8IGEgPyBjb25zb2xlLmVycm9yKFwiZm9yY2VGcmFtZVJhdGUgdGFrZXMgYSBwb3NpdGl2ZSBpbnQgYmV0d2VlbiAwIGFuZCAxMjUsIGZvcmNpbmcgZnJhbWVyYXRlcyBoaWdoZXIgdGhhbiAxMjUgZnBzIGlzIG5vdCB1bnN1cHBvcnRlZFwiKSA6IEYgPSAwIDwgYSA/IE1hdGguZmxvb3IoMUUzIC8gYSkgOiA1O1xuICB9O1xuXG4gIHZhciBIID0gbmV3IE1lc3NhZ2VDaGFubmVsKCksXG4gICAgICBJID0gSC5wb3J0MjtcblxuICBILnBvcnQxLm9ubWVzc2FnZSA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAobnVsbCAhPT0gRCkge1xuICAgICAgdmFyIGEgPSBleHBvcnRzLnVuc3RhYmxlX25vdygpO1xuICAgICAgRyA9IGEgKyBGO1xuXG4gICAgICB0cnkge1xuICAgICAgICBEKCEwLCBhKSA/IEkucG9zdE1lc3NhZ2UobnVsbCkgOiAoQyA9ICExLCBEID0gbnVsbCk7XG4gICAgICB9IGNhdGNoIChiKSB7XG4gICAgICAgIHRocm93IEkucG9zdE1lc3NhZ2UobnVsbCksIGI7XG4gICAgICB9XG4gICAgfSBlbHNlIEMgPSAhMTtcbiAgfTtcblxuICBfZiA9IGZ1bmN0aW9uIF9mKGEpIHtcbiAgICBEID0gYTtcbiAgICBDIHx8IChDID0gITAsIEkucG9zdE1lc3NhZ2UobnVsbCkpO1xuICB9O1xuXG4gIGcgPSBmdW5jdGlvbiBnKGEsIGIpIHtcbiAgICBFID0geShmdW5jdGlvbiAoKSB7XG4gICAgICBhKGV4cG9ydHMudW5zdGFibGVfbm93KCkpO1xuICAgIH0sIGIpO1xuICB9O1xuXG4gIGggPSBmdW5jdGlvbiBoKCkge1xuICAgIHooRSk7XG4gICAgRSA9IC0xO1xuICB9O1xufVxuXG5mdW5jdGlvbiBKKGEsIGIpIHtcbiAgdmFyIGMgPSBhLmxlbmd0aDtcbiAgYS5wdXNoKGIpO1xuXG4gIGE6IGZvciAoOzspIHtcbiAgICB2YXIgZCA9IGMgLSAxID4+PiAxLFxuICAgICAgICBlID0gYVtkXTtcbiAgICBpZiAodm9pZCAwICE9PSBlICYmIDAgPCBLKGUsIGIpKSBhW2RdID0gYiwgYVtjXSA9IGUsIGMgPSBkO2Vsc2UgYnJlYWsgYTtcbiAgfVxufVxuXG5mdW5jdGlvbiBMKGEpIHtcbiAgYSA9IGFbMF07XG4gIHJldHVybiB2b2lkIDAgPT09IGEgPyBudWxsIDogYTtcbn1cblxuZnVuY3Rpb24gTShhKSB7XG4gIHZhciBiID0gYVswXTtcblxuICBpZiAodm9pZCAwICE9PSBiKSB7XG4gICAgdmFyIGMgPSBhLnBvcCgpO1xuXG4gICAgaWYgKGMgIT09IGIpIHtcbiAgICAgIGFbMF0gPSBjO1xuXG4gICAgICBhOiBmb3IgKHZhciBkID0gMCwgZSA9IGEubGVuZ3RoOyBkIDwgZTspIHtcbiAgICAgICAgdmFyIG0gPSAyICogKGQgKyAxKSAtIDEsXG4gICAgICAgICAgICBuID0gYVttXSxcbiAgICAgICAgICAgIHYgPSBtICsgMSxcbiAgICAgICAgICAgIHIgPSBhW3ZdO1xuICAgICAgICBpZiAodm9pZCAwICE9PSBuICYmIDAgPiBLKG4sIGMpKSB2b2lkIDAgIT09IHIgJiYgMCA+IEsociwgbikgPyAoYVtkXSA9IHIsIGFbdl0gPSBjLCBkID0gdikgOiAoYVtkXSA9IG4sIGFbbV0gPSBjLCBkID0gbSk7ZWxzZSBpZiAodm9pZCAwICE9PSByICYmIDAgPiBLKHIsIGMpKSBhW2RdID0gciwgYVt2XSA9IGMsIGQgPSB2O2Vsc2UgYnJlYWsgYTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gYjtcbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuXG5mdW5jdGlvbiBLKGEsIGIpIHtcbiAgdmFyIGMgPSBhLnNvcnRJbmRleCAtIGIuc29ydEluZGV4O1xuICByZXR1cm4gMCAhPT0gYyA/IGMgOiBhLmlkIC0gYi5pZDtcbn1cblxudmFyIE4gPSBbXSxcbiAgICBPID0gW10sXG4gICAgUCA9IDEsXG4gICAgUSA9IG51bGwsXG4gICAgUiA9IDMsXG4gICAgUyA9ICExLFxuICAgIFQgPSAhMSxcbiAgICBVID0gITE7XG5cbmZ1bmN0aW9uIFYoYSkge1xuICBmb3IgKHZhciBiID0gTChPKTsgbnVsbCAhPT0gYjspIHtcbiAgICBpZiAobnVsbCA9PT0gYi5jYWxsYmFjaykgTShPKTtlbHNlIGlmIChiLnN0YXJ0VGltZSA8PSBhKSBNKE8pLCBiLnNvcnRJbmRleCA9IGIuZXhwaXJhdGlvblRpbWUsIEooTiwgYik7ZWxzZSBicmVhaztcbiAgICBiID0gTChPKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBXKGEpIHtcbiAgVSA9ICExO1xuICBWKGEpO1xuICBpZiAoIVQpIGlmIChudWxsICE9PSBMKE4pKSBUID0gITAsIF9mKFgpO2Vsc2Uge1xuICAgIHZhciBiID0gTChPKTtcbiAgICBudWxsICE9PSBiICYmIGcoVywgYi5zdGFydFRpbWUgLSBhKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBYKGEsIGIpIHtcbiAgVCA9ICExO1xuICBVICYmIChVID0gITEsIGgoKSk7XG4gIFMgPSAhMDtcbiAgdmFyIGMgPSBSO1xuXG4gIHRyeSB7XG4gICAgVihiKTtcblxuICAgIGZvciAoUSA9IEwoTik7IG51bGwgIT09IFEgJiYgKCEoUS5leHBpcmF0aW9uVGltZSA+IGIpIHx8IGEgJiYgIWsoKSk7KSB7XG4gICAgICB2YXIgZCA9IFEuY2FsbGJhY2s7XG5cbiAgICAgIGlmIChudWxsICE9PSBkKSB7XG4gICAgICAgIFEuY2FsbGJhY2sgPSBudWxsO1xuICAgICAgICBSID0gUS5wcmlvcml0eUxldmVsO1xuICAgICAgICB2YXIgZSA9IGQoUS5leHBpcmF0aW9uVGltZSA8PSBiKTtcbiAgICAgICAgYiA9IGV4cG9ydHMudW5zdGFibGVfbm93KCk7XG4gICAgICAgIFwiZnVuY3Rpb25cIiA9PT0gdHlwZW9mIGUgPyBRLmNhbGxiYWNrID0gZSA6IFEgPT09IEwoTikgJiYgTShOKTtcbiAgICAgICAgVihiKTtcbiAgICAgIH0gZWxzZSBNKE4pO1xuXG4gICAgICBRID0gTChOKTtcbiAgICB9XG5cbiAgICBpZiAobnVsbCAhPT0gUSkgdmFyIG0gPSAhMDtlbHNlIHtcbiAgICAgIHZhciBuID0gTChPKTtcbiAgICAgIG51bGwgIT09IG4gJiYgZyhXLCBuLnN0YXJ0VGltZSAtIGIpO1xuICAgICAgbSA9ICExO1xuICAgIH1cbiAgICByZXR1cm4gbTtcbiAgfSBmaW5hbGx5IHtcbiAgICBRID0gbnVsbCwgUiA9IGMsIFMgPSAhMTtcbiAgfVxufVxuXG5mdW5jdGlvbiBZKGEpIHtcbiAgc3dpdGNoIChhKSB7XG4gICAgY2FzZSAxOlxuICAgICAgcmV0dXJuIC0xO1xuXG4gICAgY2FzZSAyOlxuICAgICAgcmV0dXJuIDI1MDtcblxuICAgIGNhc2UgNTpcbiAgICAgIHJldHVybiAxMDczNzQxODIzO1xuXG4gICAgY2FzZSA0OlxuICAgICAgcmV0dXJuIDFFNDtcblxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gNUUzO1xuICB9XG59XG5cbnZhciBaID0gbDtcbmV4cG9ydHMudW5zdGFibGVfSWRsZVByaW9yaXR5ID0gNTtcbmV4cG9ydHMudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHkgPSAxO1xuZXhwb3J0cy51bnN0YWJsZV9Mb3dQcmlvcml0eSA9IDQ7XG5leHBvcnRzLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5ID0gMztcbmV4cG9ydHMudW5zdGFibGVfUHJvZmlsaW5nID0gbnVsbDtcbmV4cG9ydHMudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkgPSAyO1xuXG5leHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrID0gZnVuY3Rpb24gKGEpIHtcbiAgYS5jYWxsYmFjayA9IG51bGw7XG59O1xuXG5leHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uID0gZnVuY3Rpb24gKCkge1xuICBUIHx8IFMgfHwgKFQgPSAhMCwgX2YoWCkpO1xufTtcblxuZXhwb3J0cy51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIFI7XG59O1xuXG5leHBvcnRzLnVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gTChOKTtcbn07XG5cbmV4cG9ydHMudW5zdGFibGVfbmV4dCA9IGZ1bmN0aW9uIChhKSB7XG4gIHN3aXRjaCAoUikge1xuICAgIGNhc2UgMTpcbiAgICBjYXNlIDI6XG4gICAgY2FzZSAzOlxuICAgICAgdmFyIGIgPSAzO1xuICAgICAgYnJlYWs7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgYiA9IFI7XG4gIH1cblxuICB2YXIgYyA9IFI7XG4gIFIgPSBiO1xuXG4gIHRyeSB7XG4gICAgcmV0dXJuIGEoKTtcbiAgfSBmaW5hbGx5IHtcbiAgICBSID0gYztcbiAgfVxufTtcblxuZXhwb3J0cy51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbiA9IGZ1bmN0aW9uICgpIHt9O1xuXG5leHBvcnRzLnVuc3RhYmxlX3JlcXVlc3RQYWludCA9IFo7XG5cbmV4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5ID0gZnVuY3Rpb24gKGEsIGIpIHtcbiAgc3dpdGNoIChhKSB7XG4gICAgY2FzZSAxOlxuICAgIGNhc2UgMjpcbiAgICBjYXNlIDM6XG4gICAgY2FzZSA0OlxuICAgIGNhc2UgNTpcbiAgICAgIGJyZWFrO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIGEgPSAzO1xuICB9XG5cbiAgdmFyIGMgPSBSO1xuICBSID0gYTtcblxuICB0cnkge1xuICAgIHJldHVybiBiKCk7XG4gIH0gZmluYWxseSB7XG4gICAgUiA9IGM7XG4gIH1cbn07XG5cbmV4cG9ydHMudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayA9IGZ1bmN0aW9uIChhLCBiLCBjKSB7XG4gIHZhciBkID0gZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcblxuICBpZiAoXCJvYmplY3RcIiA9PT0gdHlwZW9mIGMgJiYgbnVsbCAhPT0gYykge1xuICAgIHZhciBlID0gYy5kZWxheTtcbiAgICBlID0gXCJudW1iZXJcIiA9PT0gdHlwZW9mIGUgJiYgMCA8IGUgPyBkICsgZSA6IGQ7XG4gICAgYyA9IFwibnVtYmVyXCIgPT09IHR5cGVvZiBjLnRpbWVvdXQgPyBjLnRpbWVvdXQgOiBZKGEpO1xuICB9IGVsc2UgYyA9IFkoYSksIGUgPSBkO1xuXG4gIGMgPSBlICsgYztcbiAgYSA9IHtcbiAgICBpZDogUCsrLFxuICAgIGNhbGxiYWNrOiBiLFxuICAgIHByaW9yaXR5TGV2ZWw6IGEsXG4gICAgc3RhcnRUaW1lOiBlLFxuICAgIGV4cGlyYXRpb25UaW1lOiBjLFxuICAgIHNvcnRJbmRleDogLTFcbiAgfTtcbiAgZSA+IGQgPyAoYS5zb3J0SW5kZXggPSBlLCBKKE8sIGEpLCBudWxsID09PSBMKE4pICYmIGEgPT09IEwoTykgJiYgKFUgPyBoKCkgOiBVID0gITAsIGcoVywgZSAtIGQpKSkgOiAoYS5zb3J0SW5kZXggPSBjLCBKKE4sIGEpLCBUIHx8IFMgfHwgKFQgPSAhMCwgX2YoWCkpKTtcbiAgcmV0dXJuIGE7XG59O1xuXG5leHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkID0gZnVuY3Rpb24gKCkge1xuICB2YXIgYSA9IGV4cG9ydHMudW5zdGFibGVfbm93KCk7XG4gIFYoYSk7XG4gIHZhciBiID0gTChOKTtcbiAgcmV0dXJuIGIgIT09IFEgJiYgbnVsbCAhPT0gUSAmJiBudWxsICE9PSBiICYmIG51bGwgIT09IGIuY2FsbGJhY2sgJiYgYi5zdGFydFRpbWUgPD0gYSAmJiBiLmV4cGlyYXRpb25UaW1lIDwgUS5leHBpcmF0aW9uVGltZSB8fCBrKCk7XG59O1xuXG5leHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjayA9IGZ1bmN0aW9uIChhKSB7XG4gIHZhciBiID0gUjtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgYyA9IFI7XG4gICAgUiA9IGI7XG5cbiAgICB0cnkge1xuICAgICAgcmV0dXJuIGEuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgUiA9IGM7XG4gICAgfVxuICB9O1xufTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCdcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCB7IENPTE9SUyB9IGZyb20gJ2VsZW1lbnRzL2NvbG9ycy9jb2xvcnMnXG5jb25zdCB7ICRzaWx2ZXIsICRvdmVyY2FzdCwgJHRlYWwsICR3aGl0ZSwgJHBpdGNoIH0gPSBDT0xPUlNcblxuY29uc3QgQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcbiAgYWxsOiB1bnNldDtcbiAgYmFja2dyb3VuZDogJHtwcm9wcyA9PiAocHJvcHMuYWN0aXZlID8gJHRlYWwgOiAkc2lsdmVyKX07XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7JG92ZXJjYXN0fTtcbiAgYm9yZGVyLWNvbG9yOiAke3Byb3BzID0+IChwcm9wcy5kYXJrTW9kZSA/ICRwaXRjaCA6ICRvdmVyY2FzdCl9O1xuICBib3JkZXItcmFkaXVzOiAyZW07XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBoZWlnaHQ6IDEwcHg7XG4gIG1hcmdpbi1yaWdodDogNXB4O1xuICBvdXRsaW5lOiAwO1xuICBwYWRkaW5nOiAycHg7XG4gIHRyYW5zaXRpb246IGFsbCAwLjRzIGVhc2U7XG4gIHdpZHRoOiAyMHB4O1xuXG4gICY6OmFmdGVyIHtcbiAgICBiYWNrZ3JvdW5kOiAkeyR3aGl0ZX07XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBsZWZ0OiAke3Byb3BzID0+IChwcm9wcy5hY3RpdmUgPyAnNTAlJyA6ICcwJyl9O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlO1xuICAgIHdpZHRoOiA1MCU7XG4gIH1cbmBcblxuVG9nZ2xlLnByb3BUeXBlcyA9IHtcbiAgZGFya01vZGU6IFByb3BUeXBlcy5ib29sLFxuICBhY3RpdmU6IFByb3BUeXBlcy5ib29sLFxuICBhY3Rpb246IFByb3BUeXBlcy5mdW5jXG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFRvZ2dsZSh7IGFjdGlvbiwgYWN0aXZlLCBkYXJrTW9kZSB9KSB7XG4gIHJldHVybiA8QnV0dG9uIG9uQ2xpY2s9e2FjdGlvbn0gYWN0aXZlPXthY3RpdmV9IGRhcmtNb2RlPXtkYXJrTW9kZX0gLz5cbn1cbiIsImltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQge1xuICBQb2NrZXRMb2dvLFxuICBQb2NrZXROZXd0YWIsXG4gIEFuZHJvaWRMb2dvLFxuICBJcGhvbmVJcGFkLFxuICBNYWNcbn0gZnJvbSAnZWxlbWVudHMvaWNvbnMnXG5pbXBvcnQgVG9nZ2xlIGZyb20gJ2VsZW1lbnRzL3RvZ2dsZS90b2dnbGUnXG5pbXBvcnQgeyBnZXRCb29sIH0gZnJvbSAnY29tbW9uL3V0aWxpdGllcydcbmltcG9ydCB7IG9wZW5UYWJXaXRoVXJsIH0gZnJvbSAnY29tbW9uL2ludGVyZmFjZSdcbmltcG9ydCB7IGxvY2FsaXplIH0gZnJvbSAnY29tbW9uL19sb2NhbGVzL2xvY2FsZXMnXG5pbXBvcnQgeyBBVVRIX1VSTCwgTE9HT1VUX1VSTCwgU0VUX1NIT1JUQ1VUUyB9IGZyb20gJ2NvbW1vbi9jb25zdGFudHMnXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCdcbmltcG9ydCB7IENPTE9SUyB9IGZyb20gJ2NvbXBvbmVudHMvZWxlbWVudHMvY29sb3JzL2NvbG9ycydcbmltcG9ydCB7IFRZUE9HUkFQSFkgfSBmcm9tICdjb21tb24vc3R5bGVzL3ZhcmlhYmxlcydcbmltcG9ydCB7IG1peGluX3BvY2tldEJ1dHRvbiB9IGZyb20gJ2NvbW1vbi9zdHlsZXMvY29tcG9uZW50cydcbmltcG9ydCB7IGdldFNldHRpbmcgfSBmcm9tICdjb21tb24vaW50ZXJmYWNlJ1xuaW1wb3J0IHsgc2VuZE1lc3NhZ2UgfSBmcm9tICdjb21tb24vaW50ZXJmYWNlJ1xuaW1wb3J0IHsgVE9HR0xFX09OX1NBVkVfUkVDUyB9IGZyb20gJ2FjdGlvbnMnXG5pbXBvcnQgeyBUT0dHTEVfVFdJVFRFUiB9IGZyb20gJ2FjdGlvbnMnXG5cbmNvbnN0IHtcbiAgJHBpdGNoLFxuICAkZ3JheSxcbiAgJHNub3csXG4gICR0YXIsXG4gICRkYXJrc21va2UsXG4gICR0ZWFsLFxuICAkY29hbCxcbiAgJGVtZXJhbGRcbn0gPSBDT0xPUlNcbmNvbnN0IHsgJGZvbnRzdGFja0RlZmF1bHQgfSA9IFRZUE9HUkFQSFlcblxuY29uc3QgT3B0aW9uc0J1dHRvbkxpbmsgPSBzdHlsZWQuYnV0dG9uYFxuICAke21peGluX3BvY2tldEJ1dHRvbn1cbiAgY29sb3I6ICR7JGNvYWx9O1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcblxuICAmOmhvdmVyIHtcbiAgICBjb2xvcjogJHskZW1lcmFsZH07XG4gIH1cbmBcbmNvbnN0IE9wdGlvbnNDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtZmFtaWx5OiAkeyRmb250c3RhY2tEZWZhdWx0fTtcbiAgbWFyZ2luLWJvdHRvbTogODBweDtcbiAgcGFkZGluZzogMCAzMHB4O1xuICB3aWR0aDogNzAwcHg7XG5cbiAgQG1lZGlhIChtaW4td2lkdGg6IDMyMHB4KSBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuYFxuY29uc3QgT3B0aW9uc1RpdGxlID0gc3R5bGVkLmgxYFxuICBjb2xvcjogJHsocHJvcHMpID0+IChwcm9wcy5kYXJrTW9kZSA/ICRncmF5IDogJHBpdGNoKX07XG4gIGZvbnQtc2l6ZTogMjhweDtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgbWFyZ2luOiA3MHB4IDAgMDtcbiAgcGFkZGluZzogMCAwIDIwcHg7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG5gXG5jb25zdCBPcHRpb25zU2VjdGlvbiA9IHN0eWxlZC5kaXZgXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAkeyRzbm93fTtcbiAgZGlzcGxheTogZmxleDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIHBhZGRpbmc6IDIwcHggMDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcblxuICAuZGFya01vZGUgJiB7XG4gICAgYm9yZGVyLWNvbG9yOiAkeyR0YXJ9O1xuICB9XG5cbiAgQG1lZGlhIChtaW4td2lkdGg6IDMyMHB4KSBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG5gXG5jb25zdCBPcHRpb25zU2VjdGlvblRpdGxlID0gc3R5bGVkLmRpdmBcbiAgY29sb3I6ICR7KHByb3BzKSA9PiAocHJvcHMuZGFya01vZGUgPyAkZ3JheSA6ICRkYXJrc21va2UpfTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDRlbTtcbiAgbWFyZ2luLXJpZ2h0OiAzNXB4O1xuICBwYWRkaW5nLWJvdHRvbTogNXB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICB3aWR0aDogMjMwcHg7XG4gIEBtZWRpYSAobWluLXdpZHRoOiAzMjBweCkgYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuYFxuY29uc3QgT3B0aW9uc1NlY3Rpb25Db250ZW50ID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbmBcbmNvbnN0IE9wdGlvbnNTZWN0aW9uQ29udGVudEZ1bGwgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG5gXG5jb25zdCBPcHRpb25zQ29udGVudEZ1bGxCbG9jayA9IHN0eWxlZC5hYFxuICBjb2xvcjogJHskZGFya3Ntb2tlfTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMjBweCAwIDEwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAmOmhvdmVyIHtcbiAgICBjb2xvcjogJHskdGVhbH07XG4gIH1cbmBcbmNvbnN0IE9wdGlvbnNQcml2YWN5TGVnYWwgPSBzdHlsZWQuYWBcbiAgY29sb3I6ICR7JGRhcmtzbW9rZX07XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDEwcHggMCAwO1xuXG4gICY6aG92ZXIge1xuICAgIGNvbG9yOiAkeyR0ZWFsfTtcbiAgfVxuYFxuY29uc3QgT3B0aW9uc1NlY3Rpb25NYWluID0gc3R5bGVkLmRpdmBcbiAgY29sb3I6ICR7KHByb3BzKSA9PiAocHJvcHMuZGFya01vZGUgPyAkZ3JheSA6ICRkYXJrc21va2UpfTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgd2lkdGg6IDM3MHB4O1xuXG4gIC5zZWN0aW9uQ29udGVudEZ1bGwgJiB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMzIwcHgpIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG5gXG5jb25zdCBPcHRpb25zQmxvY2tDb3B5ID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIG1hcmdpbi10b3A6IDE1cHg7XG5gXG5jb25zdCBPcHRpb25zSW5mbyA9IHN0eWxlZC5kaXZgXG4gIGZvbnQtc2l6ZTogMC44ZW07XG4gIG1hcmdpbi10b3A6IDEwcHg7XG5gXG5jb25zdCBPcHRpb25zU2F2ZVNlcnZpY2VzTGlzdCA9IHN0eWxlZC51bGBcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuXG4gICYgPiBsaSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcblxuICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIH1cbiAgfVxuYFxuY29uc3QgT3B0aW9uc1F1ZXN0aW9uc0xpc3QgPSBzdHlsZWQudWxgXG4gIGxpbmUtaGVpZ2h0OiAxLjVlbTtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG5cbiAgYSB7XG4gICAgY29sb3I6ICR7JGRhcmtzbW9rZX07XG4gICAgcGFkZGluZzogNXB4IDA7XG4gICAgdGV4dC10cmFuc2Zvcm06IGxvd2VyY2FzZTtcblxuICAgICY6aG92ZXIge1xuICAgICAgY29sb3I6ICR7JHRlYWx9O1xuICAgIH1cbiAgfVxuYFxuY29uc3QgT3B0aW9uc0Zvb3RlciA9IHN0eWxlZC5mb290ZXJgXG4gIGNvbG9yOiAkeyRkYXJrc21va2V9O1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXdlaWdodDogMzAwO1xuICBtYXJnaW4tdG9wOiA0MHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5gXG5cbmNsYXNzIE9wdGlvbnNBcHAgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0ZSA9IHtcbiAgICBvbl9zYXZlX3JlY29tbWVuZGF0aW9uczogZ2V0Qm9vbChnZXRTZXR0aW5nKCdvbl9zYXZlX3JlY29tbWVuZGF0aW9ucycpKSxcbiAgICBzaXRlc190d2l0dGVyOiBnZXRCb29sKGdldFNldHRpbmcoJ3NpdGVzX3R3aXR0ZXInKSksXG4gICAgZGFya01vZGU6IGdldEJvb2woZ2V0U2V0dGluZygnZGFya01vZGUnKSksXG4gICAgYWNjZXNzX3Rva2VuOiBnZXRTZXR0aW5nKCdhY2Nlc3NfdG9rZW4nKSxcbiAgICB1c2VybmFtZTogZ2V0U2V0dGluZygndXNlcm5hbWUnKVxuICB9XG5cbiAgdXNlckRhdGEgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBhY2Nlc3NfdG9rZW4sIHVzZXJuYW1lIH0gPSB0aGlzLnN0YXRlXG4gICAgcmV0dXJuIGFjY2Vzc190b2tlbiAmJiB1c2VybmFtZSA/IHRoaXMubG9nZ2VkSW4odXNlcm5hbWUpIDogdGhpcy5sb2dnZWRPdXQoKVxuICB9XG5cbiAgbG9nZ2VkSW4gPSAodXNlcm5hbWUpID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdj5cbiAgICAgICAge3VzZXJuYW1lfSAmbmJzcDsgKHsnICd9XG4gICAgICAgIDxPcHRpb25zQnV0dG9uTGluayBvbkNsaWNrPXsoKSA9PiBvcGVuVGFiV2l0aFVybChMT0dPVVRfVVJMKX0+XG4gICAgICAgICAge2xvY2FsaXplKCdvcHRpb25zX3BhZ2UnLCAnbG9nb3V0X2xpbmsnKX1cbiAgICAgICAgPC9PcHRpb25zQnV0dG9uTGluaz57JyAnfVxuICAgICAgICApXG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cblxuICBsb2dnZWRPdXQgPSAoKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxPcHRpb25zQnV0dG9uTGluayBvbkNsaWNrPXsoKSA9PiBvcGVuVGFiV2l0aFVybChBVVRIX1VSTCl9PlxuICAgICAgICB7bG9jYWxpemUoJ29wdGlvbnNfcGFnZScsICdsb2dpbl9saW5rJyl9XG4gICAgICA8L09wdGlvbnNCdXR0b25MaW5rPlxuICAgIClcbiAgfVxuXG4gIHRvZ2dsZVR3aXR0ZXIgPSAoKSA9PiB7XG4gICAgdGhpcy5zZXRTdGF0ZShcbiAgICAgIChzdGF0ZSkgPT4gKHtcbiAgICAgICAgc2l0ZXNfdHdpdHRlcjogIXN0YXRlLnNpdGVzX3R3aXR0ZXJcbiAgICAgIH0pLFxuICAgICAgKCkgPT4ge1xuICAgICAgICBzZW5kTWVzc2FnZSh7XG4gICAgICAgICAgdHlwZTogVE9HR0xFX1RXSVRURVIsXG4gICAgICAgICAgcGF5bG9hZDogeyBpc0VuYWJsZWQ6IHRoaXMuc3RhdGUuc2l0ZXNfdHdpdHRlciB9XG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgKVxuICB9XG4gIHRvZ2dsZVJlY29tbWVuZGF0aW9ucyA9ICgpID0+IHtcbiAgICB0aGlzLnNldFN0YXRlKFxuICAgICAgKHN0YXRlKSA9PiAoe1xuICAgICAgICBvbl9zYXZlX3JlY29tbWVuZGF0aW9uczogIXN0YXRlLm9uX3NhdmVfcmVjb21tZW5kYXRpb25zXG4gICAgICB9KSxcbiAgICAgICgpID0+IHtcbiAgICAgICAgc2VuZE1lc3NhZ2Uoe1xuICAgICAgICAgIHR5cGU6IFRPR0dMRV9PTl9TQVZFX1JFQ1MsXG4gICAgICAgICAgcGF5bG9hZDogeyBpc0VuYWJsZWQ6IHRoaXMuc3RhdGUub25fc2F2ZV9yZWNvbW1lbmRhdGlvbnMgfVxuICAgICAgICB9KVxuICAgICAgfVxuICAgIClcbiAgfVxuXG4gIHNldFNob3J0Y3V0cyA9ICgpID0+IG9wZW5UYWJXaXRoVXJsKFNFVF9TSE9SVENVVFMpXG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgb25fc2F2ZV9yZWNvbW1lbmRhdGlvbnMsIHNpdGVzX3R3aXR0ZXIsIGRhcmtNb2RlIH0gPSB0aGlzLnN0YXRlXG5cbiAgICByZXR1cm4gKFxuICAgICAgPE9wdGlvbnNDb250YWluZXI+XG4gICAgICAgIDxPcHRpb25zVGl0bGUgZGFya01vZGU9e2RhcmtNb2RlfT5cbiAgICAgICAgICB7UG9ja2V0TG9nbyh7XG4gICAgICAgICAgICB3aWR0aDogJzI2cHgnLFxuICAgICAgICAgICAgaGVpZ2h0OiAnMjZweCcsXG4gICAgICAgICAgICBtYXJnaW5SaWdodDogJzEwcHgnLFxuICAgICAgICAgICAgbWFyZ2luVG9wOiAnM3B4JyxcbiAgICAgICAgICAgIHZlcnRpY2FsQWxpZ246ICd0ZXh0LXRvcCdcbiAgICAgICAgICB9KX1cbiAgICAgICAgICB7bG9jYWxpemUoJ29wdGlvbnNfcGFnZScsICdoZWFkZXInKX0gLXsnICd9XG4gICAgICAgICAge2xvY2FsaXplKCdvcHRpb25zX3BhZ2UnLCAnc2F2ZV90b19wb2NrZXQnKX1cbiAgICAgICAgPC9PcHRpb25zVGl0bGU+XG5cbiAgICAgICAgPE9wdGlvbnNTZWN0aW9uPlxuICAgICAgICAgIDxPcHRpb25zU2VjdGlvbkNvbnRlbnQ+XG4gICAgICAgICAgICA8T3B0aW9uc1NlY3Rpb25UaXRsZT5cbiAgICAgICAgICAgICAge2xvY2FsaXplKCdvcHRpb25zX3BhZ2UnLCAnbG9naW5fdGl0bGUnKX1cbiAgICAgICAgICAgIDwvT3B0aW9uc1NlY3Rpb25UaXRsZT5cbiAgICAgICAgICAgIDxPcHRpb25zU2VjdGlvbk1haW4+e3RoaXMudXNlckRhdGEoKX08L09wdGlvbnNTZWN0aW9uTWFpbj5cbiAgICAgICAgICA8L09wdGlvbnNTZWN0aW9uQ29udGVudD5cbiAgICAgICAgPC9PcHRpb25zU2VjdGlvbj5cblxuICAgICAgICA8T3B0aW9uc1NlY3Rpb24+XG4gICAgICAgICAgPE9wdGlvbnNTZWN0aW9uQ29udGVudD5cbiAgICAgICAgICAgIDxPcHRpb25zU2VjdGlvblRpdGxlPlxuICAgICAgICAgICAgICB7bG9jYWxpemUoJ29wdGlvbnNfcGFnZScsICdrZXlib2FyZF9zaG9ydGN1dF90aXRsZScpfVxuICAgICAgICAgICAgPC9PcHRpb25zU2VjdGlvblRpdGxlPlxuICAgICAgICAgICAgPE9wdGlvbnNTZWN0aW9uTWFpbj5cbiAgICAgICAgICAgICAgPE9wdGlvbnNCdXR0b25MaW5rIG9uQ2xpY2s9e3RoaXMuc2V0U2hvcnRjdXRzfT5cbiAgICAgICAgICAgICAgICB7bG9jYWxpemUoJ29wdGlvbnNfcGFnZScsICdyZWNvcmRfc2hvcnRjdXQnKX1cbiAgICAgICAgICAgICAgPC9PcHRpb25zQnV0dG9uTGluaz5cbiAgICAgICAgICAgIDwvT3B0aW9uc1NlY3Rpb25NYWluPlxuICAgICAgICAgIDwvT3B0aW9uc1NlY3Rpb25Db250ZW50PlxuICAgICAgICA8L09wdGlvbnNTZWN0aW9uPlxuXG4gICAgICAgIDxPcHRpb25zU2VjdGlvbj5cbiAgICAgICAgICA8T3B0aW9uc1NlY3Rpb25Db250ZW50PlxuICAgICAgICAgICAgPE9wdGlvbnNTZWN0aW9uVGl0bGU+XG4gICAgICAgICAgICAgIHtsb2NhbGl6ZSgnb3B0aW9uc19wYWdlJywgJ3F1aWNrX3NhdmVfc2VydmljZXNfdGl0bGUnKX1cbiAgICAgICAgICAgIDwvT3B0aW9uc1NlY3Rpb25UaXRsZT5cbiAgICAgICAgICAgIDxPcHRpb25zU2VjdGlvbk1haW4+XG4gICAgICAgICAgICAgIDxPcHRpb25zU2F2ZVNlcnZpY2VzTGlzdD5cbiAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICA8VG9nZ2xlIGFjdGl2ZT17c2l0ZXNfdHdpdHRlcn0gYWN0aW9uPXt0aGlzLnRvZ2dsZVR3aXR0ZXJ9IC8+XG4gICAgICAgICAgICAgICAgICBUd2l0dGVyXG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgPC9PcHRpb25zU2F2ZVNlcnZpY2VzTGlzdD5cbiAgICAgICAgICAgICAgPE9wdGlvbnNJbmZvPlxuICAgICAgICAgICAgICAgIHtsb2NhbGl6ZSgnb3B0aW9uc19wYWdlJywgJ3NlcnZpY2VzX2luZm8nKX1cbiAgICAgICAgICAgICAgPC9PcHRpb25zSW5mbz5cbiAgICAgICAgICAgIDwvT3B0aW9uc1NlY3Rpb25NYWluPlxuICAgICAgICAgIDwvT3B0aW9uc1NlY3Rpb25Db250ZW50PlxuICAgICAgICA8L09wdGlvbnNTZWN0aW9uPlxuXG4gICAgICAgIDxPcHRpb25zU2VjdGlvbj5cbiAgICAgICAgICA8T3B0aW9uc1NlY3Rpb25Db250ZW50PlxuICAgICAgICAgICAgPE9wdGlvbnNTZWN0aW9uVGl0bGU+XG4gICAgICAgICAgICAgIHtsb2NhbGl6ZSgnb3B0aW9uc19wYWdlJywgJ3JlY29tbWVuZGF0aW9uc190aXRsZScpfVxuICAgICAgICAgICAgPC9PcHRpb25zU2VjdGlvblRpdGxlPlxuICAgICAgICAgICAgPE9wdGlvbnNTZWN0aW9uTWFpbj5cbiAgICAgICAgICAgICAgPFRvZ2dsZVxuICAgICAgICAgICAgICAgIGFjdGl2ZT17b25fc2F2ZV9yZWNvbW1lbmRhdGlvbnN9XG4gICAgICAgICAgICAgICAgYWN0aW9uPXt0aGlzLnRvZ2dsZVJlY29tbWVuZGF0aW9uc31cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPE9wdGlvbnNJbmZvPlxuICAgICAgICAgICAgICAgIHtsb2NhbGl6ZSgnb3B0aW9uc19wYWdlJywgJ3JlY29tbWVuZGF0aW9uc19kZXRhaWwnKX1cbiAgICAgICAgICAgICAgPC9PcHRpb25zSW5mbz5cbiAgICAgICAgICAgIDwvT3B0aW9uc1NlY3Rpb25NYWluPlxuICAgICAgICAgIDwvT3B0aW9uc1NlY3Rpb25Db250ZW50PlxuICAgICAgICA8L09wdGlvbnNTZWN0aW9uPlxuXG4gICAgICAgIDxPcHRpb25zU2VjdGlvbj5cbiAgICAgICAgICA8T3B0aW9uc1NlY3Rpb25Db250ZW50PlxuICAgICAgICAgICAgPE9wdGlvbnNTZWN0aW9uVGl0bGU+XG4gICAgICAgICAgICAgIHtsb2NhbGl6ZSgnb3B0aW9uc19wYWdlJywgJ3F1ZXN0aW9uc19wb2NrZXRfdGl0bGUnKX1cbiAgICAgICAgICAgIDwvT3B0aW9uc1NlY3Rpb25UaXRsZT5cbiAgICAgICAgICAgIDxPcHRpb25zU2VjdGlvbk1haW4+XG4gICAgICAgICAgICAgIDxPcHRpb25zUXVlc3Rpb25zTGlzdD5cbiAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICA8YSBocmVmPVwiaHR0cHM6Ly9oZWxwLmdldHBvY2tldC5jb21cIj5cbiAgICAgICAgICAgICAgICAgICAge2xvY2FsaXplKCdvcHRpb25zX3BhZ2UnLCAnc2VhcmNoX3N1cHBvcnRfbGluaycpfVxuICAgICAgICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImh0dHBzOi8vZ2V0cG9ja2V0LmNvbS9leHRlbnNpb24vc3VwcG9ydFwiPlxuICAgICAgICAgICAgICAgICAgICB7bG9jYWxpemUoJ29wdGlvbnNfcGFnZScsICdzZW5kX3VzX2FuX2VtYWlsX2xpbmsnKX1cbiAgICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL3R3aXR0ZXIuY29tL2ludGVudC90d2VldD9zY3JlZW5fbmFtZT1wb2NrZXRzdXBwb3J0JnRleHQ9JTIzY2hyb21lXCI+XG4gICAgICAgICAgICAgICAgICAgIHtsb2NhbGl6ZSgnb3B0aW9uc19wYWdlJywgJ2dldF9pbl90b3VjaF9vbl90d2l0dGVyX2xpbmsnKX1cbiAgICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICA8L09wdGlvbnNRdWVzdGlvbnNMaXN0PlxuICAgICAgICAgICAgPC9PcHRpb25zU2VjdGlvbk1haW4+XG4gICAgICAgICAgPC9PcHRpb25zU2VjdGlvbkNvbnRlbnQ+XG4gICAgICAgIDwvT3B0aW9uc1NlY3Rpb24+XG5cbiAgICAgICAgPE9wdGlvbnNTZWN0aW9uPlxuICAgICAgICAgIDxPcHRpb25zU2VjdGlvbkNvbnRlbnRGdWxsIGNsYXNzTmFtZT1cInNlY3Rpb25Db250ZW50RnVsbFwiPlxuICAgICAgICAgICAgPE9wdGlvbnNTZWN0aW9uVGl0bGU+XG4gICAgICAgICAgICAgIHtsb2NhbGl6ZSgnb3B0aW9uc19wYWdlJywgJ21vcmVfd2F5c190b19zYXZlX3RpdGxlJyl9XG4gICAgICAgICAgICA8L09wdGlvbnNTZWN0aW9uVGl0bGU+XG4gICAgICAgICAgICA8T3B0aW9uc1NlY3Rpb25NYWluPlxuICAgICAgICAgICAgICA8T3B0aW9uc0NvbnRlbnRGdWxsQmxvY2tcbiAgICAgICAgICAgICAgICBocmVmPVwiaHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJzdG9yZS9kZXRhaWwvcG9ja2V0LW5ldy10YWIvbWxubm9waWNqb25mYW1rbHBjZGZuYmNvbWRsb3Btb2Y/YXV0aHVzZXI9MVwiXG4gICAgICAgICAgICAgICAgcmVsPVwibm9vcGVuZXIgbm9yZWZlcnJlclwiXG4gICAgICAgICAgICAgICAgdGFyZ2V0PVwiX2JsYW5rXCI+XG4gICAgICAgICAgICAgICAge1BvY2tldE5ld3RhYih7XG4gICAgICAgICAgICAgICAgICB3aWR0aDogJzQ4cHgnLFxuICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAnNDhweCcsXG4gICAgICAgICAgICAgICAgICBtYXJnaW5SaWdodDogMFxuICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgICAgIDxPcHRpb25zQmxvY2tDb3B5IGRhcmtNb2RlPXtkYXJrTW9kZX0+XG4gICAgICAgICAgICAgICAgICBQb2NrZXQgTmV3IFRhYlxuICAgICAgICAgICAgICAgIDwvT3B0aW9uc0Jsb2NrQ29weT5cbiAgICAgICAgICAgICAgPC9PcHRpb25zQ29udGVudEZ1bGxCbG9jaz5cbiAgICAgICAgICAgICAgPE9wdGlvbnNDb250ZW50RnVsbEJsb2NrXG4gICAgICAgICAgICAgICAgaHJlZj1cImh0dHA6Ly9nZXRwb2NrZXQuY29tL2FuZHJvaWQvXCJcbiAgICAgICAgICAgICAgICByZWw9XCJub29wZW5lciBub3JlZmVycmVyXCJcbiAgICAgICAgICAgICAgICB0YXJnZXQ9XCJfYmxhbmtcIj5cbiAgICAgICAgICAgICAgICB7QW5kcm9pZExvZ28oe1xuICAgICAgICAgICAgICAgICAgd2lkdGg6ICc0OHB4JyxcbiAgICAgICAgICAgICAgICAgIGhlaWdodDogJzQ4cHgnLFxuICAgICAgICAgICAgICAgICAgbWFyZ2luUmlnaHQ6IDBcbiAgICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgICAgICA8T3B0aW9uc0Jsb2NrQ29weSBkYXJrTW9kZT17ZGFya01vZGV9PkFuZHJvaWQ8L09wdGlvbnNCbG9ja0NvcHk+XG4gICAgICAgICAgICAgIDwvT3B0aW9uc0NvbnRlbnRGdWxsQmxvY2s+XG4gICAgICAgICAgICAgIDxPcHRpb25zQ29udGVudEZ1bGxCbG9ja1xuICAgICAgICAgICAgICAgIGhyZWY9XCJodHRwOi8vZ2V0cG9ja2V0LmNvbS9pcGhvbmUvXCJcbiAgICAgICAgICAgICAgICByZWw9XCJub29wZW5lciBub3JlZmVycmVyXCJcbiAgICAgICAgICAgICAgICB0YXJnZXQ9XCJfYmxhbmtcIj5cbiAgICAgICAgICAgICAgICB7SXBob25lSXBhZCh7XG4gICAgICAgICAgICAgICAgICB3aWR0aDogJzQ4cHgnLFxuICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAnNDhweCcsXG4gICAgICAgICAgICAgICAgICBtYXJnaW5SaWdodDogMFxuICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgICAgIDxPcHRpb25zQmxvY2tDb3B5IGRhcmtNb2RlPXtkYXJrTW9kZX0+XG4gICAgICAgICAgICAgICAgICBpUGhvbmUvSXBhZFxuICAgICAgICAgICAgICAgIDwvT3B0aW9uc0Jsb2NrQ29weT5cbiAgICAgICAgICAgICAgPC9PcHRpb25zQ29udGVudEZ1bGxCbG9jaz5cbiAgICAgICAgICAgICAgPE9wdGlvbnNDb250ZW50RnVsbEJsb2NrXG4gICAgICAgICAgICAgICAgaHJlZj1cImh0dHA6Ly9nZXRwb2NrZXQuY29tL21hYy9cIlxuICAgICAgICAgICAgICAgIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIlxuICAgICAgICAgICAgICAgIHRhcmdldD1cIl9ibGFua1wiPlxuICAgICAgICAgICAgICAgIHtNYWMoe1xuICAgICAgICAgICAgICAgICAgd2lkdGg6ICc0OHB4JyxcbiAgICAgICAgICAgICAgICAgIGhlaWdodDogJzQ4cHgnLFxuICAgICAgICAgICAgICAgICAgbWFyZ2luUmlnaHQ6IDBcbiAgICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgICAgICA8T3B0aW9uc0Jsb2NrQ29weSBkYXJrTW9kZT17ZGFya01vZGV9Pk1hYzwvT3B0aW9uc0Jsb2NrQ29weT5cbiAgICAgICAgICAgICAgPC9PcHRpb25zQ29udGVudEZ1bGxCbG9jaz5cbiAgICAgICAgICAgIDwvT3B0aW9uc1NlY3Rpb25NYWluPlxuICAgICAgICAgIDwvT3B0aW9uc1NlY3Rpb25Db250ZW50RnVsbD5cbiAgICAgICAgPC9PcHRpb25zU2VjdGlvbj5cblxuICAgICAgICA8T3B0aW9uc0Zvb3Rlcj5cbiAgICAgICAgICAmY29weTsgQ29weXJpZ2h0IHtuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCl9IFJlYWQgSXQgTGF0ZXIgSW5jLlxuICAgICAgICAgIDxPcHRpb25zUHJpdmFjeUxlZ2FsXG4gICAgICAgICAgICBocmVmPVwiaHR0cHM6Ly9nZXRwb2NrZXQuY29tL2xlZ2FsP3NyYz1leHRlbnNpb25zXCJcbiAgICAgICAgICAgIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIlxuICAgICAgICAgICAgdGFyZ2V0PVwiX2JsYW5rXCI+XG4gICAgICAgICAgICBMZWdhbCAmYW1wOyBQcml2YWN5XG4gICAgICAgICAgPC9PcHRpb25zUHJpdmFjeUxlZ2FsPlxuICAgICAgICA8L09wdGlvbnNGb290ZXI+XG4gICAgICA8L09wdGlvbnNDb250YWluZXI+XG4gICAgKVxuICB9XG59XG5cbmNvbnN0IHJvb3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncG9ja2V0LWV4dGVuc2lvbi1hbmNob3InKVxuXG5SZWFjdERPTS5yZW5kZXIoPE9wdGlvbnNBcHAgLz4sIHJvb3QpXG4iXSwic291cmNlUm9vdCI6IiJ9