[credential]
	helper = store
[user]
	name = arpangreat
	email = arpanthegreat41@gmail.com
[init]
	defaultBranch = main
[core]
  excludesfile = ~/.gitignore
	editor = nvim
[push]
	default = simple
  autoSetupRemote = true
[color]
  status = auto
  diff = auto
  branch = auto
  interactive = auto
  grep = auto
  ui = auto
[alias]
  a = "!git status --short | fzf | awk '{print $2}' | xargs git add"
  co = "!git branch -l | fzf | awk '{print $2}' | xargs git checkout"
  ci = commit
  ca = commit -a
  lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
  st = status
  br = branch
  ba = branch -a
  bm = branch --merged
  bn = branch --no-merged
  df = "!git hist | fzf | awk '{print $2}' | xargs -I {} git diff {}^ {}"
  hist = log --pretty=format:\"%Cgreen%h %Creset%cd %Cblue[%cn] %Creset%s%C(yellow)%d%C(reset)\" --graph --date=relative --decorate --all
  llog = log --graph --name-status --pretty=format:\"%C(red)%h %C(reset)(%cd) %C(green)%an %Creset%s %C(yellow)%d%Creset\" --date=relative
  open = "!hub browse"
  type = cat-file -t
  dump = cat-file -p
  find = "!f() { git log --pretty=format:\"%h %cd [%cn] %s%d\" --date=relative -S'pretty' -S\"$@\" | fzf | awk '{print $1}' | xargs -I {} git diff {}^ {}; }; f"
  # edit conflicted file on merge
  edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; nvim `f`"
  # add conflicted file on merge
  add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
	cof = !git for-each-ref --format='%(refname:short)' refs/heads | fzf | xargs git checkout

  prompt = !"prompt_git() { local s=''; local branchName=''; if [ \"$(git rev-parse --is-inside-work-tree &>/dev/null; echo \"${?}\")\" == '0' ]; then if [ \"$(git rev-parse --is-inside-git-dir 2> /dev/null)\" == 'false' ]; then if [[ -O \"$(git rev-parse --show-toplevel)/.git/index\" ]]; then git update-index --really-refresh -q &> /dev/null; fi; if ! git diff --quiet --ignore-submodules --cached; then s+='+'; fi; if ! git diff-files --quiet --ignore-submodules --; then s+='!'; fi; if [ -n \"$(git ls-files --others --exclude-standard)\" ]; then s+='?'; fi; if git rev-parse --verify refs/stash &> /dev/null; then s+='$'; fi; fi; branchName=\"$(git symbolic-ref --quiet --short HEAD 2> /dev/null || git rev-parse --short HEAD 2> /dev/null || echo '(unknown)')\"; echo \"(${1}${branchName} ${s})\"; else return; fi;}; prompt_git"

[interactive]
    diffFilter = delta --color-only --features=interactive
[hub]
  protocol = https
[github]
	user = arpangreat
[diff "nvimdiff"]
	cmd = nvim -d \"$LOCAL\" \"$REMOTE\"

[difftool "nvimdiff"]
	cmd = nvim -d \"$LOCAL\" \"$REMOTE\"

[difftool "nvimdiff4"]
	cmd = nvim -d \"$BASE\" \"$LOCAL\" \"$REMOTE\" \"$MERGED\"

[merge]
  tool = nvimdiff

[mergetool "nvimdiff"]
	cmd = nvim -d \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	required = true
	process = git-lfs filter-process

[pull]
	rebase = false
[url "https://github.com/"]
	insteadOf = git://github.com/
[status]
	show-toplevel-name = true
[rerere]
	enabled = true
[column]
	ui = auto
[branch]
	sort = -committerdate
[maintenance]
	repo = /home/arpangreat/dotfiles
[rebase]
	updateRefs = true
